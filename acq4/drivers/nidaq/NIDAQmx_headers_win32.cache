(dp0
S'version'
p1
I22
sS'fileOrder'
p2
(lp3
S'acq4\\drivers\\nidaq\\NIDAQmx.h'
p4
asS'fileDefs'
p5
(dp6
N(dp7
S'functions'
p8
(dp9
sS'enums'
p10
(dp11
sS'variables'
p12
(dp13
sS'macros'
p14
(dp15
sS'unions'
p16
(dp17
sS'values'
p18
(dp19
sS'fnmacros'
p20
(dp21
sS'structs'
p22
(dp23
sS'types'
p24
(dp25
S'__int64'
p26
S'long long'
p27
sssS'NIDAQmx.h'
p28
(dp29
g8
(dp30
S'DAQmxSetSampClkSrc'
p31
((lp32
S'int32'
p33
aS'__stdcall'
p34
a((S'taskHandle'
p35
(lp36
S'TaskHandle'
p37
aNtp38
(S'data'
p39
(lp40
S'char'
p41
aS'*'
p42
aNtp43
tp44
tp45
sS'DAQmxSetCITwoEdgeSepSecondDigSyncEnable'
p46
((lp47
S'int32'
p48
ag34
a((S'taskHandle'
p49
(lp50
S'TaskHandle'
p51
aNtp52
(S'channel'
p53
(lp54
S'char'
p55
a(lp56
I-1
aaNtp57
(S'data'
p58
(lp59
S'bool32'
p60
aNtp61
tp62
tp63
sS'DAQmxTaskControl'
p64
((lp65
S'int32'
p66
ag34
a((S'taskHandle'
p67
(lp68
S'TaskHandle'
p69
aNtp70
(S'action'
p71
(lp72
S'int32'
p73
aNtp74
tp75
tp76
sS'DAQmxGetReadSleepTime'
p77
((lp78
S'int32'
p79
ag34
a((S'taskHandle'
p80
(lp81
S'TaskHandle'
p82
aNtp83
(S'data'
p84
(lp85
S'float64'
p86
ag42
aNtp87
tp88
tp89
sS'DAQmxGetCIDataXferMech'
p90
((lp91
S'int32'
p92
ag34
a((S'taskHandle'
p93
(lp94
S'TaskHandle'
p95
aNtp96
(S'channel'
p97
(lp98
S'char'
p99
a(lp100
I-1
aaNtp101
(S'data'
p102
(lp103
S'int32'
p104
ag42
aNtp105
tp106
tp107
sS'DAQmxAdjust433xCal'
p108
((lp109
S'int32'
p110
ag34
a((S'calHandle'
p111
(lp112
S'CalHandle'
p113
aNtp114
(S'refVoltage'
p115
(lp116
S'float64'
p117
aNtp118
(S'refExcitation'
p119
(lp120
S'float64'
p121
aNtp122
(S'shuntLocation'
p123
(lp124
S'int32'
p125
aNtp126
tp127
tp128
sS'DAQmxLoadTask'
p129
((lp130
S'int32'
p131
ag34
a((S'taskName'
p132
(lp133
S'char'
p134
a(lp135
I-1
aaNtp136
(S'taskHandle'
p137
(lp138
S'TaskHandle'
p139
ag42
aNtp140
tp141
tp142
sS'DAQmxCreateAIResistanceChan'
p143
((lp144
S'int32'
p145
ag34
a((S'taskHandle'
p146
(lp147
S'TaskHandle'
p148
aNtp149
(S'physicalChannel'
p150
(lp151
S'char'
p152
a(lp153
I-1
aaNtp154
(S'nameToAssignToChannel'
p155
(lp156
S'char'
p157
a(lp158
I-1
aaNtp159
(S'minVal'
p160
(lp161
S'float64'
p162
aNtp163
(S'maxVal'
p164
(lp165
S'float64'
p166
aNtp167
(S'units'
p168
(lp169
S'int32'
p170
aNtp171
(S'resistanceConfig'
p172
(lp173
S'int32'
p174
aNtp175
(S'currentExcitSource'
p176
(lp177
S'int32'
p178
aNtp179
(S'currentExcitVal'
p180
(lp181
S'float64'
p182
aNtp183
(S'customScaleName'
p184
(lp185
S'char'
p186
a(lp187
I-1
aaNtp188
tp189
tp190
sS'DAQmxGetCICountEdgesActiveEdge'
p191
((lp192
S'int32'
p193
ag34
a((S'taskHandle'
p194
(lp195
S'TaskHandle'
p196
aNtp197
(S'channel'
p198
(lp199
S'char'
p200
a(lp201
I-1
aaNtp202
(S'data'
p203
(lp204
S'int32'
p205
ag42
aNtp206
tp207
tp208
sS'DAQmxGetSysDevNames'
p209
((lp210
S'int32'
p211
ag34
a((S'data'
p212
(lp213
S'char'
p214
ag42
aNtp215
(S'bufferSize'
p216
(lp217
S'uInt32'
p218
aNtp219
tp220
tp221
sS'DAQmxResetAIConvDigSyncEnable'
p222
((lp223
S'int32'
p224
ag34
a((S'taskHandle'
p225
(lp226
S'TaskHandle'
p227
aNtp228
tp229
tp230
sS'DAQmxGetDOUsbXferReqSize'
p231
((lp232
S'int32'
p233
ag34
a((S'taskHandle'
p234
(lp235
S'TaskHandle'
p236
aNtp237
(S'channel'
p238
(lp239
S'char'
p240
a(lp241
I-1
aaNtp242
(S'data'
p243
(lp244
S'uInt32'
p245
ag42
aNtp246
tp247
tp248
sS'DAQmxSwitchCreateScanList'
p249
((lp250
S'int32'
p251
ag34
a((S'scanList'
p252
(lp253
S'char'
p254
a(lp255
I-1
aaNtp256
(S'taskHandle'
p257
(lp258
S'TaskHandle'
p259
ag42
aNtp260
tp261
tp262
sS'DAQmxResetAITempUnits'
p263
((lp264
S'int32'
p265
ag34
a((S'taskHandle'
p266
(lp267
S'TaskHandle'
p268
aNtp269
(S'channel'
p270
(lp271
S'char'
p272
a(lp273
I-1
aaNtp274
tp275
tp276
sS'DAQmxGet9221CalAdjustPoints'
p277
((lp278
S'int32'
p279
ag34
a((S'calHandle'
p280
(lp281
S'CalHandle'
p282
aNtp283
(S'adjustmentPoints'
p284
(lp285
S'float64'
p286
ag42
aNtp287
(S'bufferSize'
p288
(lp289
S'uInt32'
p290
aNtp291
tp292
tp293
sS'DAQmxGetAIStrainUnits'
p294
((lp295
S'int32'
p296
ag34
a((S'taskHandle'
p297
(lp298
S'TaskHandle'
p299
aNtp300
(S'channel'
p301
(lp302
S'char'
p303
a(lp304
I-1
aaNtp305
(S'data'
p306
(lp307
S'int32'
p308
ag42
aNtp309
tp310
tp311
sS'DAQmxGetAIBridgeInitialRatio'
p312
((lp313
S'int32'
p314
ag34
a((S'taskHandle'
p315
(lp316
S'TaskHandle'
p317
aNtp318
(S'channel'
p319
(lp320
S'char'
p321
a(lp322
I-1
aaNtp323
(S'data'
p324
(lp325
S'float64'
p326
ag42
aNtp327
tp328
tp329
sS'DAQmxGetSampClkDigFltrEnable'
p330
((lp331
S'int32'
p332
ag34
a((S'taskHandle'
p333
(lp334
S'TaskHandle'
p335
aNtp336
(S'data'
p337
(lp338
S'bool32'
p339
ag42
aNtp340
tp341
tp342
sS'DAQmxGetAIExcitActualVal'
p343
((lp344
S'int32'
p345
ag34
a((S'taskHandle'
p346
(lp347
S'TaskHandle'
p348
aNtp349
(S'channel'
p350
(lp351
S'char'
p352
a(lp353
I-1
aaNtp354
(S'data'
p355
(lp356
S'float64'
p357
ag42
aNtp358
tp359
tp360
sS'DAQmxGetCITimestampInitialSeconds'
p361
((lp362
S'int32'
p363
ag34
a((S'taskHandle'
p364
(lp365
S'TaskHandle'
p366
aNtp367
(S'channel'
p368
(lp369
S'char'
p370
a(lp371
I-1
aaNtp372
(S'data'
p373
(lp374
S'uInt32'
p375
ag42
aNtp376
tp377
tp378
sS'DAQmxSetCOPulseFreqInitialDelay'
p379
((lp380
S'int32'
p381
ag34
a((S'taskHandle'
p382
(lp383
S'TaskHandle'
p384
aNtp385
(S'channel'
p386
(lp387
S'char'
p388
a(lp389
I-1
aaNtp390
(S'data'
p391
(lp392
S'float64'
p393
aNtp394
tp395
tp396
sS'DAQmxSetSwitchDevAutoConnAnlgBus'
p397
((lp398
S'int32'
p399
ag34
a((S'deviceName'
p400
(lp401
S'char'
p402
a(lp403
I-1
aaNtp404
(S'data'
p405
(lp406
S'bool32'
p407
aNtp408
tp409
tp410
sS'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate'
p411
((lp412
S'int32'
p413
ag34
a((S'taskHandle'
p414
(lp415
S'TaskHandle'
p416
aNtp417
(S'data'
p418
(lp419
S'float64'
p420
aNtp421
tp422
tp423
sS'DAQmxSetCODataXferMech'
p424
((lp425
S'int32'
p426
ag34
a((S'taskHandle'
p427
(lp428
S'TaskHandle'
p429
aNtp430
(S'channel'
p431
(lp432
S'char'
p433
a(lp434
I-1
aaNtp435
(S'data'
p436
(lp437
S'int32'
p438
aNtp439
tp440
tp441
sS'DAQmxGetLoggingPause'
p442
((lp443
S'int32'
p444
ag34
a((S'taskHandle'
p445
(lp446
S'TaskHandle'
p447
aNtp448
(S'data'
p449
(lp450
S'bool32'
p451
ag42
aNtp452
tp453
tp454
sS'DAQmxReadCounterU32Ex'
p455
((lp456
S'int32'
p457
ag34
a((S'taskHandle'
p458
(lp459
S'TaskHandle'
p460
aNtp461
(S'numSampsPerChan'
p462
(lp463
S'int32'
p464
aNtp465
(S'timeout'
p466
(lp467
S'float64'
p468
aNtp469
(S'fillMode'
p470
(lp471
S'bool32'
p472
aNtp473
(S'readArray'
p474
(lp475
S'uInt32'
p476
a(lp477
I-1
aaNtp478
(S'arraySizeInSamps'
p479
(lp480
S'uInt32'
p481
aNtp482
(S'sampsPerChanRead'
p483
(lp484
S'int32'
p485
ag42
aNtp486
(S'reserved'
p487
(lp488
S'bool32'
p489
ag42
aNtp490
tp491
tp492
sS'DAQmxGetAOFuncGenFreq'
p493
((lp494
S'int32'
p495
ag34
a((S'taskHandle'
p496
(lp497
S'TaskHandle'
p498
aNtp499
(S'channel'
p500
(lp501
S'char'
p502
a(lp503
I-1
aaNtp504
(S'data'
p505
(lp506
S'float64'
p507
ag42
aNtp508
tp509
tp510
sS'DAQmxGetCIEncoderZInputDigFltrMinPulseWidth'
p511
((lp512
S'int32'
p513
ag34
a((S'taskHandle'
p514
(lp515
S'TaskHandle'
p516
aNtp517
(S'channel'
p518
(lp519
S'char'
p520
a(lp521
I-1
aaNtp522
(S'data'
p523
(lp524
S'float64'
p525
ag42
aNtp526
tp527
tp528
sS'DAQmxGetDevAccessoryProductTypes'
p529
((lp530
S'int32'
p531
ag34
a((S'device'
p532
(lp533
S'char'
p534
a(lp535
I-1
aaNtp536
(S'data'
p537
(lp538
S'char'
p539
ag42
aNtp540
(S'bufferSize'
p541
(lp542
S'uInt32'
p543
aNtp544
tp545
tp546
sS'DAQmxGetCIMemMapEnable'
p547
((lp548
S'int32'
p549
ag34
a((S'taskHandle'
p550
(lp551
S'TaskHandle'
p552
aNtp553
(S'channel'
p554
(lp555
S'char'
p556
a(lp557
I-1
aaNtp558
(S'data'
p559
(lp560
S'bool32'
p561
ag42
aNtp562
tp563
tp564
sS'DAQmxGetCISemiPeriodDigFltrTimebaseRate'
p565
((lp566
S'int32'
p567
ag34
a((S'taskHandle'
p568
(lp569
S'TaskHandle'
p570
aNtp571
(S'channel'
p572
(lp573
S'char'
p574
a(lp575
I-1
aaNtp576
(S'data'
p577
(lp578
S'float64'
p579
ag42
aNtp580
tp581
tp582
sS'DAQmxResetAIChanCalScaleType'
p583
((lp584
S'int32'
p585
ag34
a((S'taskHandle'
p586
(lp587
S'TaskHandle'
p588
aNtp589
(S'channel'
p590
(lp591
S'char'
p592
a(lp593
I-1
aaNtp594
tp595
tp596
sS'DAQmxResetCIFreqDigSyncEnable'
p597
((lp598
S'int32'
p599
ag34
a((S'taskHandle'
p600
(lp601
S'TaskHandle'
p602
aNtp603
(S'channel'
p604
(lp605
S'char'
p606
a(lp607
I-1
aaNtp608
tp609
tp610
sS'DAQmxGetCODataXferReqCond'
p611
((lp612
S'int32'
p613
ag34
a((S'taskHandle'
p614
(lp615
S'TaskHandle'
p616
aNtp617
(S'channel'
p618
(lp619
S'char'
p620
a(lp621
I-1
aaNtp622
(S'data'
p623
(lp624
S'int32'
p625
ag42
aNtp626
tp627
tp628
sS'DAQmxSetDOMemMapEnable'
p629
((lp630
S'int32'
p631
ag34
a((S'taskHandle'
p632
(lp633
S'TaskHandle'
p634
aNtp635
(S'channel'
p636
(lp637
S'char'
p638
a(lp639
I-1
aaNtp640
(S'data'
p641
(lp642
S'bool32'
p643
aNtp644
tp645
tp646
sS'DAQmxGetAIChanCalVerifRefVals'
p647
((lp648
S'int32'
p649
ag34
a((S'taskHandle'
p650
(lp651
S'TaskHandle'
p652
aNtp653
(S'channel'
p654
(lp655
S'char'
p656
a(lp657
I-1
aaNtp658
(S'data'
p659
(lp660
S'float64'
p661
ag42
aNtp662
(S'arraySizeInElements'
p663
(lp664
S'uInt32'
p665
aNtp666
tp667
tp668
sS'DAQmxGetAnlgEdgeRefTrigSlope'
p669
((lp670
S'int32'
p671
ag34
a((S'taskHandle'
p672
(lp673
S'TaskHandle'
p674
aNtp675
(S'data'
p676
(lp677
S'int32'
p678
ag42
aNtp679
tp680
tp681
sS'DAQmxGetDigEdgeRefTrigEdge'
p682
((lp683
S'int32'
p684
ag34
a((S'taskHandle'
p685
(lp686
S'TaskHandle'
p687
aNtp688
(S'data'
p689
(lp690
S'int32'
p691
ag42
aNtp692
tp693
tp694
sS'DAQmxGetAIRosetteStrainGageRosetteMeasType'
p695
((lp696
S'int32'
p697
ag34
a((S'taskHandle'
p698
(lp699
S'TaskHandle'
p700
aNtp701
(S'channel'
p702
(lp703
S'char'
p704
a(lp705
I-1
aaNtp706
(S'data'
p707
(lp708
S'int32'
p709
ag42
aNtp710
tp711
tp712
sS'DAQmxSetHshkTrigType'
p713
((lp714
S'int32'
p715
ag34
a((S'taskHandle'
p716
(lp717
S'TaskHandle'
p718
aNtp719
(S'data'
p720
(lp721
S'int32'
p722
aNtp723
tp724
tp725
sS'DAQmxResetAIConvDigFltrTimebaseRateEx'
p726
((lp727
S'int32'
p728
ag34
a((S'taskHandle'
p729
(lp730
S'TaskHandle'
p731
aNtp732
(S'deviceNames'
p733
(lp734
S'char'
p735
a(lp736
I-1
aaNtp737
tp738
tp739
sS'DAQmxGetPhysicalChanAIInputSrcs'
p740
((lp741
S'int32'
p742
ag34
a((S'physicalChannel'
p743
(lp744
S'char'
p745
a(lp746
I-1
aaNtp747
(S'data'
p748
(lp749
S'char'
p750
ag42
aNtp751
(S'bufferSize'
p752
(lp753
S'uInt32'
p754
aNtp755
tp756
tp757
sS'DAQmxSetWriteWaitMode'
p758
((lp759
S'int32'
p760
ag34
a((S'taskHandle'
p761
(lp762
S'TaskHandle'
p763
aNtp764
(S'data'
p765
(lp766
S'int32'
p767
aNtp768
tp769
tp770
sS'DAQmxResetDIDigFltrMinPulseWidth'
p771
((lp772
S'int32'
p773
ag34
a((S'taskHandle'
p774
(lp775
S'TaskHandle'
p776
aNtp777
(S'channel'
p778
(lp779
S'char'
p780
a(lp781
I-1
aaNtp782
tp783
tp784
sS'DAQmxSetAIConvSrc'
p785
((lp786
S'int32'
p787
ag34
a((S'taskHandle'
p788
(lp789
S'TaskHandle'
p790
aNtp791
(S'data'
p792
(lp793
S'char'
p794
ag42
aNtp795
tp796
tp797
sS'DAQmxTristateOutputTerm'
p798
((lp799
S'int32'
p800
ag34
a((S'outputTerminal'
p801
(lp802
S'char'
p803
a(lp804
I-1
aaNtp805
tp806
tp807
sS'DAQmxGetCISemiPeriodDigFltrMinPulseWidth'
p808
((lp809
S'int32'
p810
ag34
a((S'taskHandle'
p811
(lp812
S'TaskHandle'
p813
aNtp814
(S'channel'
p815
(lp816
S'char'
p817
a(lp818
I-1
aaNtp819
(S'data'
p820
(lp821
S'float64'
p822
ag42
aNtp823
tp824
tp825
sS'DAQmxSetup1141Cal'
p826
((lp827
S'int32'
p828
ag34
a((S'calHandle'
p829
(lp830
S'CalHandle'
p831
aNtp832
(S'channelName'
p833
(lp834
S'char'
p835
a(lp836
I-1
aaNtp837
(S'gain'
p838
(lp839
S'float64'
p840
aNtp841
tp842
tp843
sS'DAQmxGetAIAccelSensitivityUnits'
p844
((lp845
S'int32'
p846
ag34
a((S'taskHandle'
p847
(lp848
S'TaskHandle'
p849
aNtp850
(S'channel'
p851
(lp852
S'char'
p853
a(lp854
I-1
aaNtp855
(S'data'
p856
(lp857
S'int32'
p858
ag42
aNtp859
tp860
tp861
sS'DAQmxSetAIDigFltrOrder'
p862
((lp863
S'int32'
p864
ag34
a((S'taskHandle'
p865
(lp866
S'TaskHandle'
p867
aNtp868
(S'channel'
p869
(lp870
S'char'
p871
a(lp872
I-1
aaNtp873
(S'data'
p874
(lp875
S'uInt32'
p876
aNtp877
tp878
tp879
sS'DAQmxGetAIAcceldBRef'
p880
((lp881
S'int32'
p882
ag34
a((S'taskHandle'
p883
(lp884
S'TaskHandle'
p885
aNtp886
(S'channel'
p887
(lp888
S'char'
p889
a(lp890
I-1
aaNtp891
(S'data'
p892
(lp893
S'float64'
p894
ag42
aNtp895
tp896
tp897
sS'DAQmxResetAIDataXferCustomThreshold'
p898
((lp899
S'int32'
p900
ag34
a((S'taskHandle'
p901
(lp902
S'TaskHandle'
p903
aNtp904
(S'channel'
p905
(lp906
S'char'
p907
a(lp908
I-1
aaNtp909
tp910
tp911
sS'DAQmxSetCIDutyCycleStartingEdge'
p912
((lp913
S'int32'
p914
ag34
a((S'taskHandle'
p915
(lp916
S'TaskHandle'
p917
aNtp918
(S'channel'
p919
(lp920
S'char'
p921
a(lp922
I-1
aaNtp923
(S'data'
p924
(lp925
S'int32'
p926
aNtp927
tp928
tp929
sS'DAQmxSetCICountEdgesCountResetDigFltrEnable'
p930
((lp931
S'int32'
p932
ag34
a((S'taskHandle'
p933
(lp934
S'TaskHandle'
p935
aNtp936
(S'channel'
p937
(lp938
S'char'
p939
a(lp940
I-1
aaNtp941
(S'data'
p942
(lp943
S'bool32'
p944
aNtp945
tp946
tp947
sS'DAQmxRestoreLastExtCalConst'
p948
((lp949
S'int32'
p950
ag34
a((S'deviceName'
p951
(lp952
S'char'
p953
a(lp954
I-1
aaNtp955
tp956
tp957
sS'DAQmxDisconnectSCExpressCalAccChans'
p958
((lp959
S'int32'
p960
ag34
a((S'calHandle'
p961
(lp962
S'CalHandle'
p963
aNtp964
tp965
tp966
sS'DAQmxSetHshkSampleInputDataWhen'
p967
((lp968
S'int32'
p969
ag34
a((S'taskHandle'
p970
(lp971
S'TaskHandle'
p972
aNtp973
(S'data'
p974
(lp975
S'int32'
p976
aNtp977
tp978
tp979
sS'DAQmxGetCITwoEdgeSepSecondDigFltrEnable'
p980
((lp981
S'int32'
p982
ag34
a((S'taskHandle'
p983
(lp984
S'TaskHandle'
p985
aNtp986
(S'channel'
p987
(lp988
S'char'
p989
a(lp990
I-1
aaNtp991
(S'data'
p992
(lp993
S'bool32'
p994
ag42
aNtp995
tp996
tp997
sS'DAQmxGetNthTaskChannel'
p998
((lp999
S'int32'
p1000
ag34
a((S'taskHandle'
p1001
(lp1002
S'TaskHandle'
p1003
aNtp1004
(S'index'
p1005
(lp1006
S'uInt32'
p1007
aNtp1008
(S'buffer'
p1009
(lp1010
S'char'
p1011
a(lp1012
I-1
aaNtp1013
(S'bufferSize'
p1014
(lp1015
S'int32'
p1016
aNtp1017
tp1018
tp1019
sS'DAQmxSetAnlgWinPauseTrigDigSyncEnable'
p1020
((lp1021
S'int32'
p1022
ag34
a((S'taskHandle'
p1023
(lp1024
S'TaskHandle'
p1025
aNtp1026
(S'data'
p1027
(lp1028
S'bool32'
p1029
aNtp1030
tp1031
tp1032
sS'DAQmxGetCICountEdgesCountResetActiveEdge'
p1033
((lp1034
S'int32'
p1035
ag34
a((S'taskHandle'
p1036
(lp1037
S'TaskHandle'
p1038
aNtp1039
(S'channel'
p1040
(lp1041
S'char'
p1042
a(lp1043
I-1
aaNtp1044
(S'data'
p1045
(lp1046
S'int32'
p1047
ag42
aNtp1048
tp1049
tp1050
sS'DAQmxSetup1143Cal'
p1051
((lp1052
S'int32'
p1053
ag34
a((S'calHandle'
p1054
(lp1055
S'CalHandle'
p1056
aNtp1057
(S'channelName'
p1058
(lp1059
S'char'
p1060
a(lp1061
I-1
aaNtp1062
(S'gain'
p1063
(lp1064
S'float64'
p1065
aNtp1066
tp1067
tp1068
sS'DAQmxSetCIMin'
p1069
((lp1070
S'int32'
p1071
ag34
a((S'taskHandle'
p1072
(lp1073
S'TaskHandle'
p1074
aNtp1075
(S'channel'
p1076
(lp1077
S'char'
p1078
a(lp1079
I-1
aaNtp1080
(S'data'
p1081
(lp1082
S'float64'
p1083
aNtp1084
tp1085
tp1086
sS'DAQmxSetup1520Cal'
p1087
((lp1088
S'int32'
p1089
ag34
a((S'calHandle'
p1090
(lp1091
S'CalHandle'
p1092
aNtp1093
(S'channelName'
p1094
(lp1095
S'char'
p1096
a(lp1097
I-1
aaNtp1098
(S'gain'
p1099
(lp1100
S'float64'
p1101
aNtp1102
tp1103
tp1104
sS'DAQmxSetAIBridgePhysicalUnits'
p1105
((lp1106
S'int32'
p1107
ag34
a((S'taskHandle'
p1108
(lp1109
S'TaskHandle'
p1110
aNtp1111
(S'channel'
p1112
(lp1113
S'char'
p1114
a(lp1115
I-1
aaNtp1116
(S'data'
p1117
(lp1118
S'int32'
p1119
aNtp1120
tp1121
tp1122
sS'DAQmxResetAIEddyCurrentProxProbeUnits'
p1123
((lp1124
S'int32'
p1125
ag34
a((S'taskHandle'
p1126
(lp1127
S'TaskHandle'
p1128
aNtp1129
(S'channel'
p1130
(lp1131
S'char'
p1132
a(lp1133
I-1
aaNtp1134
tp1135
tp1136
sS'DAQmxResetAOFuncGenModulationType'
p1137
((lp1138
S'int32'
p1139
ag34
a((S'taskHandle'
p1140
(lp1141
S'TaskHandle'
p1142
aNtp1143
(S'channel'
p1144
(lp1145
S'char'
p1146
a(lp1147
I-1
aaNtp1148
tp1149
tp1150
sS'DAQmxSetAOFuncGenFMDeviation'
p1151
((lp1152
S'int32'
p1153
ag34
a((S'taskHandle'
p1154
(lp1155
S'TaskHandle'
p1156
aNtp1157
(S'channel'
p1158
(lp1159
S'char'
p1160
a(lp1161
I-1
aaNtp1162
(S'data'
p1163
(lp1164
S'float64'
p1165
aNtp1166
tp1167
tp1168
sS'DAQmxGetAITermCfg'
p1169
((lp1170
S'int32'
p1171
ag34
a((S'taskHandle'
p1172
(lp1173
S'TaskHandle'
p1174
aNtp1175
(S'channel'
p1176
(lp1177
S'char'
p1178
a(lp1179
I-1
aaNtp1180
(S'data'
p1181
(lp1182
S'int32'
p1183
ag42
aNtp1184
tp1185
tp1186
sS'DAQmxSetCICustomScaleName'
p1187
((lp1188
S'int32'
p1189
ag34
a((S'taskHandle'
p1190
(lp1191
S'TaskHandle'
p1192
aNtp1193
(S'channel'
p1194
(lp1195
S'char'
p1196
a(lp1197
I-1
aaNtp1198
(S'data'
p1199
(lp1200
S'char'
p1201
ag42
aNtp1202
tp1203
tp1204
sS'DAQmxSetAnlgWinStartTrigSrc'
p1205
((lp1206
S'int32'
p1207
ag34
a((S'taskHandle'
p1208
(lp1209
S'TaskHandle'
p1210
aNtp1211
(S'data'
p1212
(lp1213
S'char'
p1214
ag42
aNtp1215
tp1216
tp1217
sS'DAQmxDisableRefTrig'
p1218
((lp1219
S'int32'
p1220
ag34
a((S'taskHandle'
p1221
(lp1222
S'TaskHandle'
p1223
aNtp1224
tp1225
tp1226
sS'DAQmxGetStartTrigTerm'
p1227
((lp1228
S'int32'
p1229
ag34
a((S'taskHandle'
p1230
(lp1231
S'TaskHandle'
p1232
aNtp1233
(S'data'
p1234
(lp1235
S'char'
p1236
ag42
aNtp1237
(S'bufferSize'
p1238
(lp1239
S'uInt32'
p1240
aNtp1241
tp1242
tp1243
sS'DAQmxGetAIAveragingWinSize'
p1244
((lp1245
S'int32'
p1246
ag34
a((S'taskHandle'
p1247
(lp1248
S'TaskHandle'
p1249
aNtp1250
(S'channel'
p1251
(lp1252
S'char'
p1253
a(lp1254
I-1
aaNtp1255
(S'data'
p1256
(lp1257
S'uInt32'
p1258
ag42
aNtp1259
tp1260
tp1261
sS'DAQmxResetAIBridgeShuntCalGainAdjust'
p1262
((lp1263
S'int32'
p1264
ag34
a((S'taskHandle'
p1265
(lp1266
S'TaskHandle'
p1267
aNtp1268
(S'channel'
p1269
(lp1270
S'char'
p1271
a(lp1272
I-1
aaNtp1273
tp1274
tp1275
sS'DAQmxGetDIDataXferMech'
p1276
((lp1277
S'int32'
p1278
ag34
a((S'taskHandle'
p1279
(lp1280
S'TaskHandle'
p1281
aNtp1282
(S'channel'
p1283
(lp1284
S'char'
p1285
a(lp1286
I-1
aaNtp1287
(S'data'
p1288
(lp1289
S'int32'
p1290
ag42
aNtp1291
tp1292
tp1293
sS'DAQmxGetDevAccessoryProductNums'
p1294
((lp1295
S'int32'
p1296
ag34
a((S'device'
p1297
(lp1298
S'char'
p1299
a(lp1300
I-1
aaNtp1301
(S'data'
p1302
(lp1303
S'uInt32'
p1304
ag42
aNtp1305
(S'arraySizeInElements'
p1306
(lp1307
S'uInt32'
p1308
aNtp1309
tp1310
tp1311
sS'DAQmxResetExportedDividedSampClkTimebaseOutputTerm'
p1312
((lp1313
S'int32'
p1314
ag34
a((S'taskHandle'
p1315
(lp1316
S'TaskHandle'
p1317
aNtp1318
tp1319
tp1320
sS'DAQmxResetAOMax'
p1321
((lp1322
S'int32'
p1323
ag34
a((S'taskHandle'
p1324
(lp1325
S'TaskHandle'
p1326
aNtp1327
(S'channel'
p1328
(lp1329
S'char'
p1330
a(lp1331
I-1
aaNtp1332
tp1333
tp1334
sS'DAQmxSetAIInputSrc'
p1335
((lp1336
S'int32'
p1337
ag34
a((S'taskHandle'
p1338
(lp1339
S'TaskHandle'
p1340
aNtp1341
(S'channel'
p1342
(lp1343
S'char'
p1344
a(lp1345
I-1
aaNtp1346
(S'data'
p1347
(lp1348
S'char'
p1349
ag42
aNtp1350
tp1351
tp1352
sS'DAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth'
p1353
((lp1354
S'int32'
p1355
ag34
a((S'taskHandle'
p1356
(lp1357
S'TaskHandle'
p1358
aNtp1359
(S'data'
p1360
(lp1361
S'float64'
p1362
ag42
aNtp1363
tp1364
tp1365
sS'DAQmxResetCIEncoderAInputTermCfg'
p1366
((lp1367
S'int32'
p1368
ag34
a((S'taskHandle'
p1369
(lp1370
S'TaskHandle'
p1371
aNtp1372
(S'channel'
p1373
(lp1374
S'char'
p1375
a(lp1376
I-1
aaNtp1377
tp1378
tp1379
sS'DAQmxSetAnlgWinRefTrigWhen'
p1380
((lp1381
S'int32'
p1382
ag34
a((S'taskHandle'
p1383
(lp1384
S'TaskHandle'
p1385
aNtp1386
(S'data'
p1387
(lp1388
S'int32'
p1389
aNtp1390
tp1391
tp1392
sS'DAQmxGetAIRawDataCompressionType'
p1393
((lp1394
S'int32'
p1395
ag34
a((S'taskHandle'
p1396
(lp1397
S'TaskHandle'
p1398
aNtp1399
(S'channel'
p1400
(lp1401
S'char'
p1402
a(lp1403
I-1
aaNtp1404
(S'data'
p1405
(lp1406
S'int32'
p1407
ag42
aNtp1408
tp1409
tp1410
sS'DAQmxMSeriesCalAdjust'
p1411
((lp1412
S'int32'
p1413
ag34
a((S'calHandle'
p1414
(lp1415
S'CalHandle'
p1416
aNtp1417
(S'referenceVoltage'
p1418
(lp1419
S'float64'
p1420
aNtp1421
tp1422
tp1423
sS'DAQmxGetAIACExcitWireMode'
p1424
((lp1425
S'int32'
p1426
ag34
a((S'taskHandle'
p1427
(lp1428
S'TaskHandle'
p1429
aNtp1430
(S'channel'
p1431
(lp1432
S'char'
p1433
a(lp1434
I-1
aaNtp1435
(S'data'
p1436
(lp1437
S'int32'
p1438
ag42
aNtp1439
tp1440
tp1441
sS'DAQmxCfgBurstHandshakingTimingImportClock'
p1442
((lp1443
S'int32'
p1444
ag34
a((S'taskHandle'
p1445
(lp1446
S'TaskHandle'
p1447
aNtp1448
(S'sampleMode'
p1449
(lp1450
S'int32'
p1451
aNtp1452
(S'sampsPerChan'
p1453
(lp1454
S'uInt64'
p1455
aNtp1456
(S'sampleClkRate'
p1457
(lp1458
S'float64'
p1459
aNtp1460
(S'sampleClkSrc'
p1461
(lp1462
S'char'
p1463
a(lp1464
I-1
aaNtp1465
(S'sampleClkActiveEdge'
p1466
(lp1467
S'int32'
p1468
aNtp1469
(S'pauseWhen'
p1470
(lp1471
S'int32'
p1472
aNtp1473
(S'readyEventActiveLevel'
p1474
(lp1475
S'int32'
p1476
aNtp1477
tp1478
tp1479
sS'DAQmxResetExported20MHzTimebaseOutputTerm'
p1480
((lp1481
S'int32'
p1482
ag34
a((S'taskHandle'
p1483
(lp1484
S'TaskHandle'
p1485
aNtp1486
tp1487
tp1488
sS'DAQmxAdjust9221Cal'
p1489
((lp1490
S'int32'
p1491
ag34
a((S'calHandle'
p1492
(lp1493
S'CalHandle'
p1494
aNtp1495
(S'channelNames'
p1496
(lp1497
S'char'
p1498
a(lp1499
I-1
aaNtp1500
(S'value'
p1501
(lp1502
S'float64'
p1503
aNtp1504
tp1505
tp1506
sS'DAQmxSetCIDutyCycleTerm'
p1507
((lp1508
S'int32'
p1509
ag34
a((S'taskHandle'
p1510
(lp1511
S'TaskHandle'
p1512
aNtp1513
(S'channel'
p1514
(lp1515
S'char'
p1516
a(lp1517
I-1
aaNtp1518
(S'data'
p1519
(lp1520
S'char'
p1521
ag42
aNtp1522
tp1523
tp1524
sS'DAQmxCreateAIVoltageChanWithExcit'
p1525
((lp1526
S'int32'
p1527
ag34
a((S'taskHandle'
p1528
(lp1529
S'TaskHandle'
p1530
aNtp1531
(S'physicalChannel'
p1532
(lp1533
S'char'
p1534
a(lp1535
I-1
aaNtp1536
(S'nameToAssignToChannel'
p1537
(lp1538
S'char'
p1539
a(lp1540
I-1
aaNtp1541
(S'terminalConfig'
p1542
(lp1543
S'int32'
p1544
aNtp1545
(S'minVal'
p1546
(lp1547
S'float64'
p1548
aNtp1549
(S'maxVal'
p1550
(lp1551
S'float64'
p1552
aNtp1553
(S'units'
p1554
(lp1555
S'int32'
p1556
aNtp1557
(S'bridgeConfig'
p1558
(lp1559
S'int32'
p1560
aNtp1561
(S'voltageExcitSource'
p1562
(lp1563
S'int32'
p1564
aNtp1565
(S'voltageExcitVal'
p1566
(lp1567
S'float64'
p1568
aNtp1569
(S'useExcitForScaling'
p1570
(lp1571
S'bool32'
p1572
aNtp1573
(S'customScaleName'
p1574
(lp1575
S'char'
p1576
a(lp1577
I-1
aaNtp1578
tp1579
tp1580
sS'DAQmxGetAnlgLvlPauseTrigDigFltrEnable'
p1581
((lp1582
S'int32'
p1583
ag34
a((S'taskHandle'
p1584
(lp1585
S'TaskHandle'
p1586
aNtp1587
(S'data'
p1588
(lp1589
S'bool32'
p1590
ag42
aNtp1591
tp1592
tp1593
sS'DAQmxGetWatchdogExpirTrigTrigOnNetworkConnLoss'
p1594
((lp1595
S'int32'
p1596
ag34
a((S'taskHandle'
p1597
(lp1598
S'TaskHandle'
p1599
aNtp1600
(S'data'
p1601
(lp1602
S'bool32'
p1603
ag42
aNtp1604
tp1605
tp1606
sS'DAQmxResetCIMaxMeasPeriod'
p1607
((lp1608
S'int32'
p1609
ag34
a((S'taskHandle'
p1610
(lp1611
S'TaskHandle'
p1612
aNtp1613
(S'channel'
p1614
(lp1615
S'char'
p1616
a(lp1617
I-1
aaNtp1618
tp1619
tp1620
sS'DAQmxGetDevAOMinRate'
p1621
((lp1622
S'int32'
p1623
ag34
a((S'device'
p1624
(lp1625
S'char'
p1626
a(lp1627
I-1
aaNtp1628
(S'data'
p1629
(lp1630
S'float64'
p1631
ag42
aNtp1632
tp1633
tp1634
sS'DAQmxSetCIPeriodDigFltrEnable'
p1635
((lp1636
S'int32'
p1637
ag34
a((S'taskHandle'
p1638
(lp1639
S'TaskHandle'
p1640
aNtp1641
(S'channel'
p1642
(lp1643
S'char'
p1644
a(lp1645
I-1
aaNtp1646
(S'data'
p1647
(lp1648
S'bool32'
p1649
aNtp1650
tp1651
tp1652
sS'DAQmxSetCICtrTimebaseDigFltrTimebaseSrc'
p1653
((lp1654
S'int32'
p1655
ag34
a((S'taskHandle'
p1656
(lp1657
S'TaskHandle'
p1658
aNtp1659
(S'channel'
p1660
(lp1661
S'char'
p1662
a(lp1663
I-1
aaNtp1664
(S'data'
p1665
(lp1666
S'char'
p1667
ag42
aNtp1668
tp1669
tp1670
sS'DAQmxResetCICountEdgesCountResetLogicLvlBehavior'
p1671
((lp1672
S'int32'
p1673
ag34
a((S'taskHandle'
p1674
(lp1675
S'TaskHandle'
p1676
aNtp1677
(S'channel'
p1678
(lp1679
S'char'
p1680
a(lp1681
I-1
aaNtp1682
tp1683
tp1684
sS'DAQmxDeleteNetworkDevice'
p1685
((lp1686
S'int32'
p1687
ag34
a((S'deviceName'
p1688
(lp1689
S'char'
p1690
a(lp1691
I-1
aaNtp1692
tp1693
tp1694
sS'DAQmxGetExportedAdvTrigPulsePolarity'
p1695
((lp1696
S'int32'
p1697
ag34
a((S'taskHandle'
p1698
(lp1699
S'TaskHandle'
p1700
aNtp1701
(S'data'
p1702
(lp1703
S'int32'
p1704
ag42
aNtp1705
tp1706
tp1707
sS'DAQmxGetExportedRdyForXferEventDeassertCond'
p1708
((lp1709
S'int32'
p1710
ag34
a((S'taskHandle'
p1711
(lp1712
S'TaskHandle'
p1713
aNtp1714
(S'data'
p1715
(lp1716
S'int32'
p1717
ag42
aNtp1718
tp1719
tp1720
sS'DAQmxGetCISampClkOverrunBehavior'
p1721
((lp1722
S'int32'
p1723
ag34
a((S'taskHandle'
p1724
(lp1725
S'TaskHandle'
p1726
aNtp1727
(S'channel'
p1728
(lp1729
S'char'
p1730
a(lp1731
I-1
aaNtp1732
(S'data'
p1733
(lp1734
S'int32'
p1735
ag42
aNtp1736
tp1737
tp1738
sS'DAQmxCreateTEDSAIMicrophoneChan'
p1739
((lp1740
S'int32'
p1741
ag34
a((S'taskHandle'
p1742
(lp1743
S'TaskHandle'
p1744
aNtp1745
(S'physicalChannel'
p1746
(lp1747
S'char'
p1748
a(lp1749
I-1
aaNtp1750
(S'nameToAssignToChannel'
p1751
(lp1752
S'char'
p1753
a(lp1754
I-1
aaNtp1755
(S'terminalConfig'
p1756
(lp1757
S'int32'
p1758
aNtp1759
(S'units'
p1760
(lp1761
S'int32'
p1762
aNtp1763
(S'maxSndPressLevel'
p1764
(lp1765
S'float64'
p1766
aNtp1767
(S'currentExcitSource'
p1768
(lp1769
S'int32'
p1770
aNtp1771
(S'currentExcitVal'
p1772
(lp1773
S'float64'
p1774
aNtp1775
(S'customScaleName'
p1776
(lp1777
S'char'
p1778
a(lp1779
I-1
aaNtp1780
tp1781
tp1782
sS'DAQmxGetCIEncoderDecodingType'
p1783
((lp1784
S'int32'
p1785
ag34
a((S'taskHandle'
p1786
(lp1787
S'TaskHandle'
p1788
aNtp1789
(S'channel'
p1790
(lp1791
S'char'
p1792
a(lp1793
I-1
aaNtp1794
(S'data'
p1795
(lp1796
S'int32'
p1797
ag42
aNtp1798
tp1799
tp1800
sS'DAQmxAdjust9222Cal'
p1801
((lp1802
S'int32'
p1803
ag34
a((S'calHandle'
p1804
(lp1805
S'CalHandle'
p1806
aNtp1807
(S'channelNames'
p1808
(lp1809
S'char'
p1810
a(lp1811
I-1
aaNtp1812
(S'value'
p1813
(lp1814
S'float64'
p1815
aNtp1816
tp1817
tp1818
sS'DAQmxSSeriesCalAdjust'
p1819
((lp1820
S'int32'
p1821
ag34
a((S'calHandle'
p1822
(lp1823
S'CalHandle'
p1824
aNtp1825
(S'referenceVoltage'
p1826
(lp1827
S'float64'
p1828
aNtp1829
tp1830
tp1831
sS'DAQmxGetDigEdgeAdvTrigEdge'
p1832
((lp1833
S'int32'
p1834
ag34
a((S'taskHandle'
p1835
(lp1836
S'TaskHandle'
p1837
aNtp1838
(S'data'
p1839
(lp1840
S'int32'
p1841
ag42
aNtp1842
tp1843
tp1844
sS'DAQmxGetDevCompactDAQChassisDevName'
p1845
((lp1846
S'int32'
p1847
ag34
a((S'device'
p1848
(lp1849
S'char'
p1850
a(lp1851
I-1
aaNtp1852
(S'data'
p1853
(lp1854
S'char'
p1855
ag42
aNtp1856
(S'bufferSize'
p1857
(lp1858
S'uInt32'
p1859
aNtp1860
tp1861
tp1862
sS'DAQmxGetCISemiPeriodDigFltrEnable'
p1863
((lp1864
S'int32'
p1865
ag34
a((S'taskHandle'
p1866
(lp1867
S'TaskHandle'
p1868
aNtp1869
(S'channel'
p1870
(lp1871
S'char'
p1872
a(lp1873
I-1
aaNtp1874
(S'data'
p1875
(lp1876
S'bool32'
p1877
ag42
aNtp1878
tp1879
tp1880
sS'DAQmxResetAnlgEdgeStartTrigDigFltrEnable'
p1881
((lp1882
S'int32'
p1883
ag34
a((S'taskHandle'
p1884
(lp1885
S'TaskHandle'
p1886
aNtp1887
tp1888
tp1889
sS'DAQmxSetCIPulseTicksTerm'
p1890
((lp1891
S'int32'
p1892
ag34
a((S'taskHandle'
p1893
(lp1894
S'TaskHandle'
p1895
aNtp1896
(S'channel'
p1897
(lp1898
S'char'
p1899
a(lp1900
I-1
aaNtp1901
(S'data'
p1902
(lp1903
S'char'
p1904
ag42
aNtp1905
tp1906
tp1907
sS'DAQmxResetCIFreqDiv'
p1908
((lp1909
S'int32'
p1910
ag34
a((S'taskHandle'
p1911
(lp1912
S'TaskHandle'
p1913
aNtp1914
(S'channel'
p1915
(lp1916
S'char'
p1917
a(lp1918
I-1
aaNtp1919
tp1920
tp1921
sS'DAQmxResetPhysicalChanAOManualControlEnable'
p1922
((lp1923
S'int32'
p1924
ag34
a((S'physicalChannel'
p1925
(lp1926
S'char'
p1927
a(lp1928
I-1
aaNtp1929
tp1930
tp1931
sS'DAQmxGetCOPulseDone'
p1932
((lp1933
S'int32'
p1934
ag34
a((S'taskHandle'
p1935
(lp1936
S'TaskHandle'
p1937
aNtp1938
(S'channel'
p1939
(lp1940
S'char'
p1941
a(lp1942
I-1
aaNtp1943
(S'data'
p1944
(lp1945
S'bool32'
p1946
ag42
aNtp1947
tp1948
tp1949
sS'DAQmxAdjust9214Cal'
p1950
((lp1951
S'int32'
p1952
ag34
a((S'calHandle'
p1953
(lp1954
S'CalHandle'
p1955
aNtp1956
(S'channelNames'
p1957
(lp1958
S'char'
p1959
a(lp1960
I-1
aaNtp1961
(S'value'
p1962
(lp1963
S'float64'
p1964
aNtp1965
tp1966
tp1967
sS'DAQmxSetup1124Cal'
p1968
((lp1969
S'int32'
p1970
ag34
a((S'calHandle'
p1971
(lp1972
S'CalHandle'
p1973
aNtp1974
(S'channelName'
p1975
(lp1976
S'char'
p1977
a(lp1978
I-1
aaNtp1979
(S'range'
p1980
(lp1981
S'int32'
p1982
aNtp1983
(S'dacValue'
p1984
(lp1985
S'uInt32'
p1986
aNtp1987
tp1988
tp1989
sS'DAQmxSetCIPulseFreqDigFltrMinPulseWidth'
p1990
((lp1991
S'int32'
p1992
ag34
a((S'taskHandle'
p1993
(lp1994
S'TaskHandle'
p1995
aNtp1996
(S'channel'
p1997
(lp1998
S'char'
p1999
a(lp2000
I-1
aaNtp2001
(S'data'
p2002
(lp2003
S'float64'
p2004
aNtp2005
tp2006
tp2007
sS'DAQmxResetDigEdgeRefTrigDigFltrTimebaseSrc'
p2008
((lp2009
S'int32'
p2010
ag34
a((S'taskHandle'
p2011
(lp2012
S'TaskHandle'
p2013
aNtp2014
tp2015
tp2016
sS'DAQmxGetArmStartTrigType'
p2017
((lp2018
S'int32'
p2019
ag34
a((S'taskHandle'
p2020
(lp2021
S'TaskHandle'
p2022
aNtp2023
(S'data'
p2024
(lp2025
S'int32'
p2026
ag42
aNtp2027
tp2028
tp2029
sS'DAQmxSetSampClkTimebaseRate'
p2030
((lp2031
S'int32'
p2032
ag34
a((S'taskHandle'
p2033
(lp2034
S'TaskHandle'
p2035
aNtp2036
(S'data'
p2037
(lp2038
S'float64'
p2039
aNtp2040
tp2041
tp2042
sS'DAQmxGetCIPulseWidthDigFltrTimebaseSrc'
p2043
((lp2044
S'int32'
p2045
ag34
a((S'taskHandle'
p2046
(lp2047
S'TaskHandle'
p2048
aNtp2049
(S'channel'
p2050
(lp2051
S'char'
p2052
a(lp2053
I-1
aaNtp2054
(S'data'
p2055
(lp2056
S'char'
p2057
ag42
aNtp2058
(S'bufferSize'
p2059
(lp2060
S'uInt32'
p2061
aNtp2062
tp2063
tp2064
sS'DAQmxAdjust4357Cal'
p2065
((lp2066
S'int32'
p2067
ag34
a((S'calHandle'
p2068
(lp2069
S'CalHandle'
p2070
aNtp2071
(S'channelNames'
p2072
(lp2073
S'char'
p2074
a(lp2075
I-1
aaNtp2076
(S'refVals'
p2077
(lp2078
S'float64'
p2079
a(lp2080
I-1
aaNtp2081
(S'numRefVals'
p2082
(lp2083
S'int32'
p2084
aNtp2085
tp2086
tp2087
sS'DAQmxCfgBurstHandshakingTimingExportClock'
p2088
((lp2089
S'int32'
p2090
ag34
a((S'taskHandle'
p2091
(lp2092
S'TaskHandle'
p2093
aNtp2094
(S'sampleMode'
p2095
(lp2096
S'int32'
p2097
aNtp2098
(S'sampsPerChan'
p2099
(lp2100
S'uInt64'
p2101
aNtp2102
(S'sampleClkRate'
p2103
(lp2104
S'float64'
p2105
aNtp2106
(S'sampleClkOutpTerm'
p2107
(lp2108
S'char'
p2109
a(lp2110
I-1
aaNtp2111
(S'sampleClkPulsePolarity'
p2112
(lp2113
S'int32'
p2114
aNtp2115
(S'pauseWhen'
p2116
(lp2117
S'int32'
p2118
aNtp2119
(S'readyEventActiveLevel'
p2120
(lp2121
S'int32'
p2122
aNtp2123
tp2124
tp2125
sS'DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc'
p2126
((lp2127
S'int32'
p2128
ag34
a((S'taskHandle'
p2129
(lp2130
S'TaskHandle'
p2131
aNtp2132
(S'data'
p2133
(lp2134
S'char'
p2135
ag42
aNtp2136
(S'bufferSize'
p2137
(lp2138
S'uInt32'
p2139
aNtp2140
tp2141
tp2142
sS'DAQmxGetAIChanCalExpDate'
p2143
((lp2144
S'int32'
p2145
ag34
a((S'taskHandle'
p2146
(lp2147
S'TaskHandle'
p2148
aNtp2149
(S'channelName'
p2150
(lp2151
S'char'
p2152
a(lp2153
I-1
aaNtp2154
(S'year'
p2155
(lp2156
S'uInt32'
p2157
ag42
aNtp2158
(S'month'
p2159
(lp2160
S'uInt32'
p2161
ag42
aNtp2162
(S'day'
p2163
(lp2164
S'uInt32'
p2165
ag42
aNtp2166
(S'hour'
p2167
(lp2168
S'uInt32'
p2169
ag42
aNtp2170
(S'minute'
p2171
(lp2172
S'uInt32'
p2173
ag42
aNtp2174
tp2175
tp2176
sS'DAQmxGetCIPulseFreqUnits'
p2177
((lp2178
S'int32'
p2179
ag34
a((S'taskHandle'
p2180
(lp2181
S'TaskHandle'
p2182
aNtp2183
(S'channel'
p2184
(lp2185
S'char'
p2186
a(lp2187
I-1
aaNtp2188
(S'data'
p2189
(lp2190
S'int32'
p2191
ag42
aNtp2192
tp2193
tp2194
sS'DAQmxResetAICurrentShuntResistance'
p2195
((lp2196
S'int32'
p2197
ag34
a((S'taskHandle'
p2198
(lp2199
S'TaskHandle'
p2200
aNtp2201
(S'channel'
p2202
(lp2203
S'char'
p2204
a(lp2205
I-1
aaNtp2206
tp2207
tp2208
sS'DAQmxGetCISemiPeriodTermCfg'
p2209
((lp2210
S'int32'
p2211
ag34
a((S'taskHandle'
p2212
(lp2213
S'TaskHandle'
p2214
aNtp2215
(S'channel'
p2216
(lp2217
S'char'
p2218
a(lp2219
I-1
aaNtp2220
(S'data'
p2221
(lp2222
S'int32'
p2223
ag42
aNtp2224
tp2225
tp2226
sS'DAQmxSetDIDataXferReqCond'
p2227
((lp2228
S'int32'
p2229
ag34
a((S'taskHandle'
p2230
(lp2231
S'TaskHandle'
p2232
aNtp2233
(S'channel'
p2234
(lp2235
S'char'
p2236
a(lp2237
I-1
aaNtp2238
(S'data'
p2239
(lp2240
S'int32'
p2241
aNtp2242
tp2243
tp2244
sS'DAQmxSetAIConvDigFltrTimebaseRateEx'
p2245
((lp2246
S'int32'
p2247
ag34
a((S'taskHandle'
p2248
(lp2249
S'TaskHandle'
p2250
aNtp2251
(S'deviceNames'
p2252
(lp2253
S'char'
p2254
a(lp2255
I-1
aaNtp2256
(S'data'
p2257
(lp2258
S'float64'
p2259
aNtp2260
tp2261
tp2262
sS'DAQmxResetSampClkTimebaseActiveEdge'
p2263
((lp2264
S'int32'
p2265
ag34
a((S'taskHandle'
p2266
(lp2267
S'TaskHandle'
p2268
aNtp2269
tp2270
tp2271
sS'DAQmxGetRefClkRate'
p2272
((lp2273
S'int32'
p2274
ag34
a((S'taskHandle'
p2275
(lp2276
S'TaskHandle'
p2277
aNtp2278
(S'data'
p2279
(lp2280
S'float64'
p2281
ag42
aNtp2282
tp2283
tp2284
sS'DAQmxSetExportedCtrOutEventToggleIdleState'
p2285
((lp2286
S'int32'
p2287
ag34
a((S'taskHandle'
p2288
(lp2289
S'TaskHandle'
p2290
aNtp2291
(S'data'
p2292
(lp2293
S'int32'
p2294
aNtp2295
tp2296
tp2297
sS'DAQmxCreateTEDSAIVoltageChanWithExcit'
p2298
((lp2299
S'int32'
p2300
ag34
a((S'taskHandle'
p2301
(lp2302
S'TaskHandle'
p2303
aNtp2304
(S'physicalChannel'
p2305
(lp2306
S'char'
p2307
a(lp2308
I-1
aaNtp2309
(S'nameToAssignToChannel'
p2310
(lp2311
S'char'
p2312
a(lp2313
I-1
aaNtp2314
(S'terminalConfig'
p2315
(lp2316
S'int32'
p2317
aNtp2318
(S'minVal'
p2319
(lp2320
S'float64'
p2321
aNtp2322
(S'maxVal'
p2323
(lp2324
S'float64'
p2325
aNtp2326
(S'units'
p2327
(lp2328
S'int32'
p2329
aNtp2330
(S'voltageExcitSource'
p2331
(lp2332
S'int32'
p2333
aNtp2334
(S'voltageExcitVal'
p2335
(lp2336
S'float64'
p2337
aNtp2338
(S'customScaleName'
p2339
(lp2340
S'char'
p2341
a(lp2342
I-1
aaNtp2343
tp2344
tp2345
sS'DAQmxGetAILowpassEnable'
p2346
((lp2347
S'int32'
p2348
ag34
a((S'taskHandle'
p2349
(lp2350
S'TaskHandle'
p2351
aNtp2352
(S'channel'
p2353
(lp2354
S'char'
p2355
a(lp2356
I-1
aaNtp2357
(S'data'
p2358
(lp2359
S'bool32'
p2360
ag42
aNtp2361
tp2362
tp2363
sS'DAQmxResetCISampClkOverrunBehavior'
p2364
((lp2365
S'int32'
p2366
ag34
a((S'taskHandle'
p2367
(lp2368
S'TaskHandle'
p2369
aNtp2370
(S'channel'
p2371
(lp2372
S'char'
p2373
a(lp2374
I-1
aaNtp2375
tp2376
tp2377
sS'DAQmxSetAOFilterDelayUnits'
p2378
((lp2379
S'int32'
p2380
ag34
a((S'taskHandle'
p2381
(lp2382
S'TaskHandle'
p2383
aNtp2384
(S'channel'
p2385
(lp2386
S'char'
p2387
a(lp2388
I-1
aaNtp2389
(S'data'
p2390
(lp2391
S'int32'
p2392
aNtp2393
tp2394
tp2395
sS'DAQmxSetSampClkDigFltrTimebaseSrc'
p2396
((lp2397
S'int32'
p2398
ag34
a((S'taskHandle'
p2399
(lp2400
S'TaskHandle'
p2401
aNtp2402
(S'data'
p2403
(lp2404
S'char'
p2405
ag42
aNtp2406
tp2407
tp2408
sS'DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc'
p2409
((lp2410
S'int32'
p2411
ag34
a((S'taskHandle'
p2412
(lp2413
S'TaskHandle'
p2414
aNtp2415
(S'data'
p2416
(lp2417
S'char'
p2418
ag42
aNtp2419
(S'bufferSize'
p2420
(lp2421
S'uInt32'
p2422
aNtp2423
tp2424
tp2425
sS'DAQmxGetCOOutputType'
p2426
((lp2427
S'int32'
p2428
ag34
a((S'taskHandle'
p2429
(lp2430
S'TaskHandle'
p2431
aNtp2432
(S'channel'
p2433
(lp2434
S'char'
p2435
a(lp2436
I-1
aaNtp2437
(S'data'
p2438
(lp2439
S'int32'
p2440
ag42
aNtp2441
tp2442
tp2443
sS'DAQmxResetStartTrigDelay'
p2444
((lp2445
S'int32'
p2446
ag34
a((S'taskHandle'
p2447
(lp2448
S'TaskHandle'
p2449
aNtp2450
tp2451
tp2452
sS'DAQmxCreateTEDSAIResistanceChan'
p2453
((lp2454
S'int32'
p2455
ag34
a((S'taskHandle'
p2456
(lp2457
S'TaskHandle'
p2458
aNtp2459
(S'physicalChannel'
p2460
(lp2461
S'char'
p2462
a(lp2463
I-1
aaNtp2464
(S'nameToAssignToChannel'
p2465
(lp2466
S'char'
p2467
a(lp2468
I-1
aaNtp2469
(S'minVal'
p2470
(lp2471
S'float64'
p2472
aNtp2473
(S'maxVal'
p2474
(lp2475
S'float64'
p2476
aNtp2477
(S'units'
p2478
(lp2479
S'int32'
p2480
aNtp2481
(S'resistanceConfig'
p2482
(lp2483
S'int32'
p2484
aNtp2485
(S'currentExcitSource'
p2486
(lp2487
S'int32'
p2488
aNtp2489
(S'currentExcitVal'
p2490
(lp2491
S'float64'
p2492
aNtp2493
(S'customScaleName'
p2494
(lp2495
S'char'
p2496
a(lp2497
I-1
aaNtp2498
tp2499
tp2500
sS'DAQmxSetDigEdgeStartTrigEdge'
p2501
((lp2502
S'int32'
p2503
ag34
a((S'taskHandle'
p2504
(lp2505
S'TaskHandle'
p2506
aNtp2507
(S'data'
p2508
(lp2509
S'int32'
p2510
aNtp2511
tp2512
tp2513
sS'DAQmxSetCIFreqDigFltrMinPulseWidth'
p2514
((lp2515
S'int32'
p2516
ag34
a((S'taskHandle'
p2517
(lp2518
S'TaskHandle'
p2519
aNtp2520
(S'channel'
p2521
(lp2522
S'char'
p2523
a(lp2524
I-1
aaNtp2525
(S'data'
p2526
(lp2527
S'float64'
p2528
aNtp2529
tp2530
tp2531
sS'DAQmxSetLoggingMode'
p2532
((lp2533
S'int32'
p2534
ag34
a((S'taskHandle'
p2535
(lp2536
S'TaskHandle'
p2537
aNtp2538
(S'data'
p2539
(lp2540
S'int32'
p2541
aNtp2542
tp2543
tp2544
sS'DAQmxSetCICountEdgesCountDirDigFltrEnable'
p2545
((lp2546
S'int32'
p2547
ag34
a((S'taskHandle'
p2548
(lp2549
S'TaskHandle'
p2550
aNtp2551
(S'channel'
p2552
(lp2553
S'char'
p2554
a(lp2555
I-1
aaNtp2556
(S'data'
p2557
(lp2558
S'bool32'
p2559
aNtp2560
tp2561
tp2562
sS'DAQmxSetDigEdgeStartTrigSrc'
p2563
((lp2564
S'int32'
p2565
ag34
a((S'taskHandle'
p2566
(lp2567
S'TaskHandle'
p2568
aNtp2569
(S'data'
p2570
(lp2571
S'char'
p2572
ag42
aNtp2573
tp2574
tp2575
sS'DAQmxResetAIChanCalOperatorName'
p2576
((lp2577
S'int32'
p2578
ag34
a((S'taskHandle'
p2579
(lp2580
S'TaskHandle'
p2581
aNtp2582
(S'channel'
p2583
(lp2584
S'char'
p2585
a(lp2586
I-1
aaNtp2587
tp2588
tp2589
sS'DAQmxResetTrigAttribute'
p2590
((lp2591
S'int32'
p2592
ag34
a((S'taskHandle'
p2593
(lp2594
S'TaskHandle'
p2595
aNtp2596
(S'attribute'
p2597
(lp2598
S'int32'
p2599
aNtp2600
tp2601
tp2602
sS'DAQmxGetDOLogicFamily'
p2603
((lp2604
S'int32'
p2605
ag34
a((S'taskHandle'
p2606
(lp2607
S'TaskHandle'
p2608
aNtp2609
(S'channel'
p2610
(lp2611
S'char'
p2612
a(lp2613
I-1
aaNtp2614
(S'data'
p2615
(lp2616
S'int32'
p2617
ag42
aNtp2618
tp2619
tp2620
sS'DAQmxGetExportedHshkEventPulseWidth'
p2621
((lp2622
S'int32'
p2623
ag34
a((S'taskHandle'
p2624
(lp2625
S'TaskHandle'
p2626
aNtp2627
(S'data'
p2628
(lp2629
S'float64'
p2630
ag42
aNtp2631
tp2632
tp2633
sS'DAQmxGetCIPulseTimeUnits'
p2634
((lp2635
S'int32'
p2636
ag34
a((S'taskHandle'
p2637
(lp2638
S'TaskHandle'
p2639
aNtp2640
(S'channel'
p2641
(lp2642
S'char'
p2643
a(lp2644
I-1
aaNtp2645
(S'data'
p2646
(lp2647
S'int32'
p2648
ag42
aNtp2649
tp2650
tp2651
sS'DAQmxGetAIMax'
p2652
((lp2653
S'int32'
p2654
ag34
a((S'taskHandle'
p2655
(lp2656
S'TaskHandle'
p2657
aNtp2658
(S'channel'
p2659
(lp2660
S'char'
p2661
a(lp2662
I-1
aaNtp2663
(S'data'
p2664
(lp2665
S'float64'
p2666
ag42
aNtp2667
tp2668
tp2669
sS'DAQmxResetAIEddyCurrentProxProbeSensitivityUnits'
p2670
((lp2671
S'int32'
p2672
ag34
a((S'taskHandle'
p2673
(lp2674
S'TaskHandle'
p2675
aNtp2676
(S'channel'
p2677
(lp2678
S'char'
p2679
a(lp2680
I-1
aaNtp2681
tp2682
tp2683
sS'DAQmxResetAODACRngLow'
p2684
((lp2685
S'int32'
p2686
ag34
a((S'taskHandle'
p2687
(lp2688
S'TaskHandle'
p2689
aNtp2690
(S'channel'
p2691
(lp2692
S'char'
p2693
a(lp2694
I-1
aaNtp2695
tp2696
tp2697
sS'DAQmxResetAISampAndHoldEnable'
p2698
((lp2699
S'int32'
p2700
ag34
a((S'taskHandle'
p2701
(lp2702
S'TaskHandle'
p2703
aNtp2704
(S'channel'
p2705
(lp2706
S'char'
p2707
a(lp2708
I-1
aaNtp2709
tp2710
tp2711
sS'DAQmxResetAIChanCalVerifAcqVals'
p2712
((lp2713
S'int32'
p2714
ag34
a((S'taskHandle'
p2715
(lp2716
S'TaskHandle'
p2717
aNtp2718
(S'channel'
p2719
(lp2720
S'char'
p2721
a(lp2722
I-1
aaNtp2723
tp2724
tp2725
sS'DAQmxSetAOFuncGenFreq'
p2726
((lp2727
S'int32'
p2728
ag34
a((S'taskHandle'
p2729
(lp2730
S'TaskHandle'
p2731
aNtp2732
(S'channel'
p2733
(lp2734
S'char'
p2735
a(lp2736
I-1
aaNtp2737
(S'data'
p2738
(lp2739
S'float64'
p2740
aNtp2741
tp2742
tp2743
sS'DAQmxGetAOPowerAmpScalingCoeff'
p2744
((lp2745
S'int32'
p2746
ag34
a((S'physicalChannel'
p2747
(lp2748
S'char'
p2749
a(lp2750
I-1
aaNtp2751
(S'data'
p2752
(lp2753
S'float64'
p2754
ag42
aNtp2755
(S'arraySizeInElements'
p2756
(lp2757
S'uInt32'
p2758
aNtp2759
tp2760
tp2761
sS'DAQmxSetAOTermCfg'
p2762
((lp2763
S'int32'
p2764
ag34
a((S'taskHandle'
p2765
(lp2766
S'TaskHandle'
p2767
aNtp2768
(S'channel'
p2769
(lp2770
S'char'
p2771
a(lp2772
I-1
aaNtp2773
(S'data'
p2774
(lp2775
S'int32'
p2776
aNtp2777
tp2778
tp2779
sS'DAQmxSetAIConvDigFltrMinPulseWidthEx'
p2780
((lp2781
S'int32'
p2782
ag34
a((S'taskHandle'
p2783
(lp2784
S'TaskHandle'
p2785
aNtp2786
(S'deviceNames'
p2787
(lp2788
S'char'
p2789
a(lp2790
I-1
aaNtp2791
(S'data'
p2792
(lp2793
S'float64'
p2794
aNtp2795
tp2796
tp2797
sS'DAQmxResetCISemiPeriodDigFltrEnable'
p2798
((lp2799
S'int32'
p2800
ag34
a((S'taskHandle'
p2801
(lp2802
S'TaskHandle'
p2803
aNtp2804
(S'channel'
p2805
(lp2806
S'char'
p2807
a(lp2808
I-1
aaNtp2809
tp2810
tp2811
sS'DAQmxSetAODACRefSrc'
p2812
((lp2813
S'int32'
p2814
ag34
a((S'taskHandle'
p2815
(lp2816
S'TaskHandle'
p2817
aNtp2818
(S'channel'
p2819
(lp2820
S'char'
p2821
a(lp2822
I-1
aaNtp2823
(S'data'
p2824
(lp2825
S'int32'
p2826
aNtp2827
tp2828
tp2829
sS'DAQmxSelfTestDevice'
p2830
((lp2831
S'int32'
p2832
ag34
a((S'deviceName'
p2833
(lp2834
S'char'
p2835
a(lp2836
I-1
aaNtp2837
tp2838
tp2839
sS'DAQmxGet9265CalAdjustPoints'
p2840
((lp2841
S'int32'
p2842
ag34
a((S'calHandle'
p2843
(lp2844
S'CalHandle'
p2845
aNtp2846
(S'adjustmentPoints'
p2847
(lp2848
S'int32'
p2849
ag42
aNtp2850
(S'bufferSize'
p2851
(lp2852
S'uInt32'
p2853
aNtp2854
tp2855
tp2856
sS'DAQmxPerformBridgeOffsetNullingCal'
p2857
((lp2858
S'int32'
p2859
ag34
a((S'taskHandle'
p2860
(lp2861
S'TaskHandle'
p2862
aNtp2863
(S'channel'
p2864
(lp2865
S'char'
p2866
a(lp2867
I-1
aaNtp2868
tp2869
tp2870
sS'DAQmxGetCITwoEdgeSepUnits'
p2871
((lp2872
S'int32'
p2873
ag34
a((S'taskHandle'
p2874
(lp2875
S'TaskHandle'
p2876
aNtp2877
(S'channel'
p2878
(lp2879
S'char'
p2880
a(lp2881
I-1
aaNtp2882
(S'data'
p2883
(lp2884
S'int32'
p2885
ag42
aNtp2886
tp2887
tp2888
sS'DAQmxSetAIChanCalTableScaledVals'
p2889
((lp2890
S'int32'
p2891
ag34
a((S'taskHandle'
p2892
(lp2893
S'TaskHandle'
p2894
aNtp2895
(S'channel'
p2896
(lp2897
S'char'
p2898
a(lp2899
I-1
aaNtp2900
(S'data'
p2901
(lp2902
S'float64'
p2903
ag42
aNtp2904
(S'arraySizeInElements'
p2905
(lp2906
S'uInt32'
p2907
aNtp2908
tp2909
tp2910
sS'DAQmxGetDOOutputDriveType'
p2911
((lp2912
S'int32'
p2913
ag34
a((S'taskHandle'
p2914
(lp2915
S'TaskHandle'
p2916
aNtp2917
(S'channel'
p2918
(lp2919
S'char'
p2920
a(lp2921
I-1
aaNtp2922
(S'data'
p2923
(lp2924
S'int32'
p2925
ag42
aNtp2926
tp2927
tp2928
sS'DAQmxResetAnlgLvlPauseTrigCoupling'
p2929
((lp2930
S'int32'
p2931
ag34
a((S'taskHandle'
p2932
(lp2933
S'TaskHandle'
p2934
aNtp2935
tp2936
tp2937
sS'DAQmxGetCIPeriodDigFltrEnable'
p2938
((lp2939
S'int32'
p2940
ag34
a((S'taskHandle'
p2941
(lp2942
S'TaskHandle'
p2943
aNtp2944
(S'channel'
p2945
(lp2946
S'char'
p2947
a(lp2948
I-1
aaNtp2949
(S'data'
p2950
(lp2951
S'bool32'
p2952
ag42
aNtp2953
tp2954
tp2955
sS'DAQmxResetSampClkOverrunBehavior'
p2956
((lp2957
S'int32'
p2958
ag34
a((S'taskHandle'
p2959
(lp2960
S'TaskHandle'
p2961
aNtp2962
tp2963
tp2964
sS'DAQmxResetAOFilterDelay'
p2965
((lp2966
S'int32'
p2967
ag34
a((S'taskHandle'
p2968
(lp2969
S'TaskHandle'
p2970
aNtp2971
(S'channel'
p2972
(lp2973
S'char'
p2974
a(lp2975
I-1
aaNtp2976
tp2977
tp2978
sS'DAQmxResetDigEdgeAdvTrigSrc'
p2979
((lp2980
S'int32'
p2981
ag34
a((S'taskHandle'
p2982
(lp2983
S'TaskHandle'
p2984
aNtp2985
tp2986
tp2987
sS'DAQmxGetAIRawSampSize'
p2988
((lp2989
S'int32'
p2990
ag34
a((S'taskHandle'
p2991
(lp2992
S'TaskHandle'
p2993
aNtp2994
(S'channel'
p2995
(lp2996
S'char'
p2997
a(lp2998
I-1
aaNtp2999
(S'data'
p3000
(lp3001
S'uInt32'
p3002
ag42
aNtp3003
tp3004
tp3005
sS'DAQmxSetCIPulseTicksDigFltrMinPulseWidth'
p3006
((lp3007
S'int32'
p3008
ag34
a((S'taskHandle'
p3009
(lp3010
S'TaskHandle'
p3011
aNtp3012
(S'channel'
p3013
(lp3014
S'char'
p3015
a(lp3016
I-1
aaNtp3017
(S'data'
p3018
(lp3019
S'float64'
p3020
aNtp3021
tp3022
tp3023
sS'DAQmxGetSampClkMaxRate'
p3024
((lp3025
S'int32'
p3026
ag34
a((S'taskHandle'
p3027
(lp3028
S'TaskHandle'
p3029
aNtp3030
(S'data'
p3031
(lp3032
S'float64'
p3033
ag42
aNtp3034
tp3035
tp3036
sS'DAQmxResetCIPulseTimeStartEdge'
p3037
((lp3038
S'int32'
p3039
ag34
a((S'taskHandle'
p3040
(lp3041
S'TaskHandle'
p3042
aNtp3043
(S'channel'
p3044
(lp3045
S'char'
p3046
a(lp3047
I-1
aaNtp3048
tp3049
tp3050
sS'DAQmxResetAnlgWinRefTrigSrc'
p3051
((lp3052
S'int32'
p3053
ag34
a((S'taskHandle'
p3054
(lp3055
S'TaskHandle'
p3056
aNtp3057
tp3058
tp3059
sS'DAQmxResetCIPeriodTerm'
p3060
((lp3061
S'int32'
p3062
ag34
a((S'taskHandle'
p3063
(lp3064
S'TaskHandle'
p3065
aNtp3066
(S'channel'
p3067
(lp3068
S'char'
p3069
a(lp3070
I-1
aaNtp3071
tp3072
tp3073
sS'DAQmxGetAnlgEdgeStartTrigCoupling'
p3074
((lp3075
S'int32'
p3076
ag34
a((S'taskHandle'
p3077
(lp3078
S'TaskHandle'
p3079
aNtp3080
(S'data'
p3081
(lp3082
S'int32'
p3083
ag42
aNtp3084
tp3085
tp3086
sS'DAQmxSetDelayFromSampClkDelay'
p3087
((lp3088
S'int32'
p3089
ag34
a((S'taskHandle'
p3090
(lp3091
S'TaskHandle'
p3092
aNtp3093
(S'data'
p3094
(lp3095
S'float64'
p3096
aNtp3097
tp3098
tp3099
sS'DAQmxGetCITwoEdgeSepSecondEdge'
p3100
((lp3101
S'int32'
p3102
ag34
a((S'taskHandle'
p3103
(lp3104
S'TaskHandle'
p3105
aNtp3106
(S'channel'
p3107
(lp3108
S'char'
p3109
a(lp3110
I-1
aaNtp3111
(S'data'
p3112
(lp3113
S'int32'
p3114
ag42
aNtp3115
tp3116
tp3117
sS'DAQmxSetAOFuncGenOffset'
p3118
((lp3119
S'int32'
p3120
ag34
a((S'taskHandle'
p3121
(lp3122
S'TaskHandle'
p3123
aNtp3124
(S'channel'
p3125
(lp3126
S'char'
p3127
a(lp3128
I-1
aaNtp3129
(S'data'
p3130
(lp3131
S'float64'
p3132
aNtp3133
tp3134
tp3135
sS'DAQmxGetSampTimingType'
p3136
((lp3137
S'int32'
p3138
ag34
a((S'taskHandle'
p3139
(lp3140
S'TaskHandle'
p3141
aNtp3142
(S'data'
p3143
(lp3144
S'int32'
p3145
ag42
aNtp3146
tp3147
tp3148
sS'DAQmxGetPhysicalChanTEDSVersionNum'
p3149
((lp3150
S'int32'
p3151
ag34
a((S'physicalChannel'
p3152
(lp3153
S'char'
p3154
a(lp3155
I-1
aaNtp3156
(S'data'
p3157
(lp3158
S'uInt32'
p3159
ag42
aNtp3160
tp3161
tp3162
sS'DAQmxCreateAIForceBridgeTwoPointLinChan'
p3163
((lp3164
S'int32'
p3165
ag34
a((S'taskHandle'
p3166
(lp3167
S'TaskHandle'
p3168
aNtp3169
(S'physicalChannel'
p3170
(lp3171
S'char'
p3172
a(lp3173
I-1
aaNtp3174
(S'nameToAssignToChannel'
p3175
(lp3176
S'char'
p3177
a(lp3178
I-1
aaNtp3179
(S'minVal'
p3180
(lp3181
S'float64'
p3182
aNtp3183
(S'maxVal'
p3184
(lp3185
S'float64'
p3186
aNtp3187
(S'units'
p3188
(lp3189
S'int32'
p3190
aNtp3191
(S'bridgeConfig'
p3192
(lp3193
S'int32'
p3194
aNtp3195
(S'voltageExcitSource'
p3196
(lp3197
S'int32'
p3198
aNtp3199
(S'voltageExcitVal'
p3200
(lp3201
S'float64'
p3202
aNtp3203
(S'nominalBridgeResistance'
p3204
(lp3205
S'float64'
p3206
aNtp3207
(S'firstElectricalVal'
p3208
(lp3209
S'float64'
p3210
aNtp3211
(S'secondElectricalVal'
p3212
(lp3213
S'float64'
p3214
aNtp3215
(S'electricalUnits'
p3216
(lp3217
S'int32'
p3218
aNtp3219
(S'firstPhysicalVal'
p3220
(lp3221
S'float64'
p3222
aNtp3223
(S'secondPhysicalVal'
p3224
(lp3225
S'float64'
p3226
aNtp3227
(S'physicalUnits'
p3228
(lp3229
S'int32'
p3230
aNtp3231
(S'customScaleName'
p3232
(lp3233
S'char'
p3234
a(lp3235
I-1
aaNtp3236
tp3237
tp3238
sS'DAQmxSetCIEncoderBInputDigFltrMinPulseWidth'
p3239
((lp3240
S'int32'
p3241
ag34
a((S'taskHandle'
p3242
(lp3243
S'TaskHandle'
p3244
aNtp3245
(S'channel'
p3246
(lp3247
S'char'
p3248
a(lp3249
I-1
aaNtp3250
(S'data'
p3251
(lp3252
S'float64'
p3253
aNtp3254
tp3255
tp3256
sS'DAQmxCreateAIVoltageRMSChan'
p3257
((lp3258
S'int32'
p3259
ag34
a((S'taskHandle'
p3260
(lp3261
S'TaskHandle'
p3262
aNtp3263
(S'physicalChannel'
p3264
(lp3265
S'char'
p3266
a(lp3267
I-1
aaNtp3268
(S'nameToAssignToChannel'
p3269
(lp3270
S'char'
p3271
a(lp3272
I-1
aaNtp3273
(S'terminalConfig'
p3274
(lp3275
S'int32'
p3276
aNtp3277
(S'minVal'
p3278
(lp3279
S'float64'
p3280
aNtp3281
(S'maxVal'
p3282
(lp3283
S'float64'
p3284
aNtp3285
(S'units'
p3286
(lp3287
S'int32'
p3288
aNtp3289
(S'customScaleName'
p3290
(lp3291
S'char'
p3292
a(lp3293
I-1
aaNtp3294
tp3295
tp3296
sS'DAQmxGetDevCOPhysicalChans'
p3297
((lp3298
S'int32'
p3299
ag34
a((S'device'
p3300
(lp3301
S'char'
p3302
a(lp3303
I-1
aaNtp3304
(S'data'
p3305
(lp3306
S'char'
p3307
ag42
aNtp3308
(S'bufferSize'
p3309
(lp3310
S'uInt32'
p3311
aNtp3312
tp3313
tp3314
sS'DAQmxResetDigLvlPauseTrigDigFltrEnable'
p3315
((lp3316
S'int32'
p3317
ag34
a((S'taskHandle'
p3318
(lp3319
S'TaskHandle'
p3320
aNtp3321
tp3322
tp3323
sS'DAQmxSwitchWaitForSettling'
p3324
((lp3325
S'int32'
p3326
ag34
a((S'deviceName'
p3327
(lp3328
S'char'
p3329
a(lp3330
I-1
aaNtp3331
tp3332
tp3333
sS'DAQmxSetCIFreqDigFltrTimebaseSrc'
p3334
((lp3335
S'int32'
p3336
ag34
a((S'taskHandle'
p3337
(lp3338
S'TaskHandle'
p3339
aNtp3340
(S'channel'
p3341
(lp3342
S'char'
p3343
a(lp3344
I-1
aaNtp3345
(S'data'
p3346
(lp3347
S'char'
p3348
ag42
aNtp3349
tp3350
tp3351
sS'DAQmxSetTimingSyncPulseForce'
p3352
((lp3353
S'int32'
p3354
ag34
a((S'taskHandle'
p3355
(lp3356
S'TaskHandle'
p3357
aNtp3358
(S'data'
p3359
(lp3360
S'bool32'
p3361
aNtp3362
tp3363
tp3364
sS'DAQmxGetAIChanCalHasValidCalInfo'
p3365
((lp3366
S'int32'
p3367
ag34
a((S'taskHandle'
p3368
(lp3369
S'TaskHandle'
p3370
aNtp3371
(S'channel'
p3372
(lp3373
S'char'
p3374
a(lp3375
I-1
aaNtp3376
(S'data'
p3377
(lp3378
S'bool32'
p3379
ag42
aNtp3380
tp3381
tp3382
sS'DAQmxResetCIEncoderAInputTerm'
p3383
((lp3384
S'int32'
p3385
ag34
a((S'taskHandle'
p3386
(lp3387
S'TaskHandle'
p3388
aNtp3389
(S'channel'
p3390
(lp3391
S'char'
p3392
a(lp3393
I-1
aaNtp3394
tp3395
tp3396
sS'DAQmxDeviceSupportsCal'
p3397
((lp3398
S'int32'
p3399
ag34
a((S'deviceName'
p3400
(lp3401
S'char'
p3402
a(lp3403
I-1
aaNtp3404
(S'calSupported'
p3405
(lp3406
S'bool32'
p3407
ag42
aNtp3408
tp3409
tp3410
sS'DAQmxGetCalUserDefinedInfoMaxSize'
p3411
((lp3412
S'int32'
p3413
ag34
a((S'deviceName'
p3414
(lp3415
S'char'
p3416
a(lp3417
I-1
aaNtp3418
(S'data'
p3419
(lp3420
S'uInt32'
p3421
ag42
aNtp3422
tp3423
tp3424
sS'DAQmxSetAIExcitActualVal'
p3425
((lp3426
S'int32'
p3427
ag34
a((S'taskHandle'
p3428
(lp3429
S'TaskHandle'
p3430
aNtp3431
(S'channel'
p3432
(lp3433
S'char'
p3434
a(lp3435
I-1
aaNtp3436
(S'data'
p3437
(lp3438
S'float64'
p3439
aNtp3440
tp3441
tp3442
sS'DAQmxGetPhysicalChanDISampModes'
p3443
((lp3444
S'int32'
p3445
ag34
a((S'physicalChannel'
p3446
(lp3447
S'char'
p3448
a(lp3449
I-1
aaNtp3450
(S'data'
p3451
(lp3452
S'int32'
p3453
ag42
aNtp3454
(S'arraySizeInElements'
p3455
(lp3456
S'uInt32'
p3457
aNtp3458
tp3459
tp3460
sS'DAQmxSetWriteRegenMode'
p3461
((lp3462
S'int32'
p3463
ag34
a((S'taskHandle'
p3464
(lp3465
S'TaskHandle'
p3466
aNtp3467
(S'data'
p3468
(lp3469
S'int32'
p3470
aNtp3471
tp3472
tp3473
sS'DAQmxResetCIPeriodDigFltrTimebaseSrc'
p3474
((lp3475
S'int32'
p3476
ag34
a((S'taskHandle'
p3477
(lp3478
S'TaskHandle'
p3479
aNtp3480
(S'channel'
p3481
(lp3482
S'char'
p3483
a(lp3484
I-1
aaNtp3485
tp3486
tp3487
sS'DAQmxGetAnlgWinRefTrigBtm'
p3488
((lp3489
S'int32'
p3490
ag34
a((S'taskHandle'
p3491
(lp3492
S'TaskHandle'
p3493
aNtp3494
(S'data'
p3495
(lp3496
S'float64'
p3497
ag42
aNtp3498
tp3499
tp3500
sS'DAQmxResetAnlgLvlPauseTrigSrc'
p3501
((lp3502
S'int32'
p3503
ag34
a((S'taskHandle'
p3504
(lp3505
S'TaskHandle'
p3506
aNtp3507
tp3508
tp3509
sS'DAQmxResetDigEdgeWatchdogExpirTrigSrc'
p3510
((lp3511
S'int32'
p3512
ag34
a((S'taskHandle'
p3513
(lp3514
S'TaskHandle'
p3515
aNtp3516
tp3517
tp3518
sS'DAQmxGetExportedPauseTrigOutputTerm'
p3519
((lp3520
S'int32'
p3521
ag34
a((S'taskHandle'
p3522
(lp3523
S'TaskHandle'
p3524
aNtp3525
(S'data'
p3526
(lp3527
S'char'
p3528
ag42
aNtp3529
(S'bufferSize'
p3530
(lp3531
S'uInt32'
p3532
aNtp3533
tp3534
tp3535
sS'DAQmxSetCISemiPeriodTermCfg'
p3536
((lp3537
S'int32'
p3538
ag34
a((S'taskHandle'
p3539
(lp3540
S'TaskHandle'
p3541
aNtp3542
(S'channel'
p3543
(lp3544
S'char'
p3545
a(lp3546
I-1
aaNtp3547
(S'data'
p3548
(lp3549
S'int32'
p3550
aNtp3551
tp3552
tp3553
sS'DAQmxGetAITEDSUnits'
p3554
((lp3555
S'int32'
p3556
ag34
a((S'taskHandle'
p3557
(lp3558
S'TaskHandle'
p3559
aNtp3560
(S'channel'
p3561
(lp3562
S'char'
p3563
a(lp3564
I-1
aaNtp3565
(S'data'
p3566
(lp3567
S'char'
p3568
ag42
aNtp3569
(S'bufferSize'
p3570
(lp3571
S'uInt32'
p3572
aNtp3573
tp3574
tp3575
sS'DAQmxGetExportedSyncPulseEventOutputTerm'
p3576
((lp3577
S'int32'
p3578
ag34
a((S'taskHandle'
p3579
(lp3580
S'TaskHandle'
p3581
aNtp3582
(S'data'
p3583
(lp3584
S'char'
p3585
ag42
aNtp3586
(S'bufferSize'
p3587
(lp3588
S'uInt32'
p3589
aNtp3590
tp3591
tp3592
sS'DAQmxCreateAIVelocityIEPEChan'
p3593
((lp3594
S'int32'
p3595
ag34
a((S'taskHandle'
p3596
(lp3597
S'TaskHandle'
p3598
aNtp3599
(S'physicalChannel'
p3600
(lp3601
S'char'
p3602
a(lp3603
I-1
aaNtp3604
(S'nameToAssignToChannel'
p3605
(lp3606
S'char'
p3607
a(lp3608
I-1
aaNtp3609
(S'terminalConfig'
p3610
(lp3611
S'int32'
p3612
aNtp3613
(S'minVal'
p3614
(lp3615
S'float64'
p3616
aNtp3617
(S'maxVal'
p3618
(lp3619
S'float64'
p3620
aNtp3621
(S'units'
p3622
(lp3623
S'int32'
p3624
aNtp3625
(S'sensitivity'
p3626
(lp3627
S'float64'
p3628
aNtp3629
(S'sensitivityUnits'
p3630
(lp3631
S'int32'
p3632
aNtp3633
(S'currentExcitSource'
p3634
(lp3635
S'int32'
p3636
aNtp3637
(S'currentExcitVal'
p3638
(lp3639
S'float64'
p3640
aNtp3641
(S'customScaleName'
p3642
(lp3643
S'char'
p3644
a(lp3645
I-1
aaNtp3646
tp3647
tp3648
sS'DAQmxResetCOPulseFreqInitialDelay'
p3649
((lp3650
S'int32'
p3651
ag34
a((S'taskHandle'
p3652
(lp3653
S'TaskHandle'
p3654
aNtp3655
(S'channel'
p3656
(lp3657
S'char'
p3658
a(lp3659
I-1
aaNtp3660
tp3661
tp3662
sS'DAQmxGet9223CalAdjustPoints'
p3663
((lp3664
S'int32'
p3665
ag34
a((S'calHandle'
p3666
(lp3667
S'CalHandle'
p3668
aNtp3669
(S'adjustmentPoints'
p3670
(lp3671
S'float64'
p3672
ag42
aNtp3673
(S'bufferSize'
p3674
(lp3675
S'uInt32'
p3676
aNtp3677
tp3678
tp3679
sS'DAQmxGetExtendedErrorInfo'
p3680
((lp3681
S'int32'
p3682
ag34
a((S'errorString'
p3683
(lp3684
S'char'
p3685
a(lp3686
I-1
aaNtp3687
(S'bufferSize'
p3688
(lp3689
S'uInt32'
p3690
aNtp3691
tp3692
tp3693
sS'DAQmxSetReadOverWrite'
p3694
((lp3695
S'int32'
p3696
ag34
a((S'taskHandle'
p3697
(lp3698
S'TaskHandle'
p3699
aNtp3700
(S'data'
p3701
(lp3702
S'int32'
p3703
aNtp3704
tp3705
tp3706
sS'DAQmxResetDIDigFltrEnable'
p3707
((lp3708
S'int32'
p3709
ag34
a((S'taskHandle'
p3710
(lp3711
S'TaskHandle'
p3712
aNtp3713
(S'channel'
p3714
(lp3715
S'char'
p3716
a(lp3717
I-1
aaNtp3718
tp3719
tp3720
sS'DAQmxResetReadRelativeTo'
p3721
((lp3722
S'int32'
p3723
ag34
a((S'taskHandle'
p3724
(lp3725
S'TaskHandle'
p3726
aNtp3727
tp3728
tp3729
sS'DAQmxSetHshkStartCond'
p3730
((lp3731
S'int32'
p3732
ag34
a((S'taskHandle'
p3733
(lp3734
S'TaskHandle'
p3735
aNtp3736
(S'data'
p3737
(lp3738
S'int32'
p3739
aNtp3740
tp3741
tp3742
sS'DAQmxGetDIDigFltrMinPulseWidth'
p3743
((lp3744
S'int32'
p3745
ag34
a((S'taskHandle'
p3746
(lp3747
S'TaskHandle'
p3748
aNtp3749
(S'channel'
p3750
(lp3751
S'char'
p3752
a(lp3753
I-1
aaNtp3754
(S'data'
p3755
(lp3756
S'float64'
p3757
ag42
aNtp3758
tp3759
tp3760
sS'DAQmxResetChanDescr'
p3761
((lp3762
S'int32'
p3763
ag34
a((S'taskHandle'
p3764
(lp3765
S'TaskHandle'
p3766
aNtp3767
(S'channel'
p3768
(lp3769
S'char'
p3770
a(lp3771
I-1
aaNtp3772
tp3773
tp3774
sS'DAQmxGetAILVDTSensitivity'
p3775
((lp3776
S'int32'
p3777
ag34
a((S'taskHandle'
p3778
(lp3779
S'TaskHandle'
p3780
aNtp3781
(S'channel'
p3782
(lp3783
S'char'
p3784
a(lp3785
I-1
aaNtp3786
(S'data'
p3787
(lp3788
S'float64'
p3789
ag42
aNtp3790
tp3791
tp3792
sS'DAQmxCfgHandshakingTiming'
p3793
((lp3794
S'int32'
p3795
ag34
a((S'taskHandle'
p3796
(lp3797
S'TaskHandle'
p3798
aNtp3799
(S'sampleMode'
p3800
(lp3801
S'int32'
p3802
aNtp3803
(S'sampsPerChan'
p3804
(lp3805
S'uInt64'
p3806
aNtp3807
tp3808
tp3809
sS'DAQmxAdjust4339Cal'
p3810
((lp3811
S'int32'
p3812
ag34
a((S'calHandle'
p3813
(lp3814
S'CalHandle'
p3815
aNtp3816
(S'refVoltage'
p3817
(lp3818
S'float64'
p3819
aNtp3820
tp3821
tp3822
sS'DAQmxGetScaleType'
p3823
((lp3824
S'int32'
p3825
ag34
a((S'scaleName'
p3826
(lp3827
S'char'
p3828
a(lp3829
I-1
aaNtp3830
(S'data'
p3831
(lp3832
S'int32'
p3833
ag42
aNtp3834
tp3835
tp3836
sS'DAQmxCreateAICurrentRMSChan'
p3837
((lp3838
S'int32'
p3839
ag34
a((S'taskHandle'
p3840
(lp3841
S'TaskHandle'
p3842
aNtp3843
(S'physicalChannel'
p3844
(lp3845
S'char'
p3846
a(lp3847
I-1
aaNtp3848
(S'nameToAssignToChannel'
p3849
(lp3850
S'char'
p3851
a(lp3852
I-1
aaNtp3853
(S'terminalConfig'
p3854
(lp3855
S'int32'
p3856
aNtp3857
(S'minVal'
p3858
(lp3859
S'float64'
p3860
aNtp3861
(S'maxVal'
p3862
(lp3863
S'float64'
p3864
aNtp3865
(S'units'
p3866
(lp3867
S'int32'
p3868
aNtp3869
(S'shuntResistorLoc'
p3870
(lp3871
S'int32'
p3872
aNtp3873
(S'extShuntResistorVal'
p3874
(lp3875
S'float64'
p3876
aNtp3877
(S'customScaleName'
p3878
(lp3879
S'char'
p3880
a(lp3881
I-1
aaNtp3882
tp3883
tp3884
sS'DAQmxGetCICountEdgesTerm'
p3885
((lp3886
S'int32'
p3887
ag34
a((S'taskHandle'
p3888
(lp3889
S'TaskHandle'
p3890
aNtp3891
(S'channel'
p3892
(lp3893
S'char'
p3894
a(lp3895
I-1
aaNtp3896
(S'data'
p3897
(lp3898
S'char'
p3899
ag42
aNtp3900
(S'bufferSize'
p3901
(lp3902
S'uInt32'
p3903
aNtp3904
tp3905
tp3906
sS'DAQmxResetExportedRdyForXferEventDeassertCond'
p3907
((lp3908
S'int32'
p3909
ag34
a((S'taskHandle'
p3910
(lp3911
S'TaskHandle'
p3912
aNtp3913
tp3914
tp3915
sS'DAQmxAddGlobalChansToTask'
p3916
((lp3917
S'int32'
p3918
ag34
a((S'taskHandle'
p3919
(lp3920
S'TaskHandle'
p3921
aNtp3922
(S'channelNames'
p3923
(lp3924
S'char'
p3925
a(lp3926
I-1
aaNtp3927
tp3928
tp3929
sS'DAQmxGetAnlgEdgeStartTrigLvl'
p3930
((lp3931
S'int32'
p3932
ag34
a((S'taskHandle'
p3933
(lp3934
S'TaskHandle'
p3935
aNtp3936
(S'data'
p3937
(lp3938
S'float64'
p3939
ag42
aNtp3940
tp3941
tp3942
sS'DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc'
p3943
((lp3944
S'int32'
p3945
ag34
a((S'taskHandle'
p3946
(lp3947
S'TaskHandle'
p3948
aNtp3949
(S'data'
p3950
(lp3951
S'char'
p3952
ag42
aNtp3953
tp3954
tp3955
sS'DAQmxSetCIEncoderAInputDigFltrEnable'
p3956
((lp3957
S'int32'
p3958
ag34
a((S'taskHandle'
p3959
(lp3960
S'TaskHandle'
p3961
aNtp3962
(S'channel'
p3963
(lp3964
S'char'
p3965
a(lp3966
I-1
aaNtp3967
(S'data'
p3968
(lp3969
S'bool32'
p3970
aNtp3971
tp3972
tp3973
sS'DAQmxGetCIPulseWidthLogicLvlBehavior'
p3974
((lp3975
S'int32'
p3976
ag34
a((S'taskHandle'
p3977
(lp3978
S'TaskHandle'
p3979
aNtp3980
(S'channel'
p3981
(lp3982
S'char'
p3983
a(lp3984
I-1
aaNtp3985
(S'data'
p3986
(lp3987
S'int32'
p3988
ag42
aNtp3989
tp3990
tp3991
sS'DAQmxGetSwitchChanAttribute'
p3992
((lp3993
S'int32'
p3994
aS'__cdecl'
p3995
a((S'switchChannelName'
p3996
(lp3997
S'char'
p3998
a(lp3999
I-1
aaNtp4000
(S'attribute'
p4001
(lp4002
S'int32'
p4003
aNtp4004
(S'value'
p4005
(lp4006
S'void'
p4007
ag42
aNtp4008
tp4009
tp4010
sS'DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth'
p4011
((lp4012
S'int32'
p4013
ag34
a((S'taskHandle'
p4014
(lp4015
S'TaskHandle'
p4016
aNtp4017
(S'channel'
p4018
(lp4019
S'char'
p4020
a(lp4021
I-1
aaNtp4022
(S'data'
p4023
(lp4024
S'float64'
p4025
aNtp4026
tp4027
tp4028
sS'DAQmxSetAIBridgePolyForwardCoeff'
p4029
((lp4030
S'int32'
p4031
ag34
a((S'taskHandle'
p4032
(lp4033
S'TaskHandle'
p4034
aNtp4035
(S'channel'
p4036
(lp4037
S'char'
p4038
a(lp4039
I-1
aaNtp4040
(S'data'
p4041
(lp4042
S'float64'
p4043
ag42
aNtp4044
(S'arraySizeInElements'
p4045
(lp4046
S'uInt32'
p4047
aNtp4048
tp4049
tp4050
sS'DAQmxSetAIImpedance'
p4051
((lp4052
S'int32'
p4053
ag34
a((S'taskHandle'
p4054
(lp4055
S'TaskHandle'
p4056
aNtp4057
(S'channel'
p4058
(lp4059
S'char'
p4060
a(lp4061
I-1
aaNtp4062
(S'data'
p4063
(lp4064
S'float64'
p4065
aNtp4066
tp4067
tp4068
sS'DAQmxResetDOGenerateOn'
p4069
((lp4070
S'int32'
p4071
ag34
a((S'taskHandle'
p4072
(lp4073
S'TaskHandle'
p4074
aNtp4075
(S'channel'
p4076
(lp4077
S'char'
p4078
a(lp4079
I-1
aaNtp4080
tp4081
tp4082
sS'DAQmxGetCIFreqDigSyncEnable'
p4083
((lp4084
S'int32'
p4085
ag34
a((S'taskHandle'
p4086
(lp4087
S'TaskHandle'
p4088
aNtp4089
(S'channel'
p4090
(lp4091
S'char'
p4092
a(lp4093
I-1
aaNtp4094
(S'data'
p4095
(lp4096
S'bool32'
p4097
ag42
aNtp4098
tp4099
tp4100
sS'DAQmxWriteAnalogF64'
p4101
((lp4102
S'int32'
p4103
ag34
a((S'taskHandle'
p4104
(lp4105
S'TaskHandle'
p4106
aNtp4107
(S'numSampsPerChan'
p4108
(lp4109
S'int32'
p4110
aNtp4111
(S'autoStart'
p4112
(lp4113
S'bool32'
p4114
aNtp4115
(S'timeout'
p4116
(lp4117
S'float64'
p4118
aNtp4119
(S'dataLayout'
p4120
(lp4121
S'bool32'
p4122
aNtp4123
(S'writeArray'
p4124
(lp4125
S'float64'
p4126
a(lp4127
I-1
aaNtp4128
(S'sampsPerChanWritten'
p4129
(lp4130
S'int32'
p4131
ag42
aNtp4132
(S'reserved'
p4133
(lp4134
S'bool32'
p4135
ag42
aNtp4136
tp4137
tp4138
sS'DAQmxGetCICountEdgesCountDirTermCfg'
p4139
((lp4140
S'int32'
p4141
ag34
a((S'taskHandle'
p4142
(lp4143
S'TaskHandle'
p4144
aNtp4145
(S'channel'
p4146
(lp4147
S'char'
p4148
a(lp4149
I-1
aaNtp4150
(S'data'
p4151
(lp4152
S'int32'
p4153
ag42
aNtp4154
tp4155
tp4156
sS'DAQmxGetLoggingTDMSOperation'
p4157
((lp4158
S'int32'
p4159
ag34
a((S'taskHandle'
p4160
(lp4161
S'TaskHandle'
p4162
aNtp4163
(S'data'
p4164
(lp4165
S'int32'
p4166
ag42
aNtp4167
tp4168
tp4169
sS'DAQmxSetAIConvRate'
p4170
((lp4171
S'int32'
p4172
ag34
a((S'taskHandle'
p4173
(lp4174
S'TaskHandle'
p4175
aNtp4176
(S'data'
p4177
(lp4178
S'float64'
p4179
aNtp4180
tp4181
tp4182
sS'DAQmxResetAnlgWinRefTrigDigFltrTimebaseSrc'
p4183
((lp4184
S'int32'
p4185
ag34
a((S'taskHandle'
p4186
(lp4187
S'TaskHandle'
p4188
aNtp4189
tp4190
tp4191
sS'DAQmxSetDIDigFltrTimebaseRate'
p4192
((lp4193
S'int32'
p4194
ag34
a((S'taskHandle'
p4195
(lp4196
S'TaskHandle'
p4197
aNtp4198
(S'channel'
p4199
(lp4200
S'char'
p4201
a(lp4202
I-1
aaNtp4203
(S'data'
p4204
(lp4205
S'float64'
p4206
aNtp4207
tp4208
tp4209
sS'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate'
p4210
((lp4211
S'int32'
p4212
ag34
a((S'taskHandle'
p4213
(lp4214
S'TaskHandle'
p4215
aNtp4216
(S'channel'
p4217
(lp4218
S'char'
p4219
a(lp4220
I-1
aaNtp4221
tp4222
tp4223
sS'DAQmxGetDigPatternStartTrigPattern'
p4224
((lp4225
S'int32'
p4226
ag34
a((S'taskHandle'
p4227
(lp4228
S'TaskHandle'
p4229
aNtp4230
(S'data'
p4231
(lp4232
S'char'
p4233
ag42
aNtp4234
(S'bufferSize'
p4235
(lp4236
S'uInt32'
p4237
aNtp4238
tp4239
tp4240
sS'DAQmxResetCIDutyCycleTerm'
p4241
((lp4242
S'int32'
p4243
ag34
a((S'taskHandle'
p4244
(lp4245
S'TaskHandle'
p4246
aNtp4247
(S'channel'
p4248
(lp4249
S'char'
p4250
a(lp4251
I-1
aaNtp4252
tp4253
tp4254
sS'DAQmxSetCIPulseFreqDigFltrEnable'
p4255
((lp4256
S'int32'
p4257
ag34
a((S'taskHandle'
p4258
(lp4259
S'TaskHandle'
p4260
aNtp4261
(S'channel'
p4262
(lp4263
S'char'
p4264
a(lp4265
I-1
aaNtp4266
(S'data'
p4267
(lp4268
S'bool32'
p4269
aNtp4270
tp4271
tp4272
sS'DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate'
p4273
((lp4274
S'int32'
p4275
ag34
a((S'taskHandle'
p4276
(lp4277
S'TaskHandle'
p4278
aNtp4279
(S'channel'
p4280
(lp4281
S'char'
p4282
a(lp4283
I-1
aaNtp4284
(S'data'
p4285
(lp4286
S'float64'
p4287
ag42
aNtp4288
tp4289
tp4290
sS'DAQmxGetDevAOVoltageRngs'
p4291
((lp4292
S'int32'
p4293
ag34
a((S'device'
p4294
(lp4295
S'char'
p4296
a(lp4297
I-1
aaNtp4298
(S'data'
p4299
(lp4300
S'float64'
p4301
ag42
aNtp4302
(S'arraySizeInElements'
p4303
(lp4304
S'uInt32'
p4305
aNtp4306
tp4307
tp4308
sS'DAQmxResetAIConvDigFltrTimebaseSrc'
p4309
((lp4310
S'int32'
p4311
ag34
a((S'taskHandle'
p4312
(lp4313
S'TaskHandle'
p4314
aNtp4315
tp4316
tp4317
sS'DAQmxResetExportedRefTrigOutputTerm'
p4318
((lp4319
S'int32'
p4320
ag34
a((S'taskHandle'
p4321
(lp4322
S'TaskHandle'
p4323
aNtp4324
tp4325
tp4326
sS'DAQmxGetExportedSampClkOutputBehavior'
p4327
((lp4328
S'int32'
p4329
ag34
a((S'taskHandle'
p4330
(lp4331
S'TaskHandle'
p4332
aNtp4333
(S'data'
p4334
(lp4335
S'int32'
p4336
ag42
aNtp4337
tp4338
tp4339
sS'DAQmxResetRealTimeAttribute'
p4340
((lp4341
S'int32'
p4342
ag34
a((S'taskHandle'
p4343
(lp4344
S'TaskHandle'
p4345
aNtp4346
(S'attribute'
p4347
(lp4348
S'int32'
p4349
aNtp4350
tp4351
tp4352
sS'DAQmxResetCIPeriodDigFltrTimebaseRate'
p4353
((lp4354
S'int32'
p4355
ag34
a((S'taskHandle'
p4356
(lp4357
S'TaskHandle'
p4358
aNtp4359
(S'channel'
p4360
(lp4361
S'char'
p4362
a(lp4363
I-1
aaNtp4364
tp4365
tp4366
sS'DAQmxSetAIBridgeUnits'
p4367
((lp4368
S'int32'
p4369
ag34
a((S'taskHandle'
p4370
(lp4371
S'TaskHandle'
p4372
aNtp4373
(S'channel'
p4374
(lp4375
S'char'
p4376
a(lp4377
I-1
aaNtp4378
(S'data'
p4379
(lp4380
S'int32'
p4381
aNtp4382
tp4383
tp4384
sS'DAQmxSetCIPulseTicksTermCfg'
p4385
((lp4386
S'int32'
p4387
ag34
a((S'taskHandle'
p4388
(lp4389
S'TaskHandle'
p4390
aNtp4391
(S'channel'
p4392
(lp4393
S'char'
p4394
a(lp4395
I-1
aaNtp4396
(S'data'
p4397
(lp4398
S'int32'
p4399
aNtp4400
tp4401
tp4402
sS'DAQmxGetCIDutyCycleTermCfg'
p4403
((lp4404
S'int32'
p4405
ag34
a((S'taskHandle'
p4406
(lp4407
S'TaskHandle'
p4408
aNtp4409
(S'channel'
p4410
(lp4411
S'char'
p4412
a(lp4413
I-1
aaNtp4414
(S'data'
p4415
(lp4416
S'int32'
p4417
ag42
aNtp4418
tp4419
tp4420
sS'DAQmxSetCISemiPeriodDigFltrTimebaseSrc'
p4421
((lp4422
S'int32'
p4423
ag34
a((S'taskHandle'
p4424
(lp4425
S'TaskHandle'
p4426
aNtp4427
(S'channel'
p4428
(lp4429
S'char'
p4430
a(lp4431
I-1
aaNtp4432
(S'data'
p4433
(lp4434
S'char'
p4435
ag42
aNtp4436
tp4437
tp4438
sS'DAQmxResetDelayFromSampClkDelayUnits'
p4439
((lp4440
S'int32'
p4441
ag34
a((S'taskHandle'
p4442
(lp4443
S'TaskHandle'
p4444
aNtp4445
tp4446
tp4447
sS'DAQmxResetAOUsbXferReqSize'
p4448
((lp4449
S'int32'
p4450
ag34
a((S'taskHandle'
p4451
(lp4452
S'TaskHandle'
p4453
aNtp4454
(S'channel'
p4455
(lp4456
S'char'
p4457
a(lp4458
I-1
aaNtp4459
tp4460
tp4461
sS'DAQmxResetCIEncoderBInputDigFltrTimebaseRate'
p4462
((lp4463
S'int32'
p4464
ag34
a((S'taskHandle'
p4465
(lp4466
S'TaskHandle'
p4467
aNtp4468
(S'channel'
p4469
(lp4470
S'char'
p4471
a(lp4472
I-1
aaNtp4473
tp4474
tp4475
sS'DAQmxCreateCITwoEdgeSepChan'
p4476
((lp4477
S'int32'
p4478
ag34
a((S'taskHandle'
p4479
(lp4480
S'TaskHandle'
p4481
aNtp4482
(S'counter'
p4483
(lp4484
S'char'
p4485
a(lp4486
I-1
aaNtp4487
(S'nameToAssignToChannel'
p4488
(lp4489
S'char'
p4490
a(lp4491
I-1
aaNtp4492
(S'minVal'
p4493
(lp4494
S'float64'
p4495
aNtp4496
(S'maxVal'
p4497
(lp4498
S'float64'
p4499
aNtp4500
(S'units'
p4501
(lp4502
S'int32'
p4503
aNtp4504
(S'firstEdge'
p4505
(lp4506
S'int32'
p4507
aNtp4508
(S'secondEdge'
p4509
(lp4510
S'int32'
p4511
aNtp4512
(S'customScaleName'
p4513
(lp4514
S'char'
p4515
a(lp4516
I-1
aaNtp4517
tp4518
tp4519
sS'DAQmxResetCITwoEdgeSepSecondTermCfg'
p4520
((lp4521
S'int32'
p4522
ag34
a((S'taskHandle'
p4523
(lp4524
S'TaskHandle'
p4525
aNtp4526
(S'channel'
p4527
(lp4528
S'char'
p4529
a(lp4530
I-1
aaNtp4531
tp4532
tp4533
sS'DAQmxAdjust9220Cal'
p4534
((lp4535
S'int32'
p4536
ag34
a((S'calHandle'
p4537
(lp4538
S'CalHandle'
p4539
aNtp4540
(S'channelNames'
p4541
(lp4542
S'char'
p4543
a(lp4544
I-1
aaNtp4545
(S'value'
p4546
(lp4547
S'float64'
p4548
aNtp4549
tp4550
tp4551
sS'DAQmxResetHshkStartCond'
p4552
((lp4553
S'int32'
p4554
ag34
a((S'taskHandle'
p4555
(lp4556
S'TaskHandle'
p4557
aNtp4558
tp4559
tp4560
sS'DAQmxSetCITwoEdgeSepSecondTermCfg'
p4561
((lp4562
S'int32'
p4563
ag34
a((S'taskHandle'
p4564
(lp4565
S'TaskHandle'
p4566
aNtp4567
(S'channel'
p4568
(lp4569
S'char'
p4570
a(lp4571
I-1
aaNtp4572
(S'data'
p4573
(lp4574
S'int32'
p4575
aNtp4576
tp4577
tp4578
sS'DAQmxGetBufferAttribute'
p4579
((lp4580
S'int32'
p4581
ag3995
a((S'taskHandle'
p4582
(lp4583
S'TaskHandle'
p4584
aNtp4585
(S'attribute'
p4586
(lp4587
S'int32'
p4588
aNtp4589
(S'value'
p4590
(lp4591
S'void'
p4592
ag42
aNtp4593
tp4594
tp4595
sS'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p4596
((lp4597
S'int32'
p4598
ag34
a((S'taskHandle'
p4599
(lp4600
S'TaskHandle'
p4601
aNtp4602
(S'channel'
p4603
(lp4604
S'char'
p4605
a(lp4606
I-1
aaNtp4607
(S'data'
p4608
(lp4609
S'char'
p4610
ag42
aNtp4611
tp4612
tp4613
sS'DAQmxSetLoggingFileWriteSize'
p4614
((lp4615
S'int32'
p4616
ag34
a((S'taskHandle'
p4617
(lp4618
S'TaskHandle'
p4619
aNtp4620
(S'data'
p4621
(lp4622
S'uInt32'
p4623
aNtp4624
tp4625
tp4626
sS'DAQmxResetAnlgWinStartTrigSrc'
p4627
((lp4628
S'int32'
p4629
ag34
a((S'taskHandle'
p4630
(lp4631
S'TaskHandle'
p4632
aNtp4633
tp4634
tp4635
sS'DAQmxGetAIRosetteStrainGageOrientation'
p4636
((lp4637
S'int32'
p4638
ag34
a((S'taskHandle'
p4639
(lp4640
S'TaskHandle'
p4641
aNtp4642
(S'channel'
p4643
(lp4644
S'char'
p4645
a(lp4646
I-1
aaNtp4647
(S'data'
p4648
(lp4649
S'float64'
p4650
ag42
aNtp4651
tp4652
tp4653
sS'DAQmxResetAIResistanceCfg'
p4654
((lp4655
S'int32'
p4656
ag34
a((S'taskHandle'
p4657
(lp4658
S'TaskHandle'
p4659
aNtp4660
(S'channel'
p4661
(lp4662
S'char'
p4663
a(lp4664
I-1
aaNtp4665
tp4666
tp4667
sS'DAQmxESeriesCalAdjust'
p4668
((lp4669
S'int32'
p4670
ag34
a((S'calHandle'
p4671
(lp4672
S'CalHandle'
p4673
aNtp4674
(S'referenceVoltage'
p4675
(lp4676
S'float64'
p4677
aNtp4678
tp4679
tp4680
sS'DAQmxResetAIChanCalDesc'
p4681
((lp4682
S'int32'
p4683
ag34
a((S'taskHandle'
p4684
(lp4685
S'TaskHandle'
p4686
aNtp4687
(S'channel'
p4688
(lp4689
S'char'
p4690
a(lp4691
I-1
aaNtp4692
tp4693
tp4694
sS'DAQmxResetDigEdgeArmStartTrigDigSyncEnable'
p4695
((lp4696
S'int32'
p4697
ag34
a((S'taskHandle'
p4698
(lp4699
S'TaskHandle'
p4700
aNtp4701
tp4702
tp4703
sS'DAQmxResetCIEncoderDecodingType'
p4704
((lp4705
S'int32'
p4706
ag34
a((S'taskHandle'
p4707
(lp4708
S'TaskHandle'
p4709
aNtp4710
(S'channel'
p4711
(lp4712
S'char'
p4713
a(lp4714
I-1
aaNtp4715
tp4716
tp4717
sS'DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc'
p4718
((lp4719
S'int32'
p4720
ag34
a((S'taskHandle'
p4721
(lp4722
S'TaskHandle'
p4723
aNtp4724
(S'channel'
p4725
(lp4726
S'char'
p4727
a(lp4728
I-1
aaNtp4729
tp4730
tp4731
sS'DAQmxGetDigEdgeRefTrigDigFltrEnable'
p4732
((lp4733
S'int32'
p4734
ag34
a((S'taskHandle'
p4735
(lp4736
S'TaskHandle'
p4737
aNtp4738
(S'data'
p4739
(lp4740
S'bool32'
p4741
ag42
aNtp4742
tp4743
tp4744
sS'DAQmxSetSampClkActiveEdge'
p4745
((lp4746
S'int32'
p4747
ag34
a((S'taskHandle'
p4748
(lp4749
S'TaskHandle'
p4750
aNtp4751
(S'data'
p4752
(lp4753
S'int32'
p4754
aNtp4755
tp4756
tp4757
sS'DAQmxResetAnlgWinStartTrigDigSyncEnable'
p4758
((lp4759
S'int32'
p4760
ag34
a((S'taskHandle'
p4761
(lp4762
S'TaskHandle'
p4763
aNtp4764
tp4765
tp4766
sS'DAQmxResetCICtrTimebaseDigFltrMinPulseWidth'
p4767
((lp4768
S'int32'
p4769
ag34
a((S'taskHandle'
p4770
(lp4771
S'TaskHandle'
p4772
aNtp4773
(S'channel'
p4774
(lp4775
S'char'
p4776
a(lp4777
I-1
aaNtp4778
tp4779
tp4780
sS'DAQmxGetRealTimeConvLateErrorsToWarnings'
p4781
((lp4782
S'int32'
p4783
ag34
a((S'taskHandle'
p4784
(lp4785
S'TaskHandle'
p4786
aNtp4787
(S'data'
p4788
(lp4789
S'bool32'
p4790
ag42
aNtp4791
tp4792
tp4793
sS'DAQmxGetAOResolutionUnits'
p4794
((lp4795
S'int32'
p4796
ag34
a((S'taskHandle'
p4797
(lp4798
S'TaskHandle'
p4799
aNtp4800
(S'channel'
p4801
(lp4802
S'char'
p4803
a(lp4804
I-1
aaNtp4805
(S'data'
p4806
(lp4807
S'int32'
p4808
ag42
aNtp4809
tp4810
tp4811
sS'DAQmxSetCICtrTimebaseDigFltrTimebaseRate'
p4812
((lp4813
S'int32'
p4814
ag34
a((S'taskHandle'
p4815
(lp4816
S'TaskHandle'
p4817
aNtp4818
(S'channel'
p4819
(lp4820
S'char'
p4821
a(lp4822
I-1
aaNtp4823
(S'data'
p4824
(lp4825
S'float64'
p4826
aNtp4827
tp4828
tp4829
sS'DAQmxGetCIPeriodEnableAveraging'
p4830
((lp4831
S'int32'
p4832
ag34
a((S'taskHandle'
p4833
(lp4834
S'TaskHandle'
p4835
aNtp4836
(S'channel'
p4837
(lp4838
S'char'
p4839
a(lp4840
I-1
aaNtp4841
(S'data'
p4842
(lp4843
S'bool32'
p4844
ag42
aNtp4845
tp4846
tp4847
sS'DAQmxGetCIEncoderZInputTerm'
p4848
((lp4849
S'int32'
p4850
ag34
a((S'taskHandle'
p4851
(lp4852
S'TaskHandle'
p4853
aNtp4854
(S'channel'
p4855
(lp4856
S'char'
p4857
a(lp4858
I-1
aaNtp4859
(S'data'
p4860
(lp4861
S'char'
p4862
ag42
aNtp4863
(S'bufferSize'
p4864
(lp4865
S'uInt32'
p4866
aNtp4867
tp4868
tp4869
sS'DAQmxGetAnlgWinStartTrigDigSyncEnable'
p4870
((lp4871
S'int32'
p4872
ag34
a((S'taskHandle'
p4873
(lp4874
S'TaskHandle'
p4875
aNtp4876
(S'data'
p4877
(lp4878
S'bool32'
p4879
ag42
aNtp4880
tp4881
tp4882
sS'DAQmxSetCIFreqDiv'
p4883
((lp4884
S'int32'
p4885
ag34
a((S'taskHandle'
p4886
(lp4887
S'TaskHandle'
p4888
aNtp4889
(S'channel'
p4890
(lp4891
S'char'
p4892
a(lp4893
I-1
aaNtp4894
(S'data'
p4895
(lp4896
S'uInt32'
p4897
aNtp4898
tp4899
tp4900
sS'DAQmxGetReadOvertemperatureChans'
p4901
((lp4902
S'int32'
p4903
ag34
a((S'taskHandle'
p4904
(lp4905
S'TaskHandle'
p4906
aNtp4907
(S'data'
p4908
(lp4909
S'char'
p4910
ag42
aNtp4911
(S'bufferSize'
p4912
(lp4913
S'uInt32'
p4914
aNtp4915
tp4916
tp4917
sS'DAQmxResetAIBridgeShuntCalShuntCalBResistance'
p4918
((lp4919
S'int32'
p4920
ag34
a((S'taskHandle'
p4921
(lp4922
S'TaskHandle'
p4923
aNtp4924
(S'channel'
p4925
(lp4926
S'char'
p4927
a(lp4928
I-1
aaNtp4929
tp4930
tp4931
sS'DAQmxGetAIDigFltrBandpassWidth'
p4932
((lp4933
S'int32'
p4934
ag34
a((S'taskHandle'
p4935
(lp4936
S'TaskHandle'
p4937
aNtp4938
(S'channel'
p4939
(lp4940
S'char'
p4941
a(lp4942
I-1
aaNtp4943
(S'data'
p4944
(lp4945
S'float64'
p4946
ag42
aNtp4947
tp4948
tp4949
sS'DAQmxResetExportedHshkEventOutputTerm'
p4950
((lp4951
S'int32'
p4952
ag34
a((S'taskHandle'
p4953
(lp4954
S'TaskHandle'
p4955
aNtp4956
tp4957
tp4958
sS'DAQmxSetCIPulseFreqDigFltrTimebaseRate'
p4959
((lp4960
S'int32'
p4961
ag34
a((S'taskHandle'
p4962
(lp4963
S'TaskHandle'
p4964
aNtp4965
(S'channel'
p4966
(lp4967
S'char'
p4968
a(lp4969
I-1
aaNtp4970
(S'data'
p4971
(lp4972
S'float64'
p4973
aNtp4974
tp4975
tp4976
sS'DAQmxGetAOFilterDelayAdjustment'
p4977
((lp4978
S'int32'
p4979
ag34
a((S'taskHandle'
p4980
(lp4981
S'TaskHandle'
p4982
aNtp4983
(S'channel'
p4984
(lp4985
S'char'
p4986
a(lp4987
I-1
aaNtp4988
(S'data'
p4989
(lp4990
S'float64'
p4991
ag42
aNtp4992
tp4993
tp4994
sS'DAQmxGetCIFreqUnits'
p4995
((lp4996
S'int32'
p4997
ag34
a((S'taskHandle'
p4998
(lp4999
S'TaskHandle'
p5000
aNtp5001
(S'channel'
p5002
(lp5003
S'char'
p5004
a(lp5005
I-1
aaNtp5006
(S'data'
p5007
(lp5008
S'int32'
p5009
ag42
aNtp5010
tp5011
tp5012
sS'DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth'
p5013
((lp5014
S'int32'
p5015
ag34
a((S'taskHandle'
p5016
(lp5017
S'TaskHandle'
p5018
aNtp5019
(S'channel'
p5020
(lp5021
S'char'
p5022
a(lp5023
I-1
aaNtp5024
(S'data'
p5025
(lp5026
S'float64'
p5027
ag42
aNtp5028
tp5029
tp5030
sS'DAQmxGetDigPatternStartTrigSrc'
p5031
((lp5032
S'int32'
p5033
ag34
a((S'taskHandle'
p5034
(lp5035
S'TaskHandle'
p5036
aNtp5037
(S'data'
p5038
(lp5039
S'char'
p5040
ag42
aNtp5041
(S'bufferSize'
p5042
(lp5043
S'uInt32'
p5044
aNtp5045
tp5046
tp5047
sS'DAQmxGetSysNIDAQUpdateVersion'
p5048
((lp5049
S'int32'
p5050
ag34
a((S'data'
p5051
(lp5052
S'uInt32'
p5053
ag42
aNtp5054
tp5055
tp5056
sS'DAQmxGetSampClkTimebaseActiveEdge'
p5057
((lp5058
S'int32'
p5059
ag34
a((S'taskHandle'
p5060
(lp5061
S'TaskHandle'
p5062
aNtp5063
(S'data'
p5064
(lp5065
S'int32'
p5066
ag42
aNtp5067
tp5068
tp5069
sS'DAQmxSetAnlgEdgeStartTrigSlope'
p5070
((lp5071
S'int32'
p5072
ag34
a((S'taskHandle'
p5073
(lp5074
S'TaskHandle'
p5075
aNtp5076
(S'data'
p5077
(lp5078
S'int32'
p5079
aNtp5080
tp5081
tp5082
sS'DAQmxSetAnlgLvlPauseTrigDigFltrEnable'
p5083
((lp5084
S'int32'
p5085
ag34
a((S'taskHandle'
p5086
(lp5087
S'TaskHandle'
p5088
aNtp5089
(S'data'
p5090
(lp5091
S'bool32'
p5092
aNtp5093
tp5094
tp5095
sS'DAQmxGetDevProductType'
p5096
((lp5097
S'int32'
p5098
ag34
a((S'device'
p5099
(lp5100
S'char'
p5101
a(lp5102
I-1
aaNtp5103
(S'data'
p5104
(lp5105
S'char'
p5106
ag42
aNtp5107
(S'bufferSize'
p5108
(lp5109
S'uInt32'
p5110
aNtp5111
tp5112
tp5113
sS'DAQmxGetCIFreqEnableAveraging'
p5114
((lp5115
S'int32'
p5116
ag34
a((S'taskHandle'
p5117
(lp5118
S'TaskHandle'
p5119
aNtp5120
(S'channel'
p5121
(lp5122
S'char'
p5123
a(lp5124
I-1
aaNtp5125
(S'data'
p5126
(lp5127
S'bool32'
p5128
ag42
aNtp5129
tp5130
tp5131
sS'DAQmxSetAILeadWireResistance'
p5132
((lp5133
S'int32'
p5134
ag34
a((S'taskHandle'
p5135
(lp5136
S'TaskHandle'
p5137
aNtp5138
(S'channel'
p5139
(lp5140
S'char'
p5141
a(lp5142
I-1
aaNtp5143
(S'data'
p5144
(lp5145
S'float64'
p5146
aNtp5147
tp5148
tp5149
sS'DAQmxSetup1122Cal'
p5150
((lp5151
S'int32'
p5152
ag34
a((S'calHandle'
p5153
(lp5154
S'CalHandle'
p5155
aNtp5156
(S'channelName'
p5157
(lp5158
S'char'
p5159
a(lp5160
I-1
aaNtp5161
(S'gain'
p5162
(lp5163
S'float64'
p5164
aNtp5165
tp5166
tp5167
sS'DAQmxPerformStrainShuntCal'
p5168
((lp5169
S'int32'
p5170
ag34
a((S'taskHandle'
p5171
(lp5172
S'TaskHandle'
p5173
aNtp5174
(S'channel'
p5175
(lp5176
S'char'
p5177
a(lp5178
I-1
aaNtp5179
(S'shuntResistorValue'
p5180
(lp5181
S'float64'
p5182
aNtp5183
(S'shuntResistorLocation'
p5184
(lp5185
S'int32'
p5186
aNtp5187
(S'skipUnsupportedChannels'
p5188
(lp5189
S'bool32'
p5190
aNtp5191
tp5192
tp5193
sS'DAQmxGetPossibleSCExpressCalAccConnections'
p5194
((lp5195
S'int32'
p5196
ag34
a((S'deviceName'
p5197
(lp5198
S'char'
p5199
a(lp5200
I-1
aaNtp5201
(S'channelNames'
p5202
(lp5203
S'char'
p5204
a(lp5205
I-1
aaNtp5206
(S'connections'
p5207
(lp5208
S'char'
p5209
ag42
aNtp5210
(S'connectionsBufferSize'
p5211
(lp5212
S'uInt32'
p5213
aNtp5214
tp5215
tp5216
sS'DAQmxResetAIConvDigSyncEnableEx'
p5217
((lp5218
S'int32'
p5219
ag34
a((S'taskHandle'
p5220
(lp5221
S'TaskHandle'
p5222
aNtp5223
(S'deviceNames'
p5224
(lp5225
S'char'
p5226
a(lp5227
I-1
aaNtp5228
tp5229
tp5230
sS'DAQmxGetCIMeasType'
p5231
((lp5232
S'int32'
p5233
ag34
a((S'taskHandle'
p5234
(lp5235
S'TaskHandle'
p5236
aNtp5237
(S'channel'
p5238
(lp5239
S'char'
p5240
a(lp5241
I-1
aaNtp5242
(S'data'
p5243
(lp5244
S'int32'
p5245
ag42
aNtp5246
tp5247
tp5248
sS'DAQmxResetAnlgWinPauseTrigCoupling'
p5249
((lp5250
S'int32'
p5251
ag34
a((S'taskHandle'
p5252
(lp5253
S'TaskHandle'
p5254
aNtp5255
tp5256
tp5257
sS'DAQmxGetAISoundPressuredBRef'
p5258
((lp5259
S'int32'
p5260
ag34
a((S'taskHandle'
p5261
(lp5262
S'TaskHandle'
p5263
aNtp5264
(S'channel'
p5265
(lp5266
S'char'
p5267
a(lp5268
I-1
aaNtp5269
(S'data'
p5270
(lp5271
S'float64'
p5272
ag42
aNtp5273
tp5274
tp5275
sS'DAQmxAdjust9229Cal'
p5276
((lp5277
S'int32'
p5278
ag34
a((S'calHandle'
p5279
(lp5280
S'CalHandle'
p5281
aNtp5282
(S'channelNames'
p5283
(lp5284
S'char'
p5285
a(lp5286
I-1
aaNtp5287
(S'value'
p5288
(lp5289
S'float64'
p5290
aNtp5291
tp5292
tp5293
sS'DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal'
p5294
((lp5295
S'int32'
p5296
ag34
a((S'taskHandle'
p5297
(lp5298
S'TaskHandle'
p5299
aNtp5300
(S'channel'
p5301
(lp5302
S'char'
p5303
a(lp5304
I-1
aaNtp5305
tp5306
tp5307
sS'DAQmxSetCOPulseFreq'
p5308
((lp5309
S'int32'
p5310
ag34
a((S'taskHandle'
p5311
(lp5312
S'TaskHandle'
p5313
aNtp5314
(S'channel'
p5315
(lp5316
S'char'
p5317
a(lp5318
I-1
aaNtp5319
(S'data'
p5320
(lp5321
S'float64'
p5322
aNtp5323
tp5324
tp5325
sS'DAQmxSetCIPeriodLogicLvlBehavior'
p5326
((lp5327
S'int32'
p5328
ag34
a((S'taskHandle'
p5329
(lp5330
S'TaskHandle'
p5331
aNtp5332
(S'channel'
p5333
(lp5334
S'char'
p5335
a(lp5336
I-1
aaNtp5337
(S'data'
p5338
(lp5339
S'int32'
p5340
aNtp5341
tp5342
tp5343
sS'DAQmxResetExportedStartTrigOutputTerm'
p5344
((lp5345
S'int32'
p5346
ag34
a((S'taskHandle'
p5347
(lp5348
S'TaskHandle'
p5349
aNtp5350
tp5351
tp5352
sS'DAQmxResetAIThrmcplLeadOffsetVoltage'
p5353
((lp5354
S'int32'
p5355
ag34
a((S'taskHandle'
p5356
(lp5357
S'TaskHandle'
p5358
aNtp5359
(S'channel'
p5360
(lp5361
S'char'
p5362
a(lp5363
I-1
aaNtp5364
tp5365
tp5366
sS'DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate'
p5367
((lp5368
S'int32'
p5369
ag34
a((S'taskHandle'
p5370
(lp5371
S'TaskHandle'
p5372
aNtp5373
(S'channel'
p5374
(lp5375
S'char'
p5376
a(lp5377
I-1
aaNtp5378
(S'data'
p5379
(lp5380
S'float64'
p5381
ag42
aNtp5382
tp5383
tp5384
sS'DAQmxAdjust9263Cal'
p5385
((lp5386
S'int32'
p5387
ag34
a((S'calHandle'
p5388
(lp5389
S'CalHandle'
p5390
aNtp5391
(S'channelNames'
p5392
(lp5393
S'char'
p5394
a(lp5395
I-1
aaNtp5396
(S'value'
p5397
(lp5398
S'float64'
p5399
aNtp5400
tp5401
tp5402
sS'DAQmxResetRealTimeConvLateErrorsToWarnings'
p5403
((lp5404
S'int32'
p5405
ag34
a((S'taskHandle'
p5406
(lp5407
S'TaskHandle'
p5408
aNtp5409
tp5410
tp5411
sS'DAQmxResetCITwoEdgeSepUnits'
p5412
((lp5413
S'int32'
p5414
ag34
a((S'taskHandle'
p5415
(lp5416
S'TaskHandle'
p5417
aNtp5418
(S'channel'
p5419
(lp5420
S'char'
p5421
a(lp5422
I-1
aaNtp5423
tp5424
tp5425
sS'DAQmxGetCOPulseFreqUnits'
p5426
((lp5427
S'int32'
p5428
ag34
a((S'taskHandle'
p5429
(lp5430
S'TaskHandle'
p5431
aNtp5432
(S'channel'
p5433
(lp5434
S'char'
p5435
a(lp5436
I-1
aaNtp5437
(S'data'
p5438
(lp5439
S'int32'
p5440
ag42
aNtp5441
tp5442
tp5443
sS'DAQmxResetAnlgEdgeStartTrigSrc'
p5444
((lp5445
S'int32'
p5446
ag34
a((S'taskHandle'
p5447
(lp5448
S'TaskHandle'
p5449
aNtp5450
tp5451
tp5452
sS'DAQmxResetReadSleepTime'
p5453
((lp5454
S'int32'
p5455
ag34
a((S'taskHandle'
p5456
(lp5457
S'TaskHandle'
p5458
aNtp5459
tp5460
tp5461
sS'DAQmxGetCIPulseTimeTerm'
p5462
((lp5463
S'int32'
p5464
ag34
a((S'taskHandle'
p5465
(lp5466
S'TaskHandle'
p5467
aNtp5468
(S'channel'
p5469
(lp5470
S'char'
p5471
a(lp5472
I-1
aaNtp5473
(S'data'
p5474
(lp5475
S'char'
p5476
ag42
aNtp5477
(S'bufferSize'
p5478
(lp5479
S'uInt32'
p5480
aNtp5481
tp5482
tp5483
sS'DAQmxResetAIVoltagedBRef'
p5484
((lp5485
S'int32'
p5486
ag34
a((S'taskHandle'
p5487
(lp5488
S'TaskHandle'
p5489
aNtp5490
(S'channel'
p5491
(lp5492
S'char'
p5493
a(lp5494
I-1
aaNtp5495
tp5496
tp5497
sS'DAQmxGetAODataXferMech'
p5498
((lp5499
S'int32'
p5500
ag34
a((S'taskHandle'
p5501
(lp5502
S'TaskHandle'
p5503
aNtp5504
(S'channel'
p5505
(lp5506
S'char'
p5507
a(lp5508
I-1
aaNtp5509
(S'data'
p5510
(lp5511
S'int32'
p5512
ag42
aNtp5513
tp5514
tp5515
sS'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate'
p5516
((lp5517
S'int32'
p5518
ag34
a((S'taskHandle'
p5519
(lp5520
S'TaskHandle'
p5521
aNtp5522
tp5523
tp5524
sS'DAQmxAdjust9265Cal'
p5525
((lp5526
S'int32'
p5527
ag34
a((S'calHandle'
p5528
(lp5529
S'CalHandle'
p5530
aNtp5531
(S'channelNames'
p5532
(lp5533
S'char'
p5534
a(lp5535
I-1
aaNtp5536
(S'value'
p5537
(lp5538
S'float64'
p5539
aNtp5540
tp5541
tp5542
sS'DAQmxGetCIFreqDiv'
p5543
((lp5544
S'int32'
p5545
ag34
a((S'taskHandle'
p5546
(lp5547
S'TaskHandle'
p5548
aNtp5549
(S'channel'
p5550
(lp5551
S'char'
p5552
a(lp5553
I-1
aaNtp5554
(S'data'
p5555
(lp5556
S'uInt32'
p5557
ag42
aNtp5558
tp5559
tp5560
sS'DAQmxSetAIUsbXferReqSize'
p5561
((lp5562
S'int32'
p5563
ag34
a((S'taskHandle'
p5564
(lp5565
S'TaskHandle'
p5566
aNtp5567
(S'channel'
p5568
(lp5569
S'char'
p5570
a(lp5571
I-1
aaNtp5572
(S'data'
p5573
(lp5574
S'uInt32'
p5575
aNtp5576
tp5577
tp5578
sS'DAQmxSetScalePolyReverseCoeff'
p5579
((lp5580
S'int32'
p5581
ag34
a((S'scaleName'
p5582
(lp5583
S'char'
p5584
a(lp5585
I-1
aaNtp5586
(S'data'
p5587
(lp5588
S'float64'
p5589
ag42
aNtp5590
(S'arraySizeInElements'
p5591
(lp5592
S'uInt32'
p5593
aNtp5594
tp5595
tp5596
sS'DAQmxGetAnlgEdgeRefTrigHyst'
p5597
((lp5598
S'int32'
p5599
ag34
a((S'taskHandle'
p5600
(lp5601
S'TaskHandle'
p5602
aNtp5603
(S'data'
p5604
(lp5605
S'float64'
p5606
ag42
aNtp5607
tp5608
tp5609
sS'DAQmxResetDigEdgeWatchdogExpirTrigEdge'
p5610
((lp5611
S'int32'
p5612
ag34
a((S'taskHandle'
p5613
(lp5614
S'TaskHandle'
p5615
aNtp5616
tp5617
tp5618
sS'DAQmxCfgChangeDetectionTiming'
p5619
((lp5620
S'int32'
p5621
ag34
a((S'taskHandle'
p5622
(lp5623
S'TaskHandle'
p5624
aNtp5625
(S'risingEdgeChan'
p5626
(lp5627
S'char'
p5628
a(lp5629
I-1
aaNtp5630
(S'fallingEdgeChan'
p5631
(lp5632
S'char'
p5633
a(lp5634
I-1
aaNtp5635
(S'sampleMode'
p5636
(lp5637
S'int32'
p5638
aNtp5639
(S'sampsPerChan'
p5640
(lp5641
S'uInt64'
p5642
aNtp5643
tp5644
tp5645
sS'DAQmxGetCIEncoderZInputDigFltrTimebaseSrc'
p5646
((lp5647
S'int32'
p5648
ag34
a((S'taskHandle'
p5649
(lp5650
S'TaskHandle'
p5651
aNtp5652
(S'channel'
p5653
(lp5654
S'char'
p5655
a(lp5656
I-1
aaNtp5657
(S'data'
p5658
(lp5659
S'char'
p5660
ag42
aNtp5661
(S'bufferSize'
p5662
(lp5663
S'uInt32'
p5664
aNtp5665
tp5666
tp5667
sS'DAQmxGetDevTEDSHWTEDSSupported'
p5668
((lp5669
S'int32'
p5670
ag34
a((S'device'
p5671
(lp5672
S'char'
p5673
a(lp5674
I-1
aaNtp5675
(S'data'
p5676
(lp5677
S'bool32'
p5678
ag42
aNtp5679
tp5680
tp5681
sS'DAQmxResetDIDigFltrTimebaseSrc'
p5682
((lp5683
S'int32'
p5684
ag34
a((S'taskHandle'
p5685
(lp5686
S'TaskHandle'
p5687
aNtp5688
(S'channel'
p5689
(lp5690
S'char'
p5691
a(lp5692
I-1
aaNtp5693
tp5694
tp5695
sS'DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior'
p5696
((lp5697
S'int32'
p5698
ag34
a((S'taskHandle'
p5699
(lp5700
S'TaskHandle'
p5701
aNtp5702
(S'channel'
p5703
(lp5704
S'char'
p5705
a(lp5706
I-1
aaNtp5707
(S'data'
p5708
(lp5709
S'int32'
p5710
ag42
aNtp5711
tp5712
tp5713
sS'DAQmxResetDODataXferMech'
p5714
((lp5715
S'int32'
p5716
ag34
a((S'taskHandle'
p5717
(lp5718
S'TaskHandle'
p5719
aNtp5720
(S'channel'
p5721
(lp5722
S'char'
p5723
a(lp5724
I-1
aaNtp5725
tp5726
tp5727
sS'DAQmxGetExportedSampClkDelayOffset'
p5728
((lp5729
S'int32'
p5730
ag34
a((S'taskHandle'
p5731
(lp5732
S'TaskHandle'
p5733
aNtp5734
(S'data'
p5735
(lp5736
S'float64'
p5737
ag42
aNtp5738
tp5739
tp5740
sS'DAQmxGetAOVoltageCurrentLimit'
p5741
((lp5742
S'int32'
p5743
ag34
a((S'taskHandle'
p5744
(lp5745
S'TaskHandle'
p5746
aNtp5747
(S'channel'
p5748
(lp5749
S'char'
p5750
a(lp5751
I-1
aaNtp5752
(S'data'
p5753
(lp5754
S'float64'
p5755
ag42
aNtp5756
tp5757
tp5758
sS'DAQmxResetCOPulseTicksInitialDelay'
p5759
((lp5760
S'int32'
p5761
ag34
a((S'taskHandle'
p5762
(lp5763
S'TaskHandle'
p5764
aNtp5765
(S'channel'
p5766
(lp5767
S'char'
p5768
a(lp5769
I-1
aaNtp5770
tp5771
tp5772
sS'DAQmxGetCOUsbXferReqCount'
p5773
((lp5774
S'int32'
p5775
ag34
a((S'taskHandle'
p5776
(lp5777
S'TaskHandle'
p5778
aNtp5779
(S'channel'
p5780
(lp5781
S'char'
p5782
a(lp5783
I-1
aaNtp5784
(S'data'
p5785
(lp5786
S'uInt32'
p5787
ag42
aNtp5788
tp5789
tp5790
sS'DAQmxGetAnlgWinStartTrigDigFltrEnable'
p5791
((lp5792
S'int32'
p5793
ag34
a((S'taskHandle'
p5794
(lp5795
S'TaskHandle'
p5796
aNtp5797
(S'data'
p5798
(lp5799
S'bool32'
p5800
ag42
aNtp5801
tp5802
tp5803
sS'DAQmxSetCILinEncoderInitialPos'
p5804
((lp5805
S'int32'
p5806
ag34
a((S'taskHandle'
p5807
(lp5808
S'TaskHandle'
p5809
aNtp5810
(S'channel'
p5811
(lp5812
S'char'
p5813
a(lp5814
I-1
aaNtp5815
(S'data'
p5816
(lp5817
S'float64'
p5818
aNtp5819
tp5820
tp5821
sS'DAQmxSetCIPulseTimeUnits'
p5822
((lp5823
S'int32'
p5824
ag34
a((S'taskHandle'
p5825
(lp5826
S'TaskHandle'
p5827
aNtp5828
(S'channel'
p5829
(lp5830
S'char'
p5831
a(lp5832
I-1
aaNtp5833
(S'data'
p5834
(lp5835
S'int32'
p5836
aNtp5837
tp5838
tp5839
sS'DAQmxSwitchConnectMulti'
p5840
((lp5841
S'int32'
p5842
ag34
a((S'connectionList'
p5843
(lp5844
S'char'
p5845
a(lp5846
I-1
aaNtp5847
(S'waitForSettling'
p5848
(lp5849
S'bool32'
p5850
aNtp5851
tp5852
tp5853
sS'DAQmxGetSwitchDevNumRows'
p5854
((lp5855
S'int32'
p5856
ag34
a((S'deviceName'
p5857
(lp5858
S'char'
p5859
a(lp5860
I-1
aaNtp5861
(S'data'
p5862
(lp5863
S'uInt32'
p5864
ag42
aNtp5865
tp5866
tp5867
sS'DAQmxSetCalAccConnectionCount'
p5868
((lp5869
S'int32'
p5870
ag34
a((S'deviceName'
p5871
(lp5872
S'char'
p5873
a(lp5874
I-1
aaNtp5875
(S'data'
p5876
(lp5877
S'uInt32'
p5878
aNtp5879
tp5880
tp5881
sS'DAQmxCreateDIChan'
p5882
((lp5883
S'int32'
p5884
ag34
a((S'taskHandle'
p5885
(lp5886
S'TaskHandle'
p5887
aNtp5888
(S'lines'
p5889
(lp5890
S'char'
p5891
a(lp5892
I-1
aaNtp5893
(S'nameToAssignToLines'
p5894
(lp5895
S'char'
p5896
a(lp5897
I-1
aaNtp5898
(S'lineGrouping'
p5899
(lp5900
S'int32'
p5901
aNtp5902
tp5903
tp5904
sS'DAQmxGetAIBridgePhysicalUnits'
p5905
((lp5906
S'int32'
p5907
ag34
a((S'taskHandle'
p5908
(lp5909
S'TaskHandle'
p5910
aNtp5911
(S'channel'
p5912
(lp5913
S'char'
p5914
a(lp5915
I-1
aaNtp5916
(S'data'
p5917
(lp5918
S'int32'
p5919
ag42
aNtp5920
tp5921
tp5922
sS'DAQmxGetAIMeasType'
p5923
((lp5924
S'int32'
p5925
ag34
a((S'taskHandle'
p5926
(lp5927
S'TaskHandle'
p5928
aNtp5929
(S'channel'
p5930
(lp5931
S'char'
p5932
a(lp5933
I-1
aaNtp5934
(S'data'
p5935
(lp5936
S'int32'
p5937
ag42
aNtp5938
tp5939
tp5940
sS'DAQmxGetReadTotalSampPerChanAcquired'
p5941
((lp5942
S'int32'
p5943
ag34
a((S'taskHandle'
p5944
(lp5945
S'TaskHandle'
p5946
aNtp5947
(S'data'
p5948
(lp5949
S'uInt64'
p5950
ag42
aNtp5951
tp5952
tp5953
sS'DAQmxSetCIPulseTicksLogicLvlBehavior'
p5954
((lp5955
S'int32'
p5956
ag34
a((S'taskHandle'
p5957
(lp5958
S'TaskHandle'
p5959
aNtp5960
(S'channel'
p5961
(lp5962
S'char'
p5963
a(lp5964
I-1
aaNtp5965
(S'data'
p5966
(lp5967
S'int32'
p5968
aNtp5969
tp5970
tp5971
sS'DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc'
p5972
((lp5973
S'int32'
p5974
ag34
a((S'taskHandle'
p5975
(lp5976
S'TaskHandle'
p5977
aNtp5978
(S'data'
p5979
(lp5980
S'char'
p5981
ag42
aNtp5982
tp5983
tp5984
sS'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate'
p5985
((lp5986
S'int32'
p5987
ag34
a((S'taskHandle'
p5988
(lp5989
S'TaskHandle'
p5990
aNtp5991
(S'channel'
p5992
(lp5993
S'char'
p5994
a(lp5995
I-1
aaNtp5996
(S'data'
p5997
(lp5998
S'float64'
p5999
ag42
aNtp6000
tp6001
tp6002
sS'DAQmxSetCIEncoderAInputDigSyncEnable'
p6003
((lp6004
S'int32'
p6005
ag34
a((S'taskHandle'
p6006
(lp6007
S'TaskHandle'
p6008
aNtp6009
(S'channel'
p6010
(lp6011
S'char'
p6012
a(lp6013
I-1
aaNtp6014
(S'data'
p6015
(lp6016
S'bool32'
p6017
aNtp6018
tp6019
tp6020
sS'DAQmxGetAIThrmstrR1'
p6021
((lp6022
S'int32'
p6023
ag34
a((S'taskHandle'
p6024
(lp6025
S'TaskHandle'
p6026
aNtp6027
(S'channel'
p6028
(lp6029
S'char'
p6030
a(lp6031
I-1
aaNtp6032
(S'data'
p6033
(lp6034
S'float64'
p6035
ag42
aNtp6036
tp6037
tp6038
sS'DAQmxResetAnlgEdgeRefTrigSlope'
p6039
((lp6040
S'int32'
p6041
ag34
a((S'taskHandle'
p6042
(lp6043
S'TaskHandle'
p6044
aNtp6045
tp6046
tp6047
sS'DAQmxResetLoggingSampsPerFile'
p6048
((lp6049
S'int32'
p6050
ag34
a((S'taskHandle'
p6051
(lp6052
S'TaskHandle'
p6053
aNtp6054
tp6055
tp6056
sS'DAQmxSetAnlgEdgeStartTrigHyst'
p6057
((lp6058
S'int32'
p6059
ag34
a((S'taskHandle'
p6060
(lp6061
S'TaskHandle'
p6062
aNtp6063
(S'data'
p6064
(lp6065
S'float64'
p6066
aNtp6067
tp6068
tp6069
sS'DAQmxResetAIBridgeShuntCalEnable'
p6070
((lp6071
S'int32'
p6072
ag34
a((S'taskHandle'
p6073
(lp6074
S'TaskHandle'
p6075
aNtp6076
(S'channel'
p6077
(lp6078
S'char'
p6079
a(lp6080
I-1
aaNtp6081
tp6082
tp6083
sS'DAQmxSetCISemiPeriodDigFltrMinPulseWidth'
p6084
((lp6085
S'int32'
p6086
ag34
a((S'taskHandle'
p6087
(lp6088
S'TaskHandle'
p6089
aNtp6090
(S'channel'
p6091
(lp6092
S'char'
p6093
a(lp6094
I-1
aaNtp6095
(S'data'
p6096
(lp6097
S'float64'
p6098
aNtp6099
tp6100
tp6101
sS'DAQmxGetCOPulseTimeInitialDelay'
p6102
((lp6103
S'int32'
p6104
ag34
a((S'taskHandle'
p6105
(lp6106
S'TaskHandle'
p6107
aNtp6108
(S'channel'
p6109
(lp6110
S'char'
p6111
a(lp6112
I-1
aaNtp6113
(S'data'
p6114
(lp6115
S'float64'
p6116
ag42
aNtp6117
tp6118
tp6119
sS'DAQmxResetLoggingFileWriteSize'
p6120
((lp6121
S'int32'
p6122
ag34
a((S'taskHandle'
p6123
(lp6124
S'TaskHandle'
p6125
aNtp6126
tp6127
tp6128
sS'DAQmxResetChangeDetectDIFallingEdgePhysicalChans'
p6129
((lp6130
S'int32'
p6131
ag34
a((S'taskHandle'
p6132
(lp6133
S'TaskHandle'
p6134
aNtp6135
tp6136
tp6137
sS'DAQmxWriteCtrTicksScalar'
p6138
((lp6139
S'int32'
p6140
ag34
a((S'taskHandle'
p6141
(lp6142
S'TaskHandle'
p6143
aNtp6144
(S'autoStart'
p6145
(lp6146
S'bool32'
p6147
aNtp6148
(S'timeout'
p6149
(lp6150
S'float64'
p6151
aNtp6152
(S'highTicks'
p6153
(lp6154
S'uInt32'
p6155
aNtp6156
(S'lowTicks'
p6157
(lp6158
S'uInt32'
p6159
aNtp6160
(S'reserved'
p6161
(lp6162
S'bool32'
p6163
ag42
aNtp6164
tp6165
tp6166
sS'DAQmxResetAnlgWinPauseTrigDigFltrTimebaseRate'
p6167
((lp6168
S'int32'
p6169
ag34
a((S'taskHandle'
p6170
(lp6171
S'TaskHandle'
p6172
aNtp6173
tp6174
tp6175
sS'DAQmxResetCIPulseFreqTermCfg'
p6176
((lp6177
S'int32'
p6178
ag34
a((S'taskHandle'
p6179
(lp6180
S'TaskHandle'
p6181
aNtp6182
(S'channel'
p6183
(lp6184
S'char'
p6185
a(lp6186
I-1
aaNtp6187
tp6188
tp6189
sS'DAQmxAdjust9230Cal'
p6190
((lp6191
S'int32'
p6192
ag34
a((S'calHandle'
p6193
(lp6194
S'CalHandle'
p6195
aNtp6196
(S'channelNames'
p6197
(lp6198
S'char'
p6199
a(lp6200
I-1
aaNtp6201
(S'value'
p6202
(lp6203
S'float64'
p6204
aNtp6205
tp6206
tp6207
sS'DAQmxGetAIACExcitSyncEnable'
p6208
((lp6209
S'int32'
p6210
ag34
a((S'taskHandle'
p6211
(lp6212
S'TaskHandle'
p6213
aNtp6214
(S'channel'
p6215
(lp6216
S'char'
p6217
a(lp6218
I-1
aaNtp6219
(S'data'
p6220
(lp6221
S'bool32'
p6222
ag42
aNtp6223
tp6224
tp6225
sS'DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc'
p6226
((lp6227
S'int32'
p6228
ag34
a((S'taskHandle'
p6229
(lp6230
S'TaskHandle'
p6231
aNtp6232
(S'channel'
p6233
(lp6234
S'char'
p6235
a(lp6236
I-1
aaNtp6237
(S'data'
p6238
(lp6239
S'char'
p6240
ag42
aNtp6241
tp6242
tp6243
sS'DAQmxResetRealTimeWaitForNextSampClkWaitMode'
p6244
((lp6245
S'int32'
p6246
ag34
a((S'taskHandle'
p6247
(lp6248
S'TaskHandle'
p6249
aNtp6250
tp6251
tp6252
sS'DAQmxGetAIAccelUnits'
p6253
((lp6254
S'int32'
p6255
ag34
a((S'taskHandle'
p6256
(lp6257
S'TaskHandle'
p6258
aNtp6259
(S'channel'
p6260
(lp6261
S'char'
p6262
a(lp6263
I-1
aaNtp6264
(S'data'
p6265
(lp6266
S'int32'
p6267
ag42
aNtp6268
tp6269
tp6270
sS'DAQmxSetDigLvlPauseTrigSrc'
p6271
((lp6272
S'int32'
p6273
ag34
a((S'taskHandle'
p6274
(lp6275
S'TaskHandle'
p6276
aNtp6277
(S'data'
p6278
(lp6279
S'char'
p6280
ag42
aNtp6281
tp6282
tp6283
sS'DAQmxGetAICurrentShuntResistance'
p6284
((lp6285
S'int32'
p6286
ag34
a((S'taskHandle'
p6287
(lp6288
S'TaskHandle'
p6289
aNtp6290
(S'channel'
p6291
(lp6292
S'char'
p6293
a(lp6294
I-1
aaNtp6295
(S'data'
p6296
(lp6297
S'float64'
p6298
ag42
aNtp6299
tp6300
tp6301
sS'DAQmxGetDevAIMinRate'
p6302
((lp6303
S'int32'
p6304
ag34
a((S'device'
p6305
(lp6306
S'char'
p6307
a(lp6308
I-1
aaNtp6309
(S'data'
p6310
(lp6311
S'float64'
p6312
ag42
aNtp6313
tp6314
tp6315
sS'DAQmxSetAIBridgeBalanceCoarsePot'
p6316
((lp6317
S'int32'
p6318
ag34
a((S'taskHandle'
p6319
(lp6320
S'TaskHandle'
p6321
aNtp6322
(S'channel'
p6323
(lp6324
S'char'
p6325
a(lp6326
I-1
aaNtp6327
(S'data'
p6328
(lp6329
S'int32'
p6330
aNtp6331
tp6332
tp6333
sS'DAQmxResetAIConvTimebaseSrc'
p6334
((lp6335
S'int32'
p6336
ag34
a((S'taskHandle'
p6337
(lp6338
S'TaskHandle'
p6339
aNtp6340
tp6341
tp6342
sS'DAQmxSetCISampClkOverrunBehavior'
p6343
((lp6344
S'int32'
p6345
ag34
a((S'taskHandle'
p6346
(lp6347
S'TaskHandle'
p6348
aNtp6349
(S'channel'
p6350
(lp6351
S'char'
p6352
a(lp6353
I-1
aaNtp6354
(S'data'
p6355
(lp6356
S'int32'
p6357
aNtp6358
tp6359
tp6360
sS'DAQmxGetPhysicalChanDIChangeDetectSupported'
p6361
((lp6362
S'int32'
p6363
ag34
a((S'physicalChannel'
p6364
(lp6365
S'char'
p6366
a(lp6367
I-1
aaNtp6368
(S'data'
p6369
(lp6370
S'bool32'
p6371
ag42
aNtp6372
tp6373
tp6374
sS'DAQmxGetChanType'
p6375
((lp6376
S'int32'
p6377
ag34
a((S'taskHandle'
p6378
(lp6379
S'TaskHandle'
p6380
aNtp6381
(S'channel'
p6382
(lp6383
S'char'
p6384
a(lp6385
I-1
aaNtp6386
(S'data'
p6387
(lp6388
S'int32'
p6389
ag42
aNtp6390
tp6391
tp6392
sS'DAQmxResetCIPulseFreqTerm'
p6393
((lp6394
S'int32'
p6395
ag34
a((S'taskHandle'
p6396
(lp6397
S'TaskHandle'
p6398
aNtp6399
(S'channel'
p6400
(lp6401
S'char'
p6402
a(lp6403
I-1
aaNtp6404
tp6405
tp6406
sS'DAQmxResetCICountEdgesCountDirDigFltrEnable'
p6407
((lp6408
S'int32'
p6409
ag34
a((S'taskHandle'
p6410
(lp6411
S'TaskHandle'
p6412
aNtp6413
(S'channel'
p6414
(lp6415
S'char'
p6416
a(lp6417
I-1
aaNtp6418
tp6419
tp6420
sS'DAQmxResetAIVoltageUnits'
p6421
((lp6422
S'int32'
p6423
ag34
a((S'taskHandle'
p6424
(lp6425
S'TaskHandle'
p6426
aNtp6427
(S'channel'
p6428
(lp6429
S'char'
p6430
a(lp6431
I-1
aaNtp6432
tp6433
tp6434
sS'DAQmxResetAIBridgeBalanceCoarsePot'
p6435
((lp6436
S'int32'
p6437
ag34
a((S'taskHandle'
p6438
(lp6439
S'TaskHandle'
p6440
aNtp6441
(S'channel'
p6442
(lp6443
S'char'
p6444
a(lp6445
I-1
aaNtp6446
tp6447
tp6448
sS'DAQmxSetExportedHshkEventOutputTerm'
p6449
((lp6450
S'int32'
p6451
ag34
a((S'taskHandle'
p6452
(lp6453
S'TaskHandle'
p6454
aNtp6455
(S'data'
p6456
(lp6457
S'char'
p6458
ag42
aNtp6459
tp6460
tp6461
sS'DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth'
p6462
((lp6463
S'int32'
p6464
ag34
a((S'taskHandle'
p6465
(lp6466
S'TaskHandle'
p6467
aNtp6468
(S'channel'
p6469
(lp6470
S'char'
p6471
a(lp6472
I-1
aaNtp6473
(S'data'
p6474
(lp6475
S'float64'
p6476
aNtp6477
tp6478
tp6479
sS'DAQmxSetAOMemMapEnable'
p6480
((lp6481
S'int32'
p6482
ag34
a((S'taskHandle'
p6483
(lp6484
S'TaskHandle'
p6485
aNtp6486
(S'channel'
p6487
(lp6488
S'char'
p6489
a(lp6490
I-1
aaNtp6491
(S'data'
p6492
(lp6493
S'bool32'
p6494
aNtp6495
tp6496
tp6497
sS'DAQmxResetAnlgWinPauseTrigDigFltrTimebaseSrc'
p6498
((lp6499
S'int32'
p6500
ag34
a((S'taskHandle'
p6501
(lp6502
S'TaskHandle'
p6503
aNtp6504
tp6505
tp6506
sS'DAQmxGetAnlgEdgeStartTrigSrc'
p6507
((lp6508
S'int32'
p6509
ag34
a((S'taskHandle'
p6510
(lp6511
S'TaskHandle'
p6512
aNtp6513
(S'data'
p6514
(lp6515
S'char'
p6516
ag42
aNtp6517
(S'bufferSize'
p6518
(lp6519
S'uInt32'
p6520
aNtp6521
tp6522
tp6523
sS'DAQmxGetWatchdogExpirTrigType'
p6524
((lp6525
S'int32'
p6526
ag34
a((S'taskHandle'
p6527
(lp6528
S'TaskHandle'
p6529
aNtp6530
(S'data'
p6531
(lp6532
S'int32'
p6533
ag42
aNtp6534
tp6535
tp6536
sS'DAQmxSetAnlgWinPauseTrigCoupling'
p6537
((lp6538
S'int32'
p6539
ag34
a((S'taskHandle'
p6540
(lp6541
S'TaskHandle'
p6542
aNtp6543
(S'data'
p6544
(lp6545
S'int32'
p6546
aNtp6547
tp6548
tp6549
sS'DAQmxSetAIDigFltrEnable'
p6550
((lp6551
S'int32'
p6552
ag34
a((S'taskHandle'
p6553
(lp6554
S'TaskHandle'
p6555
aNtp6556
(S'channel'
p6557
(lp6558
S'char'
p6559
a(lp6560
I-1
aaNtp6561
(S'data'
p6562
(lp6563
S'bool32'
p6564
aNtp6565
tp6566
tp6567
sS'DAQmxSetCIPulseTicksDigFltrTimebaseSrc'
p6568
((lp6569
S'int32'
p6570
ag34
a((S'taskHandle'
p6571
(lp6572
S'TaskHandle'
p6573
aNtp6574
(S'channel'
p6575
(lp6576
S'char'
p6577
a(lp6578
I-1
aaNtp6579
(S'data'
p6580
(lp6581
S'char'
p6582
ag42
aNtp6583
tp6584
tp6585
sS'DAQmxAdjust9242Cal'
p6586
((lp6587
S'int32'
p6588
ag34
a((S'calHandle'
p6589
(lp6590
S'CalHandle'
p6591
aNtp6592
(S'channelNames'
p6593
(lp6594
S'char'
p6595
a(lp6596
I-1
aaNtp6597
(S'value'
p6598
(lp6599
S'float64'
p6600
aNtp6601
tp6602
tp6603
sS'DAQmxGetCITwoEdgeSepFirstEdge'
p6604
((lp6605
S'int32'
p6606
ag34
a((S'taskHandle'
p6607
(lp6608
S'TaskHandle'
p6609
aNtp6610
(S'channel'
p6611
(lp6612
S'char'
p6613
a(lp6614
I-1
aaNtp6615
(S'data'
p6616
(lp6617
S'int32'
p6618
ag42
aNtp6619
tp6620
tp6621
sS'DAQmxResetAOLoadImpedance'
p6622
((lp6623
S'int32'
p6624
ag34
a((S'taskHandle'
p6625
(lp6626
S'TaskHandle'
p6627
aNtp6628
(S'channel'
p6629
(lp6630
S'char'
p6631
a(lp6632
I-1
aaNtp6633
tp6634
tp6635
sS'DAQmxGetAIVoltagedBRef'
p6636
((lp6637
S'int32'
p6638
ag34
a((S'taskHandle'
p6639
(lp6640
S'TaskHandle'
p6641
aNtp6642
(S'channel'
p6643
(lp6644
S'char'
p6645
a(lp6646
I-1
aaNtp6647
(S'data'
p6648
(lp6649
S'float64'
p6650
ag42
aNtp6651
tp6652
tp6653
sS'DAQmxGetExportedAIConvClkPulsePolarity'
p6654
((lp6655
S'int32'
p6656
ag34
a((S'taskHandle'
p6657
(lp6658
S'TaskHandle'
p6659
aNtp6660
(S'data'
p6661
(lp6662
S'int32'
p6663
ag42
aNtp6664
tp6665
tp6666
sS'DAQmxCreateCIGPSTimestampChan'
p6667
((lp6668
S'int32'
p6669
ag34
a((S'taskHandle'
p6670
(lp6671
S'TaskHandle'
p6672
aNtp6673
(S'counter'
p6674
(lp6675
S'char'
p6676
a(lp6677
I-1
aaNtp6678
(S'nameToAssignToChannel'
p6679
(lp6680
S'char'
p6681
a(lp6682
I-1
aaNtp6683
(S'units'
p6684
(lp6685
S'int32'
p6686
aNtp6687
(S'syncMethod'
p6688
(lp6689
S'int32'
p6690
aNtp6691
(S'customScaleName'
p6692
(lp6693
S'char'
p6694
a(lp6695
I-1
aaNtp6696
tp6697
tp6698
sS'DAQmxSetAIExcitUseMultiplexed'
p6699
((lp6700
S'int32'
p6701
ag34
a((S'taskHandle'
p6702
(lp6703
S'TaskHandle'
p6704
aNtp6705
(S'channel'
p6706
(lp6707
S'char'
p6708
a(lp6709
I-1
aaNtp6710
(S'data'
p6711
(lp6712
S'bool32'
p6713
aNtp6714
tp6715
tp6716
sS'DAQmxCreateTEDSAIPosLVDTChan'
p6717
((lp6718
S'int32'
p6719
ag34
a((S'taskHandle'
p6720
(lp6721
S'TaskHandle'
p6722
aNtp6723
(S'physicalChannel'
p6724
(lp6725
S'char'
p6726
a(lp6727
I-1
aaNtp6728
(S'nameToAssignToChannel'
p6729
(lp6730
S'char'
p6731
a(lp6732
I-1
aaNtp6733
(S'minVal'
p6734
(lp6735
S'float64'
p6736
aNtp6737
(S'maxVal'
p6738
(lp6739
S'float64'
p6740
aNtp6741
(S'units'
p6742
(lp6743
S'int32'
p6744
aNtp6745
(S'voltageExcitSource'
p6746
(lp6747
S'int32'
p6748
aNtp6749
(S'voltageExcitVal'
p6750
(lp6751
S'float64'
p6752
aNtp6753
(S'voltageExcitFreq'
p6754
(lp6755
S'float64'
p6756
aNtp6757
(S'ACExcitWireMode'
p6758
(lp6759
S'int32'
p6760
aNtp6761
(S'customScaleName'
p6762
(lp6763
S'char'
p6764
a(lp6765
I-1
aaNtp6766
tp6767
tp6768
sS'DAQmxGetAIForceReadFromChan'
p6769
((lp6770
S'int32'
p6771
ag34
a((S'taskHandle'
p6772
(lp6773
S'TaskHandle'
p6774
aNtp6775
(S'channel'
p6776
(lp6777
S'char'
p6778
a(lp6779
I-1
aaNtp6780
(S'data'
p6781
(lp6782
S'bool32'
p6783
ag42
aNtp6784
tp6785
tp6786
sS'DAQmxGetCICtrTimebaseDigFltrTimebaseRate'
p6787
((lp6788
S'int32'
p6789
ag34
a((S'taskHandle'
p6790
(lp6791
S'TaskHandle'
p6792
aNtp6793
(S'channel'
p6794
(lp6795
S'char'
p6796
a(lp6797
I-1
aaNtp6798
(S'data'
p6799
(lp6800
S'float64'
p6801
ag42
aNtp6802
tp6803
tp6804
sS'DAQmxSetAIChanCalVerifRefVals'
p6805
((lp6806
S'int32'
p6807
ag34
a((S'taskHandle'
p6808
(lp6809
S'TaskHandle'
p6810
aNtp6811
(S'channel'
p6812
(lp6813
S'char'
p6814
a(lp6815
I-1
aaNtp6816
(S'data'
p6817
(lp6818
S'float64'
p6819
ag42
aNtp6820
(S'arraySizeInElements'
p6821
(lp6822
S'uInt32'
p6823
aNtp6824
tp6825
tp6826
sS'DAQmxSetCIPulseTimeTerm'
p6827
((lp6828
S'int32'
p6829
ag34
a((S'taskHandle'
p6830
(lp6831
S'TaskHandle'
p6832
aNtp6833
(S'channel'
p6834
(lp6835
S'char'
p6836
a(lp6837
I-1
aaNtp6838
(S'data'
p6839
(lp6840
S'char'
p6841
ag42
aNtp6842
tp6843
tp6844
sS'DAQmxRemoveCDAQSyncConnection'
p6845
((lp6846
S'int32'
p6847
ag34
a((S'portList'
p6848
(lp6849
S'char'
p6850
a(lp6851
I-1
aaNtp6852
tp6853
tp6854
sS'DAQmxResetHshkTrigType'
p6855
((lp6856
S'int32'
p6857
ag34
a((S'taskHandle'
p6858
(lp6859
S'TaskHandle'
p6860
aNtp6861
tp6862
tp6863
sS'DAQmxResetDOOvercurrentReenablePeriod'
p6864
((lp6865
S'int32'
p6866
ag34
a((S'taskHandle'
p6867
(lp6868
S'TaskHandle'
p6869
aNtp6870
(S'channel'
p6871
(lp6872
S'char'
p6873
a(lp6874
I-1
aaNtp6875
tp6876
tp6877
sS'DAQmxResetCIFreqTerm'
p6878
((lp6879
S'int32'
p6880
ag34
a((S'taskHandle'
p6881
(lp6882
S'TaskHandle'
p6883
aNtp6884
(S'channel'
p6885
(lp6886
S'char'
p6887
a(lp6888
I-1
aaNtp6889
tp6890
tp6891
sS'DAQmxGet4339CalAdjustPoints'
p6892
((lp6893
S'int32'
p6894
ag34
a((S'calHandle'
p6895
(lp6896
S'CalHandle'
p6897
aNtp6898
(S'adjustmentPoints'
p6899
(lp6900
S'float64'
p6901
ag42
aNtp6902
(S'bufferSize'
p6903
(lp6904
S'uInt32'
p6905
aNtp6906
tp6907
tp6908
sS'DAQmxSetWriteOffset'
p6909
((lp6910
S'int32'
p6911
ag34
a((S'taskHandle'
p6912
(lp6913
S'TaskHandle'
p6914
aNtp6915
(S'data'
p6916
(lp6917
S'int32'
p6918
aNtp6919
tp6920
tp6921
sS'DAQmxGet9229CalAdjustPoints'
p6922
((lp6923
S'int32'
p6924
ag34
a((S'calHandle'
p6925
(lp6926
S'CalHandle'
p6927
aNtp6928
(S'adjustmentPoints'
p6929
(lp6930
S'float64'
p6931
ag42
aNtp6932
(S'bufferSize'
p6933
(lp6934
S'uInt32'
p6935
aNtp6936
tp6937
tp6938
sS'DAQmxCreateCIAngEncoderChan'
p6939
((lp6940
S'int32'
p6941
ag34
a((S'taskHandle'
p6942
(lp6943
S'TaskHandle'
p6944
aNtp6945
(S'counter'
p6946
(lp6947
S'char'
p6948
a(lp6949
I-1
aaNtp6950
(S'nameToAssignToChannel'
p6951
(lp6952
S'char'
p6953
a(lp6954
I-1
aaNtp6955
(S'decodingType'
p6956
(lp6957
S'int32'
p6958
aNtp6959
(S'ZidxEnable'
p6960
(lp6961
S'bool32'
p6962
aNtp6963
(S'ZidxVal'
p6964
(lp6965
S'float64'
p6966
aNtp6967
(S'ZidxPhase'
p6968
(lp6969
S'int32'
p6970
aNtp6971
(S'units'
p6972
(lp6973
S'int32'
p6974
aNtp6975
(S'pulsesPerRev'
p6976
(lp6977
S'uInt32'
p6978
aNtp6979
(S'initialAngle'
p6980
(lp6981
S'float64'
p6982
aNtp6983
(S'customScaleName'
p6984
(lp6985
S'char'
p6986
a(lp6987
I-1
aaNtp6988
tp6989
tp6990
sS'DAQmxResetExportedCtrOutEventToggleIdleState'
p6991
((lp6992
S'int32'
p6993
ag34
a((S'taskHandle'
p6994
(lp6995
S'TaskHandle'
p6996
aNtp6997
tp6998
tp6999
sS'DAQmxGetImplicitUnderflowBehavior'
p7000
((lp7001
S'int32'
p7002
ag34
a((S'taskHandle'
p7003
(lp7004
S'TaskHandle'
p7005
aNtp7006
(S'data'
p7007
(lp7008
S'int32'
p7009
ag42
aNtp7010
tp7011
tp7012
sS'DAQmxSetWatchdogTimeout'
p7013
((lp7014
S'int32'
p7015
ag34
a((S'taskHandle'
p7016
(lp7017
S'TaskHandle'
p7018
aNtp7019
(S'data'
p7020
(lp7021
S'float64'
p7022
aNtp7023
tp7024
tp7025
sS'DAQmxResetCOPulseDutyCyc'
p7026
((lp7027
S'int32'
p7028
ag34
a((S'taskHandle'
p7029
(lp7030
S'TaskHandle'
p7031
aNtp7032
(S'channel'
p7033
(lp7034
S'char'
p7035
a(lp7036
I-1
aaNtp7037
tp7038
tp7039
sS'DAQmxSetAITempUnits'
p7040
((lp7041
S'int32'
p7042
ag34
a((S'taskHandle'
p7043
(lp7044
S'TaskHandle'
p7045
aNtp7046
(S'channel'
p7047
(lp7048
S'char'
p7049
a(lp7050
I-1
aaNtp7051
(S'data'
p7052
(lp7053
S'int32'
p7054
aNtp7055
tp7056
tp7057
sS'DAQmxResetAIMicrophoneSensitivity'
p7058
((lp7059
S'int32'
p7060
ag34
a((S'taskHandle'
p7061
(lp7062
S'TaskHandle'
p7063
aNtp7064
(S'channel'
p7065
(lp7066
S'char'
p7067
a(lp7068
I-1
aaNtp7069
tp7070
tp7071
sS'DAQmxSwitchGetMultiRelayPos'
p7072
((lp7073
S'int32'
p7074
ag34
a((S'relayList'
p7075
(lp7076
S'char'
p7077
a(lp7078
I-1
aaNtp7079
(S'relayPos'
p7080
(lp7081
S'uInt32'
p7082
a(lp7083
I-1
aaNtp7084
(S'relayPosArraySize'
p7085
(lp7086
S'uInt32'
p7087
aNtp7088
(S'numRelayPossRead'
p7089
(lp7090
S'uInt32'
p7091
ag42
aNtp7092
tp7093
tp7094
sS'DAQmxResetCIPulseTicksStartEdge'
p7095
((lp7096
S'int32'
p7097
ag34
a((S'taskHandle'
p7098
(lp7099
S'TaskHandle'
p7100
aNtp7101
(S'channel'
p7102
(lp7103
S'char'
p7104
a(lp7105
I-1
aaNtp7106
tp7107
tp7108
sS'DAQmxSetWatchdogDOExpirState'
p7109
((lp7110
S'int32'
p7111
ag34
a((S'taskHandle'
p7112
(lp7113
S'TaskHandle'
p7114
aNtp7115
(S'lines'
p7116
(lp7117
S'char'
p7118
a(lp7119
I-1
aaNtp7120
(S'data'
p7121
(lp7122
S'int32'
p7123
aNtp7124
tp7125
tp7126
sS'DAQmxGetHshkStartCond'
p7127
((lp7128
S'int32'
p7129
ag34
a((S'taskHandle'
p7130
(lp7131
S'TaskHandle'
p7132
aNtp7133
(S'data'
p7134
(lp7135
S'int32'
p7136
ag42
aNtp7137
tp7138
tp7139
sS'DAQmxSetAIEddyCurrentProxProbeSensitivityUnits'
p7140
((lp7141
S'int32'
p7142
ag34
a((S'taskHandle'
p7143
(lp7144
S'TaskHandle'
p7145
aNtp7146
(S'channel'
p7147
(lp7148
S'char'
p7149
a(lp7150
I-1
aaNtp7151
(S'data'
p7152
(lp7153
S'int32'
p7154
aNtp7155
tp7156
tp7157
sS'DAQmxSetAIDataXferMech'
p7158
((lp7159
S'int32'
p7160
ag34
a((S'taskHandle'
p7161
(lp7162
S'TaskHandle'
p7163
aNtp7164
(S'channel'
p7165
(lp7166
S'char'
p7167
a(lp7168
I-1
aaNtp7169
(S'data'
p7170
(lp7171
S'int32'
p7172
aNtp7173
tp7174
tp7175
sS'DAQmxExportSignal'
p7176
((lp7177
S'int32'
p7178
ag34
a((S'taskHandle'
p7179
(lp7180
S'TaskHandle'
p7181
aNtp7182
(S'signalID'
p7183
(lp7184
S'int32'
p7185
aNtp7186
(S'outputTerminal'
p7187
(lp7188
S'char'
p7189
a(lp7190
I-1
aaNtp7191
tp7192
tp7193
sS'DAQmxSetExportedAdvTrigPulseWidthUnits'
p7194
((lp7195
S'int32'
p7196
ag34
a((S'taskHandle'
p7197
(lp7198
S'TaskHandle'
p7199
aNtp7200
(S'data'
p7201
(lp7202
S'int32'
p7203
aNtp7204
tp7205
tp7206
sS'DAQmxSetExportedCtrOutEventPulsePolarity'
p7207
((lp7208
S'int32'
p7209
ag34
a((S'taskHandle'
p7210
(lp7211
S'TaskHandle'
p7212
aNtp7213
(S'data'
p7214
(lp7215
S'int32'
p7216
aNtp7217
tp7218
tp7219
sS'DAQmxSetExportedRdyForXferEventOutputTerm'
p7220
((lp7221
S'int32'
p7222
ag34
a((S'taskHandle'
p7223
(lp7224
S'TaskHandle'
p7225
aNtp7226
(S'data'
p7227
(lp7228
S'char'
p7229
ag42
aNtp7230
tp7231
tp7232
sS'DAQmxGetAIBridgeUnits'
p7233
((lp7234
S'int32'
p7235
ag34
a((S'taskHandle'
p7236
(lp7237
S'TaskHandle'
p7238
aNtp7239
(S'channel'
p7240
(lp7241
S'char'
p7242
a(lp7243
I-1
aaNtp7244
(S'data'
p7245
(lp7246
S'int32'
p7247
ag42
aNtp7248
tp7249
tp7250
sS'DAQmxSetAILowpassEnable'
p7251
((lp7252
S'int32'
p7253
ag34
a((S'taskHandle'
p7254
(lp7255
S'TaskHandle'
p7256
aNtp7257
(S'channel'
p7258
(lp7259
S'char'
p7260
a(lp7261
I-1
aaNtp7262
(S'data'
p7263
(lp7264
S'bool32'
p7265
aNtp7266
tp7267
tp7268
sS'DAQmxGetAIMemMapEnable'
p7269
((lp7270
S'int32'
p7271
ag34
a((S'taskHandle'
p7272
(lp7273
S'TaskHandle'
p7274
aNtp7275
(S'channel'
p7276
(lp7277
S'char'
p7278
a(lp7279
I-1
aaNtp7280
(S'data'
p7281
(lp7282
S'bool32'
p7283
ag42
aNtp7284
tp7285
tp7286
sS'DAQmxGetDigEdgeArmStartTrigSrc'
p7287
((lp7288
S'int32'
p7289
ag34
a((S'taskHandle'
p7290
(lp7291
S'TaskHandle'
p7292
aNtp7293
(S'data'
p7294
(lp7295
S'char'
p7296
ag42
aNtp7297
(S'bufferSize'
p7298
(lp7299
S'uInt32'
p7300
aNtp7301
tp7302
tp7303
sS'DAQmxResetAIRTDB'
p7304
((lp7305
S'int32'
p7306
ag34
a((S'taskHandle'
p7307
(lp7308
S'TaskHandle'
p7309
aNtp7310
(S'channel'
p7311
(lp7312
S'char'
p7313
a(lp7314
I-1
aaNtp7315
tp7316
tp7317
sS'DAQmxResetAIRTDC'
p7318
((lp7319
S'int32'
p7320
ag34
a((S'taskHandle'
p7321
(lp7322
S'TaskHandle'
p7323
aNtp7324
(S'channel'
p7325
(lp7326
S'char'
p7327
a(lp7328
I-1
aaNtp7329
tp7330
tp7331
sS'DAQmxGetDevTCPIPEthernetIP'
p7332
((lp7333
S'int32'
p7334
ag34
a((S'device'
p7335
(lp7336
S'char'
p7337
a(lp7338
I-1
aaNtp7339
(S'data'
p7340
(lp7341
S'char'
p7342
ag42
aNtp7343
(S'bufferSize'
p7344
(lp7345
S'uInt32'
p7346
aNtp7347
tp7348
tp7349
sS'DAQmxResetAIRTDA'
p7350
((lp7351
S'int32'
p7352
ag34
a((S'taskHandle'
p7353
(lp7354
S'TaskHandle'
p7355
aNtp7356
(S'channel'
p7357
(lp7358
S'char'
p7359
a(lp7360
I-1
aaNtp7361
tp7362
tp7363
sS'DAQmxReadRaw'
p7364
((lp7365
S'int32'
p7366
ag34
a((S'taskHandle'
p7367
(lp7368
S'TaskHandle'
p7369
aNtp7370
(S'numSampsPerChan'
p7371
(lp7372
S'int32'
p7373
aNtp7374
(S'timeout'
p7375
(lp7376
S'float64'
p7377
aNtp7378
(S'readArray'
p7379
(lp7380
S'void'
p7381
ag42
aNtp7382
(S'arraySizeInBytes'
p7383
(lp7384
S'uInt32'
p7385
aNtp7386
(S'sampsRead'
p7387
(lp7388
S'int32'
p7389
ag42
aNtp7390
(S'numBytesPerSamp'
p7391
(lp7392
S'int32'
p7393
ag42
aNtp7394
(S'reserved'
p7395
(lp7396
S'bool32'
p7397
ag42
aNtp7398
tp7399
tp7400
sS'DAQmxResetReadAutoStart'
p7401
((lp7402
S'int32'
p7403
ag34
a((S'taskHandle'
p7404
(lp7405
S'TaskHandle'
p7406
aNtp7407
tp7408
tp7409
sS'DAQmxResetAIMin'
p7410
((lp7411
S'int32'
p7412
ag34
a((S'taskHandle'
p7413
(lp7414
S'TaskHandle'
p7415
aNtp7416
(S'channel'
p7417
(lp7418
S'char'
p7419
a(lp7420
I-1
aaNtp7421
tp7422
tp7423
sS'DAQmxResetCIPulseTimeDigFltrMinPulseWidth'
p7424
((lp7425
S'int32'
p7426
ag34
a((S'taskHandle'
p7427
(lp7428
S'TaskHandle'
p7429
aNtp7430
(S'channel'
p7431
(lp7432
S'char'
p7433
a(lp7434
I-1
aaNtp7435
tp7436
tp7437
sS'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate'
p7438
((lp7439
S'int32'
p7440
ag34
a((S'taskHandle'
p7441
(lp7442
S'TaskHandle'
p7443
aNtp7444
(S'channel'
p7445
(lp7446
S'char'
p7447
a(lp7448
I-1
aaNtp7449
(S'data'
p7450
(lp7451
S'float64'
p7452
aNtp7453
tp7454
tp7455
sS'DAQmxResetCIEncoderAInputDigFltrTimebaseRate'
p7456
((lp7457
S'int32'
p7458
ag34
a((S'taskHandle'
p7459
(lp7460
S'TaskHandle'
p7461
aNtp7462
(S'channel'
p7463
(lp7464
S'char'
p7465
a(lp7466
I-1
aaNtp7467
tp7468
tp7469
sS'DAQmxAdjust9246OffsetCal'
p7470
((lp7471
S'int32'
p7472
ag34
a((S'calHandle'
p7473
(lp7474
S'CalHandle'
p7475
aNtp7476
(S'channelNames'
p7477
(lp7478
S'char'
p7479
a(lp7480
I-1
aaNtp7481
tp7482
tp7483
sS'DAQmxGetExportedAdvTrigPulseWidthUnits'
p7484
((lp7485
S'int32'
p7486
ag34
a((S'taskHandle'
p7487
(lp7488
S'TaskHandle'
p7489
aNtp7490
(S'data'
p7491
(lp7492
S'int32'
p7493
ag42
aNtp7494
tp7495
tp7496
sS'DAQmxResetCICountEdgesDir'
p7497
((lp7498
S'int32'
p7499
ag34
a((S'taskHandle'
p7500
(lp7501
S'TaskHandle'
p7502
aNtp7503
(S'channel'
p7504
(lp7505
S'char'
p7506
a(lp7507
I-1
aaNtp7508
tp7509
tp7510
sS'DAQmxResetAOIdleOutputBehavior'
p7511
((lp7512
S'int32'
p7513
ag34
a((S'taskHandle'
p7514
(lp7515
S'TaskHandle'
p7516
aNtp7517
(S'channel'
p7518
(lp7519
S'char'
p7520
a(lp7521
I-1
aaNtp7522
tp7523
tp7524
sS'DAQmxSetExportedStartTrigPulsePolarity'
p7525
((lp7526
S'int32'
p7527
ag34
a((S'taskHandle'
p7528
(lp7529
S'TaskHandle'
p7530
aNtp7531
(S'data'
p7532
(lp7533
S'int32'
p7534
aNtp7535
tp7536
tp7537
sS'DAQmxCreateAITempBuiltInSensorChan'
p7538
((lp7539
S'int32'
p7540
ag34
a((S'taskHandle'
p7541
(lp7542
S'TaskHandle'
p7543
aNtp7544
(S'physicalChannel'
p7545
(lp7546
S'char'
p7547
a(lp7548
I-1
aaNtp7549
(S'nameToAssignToChannel'
p7550
(lp7551
S'char'
p7552
a(lp7553
I-1
aaNtp7554
(S'units'
p7555
(lp7556
S'int32'
p7557
aNtp7558
tp7559
tp7560
sS'DAQmxResetRefClkRate'
p7561
((lp7562
S'int32'
p7563
ag34
a((S'taskHandle'
p7564
(lp7565
S'TaskHandle'
p7566
aNtp7567
tp7568
tp7569
sS'DAQmxResetAOGain'
p7570
((lp7571
S'int32'
p7572
ag34
a((S'taskHandle'
p7573
(lp7574
S'TaskHandle'
p7575
aNtp7576
(S'channel'
p7577
(lp7578
S'char'
p7579
a(lp7580
I-1
aaNtp7581
tp7582
tp7583
sS'DAQmxGetAIACExcitFreq'
p7584
((lp7585
S'int32'
p7586
ag34
a((S'taskHandle'
p7587
(lp7588
S'TaskHandle'
p7589
aNtp7590
(S'channel'
p7591
(lp7592
S'char'
p7593
a(lp7594
I-1
aaNtp7595
(S'data'
p7596
(lp7597
S'float64'
p7598
ag42
aNtp7599
tp7600
tp7601
sS'DAQmxStopTask'
p7602
((lp7603
S'int32'
p7604
ag34
a((S'taskHandle'
p7605
(lp7606
S'TaskHandle'
p7607
aNtp7608
tp7609
tp7610
sS'DAQmxGetPhysicalChanTEDSMfgID'
p7611
((lp7612
S'int32'
p7613
ag34
a((S'physicalChannel'
p7614
(lp7615
S'char'
p7616
a(lp7617
I-1
aaNtp7618
(S'data'
p7619
(lp7620
S'uInt32'
p7621
ag42
aNtp7622
tp7623
tp7624
sS'DAQmxCreateAIFreqVoltageChan'
p7625
((lp7626
S'int32'
p7627
ag34
a((S'taskHandle'
p7628
(lp7629
S'TaskHandle'
p7630
aNtp7631
(S'physicalChannel'
p7632
(lp7633
S'char'
p7634
a(lp7635
I-1
aaNtp7636
(S'nameToAssignToChannel'
p7637
(lp7638
S'char'
p7639
a(lp7640
I-1
aaNtp7641
(S'minVal'
p7642
(lp7643
S'float64'
p7644
aNtp7645
(S'maxVal'
p7646
(lp7647
S'float64'
p7648
aNtp7649
(S'units'
p7650
(lp7651
S'int32'
p7652
aNtp7653
(S'thresholdLevel'
p7654
(lp7655
S'float64'
p7656
aNtp7657
(S'hysteresis'
p7658
(lp7659
S'float64'
p7660
aNtp7661
(S'customScaleName'
p7662
(lp7663
S'char'
p7664
a(lp7665
I-1
aaNtp7666
tp7667
tp7668
sS'DAQmxSetAIRVDTSensitivity'
p7669
((lp7670
S'int32'
p7671
ag34
a((S'taskHandle'
p7672
(lp7673
S'TaskHandle'
p7674
aNtp7675
(S'channel'
p7676
(lp7677
S'char'
p7678
a(lp7679
I-1
aaNtp7680
(S'data'
p7681
(lp7682
S'float64'
p7683
aNtp7684
tp7685
tp7686
sS'DAQmxGetAOFuncGenAmplitude'
p7687
((lp7688
S'int32'
p7689
ag34
a((S'taskHandle'
p7690
(lp7691
S'TaskHandle'
p7692
aNtp7693
(S'channel'
p7694
(lp7695
S'char'
p7696
a(lp7697
I-1
aaNtp7698
(S'data'
p7699
(lp7700
S'float64'
p7701
ag42
aNtp7702
tp7703
tp7704
sS'DAQmxGetCOPulseTicksInitialDelay'
p7705
((lp7706
S'int32'
p7707
ag34
a((S'taskHandle'
p7708
(lp7709
S'TaskHandle'
p7710
aNtp7711
(S'channel'
p7712
(lp7713
S'char'
p7714
a(lp7715
I-1
aaNtp7716
(S'data'
p7717
(lp7718
S'uInt32'
p7719
ag42
aNtp7720
tp7721
tp7722
sS'DAQmxGetReadWaitMode'
p7723
((lp7724
S'int32'
p7725
ag34
a((S'taskHandle'
p7726
(lp7727
S'TaskHandle'
p7728
aNtp7729
(S'data'
p7730
(lp7731
S'int32'
p7732
ag42
aNtp7733
tp7734
tp7735
sS'DAQmxGetDevDILines'
p7736
((lp7737
S'int32'
p7738
ag34
a((S'device'
p7739
(lp7740
S'char'
p7741
a(lp7742
I-1
aaNtp7743
(S'data'
p7744
(lp7745
S'char'
p7746
ag42
aNtp7747
(S'bufferSize'
p7748
(lp7749
S'uInt32'
p7750
aNtp7751
tp7752
tp7753
sS'DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal'
p7754
((lp7755
S'int32'
p7756
ag34
a((S'taskHandle'
p7757
(lp7758
S'TaskHandle'
p7759
aNtp7760
(S'channel'
p7761
(lp7762
S'char'
p7763
a(lp7764
I-1
aaNtp7765
(S'data'
p7766
(lp7767
S'float64'
p7768
ag42
aNtp7769
tp7770
tp7771
sS'DAQmxResetCOCtrTimebaseSrc'
p7772
((lp7773
S'int32'
p7774
ag34
a((S'taskHandle'
p7775
(lp7776
S'TaskHandle'
p7777
aNtp7778
(S'channel'
p7779
(lp7780
S'char'
p7781
a(lp7782
I-1
aaNtp7783
tp7784
tp7785
sS'DAQmxSetDOOutputDriveType'
p7786
((lp7787
S'int32'
p7788
ag34
a((S'taskHandle'
p7789
(lp7790
S'TaskHandle'
p7791
aNtp7792
(S'channel'
p7793
(lp7794
S'char'
p7795
a(lp7796
I-1
aaNtp7797
(S'data'
p7798
(lp7799
S'int32'
p7800
aNtp7801
tp7802
tp7803
sS'DAQmxResetExportedAIHoldCmpltEventOutputTerm'
p7804
((lp7805
S'int32'
p7806
ag34
a((S'taskHandle'
p7807
(lp7808
S'TaskHandle'
p7809
aNtp7810
tp7811
tp7812
sS'DAQmxGetAIBridgeBalanceFinePot'
p7813
((lp7814
S'int32'
p7815
ag34
a((S'taskHandle'
p7816
(lp7817
S'TaskHandle'
p7818
aNtp7819
(S'channel'
p7820
(lp7821
S'char'
p7822
a(lp7823
I-1
aaNtp7824
(S'data'
p7825
(lp7826
S'int32'
p7827
ag42
aNtp7828
tp7829
tp7830
sS'DAQmxGetAIForceUnits'
p7831
((lp7832
S'int32'
p7833
ag34
a((S'taskHandle'
p7834
(lp7835
S'TaskHandle'
p7836
aNtp7837
(S'channel'
p7838
(lp7839
S'char'
p7840
a(lp7841
I-1
aaNtp7842
(S'data'
p7843
(lp7844
S'int32'
p7845
ag42
aNtp7846
tp7847
tp7848
sS'DAQmxSetAnlgWinRefTrigCoupling'
p7849
((lp7850
S'int32'
p7851
ag34
a((S'taskHandle'
p7852
(lp7853
S'TaskHandle'
p7854
aNtp7855
(S'data'
p7856
(lp7857
S'int32'
p7858
aNtp7859
tp7860
tp7861
sS'DAQmxSetInterlockedHshkTrigSrc'
p7862
((lp7863
S'int32'
p7864
ag34
a((S'taskHandle'
p7865
(lp7866
S'TaskHandle'
p7867
aNtp7868
(S'data'
p7869
(lp7870
S'char'
p7871
ag42
aNtp7872
tp7873
tp7874
sS'DAQmxGetSyncPulseResetDelay'
p7875
((lp7876
S'int32'
p7877
ag34
a((S'taskHandle'
p7878
(lp7879
S'TaskHandle'
p7880
aNtp7881
(S'data'
p7882
(lp7883
S'float64'
p7884
ag42
aNtp7885
tp7886
tp7887
sS'DAQmxGet9263CalAdjustPoints'
p7888
((lp7889
S'int32'
p7890
ag34
a((S'calHandle'
p7891
(lp7892
S'CalHandle'
p7893
aNtp7894
(S'adjustmentPoints'
p7895
(lp7896
S'int32'
p7897
ag42
aNtp7898
(S'bufferSize'
p7899
(lp7900
S'uInt32'
p7901
aNtp7902
tp7903
tp7904
sS'DAQmxGetScaleMapPreScaledMin'
p7905
((lp7906
S'int32'
p7907
ag34
a((S'scaleName'
p7908
(lp7909
S'char'
p7910
a(lp7911
I-1
aaNtp7912
(S'data'
p7913
(lp7914
S'float64'
p7915
ag42
aNtp7916
tp7917
tp7918
sS'DAQmxSetCIEncoderZInputDigFltrEnable'
p7919
((lp7920
S'int32'
p7921
ag34
a((S'taskHandle'
p7922
(lp7923
S'TaskHandle'
p7924
aNtp7925
(S'channel'
p7926
(lp7927
S'char'
p7928
a(lp7929
I-1
aaNtp7930
(S'data'
p7931
(lp7932
S'bool32'
p7933
aNtp7934
tp7935
tp7936
sS'DAQmxWriteBinaryU32'
p7937
((lp7938
S'int32'
p7939
ag34
a((S'taskHandle'
p7940
(lp7941
S'TaskHandle'
p7942
aNtp7943
(S'numSampsPerChan'
p7944
(lp7945
S'int32'
p7946
aNtp7947
(S'autoStart'
p7948
(lp7949
S'bool32'
p7950
aNtp7951
(S'timeout'
p7952
(lp7953
S'float64'
p7954
aNtp7955
(S'dataLayout'
p7956
(lp7957
S'bool32'
p7958
aNtp7959
(S'writeArray'
p7960
(lp7961
S'uInt32'
p7962
a(lp7963
I-1
aaNtp7964
(S'sampsPerChanWritten'
p7965
(lp7966
S'int32'
p7967
ag42
aNtp7968
(S'reserved'
p7969
(lp7970
S'bool32'
p7971
ag42
aNtp7972
tp7973
tp7974
sS'DAQmxSetCOCtrTimebaseSrc'
p7975
((lp7976
S'int32'
p7977
ag34
a((S'taskHandle'
p7978
(lp7979
S'TaskHandle'
p7980
aNtp7981
(S'channel'
p7982
(lp7983
S'char'
p7984
a(lp7985
I-1
aaNtp7986
(S'data'
p7987
(lp7988
S'char'
p7989
ag42
aNtp7990
tp7991
tp7992
sS'DAQmxGetCIPulseWidthUnits'
p7993
((lp7994
S'int32'
p7995
ag34
a((S'taskHandle'
p7996
(lp7997
S'TaskHandle'
p7998
aNtp7999
(S'channel'
p8000
(lp8001
S'char'
p8002
a(lp8003
I-1
aaNtp8004
(S'data'
p8005
(lp8006
S'int32'
p8007
ag42
aNtp8008
tp8009
tp8010
sS'DAQmxGetAIStrainGagePoissonRatio'
p8011
((lp8012
S'int32'
p8013
ag34
a((S'taskHandle'
p8014
(lp8015
S'TaskHandle'
p8016
aNtp8017
(S'channel'
p8018
(lp8019
S'char'
p8020
a(lp8021
I-1
aaNtp8022
(S'data'
p8023
(lp8024
S'float64'
p8025
ag42
aNtp8026
tp8027
tp8028
sS'DAQmxSetup1142Cal'
p8029
((lp8030
S'int32'
p8031
ag34
a((S'calHandle'
p8032
(lp8033
S'CalHandle'
p8034
aNtp8035
(S'channelName'
p8036
(lp8037
S'char'
p8038
a(lp8039
I-1
aaNtp8040
(S'gain'
p8041
(lp8042
S'float64'
p8043
aNtp8044
tp8045
tp8046
sS'DAQmxSetAIForceReadFromChan'
p8047
((lp8048
S'int32'
p8049
ag34
a((S'taskHandle'
p8050
(lp8051
S'TaskHandle'
p8052
aNtp8053
(S'channel'
p8054
(lp8055
S'char'
p8056
a(lp8057
I-1
aaNtp8058
(S'data'
p8059
(lp8060
S'bool32'
p8061
aNtp8062
tp8063
tp8064
sS'DAQmxGetSwitchChanMaxDCSwitchCurrent'
p8065
((lp8066
S'int32'
p8067
ag34
a((S'switchChannelName'
p8068
(lp8069
S'char'
p8070
a(lp8071
I-1
aaNtp8072
(S'data'
p8073
(lp8074
S'float64'
p8075
ag42
aNtp8076
tp8077
tp8078
sS'DAQmxGetDIUsbXferReqSize'
p8079
((lp8080
S'int32'
p8081
ag34
a((S'taskHandle'
p8082
(lp8083
S'TaskHandle'
p8084
aNtp8085
(S'channel'
p8086
(lp8087
S'char'
p8088
a(lp8089
I-1
aaNtp8090
(S'data'
p8091
(lp8092
S'uInt32'
p8093
ag42
aNtp8094
tp8095
tp8096
sS'DAQmxGetAIMicrophoneSensitivity'
p8097
((lp8098
S'int32'
p8099
ag34
a((S'taskHandle'
p8100
(lp8101
S'TaskHandle'
p8102
aNtp8103
(S'channel'
p8104
(lp8105
S'char'
p8106
a(lp8107
I-1
aaNtp8108
(S'data'
p8109
(lp8110
S'float64'
p8111
ag42
aNtp8112
tp8113
tp8114
sS'DAQmxGetAnlgWinPauseTrigSrc'
p8115
((lp8116
S'int32'
p8117
ag34
a((S'taskHandle'
p8118
(lp8119
S'TaskHandle'
p8120
aNtp8121
(S'data'
p8122
(lp8123
S'char'
p8124
ag42
aNtp8125
(S'bufferSize'
p8126
(lp8127
S'uInt32'
p8128
aNtp8129
tp8130
tp8131
sS'DAQmxGetAIADCCustomTimingMode'
p8132
((lp8133
S'int32'
p8134
ag34
a((S'taskHandle'
p8135
(lp8136
S'TaskHandle'
p8137
aNtp8138
(S'channel'
p8139
(lp8140
S'char'
p8141
a(lp8142
I-1
aaNtp8143
(S'data'
p8144
(lp8145
S'uInt32'
p8146
ag42
aNtp8147
tp8148
tp8149
sS'DAQmxResetSampClkDigSyncEnable'
p8150
((lp8151
S'int32'
p8152
ag34
a((S'taskHandle'
p8153
(lp8154
S'TaskHandle'
p8155
aNtp8156
tp8157
tp8158
sS'DAQmxCreateTEDSAIPressureBridgeChan'
p8159
((lp8160
S'int32'
p8161
ag34
a((S'taskHandle'
p8162
(lp8163
S'TaskHandle'
p8164
aNtp8165
(S'physicalChannel'
p8166
(lp8167
S'char'
p8168
a(lp8169
I-1
aaNtp8170
(S'nameToAssignToChannel'
p8171
(lp8172
S'char'
p8173
a(lp8174
I-1
aaNtp8175
(S'minVal'
p8176
(lp8177
S'float64'
p8178
aNtp8179
(S'maxVal'
p8180
(lp8181
S'float64'
p8182
aNtp8183
(S'units'
p8184
(lp8185
S'int32'
p8186
aNtp8187
(S'voltageExcitSource'
p8188
(lp8189
S'int32'
p8190
aNtp8191
(S'voltageExcitVal'
p8192
(lp8193
S'float64'
p8194
aNtp8195
(S'customScaleName'
p8196
(lp8197
S'char'
p8198
a(lp8199
I-1
aaNtp8200
tp8201
tp8202
sS'DAQmxGetDigEdgeAdvTrigSrc'
p8203
((lp8204
S'int32'
p8205
ag34
a((S'taskHandle'
p8206
(lp8207
S'TaskHandle'
p8208
aNtp8209
(S'data'
p8210
(lp8211
S'char'
p8212
ag42
aNtp8213
(S'bufferSize'
p8214
(lp8215
S'uInt32'
p8216
aNtp8217
tp8218
tp8219
sS'DAQmxSetDOUsbXferReqSize'
p8220
((lp8221
S'int32'
p8222
ag34
a((S'taskHandle'
p8223
(lp8224
S'TaskHandle'
p8225
aNtp8226
(S'channel'
p8227
(lp8228
S'char'
p8229
a(lp8230
I-1
aaNtp8231
(S'data'
p8232
(lp8233
S'uInt32'
p8234
aNtp8235
tp8236
tp8237
sS'DAQmxSetExportedHshkEventInterlockedAssertOnStart'
p8238
((lp8239
S'int32'
p8240
ag34
a((S'taskHandle'
p8241
(lp8242
S'TaskHandle'
p8243
aNtp8244
(S'data'
p8245
(lp8246
S'bool32'
p8247
aNtp8248
tp8249
tp8250
sS'DAQmxGetDevCOMaxSize'
p8251
((lp8252
S'int32'
p8253
ag34
a((S'device'
p8254
(lp8255
S'char'
p8256
a(lp8257
I-1
aaNtp8258
(S'data'
p8259
(lp8260
S'uInt32'
p8261
ag42
aNtp8262
tp8263
tp8264
sS'DAQmxSetCITwoEdgeSepUnits'
p8265
((lp8266
S'int32'
p8267
ag34
a((S'taskHandle'
p8268
(lp8269
S'TaskHandle'
p8270
aNtp8271
(S'channel'
p8272
(lp8273
S'char'
p8274
a(lp8275
I-1
aaNtp8276
(S'data'
p8277
(lp8278
S'int32'
p8279
aNtp8280
tp8281
tp8282
sS'DAQmxGetAIStrainGageForceReadFromChan'
p8283
((lp8284
S'int32'
p8285
ag34
a((S'taskHandle'
p8286
(lp8287
S'TaskHandle'
p8288
aNtp8289
(S'channel'
p8290
(lp8291
S'char'
p8292
a(lp8293
I-1
aaNtp8294
(S'data'
p8295
(lp8296
S'bool32'
p8297
ag42
aNtp8298
tp8299
tp8300
sS'DAQmxGetAOFuncGenFMDeviation'
p8301
((lp8302
S'int32'
p8303
ag34
a((S'taskHandle'
p8304
(lp8305
S'TaskHandle'
p8306
aNtp8307
(S'channel'
p8308
(lp8309
S'char'
p8310
a(lp8311
I-1
aaNtp8312
(S'data'
p8313
(lp8314
S'float64'
p8315
ag42
aNtp8316
tp8317
tp8318
sS'DAQmxSetAIBridgeTablePhysicalVals'
p8319
((lp8320
S'int32'
p8321
ag34
a((S'taskHandle'
p8322
(lp8323
S'TaskHandle'
p8324
aNtp8325
(S'channel'
p8326
(lp8327
S'char'
p8328
a(lp8329
I-1
aaNtp8330
(S'data'
p8331
(lp8332
S'float64'
p8333
ag42
aNtp8334
(S'arraySizeInElements'
p8335
(lp8336
S'uInt32'
p8337
aNtp8338
tp8339
tp8340
sS'DAQmxSetCICountEdgesCountDirLogicLvlBehavior'
p8341
((lp8342
S'int32'
p8343
ag34
a((S'taskHandle'
p8344
(lp8345
S'TaskHandle'
p8346
aNtp8347
(S'channel'
p8348
(lp8349
S'char'
p8350
a(lp8351
I-1
aaNtp8352
(S'data'
p8353
(lp8354
S'int32'
p8355
aNtp8356
tp8357
tp8358
sS'DAQmxSetReadAutoStart'
p8359
((lp8360
S'int32'
p8361
ag34
a((S'taskHandle'
p8362
(lp8363
S'TaskHandle'
p8364
aNtp8365
(S'data'
p8366
(lp8367
S'bool32'
p8368
aNtp8369
tp8370
tp8371
sS'DAQmxSetCISemiPeriodStartingEdge'
p8372
((lp8373
S'int32'
p8374
ag34
a((S'taskHandle'
p8375
(lp8376
S'TaskHandle'
p8377
aNtp8378
(S'channel'
p8379
(lp8380
S'char'
p8381
a(lp8382
I-1
aaNtp8383
(S'data'
p8384
(lp8385
S'int32'
p8386
aNtp8387
tp8388
tp8389
sS'DAQmxResetAIForceReadFromChan'
p8390
((lp8391
S'int32'
p8392
ag34
a((S'taskHandle'
p8393
(lp8394
S'TaskHandle'
p8395
aNtp8396
(S'channel'
p8397
(lp8398
S'char'
p8399
a(lp8400
I-1
aaNtp8401
tp8402
tp8403
sS'DAQmxSetup1126Cal'
p8404
((lp8405
S'int32'
p8406
ag34
a((S'calHandle'
p8407
(lp8408
S'CalHandle'
p8409
aNtp8410
(S'channelName'
p8411
(lp8412
S'char'
p8413
a(lp8414
I-1
aaNtp8415
(S'upperFreqLimit'
p8416
(lp8417
S'float64'
p8418
aNtp8419
tp8420
tp8421
sS'DAQmxSetLoggingFilePreallocationSize'
p8422
((lp8423
S'int32'
p8424
ag34
a((S'taskHandle'
p8425
(lp8426
S'TaskHandle'
p8427
aNtp8428
(S'data'
p8429
(lp8430
S'uInt64'
p8431
aNtp8432
tp8433
tp8434
sS'DAQmxSetDigEdgeAdvTrigDigFltrEnable'
p8435
((lp8436
S'int32'
p8437
ag34
a((S'taskHandle'
p8438
(lp8439
S'TaskHandle'
p8440
aNtp8441
(S'data'
p8442
(lp8443
S'bool32'
p8444
aNtp8445
tp8446
tp8447
sS'DAQmxGetAIConvMaxRate'
p8448
((lp8449
S'int32'
p8450
ag34
a((S'taskHandle'
p8451
(lp8452
S'TaskHandle'
p8453
aNtp8454
(S'data'
p8455
(lp8456
S'float64'
p8457
ag42
aNtp8458
tp8459
tp8460
sS'DAQmxSetDigEdgeStartTrigDigSyncEnable'
p8461
((lp8462
S'int32'
p8463
ag34
a((S'taskHandle'
p8464
(lp8465
S'TaskHandle'
p8466
aNtp8467
(S'data'
p8468
(lp8469
S'bool32'
p8470
aNtp8471
tp8472
tp8473
sS'DAQmxGetTaskNumChans'
p8474
((lp8475
S'int32'
p8476
ag34
a((S'taskHandle'
p8477
(lp8478
S'TaskHandle'
p8479
aNtp8480
(S'data'
p8481
(lp8482
S'uInt32'
p8483
ag42
aNtp8484
tp8485
tp8486
sS'DAQmxGetSwitchChanMaxACSwitchPwr'
p8487
((lp8488
S'int32'
p8489
ag34
a((S'switchChannelName'
p8490
(lp8491
S'char'
p8492
a(lp8493
I-1
aaNtp8494
(S'data'
p8495
(lp8496
S'float64'
p8497
ag42
aNtp8498
tp8499
tp8500
sS'DAQmxResetAOTermCfg'
p8501
((lp8502
S'int32'
p8503
ag34
a((S'taskHandle'
p8504
(lp8505
S'TaskHandle'
p8506
aNtp8507
(S'channel'
p8508
(lp8509
S'char'
p8510
a(lp8511
I-1
aaNtp8512
tp8513
tp8514
sS'DAQmxSetCIPulseWidthDigSyncEnable'
p8515
((lp8516
S'int32'
p8517
ag34
a((S'taskHandle'
p8518
(lp8519
S'TaskHandle'
p8520
aNtp8521
(S'channel'
p8522
(lp8523
S'char'
p8524
a(lp8525
I-1
aaNtp8526
(S'data'
p8527
(lp8528
S'bool32'
p8529
aNtp8530
tp8531
tp8532
sS'DAQmxResetCIDutyCycleDigFltrTimebaseSrc'
p8533
((lp8534
S'int32'
p8535
ag34
a((S'taskHandle'
p8536
(lp8537
S'TaskHandle'
p8538
aNtp8539
(S'channel'
p8540
(lp8541
S'char'
p8542
a(lp8543
I-1
aaNtp8544
tp8545
tp8546
sS'DAQmxSetAIExcitDCorAC'
p8547
((lp8548
S'int32'
p8549
ag34
a((S'taskHandle'
p8550
(lp8551
S'TaskHandle'
p8552
aNtp8553
(S'channel'
p8554
(lp8555
S'char'
p8556
a(lp8557
I-1
aaNtp8558
(S'data'
p8559
(lp8560
S'int32'
p8561
aNtp8562
tp8563
tp8564
sS'DAQmxSetScaleMapScaledMin'
p8565
((lp8566
S'int32'
p8567
ag34
a((S'scaleName'
p8568
(lp8569
S'char'
p8570
a(lp8571
I-1
aaNtp8572
(S'data'
p8573
(lp8574
S'float64'
p8575
aNtp8576
tp8577
tp8578
sS'DAQmxSetup1112Cal'
p8579
((lp8580
S'int32'
p8581
ag34
a((S'calHandle'
p8582
(lp8583
S'CalHandle'
p8584
aNtp8585
(S'channelName'
p8586
(lp8587
S'char'
p8588
a(lp8589
I-1
aaNtp8590
tp8591
tp8592
sS'DAQmxGetSyncClkInterval'
p8593
((lp8594
S'int32'
p8595
ag34
a((S'taskHandle'
p8596
(lp8597
S'TaskHandle'
p8598
aNtp8599
(S'data'
p8600
(lp8601
S'uInt32'
p8602
ag42
aNtp8603
tp8604
tp8605
sS'DAQmxResetAIPressureUnits'
p8606
((lp8607
S'int32'
p8608
ag34
a((S'taskHandle'
p8609
(lp8610
S'TaskHandle'
p8611
aNtp8612
(S'channel'
p8613
(lp8614
S'char'
p8615
a(lp8616
I-1
aaNtp8617
tp8618
tp8619
sS'DAQmxGet9242CalAdjustPoints'
p8620
((lp8621
S'int32'
p8622
ag34
a((S'calHandle'
p8623
(lp8624
S'CalHandle'
p8625
aNtp8626
(S'adjustmentPoints'
p8627
(lp8628
S'float64'
p8629
ag42
aNtp8630
(S'bufferSize'
p8631
(lp8632
S'uInt32'
p8633
aNtp8634
tp8635
tp8636
sS'DAQmxResetAnlgWinStartTrigTop'
p8637
((lp8638
S'int32'
p8639
ag34
a((S'taskHandle'
p8640
(lp8641
S'TaskHandle'
p8642
aNtp8643
tp8644
tp8645
sS'DAQmxAdjust9212Cal'
p8646
((lp8647
S'int32'
p8648
ag34
a((S'calHandle'
p8649
(lp8650
S'CalHandle'
p8651
aNtp8652
(S'channelNames'
p8653
(lp8654
S'char'
p8655
a(lp8656
I-1
aaNtp8657
(S'value'
p8658
(lp8659
S'float64'
p8660
aNtp8661
tp8662
tp8663
sS'DAQmxCfgInputBuffer'
p8664
((lp8665
S'int32'
p8666
ag34
a((S'taskHandle'
p8667
(lp8668
S'TaskHandle'
p8669
aNtp8670
(S'numSampsPerChan'
p8671
(lp8672
S'uInt32'
p8673
aNtp8674
tp8675
tp8676
sS'DAQmxGetExtCalRecommendedInterval'
p8677
((lp8678
S'int32'
p8679
ag34
a((S'deviceName'
p8680
(lp8681
S'char'
p8682
a(lp8683
I-1
aaNtp8684
(S'data'
p8685
(lp8686
S'uInt32'
p8687
ag42
aNtp8688
tp8689
tp8690
sS'DAQmxResetCIMin'
p8691
((lp8692
S'int32'
p8693
ag34
a((S'taskHandle'
p8694
(lp8695
S'TaskHandle'
p8696
aNtp8697
(S'channel'
p8698
(lp8699
S'char'
p8700
a(lp8701
I-1
aaNtp8702
tp8703
tp8704
sS'DAQmxCreateCILinEncoderChan'
p8705
((lp8706
S'int32'
p8707
ag34
a((S'taskHandle'
p8708
(lp8709
S'TaskHandle'
p8710
aNtp8711
(S'counter'
p8712
(lp8713
S'char'
p8714
a(lp8715
I-1
aaNtp8716
(S'nameToAssignToChannel'
p8717
(lp8718
S'char'
p8719
a(lp8720
I-1
aaNtp8721
(S'decodingType'
p8722
(lp8723
S'int32'
p8724
aNtp8725
(S'ZidxEnable'
p8726
(lp8727
S'bool32'
p8728
aNtp8729
(S'ZidxVal'
p8730
(lp8731
S'float64'
p8732
aNtp8733
(S'ZidxPhase'
p8734
(lp8735
S'int32'
p8736
aNtp8737
(S'units'
p8738
(lp8739
S'int32'
p8740
aNtp8741
(S'distPerPulse'
p8742
(lp8743
S'float64'
p8744
aNtp8745
(S'initialPos'
p8746
(lp8747
S'float64'
p8748
aNtp8749
(S'customScaleName'
p8750
(lp8751
S'char'
p8752
a(lp8753
I-1
aaNtp8754
tp8755
tp8756
sS'DAQmxGet9217CalAdjustPoints'
p8757
((lp8758
S'int32'
p8759
ag34
a((S'calHandle'
p8760
(lp8761
S'CalHandle'
p8762
aNtp8763
(S'adjustmentPoints'
p8764
(lp8765
S'float64'
p8766
ag42
aNtp8767
(S'bufferSize'
p8768
(lp8769
S'uInt32'
p8770
aNtp8771
tp8772
tp8773
sS'DAQmxGetAIConvTimebaseDiv'
p8774
((lp8775
S'int32'
p8776
ag34
a((S'taskHandle'
p8777
(lp8778
S'TaskHandle'
p8779
aNtp8780
(S'data'
p8781
(lp8782
S'uInt32'
p8783
ag42
aNtp8784
tp8785
tp8786
sS'DAQmxGetDOLineStatesDoneState'
p8787
((lp8788
S'int32'
p8789
ag34
a((S'taskHandle'
p8790
(lp8791
S'TaskHandle'
p8792
aNtp8793
(S'channel'
p8794
(lp8795
S'char'
p8796
a(lp8797
I-1
aaNtp8798
(S'data'
p8799
(lp8800
S'int32'
p8801
ag42
aNtp8802
tp8803
tp8804
sS'DAQmxGetExportedHshkEventInterlockedDeassertDelay'
p8805
((lp8806
S'int32'
p8807
ag34
a((S'taskHandle'
p8808
(lp8809
S'TaskHandle'
p8810
aNtp8811
(S'data'
p8812
(lp8813
S'float64'
p8814
ag42
aNtp8815
tp8816
tp8817
sS'DAQmxResetCIPulseWidthDigFltrMinPulseWidth'
p8818
((lp8819
S'int32'
p8820
ag34
a((S'taskHandle'
p8821
(lp8822
S'TaskHandle'
p8823
aNtp8824
(S'channel'
p8825
(lp8826
S'char'
p8827
a(lp8828
I-1
aaNtp8829
tp8830
tp8831
sS'DAQmxGetDevCOSampModes'
p8832
((lp8833
S'int32'
p8834
ag34
a((S'device'
p8835
(lp8836
S'char'
p8837
a(lp8838
I-1
aaNtp8839
(S'data'
p8840
(lp8841
S'int32'
p8842
ag42
aNtp8843
(S'arraySizeInElements'
p8844
(lp8845
S'uInt32'
p8846
aNtp8847
tp8848
tp8849
sS'DAQmxResetCIFreqDigFltrTimebaseRate'
p8850
((lp8851
S'int32'
p8852
ag34
a((S'taskHandle'
p8853
(lp8854
S'TaskHandle'
p8855
aNtp8856
(S'channel'
p8857
(lp8858
S'char'
p8859
a(lp8860
I-1
aaNtp8861
tp8862
tp8863
sS'DAQmxGetAOCurrentUnits'
p8864
((lp8865
S'int32'
p8866
ag34
a((S'taskHandle'
p8867
(lp8868
S'TaskHandle'
p8869
aNtp8870
(S'channel'
p8871
(lp8872
S'char'
p8873
a(lp8874
I-1
aaNtp8875
(S'data'
p8876
(lp8877
S'int32'
p8878
ag42
aNtp8879
tp8880
tp8881
sS'DAQmxSetAIBridgeNomResistance'
p8882
((lp8883
S'int32'
p8884
ag34
a((S'taskHandle'
p8885
(lp8886
S'TaskHandle'
p8887
aNtp8888
(S'channel'
p8889
(lp8890
S'char'
p8891
a(lp8892
I-1
aaNtp8893
(S'data'
p8894
(lp8895
S'float64'
p8896
aNtp8897
tp8898
tp8899
sS'DAQmxResetCISemiPeriodTerm'
p8900
((lp8901
S'int32'
p8902
ag34
a((S'taskHandle'
p8903
(lp8904
S'TaskHandle'
p8905
aNtp8906
(S'channel'
p8907
(lp8908
S'char'
p8909
a(lp8910
I-1
aaNtp8911
tp8912
tp8913
sS'DAQmxGet9227CalAdjustPoints'
p8914
((lp8915
S'int32'
p8916
ag34
a((S'calHandle'
p8917
(lp8918
S'CalHandle'
p8919
aNtp8920
(S'adjustmentPoints'
p8921
(lp8922
S'float64'
p8923
ag42
aNtp8924
(S'bufferSize'
p8925
(lp8926
S'uInt32'
p8927
aNtp8928
tp8929
tp8930
sS'DAQmxSetAIGain'
p8931
((lp8932
S'int32'
p8933
ag34
a((S'taskHandle'
p8934
(lp8935
S'TaskHandle'
p8936
aNtp8937
(S'channel'
p8938
(lp8939
S'char'
p8940
a(lp8941
I-1
aaNtp8942
(S'data'
p8943
(lp8944
S'float64'
p8945
aNtp8946
tp8947
tp8948
sS'DAQmxGetWriteSpaceAvail'
p8949
((lp8950
S'int32'
p8951
ag34
a((S'taskHandle'
p8952
(lp8953
S'TaskHandle'
p8954
aNtp8955
(S'data'
p8956
(lp8957
S'uInt32'
p8958
ag42
aNtp8959
tp8960
tp8961
sS'DAQmxSetDOUsbXferReqCount'
p8962
((lp8963
S'int32'
p8964
ag34
a((S'taskHandle'
p8965
(lp8966
S'TaskHandle'
p8967
aNtp8968
(S'channel'
p8969
(lp8970
S'char'
p8971
a(lp8972
I-1
aaNtp8973
(S'data'
p8974
(lp8975
S'uInt32'
p8976
aNtp8977
tp8978
tp8979
sS'DAQmxCreateLinScale'
p8980
((lp8981
S'int32'
p8982
ag34
a((S'name'
p8983
(lp8984
S'char'
p8985
a(lp8986
I-1
aaNtp8987
(S'slope'
p8988
(lp8989
S'float64'
p8990
aNtp8991
(S'yIntercept'
p8992
(lp8993
S'float64'
p8994
aNtp8995
(S'preScaledUnits'
p8996
(lp8997
S'int32'
p8998
aNtp8999
(S'scaledUnits'
p9000
(lp9001
S'char'
p9002
a(lp9003
I-1
aaNtp9004
tp9005
tp9006
sS'DAQmxGetChanIsGlobal'
p9007
((lp9008
S'int32'
p9009
ag34
a((S'taskHandle'
p9010
(lp9011
S'TaskHandle'
p9012
aNtp9013
(S'channel'
p9014
(lp9015
S'char'
p9016
a(lp9017
I-1
aaNtp9018
(S'data'
p9019
(lp9020
S'bool32'
p9021
ag42
aNtp9022
tp9023
tp9024
sS'DAQmxResetDigPatternRefTrigSrc'
p9025
((lp9026
S'int32'
p9027
ag34
a((S'taskHandle'
p9028
(lp9029
S'TaskHandle'
p9030
aNtp9031
tp9032
tp9033
sS'DAQmxGetPhysicalChanAITermCfgs'
p9034
((lp9035
S'int32'
p9036
ag34
a((S'physicalChannel'
p9037
(lp9038
S'char'
p9039
a(lp9040
I-1
aaNtp9041
(S'data'
p9042
(lp9043
S'int32'
p9044
ag42
aNtp9045
tp9046
tp9047
sS'DAQmxGetAIChanCalCalDate'
p9048
((lp9049
S'int32'
p9050
ag34
a((S'taskHandle'
p9051
(lp9052
S'TaskHandle'
p9053
aNtp9054
(S'channelName'
p9055
(lp9056
S'char'
p9057
a(lp9058
I-1
aaNtp9059
(S'year'
p9060
(lp9061
S'uInt32'
p9062
ag42
aNtp9063
(S'month'
p9064
(lp9065
S'uInt32'
p9066
ag42
aNtp9067
(S'day'
p9068
(lp9069
S'uInt32'
p9070
ag42
aNtp9071
(S'hour'
p9072
(lp9073
S'uInt32'
p9074
ag42
aNtp9075
(S'minute'
p9076
(lp9077
S'uInt32'
p9078
ag42
aNtp9079
tp9080
tp9081
sS'DAQmxGetAICustomScaleName'
p9082
((lp9083
S'int32'
p9084
ag34
a((S'taskHandle'
p9085
(lp9086
S'TaskHandle'
p9087
aNtp9088
(S'channel'
p9089
(lp9090
S'char'
p9091
a(lp9092
I-1
aaNtp9093
(S'data'
p9094
(lp9095
S'char'
p9096
ag42
aNtp9097
(S'bufferSize'
p9098
(lp9099
S'uInt32'
p9100
aNtp9101
tp9102
tp9103
sS'DAQmxResetAIRVDTSensitivityUnits'
p9104
((lp9105
S'int32'
p9106
ag34
a((S'taskHandle'
p9107
(lp9108
S'TaskHandle'
p9109
aNtp9110
(S'channel'
p9111
(lp9112
S'char'
p9113
a(lp9114
I-1
aaNtp9115
tp9116
tp9117
sS'DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc'
p9118
((lp9119
S'int32'
p9120
ag34
a((S'taskHandle'
p9121
(lp9122
S'TaskHandle'
p9123
aNtp9124
(S'data'
p9125
(lp9126
S'char'
p9127
ag42
aNtp9128
tp9129
tp9130
sS'DAQmxResetCIPulseWidthDigSyncEnable'
p9131
((lp9132
S'int32'
p9133
ag34
a((S'taskHandle'
p9134
(lp9135
S'TaskHandle'
p9136
aNtp9137
(S'channel'
p9138
(lp9139
S'char'
p9140
a(lp9141
I-1
aaNtp9142
tp9143
tp9144
sS'DAQmxGetAnlgWinPauseTrigCoupling'
p9145
((lp9146
S'int32'
p9147
ag34
a((S'taskHandle'
p9148
(lp9149
S'TaskHandle'
p9150
aNtp9151
(S'data'
p9152
(lp9153
S'int32'
p9154
ag42
aNtp9155
tp9156
tp9157
sS'DAQmxGetLoggingSampsPerFile'
p9158
((lp9159
S'int32'
p9160
ag34
a((S'taskHandle'
p9161
(lp9162
S'TaskHandle'
p9163
aNtp9164
(S'data'
p9165
(lp9166
S'uInt64'
p9167
ag42
aNtp9168
tp9169
tp9170
sS'DAQmxResetAOFuncGenOffset'
p9171
((lp9172
S'int32'
p9173
ag34
a((S'taskHandle'
p9174
(lp9175
S'TaskHandle'
p9176
aNtp9177
(S'channel'
p9178
(lp9179
S'char'
p9180
a(lp9181
I-1
aaNtp9182
tp9183
tp9184
sS'DAQmxGetTaskName'
p9185
((lp9186
S'int32'
p9187
ag34
a((S'taskHandle'
p9188
(lp9189
S'TaskHandle'
p9190
aNtp9191
(S'data'
p9192
(lp9193
S'char'
p9194
ag42
aNtp9195
(S'bufferSize'
p9196
(lp9197
S'uInt32'
p9198
aNtp9199
tp9200
tp9201
sS'DAQmxResetDigEdgeArmStartTrigSrc'
p9202
((lp9203
S'int32'
p9204
ag34
a((S'taskHandle'
p9205
(lp9206
S'TaskHandle'
p9207
aNtp9208
tp9209
tp9210
sS'DAQmxResetAIVelocityIEPESensordBRef'
p9211
((lp9212
S'int32'
p9213
ag34
a((S'taskHandle'
p9214
(lp9215
S'TaskHandle'
p9216
aNtp9217
(S'channel'
p9218
(lp9219
S'char'
p9220
a(lp9221
I-1
aaNtp9222
tp9223
tp9224
sS'DAQmxAdjust9246GainCal'
p9225
((lp9226
S'int32'
p9227
ag34
a((S'calHandle'
p9228
(lp9229
S'CalHandle'
p9230
aNtp9231
(S'channelNames'
p9232
(lp9233
S'char'
p9234
a(lp9235
I-1
aaNtp9236
(S'value'
p9237
(lp9238
S'float64'
p9239
aNtp9240
tp9241
tp9242
sS'DAQmxCreateAITorqueBridgeTwoPointLinChan'
p9243
((lp9244
S'int32'
p9245
ag34
a((S'taskHandle'
p9246
(lp9247
S'TaskHandle'
p9248
aNtp9249
(S'physicalChannel'
p9250
(lp9251
S'char'
p9252
a(lp9253
I-1
aaNtp9254
(S'nameToAssignToChannel'
p9255
(lp9256
S'char'
p9257
a(lp9258
I-1
aaNtp9259
(S'minVal'
p9260
(lp9261
S'float64'
p9262
aNtp9263
(S'maxVal'
p9264
(lp9265
S'float64'
p9266
aNtp9267
(S'units'
p9268
(lp9269
S'int32'
p9270
aNtp9271
(S'bridgeConfig'
p9272
(lp9273
S'int32'
p9274
aNtp9275
(S'voltageExcitSource'
p9276
(lp9277
S'int32'
p9278
aNtp9279
(S'voltageExcitVal'
p9280
(lp9281
S'float64'
p9282
aNtp9283
(S'nominalBridgeResistance'
p9284
(lp9285
S'float64'
p9286
aNtp9287
(S'firstElectricalVal'
p9288
(lp9289
S'float64'
p9290
aNtp9291
(S'secondElectricalVal'
p9292
(lp9293
S'float64'
p9294
aNtp9295
(S'electricalUnits'
p9296
(lp9297
S'int32'
p9298
aNtp9299
(S'firstPhysicalVal'
p9300
(lp9301
S'float64'
p9302
aNtp9303
(S'secondPhysicalVal'
p9304
(lp9305
S'float64'
p9306
aNtp9307
(S'physicalUnits'
p9308
(lp9309
S'int32'
p9310
aNtp9311
(S'customScaleName'
p9312
(lp9313
S'char'
p9314
a(lp9315
I-1
aaNtp9316
tp9317
tp9318
sS'DAQmxSetDelayFromSampClkDelayEx'
p9319
((lp9320
S'int32'
p9321
ag34
a((S'taskHandle'
p9322
(lp9323
S'TaskHandle'
p9324
aNtp9325
(S'deviceNames'
p9326
(lp9327
S'char'
p9328
a(lp9329
I-1
aaNtp9330
(S'data'
p9331
(lp9332
S'float64'
p9333
aNtp9334
tp9335
tp9336
sS'DAQmxGet9215CalAdjustPoints'
p9337
((lp9338
S'int32'
p9339
ag34
a((S'calHandle'
p9340
(lp9341
S'CalHandle'
p9342
aNtp9343
(S'adjustmentPoints'
p9344
(lp9345
S'float64'
p9346
ag42
aNtp9347
(S'bufferSize'
p9348
(lp9349
S'uInt32'
p9350
aNtp9351
tp9352
tp9353
sS'DAQmxGetReadExcitFaultChansExist'
p9354
((lp9355
S'int32'
p9356
ag34
a((S'taskHandle'
p9357
(lp9358
S'TaskHandle'
p9359
aNtp9360
(S'data'
p9361
(lp9362
S'bool32'
p9363
ag42
aNtp9364
tp9365
tp9366
sS'DAQmxGetAnlgLvlPauseTrigCoupling'
p9367
((lp9368
S'int32'
p9369
ag34
a((S'taskHandle'
p9370
(lp9371
S'TaskHandle'
p9372
aNtp9373
(S'data'
p9374
(lp9375
S'int32'
p9376
ag42
aNtp9377
tp9378
tp9379
sS'DAQmxGetCINumPossiblyInvalidSamps'
p9380
((lp9381
S'int32'
p9382
ag34
a((S'taskHandle'
p9383
(lp9384
S'TaskHandle'
p9385
aNtp9386
(S'channel'
p9387
(lp9388
S'char'
p9389
a(lp9390
I-1
aaNtp9391
(S'data'
p9392
(lp9393
S'uInt32'
p9394
ag42
aNtp9395
tp9396
tp9397
sS'DAQmxResetStartTrigRetriggerable'
p9398
((lp9399
S'int32'
p9400
ag34
a((S'taskHandle'
p9401
(lp9402
S'TaskHandle'
p9403
aNtp9404
tp9405
tp9406
sS'DAQmxResetCIDupCountPrevent'
p9407
((lp9408
S'int32'
p9409
ag34
a((S'taskHandle'
p9410
(lp9411
S'TaskHandle'
p9412
aNtp9413
(S'channel'
p9414
(lp9415
S'char'
p9416
a(lp9417
I-1
aaNtp9418
tp9419
tp9420
sS'DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseRate'
p9421
((lp9422
S'int32'
p9423
ag34
a((S'taskHandle'
p9424
(lp9425
S'TaskHandle'
p9426
aNtp9427
tp9428
tp9429
sS'DAQmxGetDelayFromSampClkDelayUnits'
p9430
((lp9431
S'int32'
p9432
ag34
a((S'taskHandle'
p9433
(lp9434
S'TaskHandle'
p9435
aNtp9436
(S'data'
p9437
(lp9438
S'int32'
p9439
ag42
aNtp9440
tp9441
tp9442
sS'DAQmxSetAIBridgeShuntCalShuntCalBActualResistance'
p9443
((lp9444
S'int32'
p9445
ag34
a((S'taskHandle'
p9446
(lp9447
S'TaskHandle'
p9448
aNtp9449
(S'channel'
p9450
(lp9451
S'char'
p9452
a(lp9453
I-1
aaNtp9454
(S'data'
p9455
(lp9456
S'float64'
p9457
aNtp9458
tp9459
tp9460
sS'DAQmxResetDelayFromSampClkDelayEx'
p9461
((lp9462
S'int32'
p9463
ag34
a((S'taskHandle'
p9464
(lp9465
S'TaskHandle'
p9466
aNtp9467
(S'deviceNames'
p9468
(lp9469
S'char'
p9470
a(lp9471
I-1
aaNtp9472
tp9473
tp9474
sS'DAQmxResetExportedRdyForXferEventOutputTerm'
p9475
((lp9476
S'int32'
p9477
ag34
a((S'taskHandle'
p9478
(lp9479
S'TaskHandle'
p9480
aNtp9481
tp9482
tp9483
sS'DAQmxGetAIFilterDelayUnits'
p9484
((lp9485
S'int32'
p9486
ag34
a((S'taskHandle'
p9487
(lp9488
S'TaskHandle'
p9489
aNtp9490
(S'channel'
p9491
(lp9492
S'char'
p9493
a(lp9494
I-1
aaNtp9495
(S'data'
p9496
(lp9497
S'int32'
p9498
ag42
aNtp9499
tp9500
tp9501
sS'DAQmxAdjust9226Cal'
p9502
((lp9503
S'int32'
p9504
ag34
a((S'calHandle'
p9505
(lp9506
S'CalHandle'
p9507
aNtp9508
(S'channelNames'
p9509
(lp9510
S'char'
p9511
a(lp9512
I-1
aaNtp9513
(S'value'
p9514
(lp9515
S'float64'
p9516
aNtp9517
tp9518
tp9519
sS'DAQmxGetAIConvTimebaseSrc'
p9520
((lp9521
S'int32'
p9522
ag34
a((S'taskHandle'
p9523
(lp9524
S'TaskHandle'
p9525
aNtp9526
(S'data'
p9527
(lp9528
S'int32'
p9529
ag42
aNtp9530
tp9531
tp9532
sS'DAQmxGetAIBridgeShuntCalShuntCalAActualResistance'
p9533
((lp9534
S'int32'
p9535
ag34
a((S'taskHandle'
p9536
(lp9537
S'TaskHandle'
p9538
aNtp9539
(S'channel'
p9540
(lp9541
S'char'
p9542
a(lp9543
I-1
aaNtp9544
(S'data'
p9545
(lp9546
S'float64'
p9547
ag42
aNtp9548
tp9549
tp9550
sS'DAQmxResetAIBridgeTwoPointLinSecondElectricalVal'
p9551
((lp9552
S'int32'
p9553
ag34
a((S'taskHandle'
p9554
(lp9555
S'TaskHandle'
p9556
aNtp9557
(S'channel'
p9558
(lp9559
S'char'
p9560
a(lp9561
I-1
aaNtp9562
tp9563
tp9564
sS'DAQmxSetExportedDataActiveEventLvlActiveLvl'
p9565
((lp9566
S'int32'
p9567
ag34
a((S'taskHandle'
p9568
(lp9569
S'TaskHandle'
p9570
aNtp9571
(S'data'
p9572
(lp9573
S'int32'
p9574
aNtp9575
tp9576
tp9577
sS'DAQmxResetCIEncoderBInputTermCfg'
p9578
((lp9579
S'int32'
p9580
ag34
a((S'taskHandle'
p9581
(lp9582
S'TaskHandle'
p9583
aNtp9584
(S'channel'
p9585
(lp9586
S'char'
p9587
a(lp9588
I-1
aaNtp9589
tp9590
tp9591
sS'DAQmxGetDigEdgeWatchdogExpirTrigEdge'
p9592
((lp9593
S'int32'
p9594
ag34
a((S'taskHandle'
p9595
(lp9596
S'TaskHandle'
p9597
aNtp9598
(S'data'
p9599
(lp9600
S'int32'
p9601
ag42
aNtp9602
tp9603
tp9604
sS'DAQmxGetWritePowerSupplyFaultChansExist'
p9605
((lp9606
S'int32'
p9607
ag34
a((S'taskHandle'
p9608
(lp9609
S'TaskHandle'
p9610
aNtp9611
(S'data'
p9612
(lp9613
S'bool32'
p9614
ag42
aNtp9615
tp9616
tp9617
sS'DAQmxResetRealTimeWriteRecoveryMode'
p9618
((lp9619
S'int32'
p9620
ag34
a((S'taskHandle'
p9621
(lp9622
S'TaskHandle'
p9623
aNtp9624
tp9625
tp9626
sS'DAQmxGetAIDigFltrEnable'
p9627
((lp9628
S'int32'
p9629
ag34
a((S'taskHandle'
p9630
(lp9631
S'TaskHandle'
p9632
aNtp9633
(S'channel'
p9634
(lp9635
S'char'
p9636
a(lp9637
I-1
aaNtp9638
(S'data'
p9639
(lp9640
S'bool32'
p9641
ag42
aNtp9642
tp9643
tp9644
sS'DAQmxGetStartTrigRetriggerable'
p9645
((lp9646
S'int32'
p9647
ag34
a((S'taskHandle'
p9648
(lp9649
S'TaskHandle'
p9650
aNtp9651
(S'data'
p9652
(lp9653
S'bool32'
p9654
ag42
aNtp9655
tp9656
tp9657
sS'DAQmxGetCIPulseTicksDigFltrEnable'
p9658
((lp9659
S'int32'
p9660
ag34
a((S'taskHandle'
p9661
(lp9662
S'TaskHandle'
p9663
aNtp9664
(S'channel'
p9665
(lp9666
S'char'
p9667
a(lp9668
I-1
aaNtp9669
(S'data'
p9670
(lp9671
S'bool32'
p9672
ag42
aNtp9673
tp9674
tp9675
sS'DAQmxSetAIEnhancedAliasRejectionEnable'
p9676
((lp9677
S'int32'
p9678
ag34
a((S'taskHandle'
p9679
(lp9680
S'TaskHandle'
p9681
aNtp9682
(S'channel'
p9683
(lp9684
S'char'
p9685
a(lp9686
I-1
aaNtp9687
(S'data'
p9688
(lp9689
S'bool32'
p9690
aNtp9691
tp9692
tp9693
sS'DAQmxGetCIPulseTimeDigFltrMinPulseWidth'
p9694
((lp9695
S'int32'
p9696
ag34
a((S'taskHandle'
p9697
(lp9698
S'TaskHandle'
p9699
aNtp9700
(S'channel'
p9701
(lp9702
S'char'
p9703
a(lp9704
I-1
aaNtp9705
(S'data'
p9706
(lp9707
S'float64'
p9708
ag42
aNtp9709
tp9710
tp9711
sS'DAQmxGetDigPatternRefTrigWhen'
p9712
((lp9713
S'int32'
p9714
ag34
a((S'taskHandle'
p9715
(lp9716
S'TaskHandle'
p9717
aNtp9718
(S'data'
p9719
(lp9720
S'int32'
p9721
ag42
aNtp9722
tp9723
tp9724
sS'DAQmxGetDIDigFltrTimebaseRate'
p9725
((lp9726
S'int32'
p9727
ag34
a((S'taskHandle'
p9728
(lp9729
S'TaskHandle'
p9730
aNtp9731
(S'channel'
p9732
(lp9733
S'char'
p9734
a(lp9735
I-1
aaNtp9736
(S'data'
p9737
(lp9738
S'float64'
p9739
ag42
aNtp9740
tp9741
tp9742
sS'DAQmxGetCIPeriodDigFltrTimebaseSrc'
p9743
((lp9744
S'int32'
p9745
ag34
a((S'taskHandle'
p9746
(lp9747
S'TaskHandle'
p9748
aNtp9749
(S'channel'
p9750
(lp9751
S'char'
p9752
a(lp9753
I-1
aaNtp9754
(S'data'
p9755
(lp9756
S'char'
p9757
ag42
aNtp9758
(S'bufferSize'
p9759
(lp9760
S'uInt32'
p9761
aNtp9762
tp9763
tp9764
sS'DAQmxGetSwitchDevRelayList'
p9765
((lp9766
S'int32'
p9767
ag34
a((S'deviceName'
p9768
(lp9769
S'char'
p9770
a(lp9771
I-1
aaNtp9772
(S'data'
p9773
(lp9774
S'char'
p9775
ag42
aNtp9776
(S'bufferSize'
p9777
(lp9778
S'uInt32'
p9779
aNtp9780
tp9781
tp9782
sS'DAQmxResetAIBridgeBalanceFinePot'
p9783
((lp9784
S'int32'
p9785
ag34
a((S'taskHandle'
p9786
(lp9787
S'TaskHandle'
p9788
aNtp9789
(S'channel'
p9790
(lp9791
S'char'
p9792
a(lp9793
I-1
aaNtp9794
tp9795
tp9796
sS'DAQmxGetSampClkTimebaseRate'
p9797
((lp9798
S'int32'
p9799
ag34
a((S'taskHandle'
p9800
(lp9801
S'TaskHandle'
p9802
aNtp9803
(S'data'
p9804
(lp9805
S'float64'
p9806
ag42
aNtp9807
tp9808
tp9809
sS'DAQmxGetCICountEdgesDir'
p9810
((lp9811
S'int32'
p9812
ag34
a((S'taskHandle'
p9813
(lp9814
S'TaskHandle'
p9815
aNtp9816
(S'channel'
p9817
(lp9818
S'char'
p9819
a(lp9820
I-1
aaNtp9821
(S'data'
p9822
(lp9823
S'int32'
p9824
ag42
aNtp9825
tp9826
tp9827
sS'DAQmxResetCIFreqEnableAveraging'
p9828
((lp9829
S'int32'
p9830
ag34
a((S'taskHandle'
p9831
(lp9832
S'TaskHandle'
p9833
aNtp9834
(S'channel'
p9835
(lp9836
S'char'
p9837
a(lp9838
I-1
aaNtp9839
tp9840
tp9841
sS'DAQmxGetDigEdgeArmStartTrigEdge'
p9842
((lp9843
S'int32'
p9844
ag34
a((S'taskHandle'
p9845
(lp9846
S'TaskHandle'
p9847
aNtp9848
(S'data'
p9849
(lp9850
S'int32'
p9851
ag42
aNtp9852
tp9853
tp9854
sS'DAQmxGetScaleTableScaledVals'
p9855
((lp9856
S'int32'
p9857
ag34
a((S'scaleName'
p9858
(lp9859
S'char'
p9860
a(lp9861
I-1
aaNtp9862
(S'data'
p9863
(lp9864
S'float64'
p9865
ag42
aNtp9866
(S'arraySizeInElements'
p9867
(lp9868
S'uInt32'
p9869
aNtp9870
tp9871
tp9872
sS'DAQmxGetStartTrigDelay'
p9873
((lp9874
S'int32'
p9875
ag34
a((S'taskHandle'
p9876
(lp9877
S'TaskHandle'
p9878
aNtp9879
(S'data'
p9880
(lp9881
S'float64'
p9882
ag42
aNtp9883
tp9884
tp9885
sS'DAQmxGetCITCReached'
p9886
((lp9887
S'int32'
p9888
ag34
a((S'taskHandle'
p9889
(lp9890
S'TaskHandle'
p9891
aNtp9892
(S'channel'
p9893
(lp9894
S'char'
p9895
a(lp9896
I-1
aaNtp9897
(S'data'
p9898
(lp9899
S'bool32'
p9900
ag42
aNtp9901
tp9902
tp9903
sS'DAQmxResetAOFuncGenSquareDutyCycle'
p9904
((lp9905
S'int32'
p9906
ag34
a((S'taskHandle'
p9907
(lp9908
S'TaskHandle'
p9909
aNtp9910
(S'channel'
p9911
(lp9912
S'char'
p9913
a(lp9914
I-1
aaNtp9915
tp9916
tp9917
sS'DAQmxSetAISampAndHoldEnable'
p9918
((lp9919
S'int32'
p9920
ag34
a((S'taskHandle'
p9921
(lp9922
S'TaskHandle'
p9923
aNtp9924
(S'channel'
p9925
(lp9926
S'char'
p9927
a(lp9928
I-1
aaNtp9929
(S'data'
p9930
(lp9931
S'bool32'
p9932
aNtp9933
tp9934
tp9935
sS'DAQmxResetAIExcitUseForScaling'
p9936
((lp9937
S'int32'
p9938
ag34
a((S'taskHandle'
p9939
(lp9940
S'TaskHandle'
p9941
aNtp9942
(S'channel'
p9943
(lp9944
S'char'
p9945
a(lp9946
I-1
aaNtp9947
tp9948
tp9949
sS'DAQmxGetWatchdogAOExpirState'
p9950
((lp9951
S'int32'
p9952
ag34
a((S'taskHandle'
p9953
(lp9954
S'TaskHandle'
p9955
aNtp9956
(S'lines'
p9957
(lp9958
S'char'
p9959
a(lp9960
I-1
aaNtp9961
(S'data'
p9962
(lp9963
S'float64'
p9964
ag42
aNtp9965
tp9966
tp9967
sS'DAQmxSetDelayFromSampClkDelayUnitsEx'
p9968
((lp9969
S'int32'
p9970
ag34
a((S'taskHandle'
p9971
(lp9972
S'TaskHandle'
p9973
aNtp9974
(S'deviceNames'
p9975
(lp9976
S'char'
p9977
a(lp9978
I-1
aaNtp9979
(S'data'
p9980
(lp9981
S'int32'
p9982
aNtp9983
tp9984
tp9985
sS'DAQmxGetDevAIFreqRngs'
p9986
((lp9987
S'int32'
p9988
ag34
a((S'device'
p9989
(lp9990
S'char'
p9991
a(lp9992
I-1
aaNtp9993
(S'data'
p9994
(lp9995
S'float64'
p9996
ag42
aNtp9997
(S'arraySizeInElements'
p9998
(lp9999
S'uInt32'
p10000
aNtp10001
tp10002
tp10003
sS'DAQmxSaveGlobalChan'
p10004
((lp10005
S'int32'
p10006
ag34
a((S'taskHandle'
p10007
(lp10008
S'TaskHandle'
p10009
aNtp10010
(S'channelName'
p10011
(lp10012
S'char'
p10013
a(lp10014
I-1
aaNtp10015
(S'saveAs'
p10016
(lp10017
S'char'
p10018
a(lp10019
I-1
aaNtp10020
(S'author'
p10021
(lp10022
S'char'
p10023
a(lp10024
I-1
aaNtp10025
(S'options'
p10026
(lp10027
S'uInt32'
p10028
aNtp10029
tp10030
tp10031
sS'DAQmxGetDevCIMaxSize'
p10032
((lp10033
S'int32'
p10034
ag34
a((S'device'
p10035
(lp10036
S'char'
p10037
a(lp10038
I-1
aaNtp10039
(S'data'
p10040
(lp10041
S'uInt32'
p10042
ag42
aNtp10043
tp10044
tp10045
sS'DAQmxAdjust9201Cal'
p10046
((lp10047
S'int32'
p10048
ag34
a((S'calHandle'
p10049
(lp10050
S'CalHandle'
p10051
aNtp10052
(S'channelNames'
p10053
(lp10054
S'char'
p10055
a(lp10056
I-1
aaNtp10057
(S'value'
p10058
(lp10059
S'float64'
p10060
aNtp10061
tp10062
tp10063
sS'DAQmxSetCISemiPeriodDigFltrTimebaseRate'
p10064
((lp10065
S'int32'
p10066
ag34
a((S'taskHandle'
p10067
(lp10068
S'TaskHandle'
p10069
aNtp10070
(S'channel'
p10071
(lp10072
S'char'
p10073
a(lp10074
I-1
aaNtp10075
(S'data'
p10076
(lp10077
S'float64'
p10078
aNtp10079
tp10080
tp10081
sS'DAQmxGetPersistedScaleAllowInteractiveDeletion'
p10082
((lp10083
S'int32'
p10084
ag34
a((S'scaleName'
p10085
(lp10086
S'char'
p10087
a(lp10088
I-1
aaNtp10089
(S'data'
p10090
(lp10091
S'bool32'
p10092
ag42
aNtp10093
tp10094
tp10095
sS'DAQmxSetAIForceIEPESensorSensitivityUnits'
p10096
((lp10097
S'int32'
p10098
ag34
a((S'taskHandle'
p10099
(lp10100
S'TaskHandle'
p10101
aNtp10102
(S'channel'
p10103
(lp10104
S'char'
p10105
a(lp10106
I-1
aaNtp10107
(S'data'
p10108
(lp10109
S'int32'
p10110
aNtp10111
tp10112
tp10113
sS'DAQmxResetAIUsbXferReqSize'
p10114
((lp10115
S'int32'
p10116
ag34
a((S'taskHandle'
p10117
(lp10118
S'TaskHandle'
p10119
aNtp10120
(S'channel'
p10121
(lp10122
S'char'
p10123
a(lp10124
I-1
aaNtp10125
tp10126
tp10127
sS'DAQmxGetExportedChangeDetectEventOutputTerm'
p10128
((lp10129
S'int32'
p10130
ag34
a((S'taskHandle'
p10131
(lp10132
S'TaskHandle'
p10133
aNtp10134
(S'data'
p10135
(lp10136
S'char'
p10137
ag42
aNtp10138
(S'bufferSize'
p10139
(lp10140
S'uInt32'
p10141
aNtp10142
tp10143
tp10144
sS'DAQmxSetAODACRefExtSrc'
p10145
((lp10146
S'int32'
p10147
ag34
a((S'taskHandle'
p10148
(lp10149
S'TaskHandle'
p10150
aNtp10151
(S'channel'
p10152
(lp10153
S'char'
p10154
a(lp10155
I-1
aaNtp10156
(S'data'
p10157
(lp10158
S'char'
p10159
ag42
aNtp10160
tp10161
tp10162
sS'DAQmxGet9203CalAdjustPoints'
p10163
((lp10164
S'int32'
p10165
ag34
a((S'calHandle'
p10166
(lp10167
S'CalHandle'
p10168
aNtp10169
(S'rangeMin'
p10170
(lp10171
S'float64'
p10172
aNtp10173
(S'rangeMax'
p10174
(lp10175
S'float64'
p10176
aNtp10177
(S'adjustmentPoints'
p10178
(lp10179
S'float64'
p10180
ag42
aNtp10181
(S'bufferSize'
p10182
(lp10183
S'uInt32'
p10184
aNtp10185
tp10186
tp10187
sS'DAQmxGetDevCISampClkSupported'
p10188
((lp10189
S'int32'
p10190
ag34
a((S'device'
p10191
(lp10192
S'char'
p10193
a(lp10194
I-1
aaNtp10195
(S'data'
p10196
(lp10197
S'bool32'
p10198
ag42
aNtp10199
tp10200
tp10201
sS'DAQmxSetAIThrmcplCJCVal'
p10202
((lp10203
S'int32'
p10204
ag34
a((S'taskHandle'
p10205
(lp10206
S'TaskHandle'
p10207
aNtp10208
(S'channel'
p10209
(lp10210
S'char'
p10211
a(lp10212
I-1
aaNtp10213
(S'data'
p10214
(lp10215
S'float64'
p10216
aNtp10217
tp10218
tp10219
sS'DAQmxResetCISemiPeriodLogicLvlBehavior'
p10220
((lp10221
S'int32'
p10222
ag34
a((S'taskHandle'
p10223
(lp10224
S'TaskHandle'
p10225
aNtp10226
(S'channel'
p10227
(lp10228
S'char'
p10229
a(lp10230
I-1
aaNtp10231
tp10232
tp10233
sS'DAQmxGetWriteOvercurrentChansExist'
p10234
((lp10235
S'int32'
p10236
ag34
a((S'taskHandle'
p10237
(lp10238
S'TaskHandle'
p10239
aNtp10240
(S'data'
p10241
(lp10242
S'bool32'
p10243
ag42
aNtp10244
tp10245
tp10246
sS'DAQmxResetDigEdgeArmStartTrigDigFltrEnable'
p10247
((lp10248
S'int32'
p10249
ag34
a((S'taskHandle'
p10250
(lp10251
S'TaskHandle'
p10252
aNtp10253
tp10254
tp10255
sS'DAQmxSetCIEncoderAInputTerm'
p10256
((lp10257
S'int32'
p10258
ag34
a((S'taskHandle'
p10259
(lp10260
S'TaskHandle'
p10261
aNtp10262
(S'channel'
p10263
(lp10264
S'char'
p10265
a(lp10266
I-1
aaNtp10267
(S'data'
p10268
(lp10269
S'char'
p10270
ag42
aNtp10271
tp10272
tp10273
sS'DAQmxSetAIRawDataCompressionType'
p10274
((lp10275
S'int32'
p10276
ag34
a((S'taskHandle'
p10277
(lp10278
S'TaskHandle'
p10279
aNtp10280
(S'channel'
p10281
(lp10282
S'char'
p10283
a(lp10284
I-1
aaNtp10285
(S'data'
p10286
(lp10287
S'int32'
p10288
aNtp10289
tp10290
tp10291
sS'DAQmxResetArmStartTrigType'
p10292
((lp10293
S'int32'
p10294
ag34
a((S'taskHandle'
p10295
(lp10296
S'TaskHandle'
p10297
aNtp10298
tp10299
tp10300
sS'DAQmxResetTimingAttribute'
p10301
((lp10302
S'int32'
p10303
ag34
a((S'taskHandle'
p10304
(lp10305
S'TaskHandle'
p10306
aNtp10307
(S'attribute'
p10308
(lp10309
S'int32'
p10310
aNtp10311
tp10312
tp10313
sS'DAQmxCreateCIFreqChan'
p10314
((lp10315
S'int32'
p10316
ag34
a((S'taskHandle'
p10317
(lp10318
S'TaskHandle'
p10319
aNtp10320
(S'counter'
p10321
(lp10322
S'char'
p10323
a(lp10324
I-1
aaNtp10325
(S'nameToAssignToChannel'
p10326
(lp10327
S'char'
p10328
a(lp10329
I-1
aaNtp10330
(S'minVal'
p10331
(lp10332
S'float64'
p10333
aNtp10334
(S'maxVal'
p10335
(lp10336
S'float64'
p10337
aNtp10338
(S'units'
p10339
(lp10340
S'int32'
p10341
aNtp10342
(S'edge'
p10343
(lp10344
S'int32'
p10345
aNtp10346
(S'measMethod'
p10347
(lp10348
S'int32'
p10349
aNtp10350
(S'measTime'
p10351
(lp10352
S'float64'
p10353
aNtp10354
(S'divisor'
p10355
(lp10356
S'uInt32'
p10357
aNtp10358
(S'customScaleName'
p10359
(lp10360
S'char'
p10361
a(lp10362
I-1
aaNtp10363
tp10364
tp10365
sS'DAQmxGetCIEncoderAInputDigFltrMinPulseWidth'
p10366
((lp10367
S'int32'
p10368
ag34
a((S'taskHandle'
p10369
(lp10370
S'TaskHandle'
p10371
aNtp10372
(S'channel'
p10373
(lp10374
S'char'
p10375
a(lp10376
I-1
aaNtp10377
(S'data'
p10378
(lp10379
S'float64'
p10380
ag42
aNtp10381
tp10382
tp10383
sS'DAQmxGetDigPatternPauseTrigSrc'
p10384
((lp10385
S'int32'
p10386
ag34
a((S'taskHandle'
p10387
(lp10388
S'TaskHandle'
p10389
aNtp10390
(S'data'
p10391
(lp10392
S'char'
p10393
ag42
aNtp10394
(S'bufferSize'
p10395
(lp10396
S'uInt32'
p10397
aNtp10398
tp10399
tp10400
sS'DAQmxGetSwitchChanMaxDCVoltage'
p10401
((lp10402
S'int32'
p10403
ag34
a((S'switchChannelName'
p10404
(lp10405
S'char'
p10406
a(lp10407
I-1
aaNtp10408
(S'data'
p10409
(lp10410
S'float64'
p10411
ag42
aNtp10412
tp10413
tp10414
sS'DAQmxGetAnlgEdgeRefTrigLvl'
p10415
((lp10416
S'int32'
p10417
ag34
a((S'taskHandle'
p10418
(lp10419
S'TaskHandle'
p10420
aNtp10421
(S'data'
p10422
(lp10423
S'float64'
p10424
ag42
aNtp10425
tp10426
tp10427
sS'DAQmxSetPhysicalChanAOManualControlEnable'
p10428
((lp10429
S'int32'
p10430
ag34
a((S'physicalChannel'
p10431
(lp10432
S'char'
p10433
a(lp10434
I-1
aaNtp10435
(S'data'
p10436
(lp10437
S'bool32'
p10438
aNtp10439
tp10440
tp10441
sS'DAQmxGetDevAOSampModes'
p10442
((lp10443
S'int32'
p10444
ag34
a((S'device'
p10445
(lp10446
S'char'
p10447
a(lp10448
I-1
aaNtp10449
(S'data'
p10450
(lp10451
S'int32'
p10452
ag42
aNtp10453
(S'arraySizeInElements'
p10454
(lp10455
S'uInt32'
p10456
aNtp10457
tp10458
tp10459
sS'DAQmxGetExportedChangeDetectEventPulsePolarity'
p10460
((lp10461
S'int32'
p10462
ag34
a((S'taskHandle'
p10463
(lp10464
S'TaskHandle'
p10465
aNtp10466
(S'data'
p10467
(lp10468
S'int32'
p10469
ag42
aNtp10470
tp10471
tp10472
sS'DAQmxGetAIResolution'
p10473
((lp10474
S'int32'
p10475
ag34
a((S'taskHandle'
p10476
(lp10477
S'TaskHandle'
p10478
aNtp10479
(S'channel'
p10480
(lp10481
S'char'
p10482
a(lp10483
I-1
aaNtp10484
(S'data'
p10485
(lp10486
S'float64'
p10487
ag42
aNtp10488
tp10489
tp10490
sS'DAQmxResetAODataXferReqCond'
p10491
((lp10492
S'int32'
p10493
ag34
a((S'taskHandle'
p10494
(lp10495
S'TaskHandle'
p10496
aNtp10497
(S'channel'
p10498
(lp10499
S'char'
p10500
a(lp10501
I-1
aaNtp10502
tp10503
tp10504
sS'DAQmxGetAOLoadImpedance'
p10505
((lp10506
S'int32'
p10507
ag34
a((S'taskHandle'
p10508
(lp10509
S'TaskHandle'
p10510
aNtp10511
(S'channel'
p10512
(lp10513
S'char'
p10514
a(lp10515
I-1
aaNtp10516
(S'data'
p10517
(lp10518
S'float64'
p10519
ag42
aNtp10520
tp10521
tp10522
sS'DAQmxResetAODACRefAllowConnToGnd'
p10523
((lp10524
S'int32'
p10525
ag34
a((S'taskHandle'
p10526
(lp10527
S'TaskHandle'
p10528
aNtp10529
(S'channel'
p10530
(lp10531
S'char'
p10532
a(lp10533
I-1
aaNtp10534
tp10535
tp10536
sS'DAQmxResetSwitchScanBreakMode'
p10537
((lp10538
S'int32'
p10539
ag34
a((S'taskHandle'
p10540
(lp10541
S'TaskHandle'
p10542
aNtp10543
tp10544
tp10545
sS'DAQmxResetExported10MHzRefClkOutputTerm'
p10546
((lp10547
S'int32'
p10548
ag34
a((S'taskHandle'
p10549
(lp10550
S'TaskHandle'
p10551
aNtp10552
tp10553
tp10554
sS'DAQmxGetAIEddyCurrentProxProbeUnits'
p10555
((lp10556
S'int32'
p10557
ag34
a((S'taskHandle'
p10558
(lp10559
S'TaskHandle'
p10560
aNtp10561
(S'channel'
p10562
(lp10563
S'char'
p10564
a(lp10565
I-1
aaNtp10566
(S'data'
p10567
(lp10568
S'int32'
p10569
ag42
aNtp10570
tp10571
tp10572
sS'DAQmxAdjust9209GainCal'
p10573
((lp10574
S'int32'
p10575
ag34
a((S'calHandle'
p10576
(lp10577
S'CalHandle'
p10578
aNtp10579
(S'channelNames'
p10580
(lp10581
S'char'
p10582
a(lp10583
I-1
aaNtp10584
(S'terminalConfig'
p10585
(lp10586
S'int32'
p10587
aNtp10588
(S'value'
p10589
(lp10590
S'float64'
p10591
aNtp10592
tp10593
tp10594
sS'DAQmxSetSwitchChanUsage'
p10595
((lp10596
S'int32'
p10597
ag34
a((S'switchChannelName'
p10598
(lp10599
S'char'
p10600
a(lp10601
I-1
aaNtp10602
(S'data'
p10603
(lp10604
S'int32'
p10605
aNtp10606
tp10607
tp10608
sS'DAQmxResetAIBridgePolyReverseCoeff'
p10609
((lp10610
S'int32'
p10611
ag34
a((S'taskHandle'
p10612
(lp10613
S'TaskHandle'
p10614
aNtp10615
(S'channel'
p10616
(lp10617
S'char'
p10618
a(lp10619
I-1
aaNtp10620
tp10621
tp10622
sS'DAQmxGetCIPeriodDigFltrTimebaseRate'
p10623
((lp10624
S'int32'
p10625
ag34
a((S'taskHandle'
p10626
(lp10627
S'TaskHandle'
p10628
aNtp10629
(S'channel'
p10630
(lp10631
S'char'
p10632
a(lp10633
I-1
aaNtp10634
(S'data'
p10635
(lp10636
S'float64'
p10637
ag42
aNtp10638
tp10639
tp10640
sS'DAQmxSetExportedAIHoldCmpltEventOutputTerm'
p10641
((lp10642
S'int32'
p10643
ag34
a((S'taskHandle'
p10644
(lp10645
S'TaskHandle'
p10646
aNtp10647
(S'data'
p10648
(lp10649
S'char'
p10650
ag42
aNtp10651
tp10652
tp10653
sS'DAQmxGetAIExcitVal'
p10654
((lp10655
S'int32'
p10656
ag34
a((S'taskHandle'
p10657
(lp10658
S'TaskHandle'
p10659
aNtp10660
(S'channel'
p10661
(lp10662
S'char'
p10663
a(lp10664
I-1
aaNtp10665
(S'data'
p10666
(lp10667
S'float64'
p10668
ag42
aNtp10669
tp10670
tp10671
sS'DAQmxSetAIUsbXferReqCount'
p10672
((lp10673
S'int32'
p10674
ag34
a((S'taskHandle'
p10675
(lp10676
S'TaskHandle'
p10677
aNtp10678
(S'channel'
p10679
(lp10680
S'char'
p10681
a(lp10682
I-1
aaNtp10683
(S'data'
p10684
(lp10685
S'uInt32'
p10686
aNtp10687
tp10688
tp10689
sS'DAQmxSetAODACOffsetSrc'
p10690
((lp10691
S'int32'
p10692
ag34
a((S'taskHandle'
p10693
(lp10694
S'TaskHandle'
p10695
aNtp10696
(S'channel'
p10697
(lp10698
S'char'
p10699
a(lp10700
I-1
aaNtp10701
(S'data'
p10702
(lp10703
S'int32'
p10704
aNtp10705
tp10706
tp10707
sS'DAQmxCreateAIDeviceTempChan'
p10708
((lp10709
S'int32'
p10710
ag34
a((S'taskHandle'
p10711
(lp10712
S'TaskHandle'
p10713
aNtp10714
(S'physicalChannel'
p10715
(lp10716
S'char'
p10717
a(lp10718
I-1
aaNtp10719
(S'nameToAssignToChannel'
p10720
(lp10721
S'char'
p10722
a(lp10723
I-1
aaNtp10724
(S'units'
p10725
(lp10726
S'int32'
p10727
aNtp10728
tp10729
tp10730
sS'DAQmxGetReadOpenCurrentLoopChansExist'
p10731
((lp10732
S'int32'
p10733
ag34
a((S'taskHandle'
p10734
(lp10735
S'TaskHandle'
p10736
aNtp10737
(S'data'
p10738
(lp10739
S'bool32'
p10740
ag42
aNtp10741
tp10742
tp10743
sS'DAQmxCreateCOPulseChanFreq'
p10744
((lp10745
S'int32'
p10746
ag34
a((S'taskHandle'
p10747
(lp10748
S'TaskHandle'
p10749
aNtp10750
(S'counter'
p10751
(lp10752
S'char'
p10753
a(lp10754
I-1
aaNtp10755
(S'nameToAssignToChannel'
p10756
(lp10757
S'char'
p10758
a(lp10759
I-1
aaNtp10760
(S'units'
p10761
(lp10762
S'int32'
p10763
aNtp10764
(S'idleState'
p10765
(lp10766
S'int32'
p10767
aNtp10768
(S'initialDelay'
p10769
(lp10770
S'float64'
p10771
aNtp10772
(S'freq'
p10773
(lp10774
S'float64'
p10775
aNtp10776
(S'dutyCycle'
p10777
(lp10778
S'float64'
p10779
aNtp10780
tp10781
tp10782
sS'DAQmxResetSyncClkInterval'
p10783
((lp10784
S'int32'
p10785
ag34
a((S'taskHandle'
p10786
(lp10787
S'TaskHandle'
p10788
aNtp10789
tp10790
tp10791
sS'DAQmxGetAIBridgePolyForwardCoeff'
p10792
((lp10793
S'int32'
p10794
ag34
a((S'taskHandle'
p10795
(lp10796
S'TaskHandle'
p10797
aNtp10798
(S'channel'
p10799
(lp10800
S'char'
p10801
a(lp10802
I-1
aaNtp10803
(S'data'
p10804
(lp10805
S'float64'
p10806
ag42
aNtp10807
(S'arraySizeInElements'
p10808
(lp10809
S'uInt32'
p10810
aNtp10811
tp10812
tp10813
sS'DAQmxGetAITempUnits'
p10814
((lp10815
S'int32'
p10816
ag34
a((S'taskHandle'
p10817
(lp10818
S'TaskHandle'
p10819
aNtp10820
(S'channel'
p10821
(lp10822
S'char'
p10823
a(lp10824
I-1
aaNtp10825
(S'data'
p10826
(lp10827
S'int32'
p10828
ag42
aNtp10829
tp10830
tp10831
sS'DAQmxGetAOUseOnlyOnBrdMem'
p10832
((lp10833
S'int32'
p10834
ag34
a((S'taskHandle'
p10835
(lp10836
S'TaskHandle'
p10837
aNtp10838
(S'channel'
p10839
(lp10840
S'char'
p10841
a(lp10842
I-1
aaNtp10843
(S'data'
p10844
(lp10845
S'bool32'
p10846
ag42
aNtp10847
tp10848
tp10849
sS'DAQmxGetAOOutputType'
p10850
((lp10851
S'int32'
p10852
ag34
a((S'taskHandle'
p10853
(lp10854
S'TaskHandle'
p10855
aNtp10856
(S'channel'
p10857
(lp10858
S'char'
p10859
a(lp10860
I-1
aaNtp10861
(S'data'
p10862
(lp10863
S'int32'
p10864
ag42
aNtp10865
tp10866
tp10867
sS'DAQmxSetCIEncoderBInputLogicLvlBehavior'
p10868
((lp10869
S'int32'
p10870
ag34
a((S'taskHandle'
p10871
(lp10872
S'TaskHandle'
p10873
aNtp10874
(S'channel'
p10875
(lp10876
S'char'
p10877
a(lp10878
I-1
aaNtp10879
(S'data'
p10880
(lp10881
S'int32'
p10882
aNtp10883
tp10884
tp10885
sS'DAQmxResetAIDigFltrHighpassCutoffFreq'
p10886
((lp10887
S'int32'
p10888
ag34
a((S'taskHandle'
p10889
(lp10890
S'TaskHandle'
p10891
aNtp10892
(S'channel'
p10893
(lp10894
S'char'
p10895
a(lp10896
I-1
aaNtp10897
tp10898
tp10899
sS'DAQmxGet9201CalAdjustPoints'
p10900
((lp10901
S'int32'
p10902
ag34
a((S'calHandle'
p10903
(lp10904
S'CalHandle'
p10905
aNtp10906
(S'adjustmentPoints'
p10907
(lp10908
S'float64'
p10909
ag42
aNtp10910
(S'bufferSize'
p10911
(lp10912
S'uInt32'
p10913
aNtp10914
tp10915
tp10916
sS'DAQmxGetAIVelocityIEPESensordBRef'
p10917
((lp10918
S'int32'
p10919
ag34
a((S'taskHandle'
p10920
(lp10921
S'TaskHandle'
p10922
aNtp10923
(S'channel'
p10924
(lp10925
S'char'
p10926
a(lp10927
I-1
aaNtp10928
(S'data'
p10929
(lp10930
S'float64'
p10931
ag42
aNtp10932
tp10933
tp10934
sS'DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseRate'
p10935
((lp10936
S'int32'
p10937
ag34
a((S'taskHandle'
p10938
(lp10939
S'TaskHandle'
p10940
aNtp10941
(S'data'
p10942
(lp10943
S'float64'
p10944
aNtp10945
tp10946
tp10947
sS'DAQmxGetRealTimeWaitForNextSampClkWaitMode'
p10948
((lp10949
S'int32'
p10950
ag34
a((S'taskHandle'
p10951
(lp10952
S'TaskHandle'
p10953
aNtp10954
(S'data'
p10955
(lp10956
S'int32'
p10957
ag42
aNtp10958
tp10959
tp10960
sS'DAQmxSetRealTimeConvLateErrorsToWarnings'
p10961
((lp10962
S'int32'
p10963
ag34
a((S'taskHandle'
p10964
(lp10965
S'TaskHandle'
p10966
aNtp10967
(S'data'
p10968
(lp10969
S'bool32'
p10970
aNtp10971
tp10972
tp10973
sS'DAQmxSetAILowpassSwitchCapExtClkDiv'
p10974
((lp10975
S'int32'
p10976
ag34
a((S'taskHandle'
p10977
(lp10978
S'TaskHandle'
p10979
aNtp10980
(S'channel'
p10981
(lp10982
S'char'
p10983
a(lp10984
I-1
aaNtp10985
(S'data'
p10986
(lp10987
S'uInt32'
p10988
aNtp10989
tp10990
tp10991
sS'DAQmxSetAnlgEdgeStartTrigDigSyncEnable'
p10992
((lp10993
S'int32'
p10994
ag34
a((S'taskHandle'
p10995
(lp10996
S'TaskHandle'
p10997
aNtp10998
(S'data'
p10999
(lp11000
S'bool32'
p11001
aNtp11002
tp11003
tp11004
sS'DAQmxGetAIBridgeShuntCalShuntCalASrc'
p11005
((lp11006
S'int32'
p11007
ag34
a((S'taskHandle'
p11008
(lp11009
S'TaskHandle'
p11010
aNtp11011
(S'channel'
p11012
(lp11013
S'char'
p11014
a(lp11015
I-1
aaNtp11016
(S'data'
p11017
(lp11018
S'int32'
p11019
ag42
aNtp11020
tp11021
tp11022
sS'DAQmxResetAnlgEdgeRefTrigDigFltrEnable'
p11023
((lp11024
S'int32'
p11025
ag34
a((S'taskHandle'
p11026
(lp11027
S'TaskHandle'
p11028
aNtp11029
tp11030
tp11031
sS'DAQmxResetCOPulseTimeInitialDelay'
p11032
((lp11033
S'int32'
p11034
ag34
a((S'taskHandle'
p11035
(lp11036
S'TaskHandle'
p11037
aNtp11038
(S'channel'
p11039
(lp11040
S'char'
p11041
a(lp11042
I-1
aaNtp11043
tp11044
tp11045
sS'DAQmxSetCIEncoderZInputTerm'
p11046
((lp11047
S'int32'
p11048
ag34
a((S'taskHandle'
p11049
(lp11050
S'TaskHandle'
p11051
aNtp11052
(S'channel'
p11053
(lp11054
S'char'
p11055
a(lp11056
I-1
aaNtp11057
(S'data'
p11058
(lp11059
S'char'
p11060
ag42
aNtp11061
tp11062
tp11063
sS'DAQmxResetAOFuncGenFreq'
p11064
((lp11065
S'int32'
p11066
ag34
a((S'taskHandle'
p11067
(lp11068
S'TaskHandle'
p11069
aNtp11070
(S'channel'
p11071
(lp11072
S'char'
p11073
a(lp11074
I-1
aaNtp11075
tp11076
tp11077
sS'DAQmxSetCIGPSSyncSrc'
p11078
((lp11079
S'int32'
p11080
ag34
a((S'taskHandle'
p11081
(lp11082
S'TaskHandle'
p11083
aNtp11084
(S'channel'
p11085
(lp11086
S'char'
p11087
a(lp11088
I-1
aaNtp11089
(S'data'
p11090
(lp11091
S'char'
p11092
ag42
aNtp11093
tp11094
tp11095
sS'DAQmxSetAITermCfg'
p11096
((lp11097
S'int32'
p11098
ag34
a((S'taskHandle'
p11099
(lp11100
S'TaskHandle'
p11101
aNtp11102
(S'channel'
p11103
(lp11104
S'char'
p11105
a(lp11106
I-1
aaNtp11107
(S'data'
p11108
(lp11109
S'int32'
p11110
aNtp11111
tp11112
tp11113
sS'DAQmxGetAIStrainGageCfg'
p11114
((lp11115
S'int32'
p11116
ag34
a((S'taskHandle'
p11117
(lp11118
S'TaskHandle'
p11119
aNtp11120
(S'channel'
p11121
(lp11122
S'char'
p11123
a(lp11124
I-1
aaNtp11125
(S'data'
p11126
(lp11127
S'int32'
p11128
ag42
aNtp11129
tp11130
tp11131
sS'DAQmxResetSampClkTimebaseRate'
p11132
((lp11133
S'int32'
p11134
ag34
a((S'taskHandle'
p11135
(lp11136
S'TaskHandle'
p11137
aNtp11138
tp11139
tp11140
sS'DAQmxGetCIEncoderBInputDigFltrTimebaseRate'
p11141
((lp11142
S'int32'
p11143
ag34
a((S'taskHandle'
p11144
(lp11145
S'TaskHandle'
p11146
aNtp11147
(S'channel'
p11148
(lp11149
S'char'
p11150
a(lp11151
I-1
aaNtp11152
(S'data'
p11153
(lp11154
S'float64'
p11155
ag42
aNtp11156
tp11157
tp11158
sS'DAQmxReadCounterScalarU32'
p11159
((lp11160
S'int32'
p11161
ag34
a((S'taskHandle'
p11162
(lp11163
S'TaskHandle'
p11164
aNtp11165
(S'timeout'
p11166
(lp11167
S'float64'
p11168
aNtp11169
(S'value'
p11170
(lp11171
S'uInt32'
p11172
ag42
aNtp11173
(S'reserved'
p11174
(lp11175
S'bool32'
p11176
ag42
aNtp11177
tp11178
tp11179
sS'DAQmxAdjust9232Cal'
p11180
((lp11181
S'int32'
p11182
ag34
a((S'calHandle'
p11183
(lp11184
S'CalHandle'
p11185
aNtp11186
(S'channelNames'
p11187
(lp11188
S'char'
p11189
a(lp11190
I-1
aaNtp11191
(S'value'
p11192
(lp11193
S'float64'
p11194
aNtp11195
tp11196
tp11197
sS'DAQmxGetAIDCOffset'
p11198
((lp11199
S'int32'
p11200
ag34
a((S'taskHandle'
p11201
(lp11202
S'TaskHandle'
p11203
aNtp11204
(S'channel'
p11205
(lp11206
S'char'
p11207
a(lp11208
I-1
aaNtp11209
(S'data'
p11210
(lp11211
S'float64'
p11212
ag42
aNtp11213
tp11214
tp11215
sS'DAQmxSetCIMemMapEnable'
p11216
((lp11217
S'int32'
p11218
ag34
a((S'taskHandle'
p11219
(lp11220
S'TaskHandle'
p11221
aNtp11222
(S'channel'
p11223
(lp11224
S'char'
p11225
a(lp11226
I-1
aaNtp11227
(S'data'
p11228
(lp11229
S'bool32'
p11230
aNtp11231
tp11232
tp11233
sS'DAQmxResetAIAccelSensitivity'
p11234
((lp11235
S'int32'
p11236
ag34
a((S'taskHandle'
p11237
(lp11238
S'TaskHandle'
p11239
aNtp11240
(S'channel'
p11241
(lp11242
S'char'
p11243
a(lp11244
I-1
aaNtp11245
tp11246
tp11247
sS'DAQmxSetAIVoltagedBRef'
p11248
((lp11249
S'int32'
p11250
ag34
a((S'taskHandle'
p11251
(lp11252
S'TaskHandle'
p11253
aNtp11254
(S'channel'
p11255
(lp11256
S'char'
p11257
a(lp11258
I-1
aaNtp11259
(S'data'
p11260
(lp11261
S'float64'
p11262
aNtp11263
tp11264
tp11265
sS'DAQmxGetPhysicalChanCOSupportedOutputTypes'
p11266
((lp11267
S'int32'
p11268
ag34
a((S'physicalChannel'
p11269
(lp11270
S'char'
p11271
a(lp11272
I-1
aaNtp11273
(S'data'
p11274
(lp11275
S'int32'
p11276
ag42
aNtp11277
(S'arraySizeInElements'
p11278
(lp11279
S'uInt32'
p11280
aNtp11281
tp11282
tp11283
sS'DAQmxResetCOCtrTimebaseDigFltrEnable'
p11284
((lp11285
S'int32'
p11286
ag34
a((S'taskHandle'
p11287
(lp11288
S'TaskHandle'
p11289
aNtp11290
(S'channel'
p11291
(lp11292
S'char'
p11293
a(lp11294
I-1
aaNtp11295
tp11296
tp11297
sS'DAQmxSetCICtrTimebaseSrc'
p11298
((lp11299
S'int32'
p11300
ag34
a((S'taskHandle'
p11301
(lp11302
S'TaskHandle'
p11303
aNtp11304
(S'channel'
p11305
(lp11306
S'char'
p11307
a(lp11308
I-1
aaNtp11309
(S'data'
p11310
(lp11311
S'char'
p11312
ag42
aNtp11313
tp11314
tp11315
sS'DAQmxResetCICountEdgesDirTerm'
p11316
((lp11317
S'int32'
p11318
ag34
a((S'taskHandle'
p11319
(lp11320
S'TaskHandle'
p11321
aNtp11322
(S'channel'
p11323
(lp11324
S'char'
p11325
a(lp11326
I-1
aaNtp11327
tp11328
tp11329
sS'DAQmxResetAIBridgeShuntCalShuntCalASrc'
p11330
((lp11331
S'int32'
p11332
ag34
a((S'taskHandle'
p11333
(lp11334
S'TaskHandle'
p11335
aNtp11336
(S'channel'
p11337
(lp11338
S'char'
p11339
a(lp11340
I-1
aaNtp11341
tp11342
tp11343
sS'DAQmxResetAIBridgeInitialVoltage'
p11344
((lp11345
S'int32'
p11346
ag34
a((S'taskHandle'
p11347
(lp11348
S'TaskHandle'
p11349
aNtp11350
(S'channel'
p11351
(lp11352
S'char'
p11353
a(lp11354
I-1
aaNtp11355
tp11356
tp11357
sS'DAQmxGetDelayFromSampClkDelayEx'
p11358
((lp11359
S'int32'
p11360
ag34
a((S'taskHandle'
p11361
(lp11362
S'TaskHandle'
p11363
aNtp11364
(S'deviceNames'
p11365
(lp11366
S'char'
p11367
a(lp11368
I-1
aaNtp11369
(S'data'
p11370
(lp11371
S'float64'
p11372
ag42
aNtp11373
tp11374
tp11375
sS'DAQmxGetExportedHshkEventOutputTerm'
p11376
((lp11377
S'int32'
p11378
ag34
a((S'taskHandle'
p11379
(lp11380
S'TaskHandle'
p11381
aNtp11382
(S'data'
p11383
(lp11384
S'char'
p11385
ag42
aNtp11386
(S'bufferSize'
p11387
(lp11388
S'uInt32'
p11389
aNtp11390
tp11391
tp11392
sS'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p11393
((lp11394
S'int32'
p11395
ag34
a((S'taskHandle'
p11396
(lp11397
S'TaskHandle'
p11398
aNtp11399
(S'channel'
p11400
(lp11401
S'char'
p11402
a(lp11403
I-1
aaNtp11404
(S'data'
p11405
(lp11406
S'char'
p11407
ag42
aNtp11408
(S'bufferSize'
p11409
(lp11410
S'uInt32'
p11411
aNtp11412
tp11413
tp11414
sS'DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate'
p11415
((lp11416
S'int32'
p11417
ag34
a((S'taskHandle'
p11418
(lp11419
S'TaskHandle'
p11420
aNtp11421
(S'channel'
p11422
(lp11423
S'char'
p11424
a(lp11425
I-1
aaNtp11426
tp11427
tp11428
sS'DAQmxResetAIRemoveFilterDelay'
p11429
((lp11430
S'int32'
p11431
ag34
a((S'taskHandle'
p11432
(lp11433
S'TaskHandle'
p11434
aNtp11435
(S'channel'
p11436
(lp11437
S'char'
p11438
a(lp11439
I-1
aaNtp11440
tp11441
tp11442
sS'DAQmxSetExportedHshkEventInterlockedDeassertDelay'
p11443
((lp11444
S'int32'
p11445
ag34
a((S'taskHandle'
p11446
(lp11447
S'TaskHandle'
p11448
aNtp11449
(S'data'
p11450
(lp11451
S'float64'
p11452
aNtp11453
tp11454
tp11455
sS'DAQmxSetLoggingSampsPerFile'
p11456
((lp11457
S'int32'
p11458
ag34
a((S'taskHandle'
p11459
(lp11460
S'TaskHandle'
p11461
aNtp11462
(S'data'
p11463
(lp11464
S'uInt64'
p11465
aNtp11466
tp11467
tp11468
sS'DAQmxResetAIConvSrc'
p11469
((lp11470
S'int32'
p11471
ag34
a((S'taskHandle'
p11472
(lp11473
S'TaskHandle'
p11474
aNtp11475
tp11476
tp11477
sS'DAQmxSetCIDataXferMech'
p11478
((lp11479
S'int32'
p11480
ag34
a((S'taskHandle'
p11481
(lp11482
S'TaskHandle'
p11483
aNtp11484
(S'channel'
p11485
(lp11486
S'char'
p11487
a(lp11488
I-1
aaNtp11489
(S'data'
p11490
(lp11491
S'int32'
p11492
aNtp11493
tp11494
tp11495
sS'DAQmxCreateAIAccelChan'
p11496
((lp11497
S'int32'
p11498
ag34
a((S'taskHandle'
p11499
(lp11500
S'TaskHandle'
p11501
aNtp11502
(S'physicalChannel'
p11503
(lp11504
S'char'
p11505
a(lp11506
I-1
aaNtp11507
(S'nameToAssignToChannel'
p11508
(lp11509
S'char'
p11510
a(lp11511
I-1
aaNtp11512
(S'terminalConfig'
p11513
(lp11514
S'int32'
p11515
aNtp11516
(S'minVal'
p11517
(lp11518
S'float64'
p11519
aNtp11520
(S'maxVal'
p11521
(lp11522
S'float64'
p11523
aNtp11524
(S'units'
p11525
(lp11526
S'int32'
p11527
aNtp11528
(S'sensitivity'
p11529
(lp11530
S'float64'
p11531
aNtp11532
(S'sensitivityUnits'
p11533
(lp11534
S'int32'
p11535
aNtp11536
(S'currentExcitSource'
p11537
(lp11538
S'int32'
p11539
aNtp11540
(S'currentExcitVal'
p11541
(lp11542
S'float64'
p11543
aNtp11544
(S'customScaleName'
p11545
(lp11546
S'char'
p11547
a(lp11548
I-1
aaNtp11549
tp11550
tp11551
sS'DAQmxSetDIDigFltrEnable'
p11552
((lp11553
S'int32'
p11554
ag34
a((S'taskHandle'
p11555
(lp11556
S'TaskHandle'
p11557
aNtp11558
(S'channel'
p11559
(lp11560
S'char'
p11561
a(lp11562
I-1
aaNtp11563
(S'data'
p11564
(lp11565
S'bool32'
p11566
aNtp11567
tp11568
tp11569
sS'DAQmxGet9246CalAdjustPoints'
p11570
((lp11571
S'int32'
p11572
ag34
a((S'calHandle'
p11573
(lp11574
S'CalHandle'
p11575
aNtp11576
(S'adjustmentPoints'
p11577
(lp11578
S'float64'
p11579
ag42
aNtp11580
(S'bufferSize'
p11581
(lp11582
S'uInt32'
p11583
aNtp11584
tp11585
tp11586
sS'DAQmxGetAILowpassCutoffFreq'
p11587
((lp11588
S'int32'
p11589
ag34
a((S'taskHandle'
p11590
(lp11591
S'TaskHandle'
p11592
aNtp11593
(S'channel'
p11594
(lp11595
S'char'
p11596
a(lp11597
I-1
aaNtp11598
(S'data'
p11599
(lp11600
S'float64'
p11601
ag42
aNtp11602
tp11603
tp11604
sS'DAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc'
p11605
((lp11606
S'int32'
p11607
ag34
a((S'taskHandle'
p11608
(lp11609
S'TaskHandle'
p11610
aNtp11611
(S'data'
p11612
(lp11613
S'char'
p11614
ag42
aNtp11615
tp11616
tp11617
sS'DAQmxResetHshkDelayAfterXfer'
p11618
((lp11619
S'int32'
p11620
ag34
a((S'taskHandle'
p11621
(lp11622
S'TaskHandle'
p11623
aNtp11624
tp11625
tp11626
sS'DAQmxWriteAnalogScalarF64'
p11627
((lp11628
S'int32'
p11629
ag34
a((S'taskHandle'
p11630
(lp11631
S'TaskHandle'
p11632
aNtp11633
(S'autoStart'
p11634
(lp11635
S'bool32'
p11636
aNtp11637
(S'timeout'
p11638
(lp11639
S'float64'
p11640
aNtp11641
(S'value'
p11642
(lp11643
S'float64'
p11644
aNtp11645
(S'reserved'
p11646
(lp11647
S'bool32'
p11648
ag42
aNtp11649
tp11650
tp11651
sS'DAQmxResetAIProbeAtten'
p11652
((lp11653
S'int32'
p11654
ag34
a((S'taskHandle'
p11655
(lp11656
S'TaskHandle'
p11657
aNtp11658
(S'channel'
p11659
(lp11660
S'char'
p11661
a(lp11662
I-1
aaNtp11663
tp11664
tp11665
sS'DAQmxResetCOCtrTimebaseDigFltrTimebaseRate'
p11666
((lp11667
S'int32'
p11668
ag34
a((S'taskHandle'
p11669
(lp11670
S'TaskHandle'
p11671
aNtp11672
(S'channel'
p11673
(lp11674
S'char'
p11675
a(lp11676
I-1
aaNtp11677
tp11678
tp11679
sS'DAQmxGetWriteTotalSampPerChanGenerated'
p11680
((lp11681
S'int32'
p11682
ag34
a((S'taskHandle'
p11683
(lp11684
S'TaskHandle'
p11685
aNtp11686
(S'data'
p11687
(lp11688
S'uInt64'
p11689
ag42
aNtp11690
tp11691
tp11692
sS'DAQmxSetCIFreqTerm'
p11693
((lp11694
S'int32'
p11695
ag34
a((S'taskHandle'
p11696
(lp11697
S'TaskHandle'
p11698
aNtp11699
(S'channel'
p11700
(lp11701
S'char'
p11702
a(lp11703
I-1
aaNtp11704
(S'data'
p11705
(lp11706
S'char'
p11707
ag42
aNtp11708
tp11709
tp11710
sS'DAQmxSetCIPulseWidthUnits'
p11711
((lp11712
S'int32'
p11713
ag34
a((S'taskHandle'
p11714
(lp11715
S'TaskHandle'
p11716
aNtp11717
(S'channel'
p11718
(lp11719
S'char'
p11720
a(lp11721
I-1
aaNtp11722
(S'data'
p11723
(lp11724
S'int32'
p11725
aNtp11726
tp11727
tp11728
sS'DAQmxSetCIPeriodDigSyncEnable'
p11729
((lp11730
S'int32'
p11731
ag34
a((S'taskHandle'
p11732
(lp11733
S'TaskHandle'
p11734
aNtp11735
(S'channel'
p11736
(lp11737
S'char'
p11738
a(lp11739
I-1
aaNtp11740
(S'data'
p11741
(lp11742
S'bool32'
p11743
aNtp11744
tp11745
tp11746
sS'DAQmxResetExportedStartTrigPulsePolarity'
p11747
((lp11748
S'int32'
p11749
ag34
a((S'taskHandle'
p11750
(lp11751
S'TaskHandle'
p11752
aNtp11753
tp11754
tp11755
sS'DAQmxResetCICountEdgesDigFltrTimebaseSrc'
p11756
((lp11757
S'int32'
p11758
ag34
a((S'taskHandle'
p11759
(lp11760
S'TaskHandle'
p11761
aNtp11762
(S'channel'
p11763
(lp11764
S'char'
p11765
a(lp11766
I-1
aaNtp11767
tp11768
tp11769
sS'DAQmxSetCIPulseTimeDigSyncEnable'
p11770
((lp11771
S'int32'
p11772
ag34
a((S'taskHandle'
p11773
(lp11774
S'TaskHandle'
p11775
aNtp11776
(S'channel'
p11777
(lp11778
S'char'
p11779
a(lp11780
I-1
aaNtp11781
(S'data'
p11782
(lp11783
S'bool32'
p11784
aNtp11785
tp11786
tp11787
sS'DAQmxSetAOReglitchEnable'
p11788
((lp11789
S'int32'
p11790
ag34
a((S'taskHandle'
p11791
(lp11792
S'TaskHandle'
p11793
aNtp11794
(S'channel'
p11795
(lp11796
S'char'
p11797
a(lp11798
I-1
aaNtp11799
(S'data'
p11800
(lp11801
S'bool32'
p11802
aNtp11803
tp11804
tp11805
sS'DAQmxAdjustTIOTimebaseCal'
p11806
((lp11807
S'int32'
p11808
ag34
a((S'calHandle'
p11809
(lp11810
S'CalHandle'
p11811
aNtp11812
(S'referenceFrequency'
p11813
(lp11814
S'float64'
p11815
aNtp11816
tp11817
tp11818
sS'DAQmxResetCIPulseWidthDigFltrEnable'
p11819
((lp11820
S'int32'
p11821
ag34
a((S'taskHandle'
p11822
(lp11823
S'TaskHandle'
p11824
aNtp11825
(S'channel'
p11826
(lp11827
S'char'
p11828
a(lp11829
I-1
aaNtp11830
tp11831
tp11832
sS'DAQmxResetSampClkTimebaseDiv'
p11833
((lp11834
S'int32'
p11835
ag34
a((S'taskHandle'
p11836
(lp11837
S'TaskHandle'
p11838
aNtp11839
tp11840
tp11841
sS'DAQmxGetSampQuantSampPerChan'
p11842
((lp11843
S'int32'
p11844
ag34
a((S'taskHandle'
p11845
(lp11846
S'TaskHandle'
p11847
aNtp11848
(S'data'
p11849
(lp11850
S'uInt64'
p11851
ag42
aNtp11852
tp11853
tp11854
sS'DAQmxResetAIExcitSrc'
p11855
((lp11856
S'int32'
p11857
ag34
a((S'taskHandle'
p11858
(lp11859
S'TaskHandle'
p11860
aNtp11861
(S'channel'
p11862
(lp11863
S'char'
p11864
a(lp11865
I-1
aaNtp11866
tp11867
tp11868
sS'DAQmxResetAnlgWinRefTrigWhen'
p11869
((lp11870
S'int32'
p11871
ag34
a((S'taskHandle'
p11872
(lp11873
S'TaskHandle'
p11874
aNtp11875
tp11876
tp11877
sS'DAQmxSetDIMemMapEnable'
p11878
((lp11879
S'int32'
p11880
ag34
a((S'taskHandle'
p11881
(lp11882
S'TaskHandle'
p11883
aNtp11884
(S'channel'
p11885
(lp11886
S'char'
p11887
a(lp11888
I-1
aaNtp11889
(S'data'
p11890
(lp11891
S'bool32'
p11892
aNtp11893
tp11894
tp11895
sS'DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc'
p11896
((lp11897
S'int32'
p11898
ag34
a((S'taskHandle'
p11899
(lp11900
S'TaskHandle'
p11901
aNtp11902
(S'channel'
p11903
(lp11904
S'char'
p11905
a(lp11906
I-1
aaNtp11907
tp11908
tp11909
sS'DAQmxSetAIChanCalVerifAcqVals'
p11910
((lp11911
S'int32'
p11912
ag34
a((S'taskHandle'
p11913
(lp11914
S'TaskHandle'
p11915
aNtp11916
(S'channel'
p11917
(lp11918
S'char'
p11919
a(lp11920
I-1
aaNtp11921
(S'data'
p11922
(lp11923
S'float64'
p11924
ag42
aNtp11925
(S'arraySizeInElements'
p11926
(lp11927
S'uInt32'
p11928
aNtp11929
tp11930
tp11931
sS'DAQmxGetDIDataXferReqCond'
p11932
((lp11933
S'int32'
p11934
ag34
a((S'taskHandle'
p11935
(lp11936
S'TaskHandle'
p11937
aNtp11938
(S'channel'
p11939
(lp11940
S'char'
p11941
a(lp11942
I-1
aaNtp11943
(S'data'
p11944
(lp11945
S'int32'
p11946
ag42
aNtp11947
tp11948
tp11949
sS'DAQmxSetAIConvSrcEx'
p11950
((lp11951
S'int32'
p11952
ag34
a((S'taskHandle'
p11953
(lp11954
S'TaskHandle'
p11955
aNtp11956
(S'deviceNames'
p11957
(lp11958
S'char'
p11959
a(lp11960
I-1
aaNtp11961
(S'data'
p11962
(lp11963
S'char'
p11964
ag42
aNtp11965
tp11966
tp11967
sS'DAQmxSwitchSetTopologyAndReset'
p11968
((lp11969
S'int32'
p11970
ag34
a((S'deviceName'
p11971
(lp11972
S'char'
p11973
a(lp11974
I-1
aaNtp11975
(S'newTopology'
p11976
(lp11977
S'char'
p11978
a(lp11979
I-1
aaNtp11980
tp11981
tp11982
sS'DAQmxSetCIPulseTimeDigFltrEnable'
p11983
((lp11984
S'int32'
p11985
ag34
a((S'taskHandle'
p11986
(lp11987
S'TaskHandle'
p11988
aNtp11989
(S'channel'
p11990
(lp11991
S'char'
p11992
a(lp11993
I-1
aaNtp11994
(S'data'
p11995
(lp11996
S'bool32'
p11997
aNtp11998
tp11999
tp12000
sS'DAQmxResetAnlgEdgeStartTrigDigFltrMinPulseWidth'
p12001
((lp12002
S'int32'
p12003
ag34
a((S'taskHandle'
p12004
(lp12005
S'TaskHandle'
p12006
aNtp12007
tp12008
tp12009
sS'DAQmxSetSyncPulseSrc'
p12010
((lp12011
S'int32'
p12012
ag34
a((S'taskHandle'
p12013
(lp12014
S'TaskHandle'
p12015
aNtp12016
(S'data'
p12017
(lp12018
S'char'
p12019
ag42
aNtp12020
tp12021
tp12022
sS'DAQmxSetAOUsbXferReqSize'
p12023
((lp12024
S'int32'
p12025
ag34
a((S'taskHandle'
p12026
(lp12027
S'TaskHandle'
p12028
aNtp12029
(S'channel'
p12030
(lp12031
S'char'
p12032
a(lp12033
I-1
aaNtp12034
(S'data'
p12035
(lp12036
S'uInt32'
p12037
aNtp12038
tp12039
tp12040
sS'DAQmxGetAOCustomScaleName'
p12041
((lp12042
S'int32'
p12043
ag34
a((S'taskHandle'
p12044
(lp12045
S'TaskHandle'
p12046
aNtp12047
(S'channel'
p12048
(lp12049
S'char'
p12050
a(lp12051
I-1
aaNtp12052
(S'data'
p12053
(lp12054
S'char'
p12055
ag42
aNtp12056
(S'bufferSize'
p12057
(lp12058
S'uInt32'
p12059
aNtp12060
tp12061
tp12062
sS'DAQmxResetCIFreqLogicLvlBehavior'
p12063
((lp12064
S'int32'
p12065
ag34
a((S'taskHandle'
p12066
(lp12067
S'TaskHandle'
p12068
aNtp12069
(S'channel'
p12070
(lp12071
S'char'
p12072
a(lp12073
I-1
aaNtp12074
tp12075
tp12076
sS'DAQmxResetCIUsbXferReqSize'
p12077
((lp12078
S'int32'
p12079
ag34
a((S'taskHandle'
p12080
(lp12081
S'TaskHandle'
p12082
aNtp12083
(S'channel'
p12084
(lp12085
S'char'
p12086
a(lp12087
I-1
aaNtp12088
tp12089
tp12090
sS'DAQmxGetSwitchDevSettlingTime'
p12091
((lp12092
S'int32'
p12093
ag34
a((S'deviceName'
p12094
(lp12095
S'char'
p12096
a(lp12097
I-1
aaNtp12098
(S'data'
p12099
(lp12100
S'float64'
p12101
ag42
aNtp12102
tp12103
tp12104
sS'DAQmxSetLoggingTDMSGroupName'
p12105
((lp12106
S'int32'
p12107
ag34
a((S'taskHandle'
p12108
(lp12109
S'TaskHandle'
p12110
aNtp12111
(S'data'
p12112
(lp12113
S'char'
p12114
ag42
aNtp12115
tp12116
tp12117
sS'DAQmxGetAIBridgeCfg'
p12118
((lp12119
S'int32'
p12120
ag34
a((S'taskHandle'
p12121
(lp12122
S'TaskHandle'
p12123
aNtp12124
(S'channel'
p12125
(lp12126
S'char'
p12127
a(lp12128
I-1
aaNtp12129
(S'data'
p12130
(lp12131
S'int32'
p12132
ag42
aNtp12133
tp12134
tp12135
sS'DAQmxResetCIPeriodLogicLvlBehavior'
p12136
((lp12137
S'int32'
p12138
ag34
a((S'taskHandle'
p12139
(lp12140
S'TaskHandle'
p12141
aNtp12142
(S'channel'
p12143
(lp12144
S'char'
p12145
a(lp12146
I-1
aaNtp12147
tp12148
tp12149
sS'DAQmxCfgWatchdogAOExpirStates'
p12150
((lp12151
S'int32'
p12152
ag34
a((S'taskHandle'
p12153
(lp12154
S'TaskHandle'
p12155
aNtp12156
(S'channelNames'
p12157
(lp12158
S'char'
p12159
a(lp12160
I-1
aaNtp12161
(S'expirStateArray'
p12162
(lp12163
S'float64'
p12164
a(lp12165
I-1
aaNtp12166
(S'outputTypeArray'
p12167
(lp12168
S'int32'
p12169
a(lp12170
I-1
aaNtp12171
(S'arraySize'
p12172
(lp12173
S'uInt32'
p12174
aNtp12175
tp12176
tp12177
sS'DAQmxSetupDSAAOTimebaseCal'
p12178
((lp12179
S'int32'
p12180
ag34
a((S'calHandle'
p12181
(lp12182
S'CalHandle'
p12183
aNtp12184
(S'expectedFrequency'
p12185
(lp12186
S'float64'
p12187
ag42
aNtp12188
tp12189
tp12190
sS'DAQmxAdjust9207OffsetCal'
p12191
((lp12192
S'int32'
p12193
ag34
a((S'calHandle'
p12194
(lp12195
S'CalHandle'
p12196
aNtp12197
(S'channelNames'
p12198
(lp12199
S'char'
p12200
a(lp12201
I-1
aaNtp12202
tp12203
tp12204
sS'DAQmxCreateDOChan'
p12205
((lp12206
S'int32'
p12207
ag34
a((S'taskHandle'
p12208
(lp12209
S'TaskHandle'
p12210
aNtp12211
(S'lines'
p12212
(lp12213
S'char'
p12214
a(lp12215
I-1
aaNtp12216
(S'nameToAssignToLines'
p12217
(lp12218
S'char'
p12219
a(lp12220
I-1
aaNtp12221
(S'lineGrouping'
p12222
(lp12223
S'int32'
p12224
aNtp12225
tp12226
tp12227
sS'DAQmxSetExportedRdyForStartEventLvlActiveLvl'
p12228
((lp12229
S'int32'
p12230
ag34
a((S'taskHandle'
p12231
(lp12232
S'TaskHandle'
p12233
aNtp12234
(S'data'
p12235
(lp12236
S'int32'
p12237
aNtp12238
tp12239
tp12240
sS'DAQmxResetCIPulseTicksDigSyncEnable'
p12241
((lp12242
S'int32'
p12243
ag34
a((S'taskHandle'
p12244
(lp12245
S'TaskHandle'
p12246
aNtp12247
(S'channel'
p12248
(lp12249
S'char'
p12250
a(lp12251
I-1
aaNtp12252
tp12253
tp12254
sS'DAQmxGetPhysicalChanAISupportedMeasTypes'
p12255
((lp12256
S'int32'
p12257
ag34
a((S'physicalChannel'
p12258
(lp12259
S'char'
p12260
a(lp12261
I-1
aaNtp12262
(S'data'
p12263
(lp12264
S'int32'
p12265
ag42
aNtp12266
(S'arraySizeInElements'
p12267
(lp12268
S'uInt32'
p12269
aNtp12270
tp12271
tp12272
sS'DAQmxGetAOPowerAmpOvercurrent'
p12273
((lp12274
S'int32'
p12275
ag34
a((S'physicalChannel'
p12276
(lp12277
S'char'
p12278
a(lp12279
I-1
aaNtp12280
(S'data'
p12281
(lp12282
S'bool32'
p12283
ag42
aNtp12284
tp12285
tp12286
sS'DAQmxGetDevAIMaxSingleChanRate'
p12287
((lp12288
S'int32'
p12289
ag34
a((S'device'
p12290
(lp12291
S'char'
p12292
a(lp12293
I-1
aaNtp12294
(S'data'
p12295
(lp12296
S'float64'
p12297
ag42
aNtp12298
tp12299
tp12300
sS'DAQmxSetCIPulseFreqTerm'
p12301
((lp12302
S'int32'
p12303
ag34
a((S'taskHandle'
p12304
(lp12305
S'TaskHandle'
p12306
aNtp12307
(S'channel'
p12308
(lp12309
S'char'
p12310
a(lp12311
I-1
aaNtp12312
(S'data'
p12313
(lp12314
S'char'
p12315
ag42
aNtp12316
tp12317
tp12318
sS'DAQmxGetCIPulseTicksTerm'
p12319
((lp12320
S'int32'
p12321
ag34
a((S'taskHandle'
p12322
(lp12323
S'TaskHandle'
p12324
aNtp12325
(S'channel'
p12326
(lp12327
S'char'
p12328
a(lp12329
I-1
aaNtp12330
(S'data'
p12331
(lp12332
S'char'
p12333
ag42
aNtp12334
(S'bufferSize'
p12335
(lp12336
S'uInt32'
p12337
aNtp12338
tp12339
tp12340
sS'DAQmxSetCIPeriodTermCfg'
p12341
((lp12342
S'int32'
p12343
ag34
a((S'taskHandle'
p12344
(lp12345
S'TaskHandle'
p12346
aNtp12347
(S'channel'
p12348
(lp12349
S'char'
p12350
a(lp12351
I-1
aaNtp12352
(S'data'
p12353
(lp12354
S'int32'
p12355
aNtp12356
tp12357
tp12358
sS'DAQmxSetCIDataXferReqCond'
p12359
((lp12360
S'int32'
p12361
ag34
a((S'taskHandle'
p12362
(lp12363
S'TaskHandle'
p12364
aNtp12365
(S'channel'
p12366
(lp12367
S'char'
p12368
a(lp12369
I-1
aaNtp12370
(S'data'
p12371
(lp12372
S'int32'
p12373
aNtp12374
tp12375
tp12376
sS'DAQmxSetCOUseOnlyOnBrdMem'
p12377
((lp12378
S'int32'
p12379
ag34
a((S'taskHandle'
p12380
(lp12381
S'TaskHandle'
p12382
aNtp12383
(S'channel'
p12384
(lp12385
S'char'
p12386
a(lp12387
I-1
aaNtp12388
(S'data'
p12389
(lp12390
S'bool32'
p12391
aNtp12392
tp12393
tp12394
sS'DAQmxResetAILowpassSwitchCapOutClkDiv'
p12395
((lp12396
S'int32'
p12397
ag34
a((S'taskHandle'
p12398
(lp12399
S'TaskHandle'
p12400
aNtp12401
(S'channel'
p12402
(lp12403
S'char'
p12404
a(lp12405
I-1
aaNtp12406
tp12407
tp12408
sS'DAQmxSetCOPulseTicksInitialDelay'
p12409
((lp12410
S'int32'
p12411
ag34
a((S'taskHandle'
p12412
(lp12413
S'TaskHandle'
p12414
aNtp12415
(S'channel'
p12416
(lp12417
S'char'
p12418
a(lp12419
I-1
aaNtp12420
(S'data'
p12421
(lp12422
S'uInt32'
p12423
aNtp12424
tp12425
tp12426
sS'DAQmxGetDigEdgeArmStartTrigDigFltrEnable'
p12427
((lp12428
S'int32'
p12429
ag34
a((S'taskHandle'
p12430
(lp12431
S'TaskHandle'
p12432
aNtp12433
(S'data'
p12434
(lp12435
S'bool32'
p12436
ag42
aNtp12437
tp12438
tp12439
sS'DAQmxResetAnlgEdgeStartTrigHyst'
p12440
((lp12441
S'int32'
p12442
ag34
a((S'taskHandle'
p12443
(lp12444
S'TaskHandle'
p12445
aNtp12446
tp12447
tp12448
sS'DAQmxGetDevNumDMAChans'
p12449
((lp12450
S'int32'
p12451
ag34
a((S'device'
p12452
(lp12453
S'char'
p12454
a(lp12455
I-1
aaNtp12456
(S'data'
p12457
(lp12458
S'uInt32'
p12459
ag42
aNtp12460
tp12461
tp12462
sS'DAQmxSetCIPulseTimeLogicLvlBehavior'
p12463
((lp12464
S'int32'
p12465
ag34
a((S'taskHandle'
p12466
(lp12467
S'TaskHandle'
p12468
aNtp12469
(S'channel'
p12470
(lp12471
S'char'
p12472
a(lp12473
I-1
aaNtp12474
(S'data'
p12475
(lp12476
S'int32'
p12477
aNtp12478
tp12479
tp12480
sS'DAQmxSetAIBridgeTwoPointLinFirstElectricalVal'
p12481
((lp12482
S'int32'
p12483
ag34
a((S'taskHandle'
p12484
(lp12485
S'TaskHandle'
p12486
aNtp12487
(S'channel'
p12488
(lp12489
S'char'
p12490
a(lp12491
I-1
aaNtp12492
(S'data'
p12493
(lp12494
S'float64'
p12495
aNtp12496
tp12497
tp12498
sS'DAQmxResetCOPulseHighTime'
p12499
((lp12500
S'int32'
p12501
ag34
a((S'taskHandle'
p12502
(lp12503
S'TaskHandle'
p12504
aNtp12505
(S'channel'
p12506
(lp12507
S'char'
p12508
a(lp12509
I-1
aaNtp12510
tp12511
tp12512
sS'DAQmxGetOnDemandSimultaneousAOEnable'
p12513
((lp12514
S'int32'
p12515
ag34
a((S'taskHandle'
p12516
(lp12517
S'TaskHandle'
p12518
aNtp12519
(S'data'
p12520
(lp12521
S'bool32'
p12522
ag42
aNtp12523
tp12524
tp12525
sS'DAQmxSetScalePreScaledUnits'
p12526
((lp12527
S'int32'
p12528
ag34
a((S'scaleName'
p12529
(lp12530
S'char'
p12531
a(lp12532
I-1
aaNtp12533
(S'data'
p12534
(lp12535
S'int32'
p12536
aNtp12537
tp12538
tp12539
sS'DAQmxGetAnlgEdgeStartTrigDigFltrEnable'
p12540
((lp12541
S'int32'
p12542
ag34
a((S'taskHandle'
p12543
(lp12544
S'TaskHandle'
p12545
aNtp12546
(S'data'
p12547
(lp12548
S'bool32'
p12549
ag42
aNtp12550
tp12551
tp12552
sS'DAQmxSetAnlgWinPauseTrigTop'
p12553
((lp12554
S'int32'
p12555
ag34
a((S'taskHandle'
p12556
(lp12557
S'TaskHandle'
p12558
aNtp12559
(S'data'
p12560
(lp12561
S'float64'
p12562
aNtp12563
tp12564
tp12565
sS'DAQmxGetAOMax'
p12566
((lp12567
S'int32'
p12568
ag34
a((S'taskHandle'
p12569
(lp12570
S'TaskHandle'
p12571
aNtp12572
(S'channel'
p12573
(lp12574
S'char'
p12575
a(lp12576
I-1
aaNtp12577
(S'data'
p12578
(lp12579
S'float64'
p12580
ag42
aNtp12581
tp12582
tp12583
sS'DAQmxGet9213CalAdjustPoints'
p12584
((lp12585
S'int32'
p12586
ag34
a((S'calHandle'
p12587
(lp12588
S'CalHandle'
p12589
aNtp12590
(S'rangeMin'
p12591
(lp12592
S'float64'
p12593
aNtp12594
(S'rangeMax'
p12595
(lp12596
S'float64'
p12597
aNtp12598
(S'adjustmentPoints'
p12599
(lp12600
S'float64'
p12601
ag42
aNtp12602
(S'bufferSize'
p12603
(lp12604
S'uInt32'
p12605
aNtp12606
tp12607
tp12608
sS'DAQmxDisableAdvTrig'
p12609
((lp12610
S'int32'
p12611
ag34
a((S'taskHandle'
p12612
(lp12613
S'TaskHandle'
p12614
aNtp12615
tp12616
tp12617
sS'DAQmxGetNthTaskDevice'
p12618
((lp12619
S'int32'
p12620
ag34
a((S'taskHandle'
p12621
(lp12622
S'TaskHandle'
p12623
aNtp12624
(S'index'
p12625
(lp12626
S'uInt32'
p12627
aNtp12628
(S'buffer'
p12629
(lp12630
S'char'
p12631
a(lp12632
I-1
aaNtp12633
(S'bufferSize'
p12634
(lp12635
S'int32'
p12636
aNtp12637
tp12638
tp12639
sS'DAQmxResetCIDutyCycleDigFltrMinPulseWidth'
p12640
((lp12641
S'int32'
p12642
ag34
a((S'taskHandle'
p12643
(lp12644
S'TaskHandle'
p12645
aNtp12646
(S'channel'
p12647
(lp12648
S'char'
p12649
a(lp12650
I-1
aaNtp12651
tp12652
tp12653
sS'DAQmxGetLoggingTDMSGroupName'
p12654
((lp12655
S'int32'
p12656
ag34
a((S'taskHandle'
p12657
(lp12658
S'TaskHandle'
p12659
aNtp12660
(S'data'
p12661
(lp12662
S'char'
p12663
ag42
aNtp12664
(S'bufferSize'
p12665
(lp12666
S'uInt32'
p12667
aNtp12668
tp12669
tp12670
sS'DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc'
p12671
((lp12672
S'int32'
p12673
ag34
a((S'taskHandle'
p12674
(lp12675
S'TaskHandle'
p12676
aNtp12677
(S'data'
p12678
(lp12679
S'char'
p12680
ag42
aNtp12681
tp12682
tp12683
sS'DAQmxSetCICountEdgesActiveEdge'
p12684
((lp12685
S'int32'
p12686
ag34
a((S'taskHandle'
p12687
(lp12688
S'TaskHandle'
p12689
aNtp12690
(S'channel'
p12691
(lp12692
S'char'
p12693
a(lp12694
I-1
aaNtp12695
(S'data'
p12696
(lp12697
S'int32'
p12698
aNtp12699
tp12700
tp12701
sS'DAQmxGetAIRawSampJustification'
p12702
((lp12703
S'int32'
p12704
ag34
a((S'taskHandle'
p12705
(lp12706
S'TaskHandle'
p12707
aNtp12708
(S'channel'
p12709
(lp12710
S'char'
p12711
a(lp12712
I-1
aaNtp12713
(S'data'
p12714
(lp12715
S'int32'
p12716
ag42
aNtp12717
tp12718
tp12719
sS'DAQmxGetAODACOffsetSrc'
p12720
((lp12721
S'int32'
p12722
ag34
a((S'taskHandle'
p12723
(lp12724
S'TaskHandle'
p12725
aNtp12726
(S'channel'
p12727
(lp12728
S'char'
p12729
a(lp12730
I-1
aaNtp12731
(S'data'
p12732
(lp12733
S'int32'
p12734
ag42
aNtp12735
tp12736
tp12737
sS'DAQmxGetCIPulseTimeLogicLvlBehavior'
p12738
((lp12739
S'int32'
p12740
ag34
a((S'taskHandle'
p12741
(lp12742
S'TaskHandle'
p12743
aNtp12744
(S'channel'
p12745
(lp12746
S'char'
p12747
a(lp12748
I-1
aaNtp12749
(S'data'
p12750
(lp12751
S'int32'
p12752
ag42
aNtp12753
tp12754
tp12755
sS'DAQmxSetAICoupling'
p12756
((lp12757
S'int32'
p12758
ag34
a((S'taskHandle'
p12759
(lp12760
S'TaskHandle'
p12761
aNtp12762
(S'channel'
p12763
(lp12764
S'char'
p12765
a(lp12766
I-1
aaNtp12767
(S'data'
p12768
(lp12769
S'int32'
p12770
aNtp12771
tp12772
tp12773
sS'DAQmxResetAnlgEdgeRefTrigDigFltrMinPulseWidth'
p12774
((lp12775
S'int32'
p12776
ag34
a((S'taskHandle'
p12777
(lp12778
S'TaskHandle'
p12779
aNtp12780
tp12781
tp12782
sS'DAQmxGetAIRosetteStrainGageRosetteType'
p12783
((lp12784
S'int32'
p12785
ag34
a((S'taskHandle'
p12786
(lp12787
S'TaskHandle'
p12788
aNtp12789
(S'channel'
p12790
(lp12791
S'char'
p12792
a(lp12793
I-1
aaNtp12794
(S'data'
p12795
(lp12796
S'int32'
p12797
ag42
aNtp12798
tp12799
tp12800
sS'DAQmxSetAIExcitIdleOutputBehavior'
p12801
((lp12802
S'int32'
p12803
ag34
a((S'taskHandle'
p12804
(lp12805
S'TaskHandle'
p12806
aNtp12807
(S'channel'
p12808
(lp12809
S'char'
p12810
a(lp12811
I-1
aaNtp12812
(S'data'
p12813
(lp12814
S'int32'
p12815
aNtp12816
tp12817
tp12818
sS'DAQmxCreateTEDSAIBridgeChan'
p12819
((lp12820
S'int32'
p12821
ag34
a((S'taskHandle'
p12822
(lp12823
S'TaskHandle'
p12824
aNtp12825
(S'physicalChannel'
p12826
(lp12827
S'char'
p12828
a(lp12829
I-1
aaNtp12830
(S'nameToAssignToChannel'
p12831
(lp12832
S'char'
p12833
a(lp12834
I-1
aaNtp12835
(S'minVal'
p12836
(lp12837
S'float64'
p12838
aNtp12839
(S'maxVal'
p12840
(lp12841
S'float64'
p12842
aNtp12843
(S'units'
p12844
(lp12845
S'int32'
p12846
aNtp12847
(S'voltageExcitSource'
p12848
(lp12849
S'int32'
p12850
aNtp12851
(S'voltageExcitVal'
p12852
(lp12853
S'float64'
p12854
aNtp12855
(S'customScaleName'
p12856
(lp12857
S'char'
p12858
a(lp12859
I-1
aaNtp12860
tp12861
tp12862
sS'DAQmxGetCISampClkOverrunSentinelVal'
p12863
((lp12864
S'int32'
p12865
ag34
a((S'taskHandle'
p12866
(lp12867
S'TaskHandle'
p12868
aNtp12869
(S'channel'
p12870
(lp12871
S'char'
p12872
a(lp12873
I-1
aaNtp12874
(S'data'
p12875
(lp12876
S'int32'
p12877
ag42
aNtp12878
tp12879
tp12880
sS'DAQmxGetAIBridgeShuntCalShuntCalBActualResistance'
p12881
((lp12882
S'int32'
p12883
ag34
a((S'taskHandle'
p12884
(lp12885
S'TaskHandle'
p12886
aNtp12887
(S'channel'
p12888
(lp12889
S'char'
p12890
a(lp12891
I-1
aaNtp12892
(S'data'
p12893
(lp12894
S'float64'
p12895
ag42
aNtp12896
tp12897
tp12898
sS'DAQmxResetExportedAdvCmpltEventPulsePolarity'
p12899
((lp12900
S'int32'
p12901
ag34
a((S'taskHandle'
p12902
(lp12903
S'TaskHandle'
p12904
aNtp12905
tp12906
tp12907
sS'DAQmxGetPhysicalChanDOPortWidth'
p12908
((lp12909
S'int32'
p12910
ag34
a((S'physicalChannel'
p12911
(lp12912
S'char'
p12913
a(lp12914
I-1
aaNtp12915
(S'data'
p12916
(lp12917
S'uInt32'
p12918
ag42
aNtp12919
tp12920
tp12921
sS'DAQmxResetAODACRefSrc'
p12922
((lp12923
S'int32'
p12924
ag34
a((S'taskHandle'
p12925
(lp12926
S'TaskHandle'
p12927
aNtp12928
(S'channel'
p12929
(lp12930
S'char'
p12931
a(lp12932
I-1
aaNtp12933
tp12934
tp12935
sS'DAQmxResetExportedSampClkPulsePolarity'
p12936
((lp12937
S'int32'
p12938
ag34
a((S'taskHandle'
p12939
(lp12940
S'TaskHandle'
p12941
aNtp12942
tp12943
tp12944
sS'DAQmxResetExportedSampClkTimebaseOutputTerm'
p12945
((lp12946
S'int32'
p12947
ag34
a((S'taskHandle'
p12948
(lp12949
S'TaskHandle'
p12950
aNtp12951
tp12952
tp12953
sS'DAQmxAdjustDSAAOTimebaseCal'
p12954
((lp12955
S'int32'
p12956
ag34
a((S'calHandle'
p12957
(lp12958
S'CalHandle'
p12959
aNtp12960
(S'measuredFrequency'
p12961
(lp12962
S'float64'
p12963
aNtp12964
(S'calComplete'
p12965
(lp12966
S'bool32'
p12967
ag42
aNtp12968
tp12969
tp12970
sS'DAQmxGetTaskNumDevices'
p12971
((lp12972
S'int32'
p12973
ag34
a((S'taskHandle'
p12974
(lp12975
S'TaskHandle'
p12976
aNtp12977
(S'data'
p12978
(lp12979
S'uInt32'
p12980
ag42
aNtp12981
tp12982
tp12983
sS'DAQmxResetAIChanCalVerifRefVals'
p12984
((lp12985
S'int32'
p12986
ag34
a((S'taskHandle'
p12987
(lp12988
S'TaskHandle'
p12989
aNtp12990
(S'channel'
p12991
(lp12992
S'char'
p12993
a(lp12994
I-1
aaNtp12995
tp12996
tp12997
sS'DAQmxSetReadChannelsToRead'
p12998
((lp12999
S'int32'
p13000
ag34
a((S'taskHandle'
p13001
(lp13002
S'TaskHandle'
p13003
aNtp13004
(S'data'
p13005
(lp13006
S'char'
p13007
ag42
aNtp13008
tp13009
tp13010
sS'DAQmxGetSampTimingEngine'
p13011
((lp13012
S'int32'
p13013
ag34
a((S'taskHandle'
p13014
(lp13015
S'TaskHandle'
p13016
aNtp13017
(S'data'
p13018
(lp13019
S'uInt32'
p13020
ag42
aNtp13021
tp13022
tp13023
sS'DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate'
p13024
((lp13025
S'int32'
p13026
ag34
a((S'taskHandle'
p13027
(lp13028
S'TaskHandle'
p13029
aNtp13030
tp13031
tp13032
sS'DAQmxGetCIPulseTicksDigFltrTimebaseRate'
p13033
((lp13034
S'int32'
p13035
ag34
a((S'taskHandle'
p13036
(lp13037
S'TaskHandle'
p13038
aNtp13039
(S'channel'
p13040
(lp13041
S'char'
p13042
a(lp13043
I-1
aaNtp13044
(S'data'
p13045
(lp13046
S'float64'
p13047
ag42
aNtp13048
tp13049
tp13050
sS'DAQmxSetAIExcitSrc'
p13051
((lp13052
S'int32'
p13053
ag34
a((S'taskHandle'
p13054
(lp13055
S'TaskHandle'
p13056
aNtp13057
(S'channel'
p13058
(lp13059
S'char'
p13060
a(lp13061
I-1
aaNtp13062
(S'data'
p13063
(lp13064
S'int32'
p13065
aNtp13066
tp13067
tp13068
sS'DAQmxWaitForNextSampleClock'
p13069
((lp13070
S'int32'
p13071
ag34
a((S'taskHandle'
p13072
(lp13073
S'TaskHandle'
p13074
aNtp13075
(S'timeout'
p13076
(lp13077
S'float64'
p13078
aNtp13079
(S'isLate'
p13080
(lp13081
S'bool32'
p13082
ag42
aNtp13083
tp13084
tp13085
sS'DAQmxGetSwitchChanImpedance'
p13086
((lp13087
S'int32'
p13088
ag34
a((S'switchChannelName'
p13089
(lp13090
S'char'
p13091
a(lp13092
I-1
aaNtp13093
(S'data'
p13094
(lp13095
S'float64'
p13096
ag42
aNtp13097
tp13098
tp13099
sS'DAQmxGetCIPeriodMeasMeth'
p13100
((lp13101
S'int32'
p13102
ag34
a((S'taskHandle'
p13103
(lp13104
S'TaskHandle'
p13105
aNtp13106
(S'channel'
p13107
(lp13108
S'char'
p13109
a(lp13110
I-1
aaNtp13111
(S'data'
p13112
(lp13113
S'int32'
p13114
ag42
aNtp13115
tp13116
tp13117
sS'DAQmxGet9208CalAdjustPoints'
p13118
((lp13119
S'int32'
p13120
ag34
a((S'calHandle'
p13121
(lp13122
S'CalHandle'
p13123
aNtp13124
(S'adjustmentPoints'
p13125
(lp13126
S'float64'
p13127
ag42
aNtp13128
(S'bufferSize'
p13129
(lp13130
S'uInt32'
p13131
aNtp13132
tp13133
tp13134
sS'DAQmxSetAIEddyCurrentProxProbeUnits'
p13135
((lp13136
S'int32'
p13137
ag34
a((S'taskHandle'
p13138
(lp13139
S'TaskHandle'
p13140
aNtp13141
(S'channel'
p13142
(lp13143
S'char'
p13144
a(lp13145
I-1
aaNtp13146
(S'data'
p13147
(lp13148
S'int32'
p13149
aNtp13150
tp13151
tp13152
sS'DAQmxResetCICtrTimebaseActiveEdge'
p13153
((lp13154
S'int32'
p13155
ag34
a((S'taskHandle'
p13156
(lp13157
S'TaskHandle'
p13158
aNtp13159
(S'channel'
p13160
(lp13161
S'char'
p13162
a(lp13163
I-1
aaNtp13164
tp13165
tp13166
sS'DAQmxSetAnlgWinRefTrigBtm'
p13167
((lp13168
S'int32'
p13169
ag34
a((S'taskHandle'
p13170
(lp13171
S'TaskHandle'
p13172
aNtp13173
(S'data'
p13174
(lp13175
S'float64'
p13176
aNtp13177
tp13178
tp13179
sS'DAQmxSetDigEdgeAdvTrigEdge'
p13180
((lp13181
S'int32'
p13182
ag34
a((S'taskHandle'
p13183
(lp13184
S'TaskHandle'
p13185
aNtp13186
(S'data'
p13187
(lp13188
S'int32'
p13189
aNtp13190
tp13191
tp13192
sS'DAQmxCfgImplicitTiming'
p13193
((lp13194
S'int32'
p13195
ag34
a((S'taskHandle'
p13196
(lp13197
S'TaskHandle'
p13198
aNtp13199
(S'sampleMode'
p13200
(lp13201
S'int32'
p13202
aNtp13203
(S'sampsPerChan'
p13204
(lp13205
S'uInt64'
p13206
aNtp13207
tp13208
tp13209
sS'DAQmxGetExportedHshkEventInterlockedAssertOnStart'
p13210
((lp13211
S'int32'
p13212
ag34
a((S'taskHandle'
p13213
(lp13214
S'TaskHandle'
p13215
aNtp13216
(S'data'
p13217
(lp13218
S'bool32'
p13219
ag42
aNtp13220
tp13221
tp13222
sS'DAQmxGetAOFuncGenSquareDutyCycle'
p13223
((lp13224
S'int32'
p13225
ag34
a((S'taskHandle'
p13226
(lp13227
S'TaskHandle'
p13228
aNtp13229
(S'channel'
p13230
(lp13231
S'char'
p13232
a(lp13233
I-1
aaNtp13234
(S'data'
p13235
(lp13236
S'float64'
p13237
ag42
aNtp13238
tp13239
tp13240
sS'DAQmxGetDevProductCategory'
p13241
((lp13242
S'int32'
p13243
ag34
a((S'device'
p13244
(lp13245
S'char'
p13246
a(lp13247
I-1
aaNtp13248
(S'data'
p13249
(lp13250
S'int32'
p13251
ag42
aNtp13252
tp13253
tp13254
sS'DAQmxSetCOCtrTimebaseDigFltrTimebaseRate'
p13255
((lp13256
S'int32'
p13257
ag34
a((S'taskHandle'
p13258
(lp13259
S'TaskHandle'
p13260
aNtp13261
(S'channel'
p13262
(lp13263
S'char'
p13264
a(lp13265
I-1
aaNtp13266
(S'data'
p13267
(lp13268
S'float64'
p13269
aNtp13270
tp13271
tp13272
sS'DAQmxGetAIRemoveFilterDelay'
p13273
((lp13274
S'int32'
p13275
ag34
a((S'taskHandle'
p13276
(lp13277
S'TaskHandle'
p13278
aNtp13279
(S'channel'
p13280
(lp13281
S'char'
p13282
a(lp13283
I-1
aaNtp13284
(S'data'
p13285
(lp13286
S'bool32'
p13287
ag42
aNtp13288
tp13289
tp13290
sS'DAQmxSetCIPeriodMeasTime'
p13291
((lp13292
S'int32'
p13293
ag34
a((S'taskHandle'
p13294
(lp13295
S'TaskHandle'
p13296
aNtp13297
(S'channel'
p13298
(lp13299
S'char'
p13300
a(lp13301
I-1
aaNtp13302
(S'data'
p13303
(lp13304
S'float64'
p13305
aNtp13306
tp13307
tp13308
sS'DAQmxSetAIRngLow'
p13309
((lp13310
S'int32'
p13311
ag34
a((S'taskHandle'
p13312
(lp13313
S'TaskHandle'
p13314
aNtp13315
(S'channel'
p13316
(lp13317
S'char'
p13318
a(lp13319
I-1
aaNtp13320
(S'data'
p13321
(lp13322
S'float64'
p13323
aNtp13324
tp13325
tp13326
sS'DAQmxResetRefClkSrc'
p13327
((lp13328
S'int32'
p13329
ag34
a((S'taskHandle'
p13330
(lp13331
S'TaskHandle'
p13332
aNtp13333
tp13334
tp13335
sS'DAQmxSetCIMaxMeasPeriod'
p13336
((lp13337
S'int32'
p13338
ag34
a((S'taskHandle'
p13339
(lp13340
S'TaskHandle'
p13341
aNtp13342
(S'channel'
p13343
(lp13344
S'char'
p13345
a(lp13346
I-1
aaNtp13347
(S'data'
p13348
(lp13349
S'float64'
p13350
aNtp13351
tp13352
tp13353
sS'DAQmxResetAIBridgeTwoPointLinFirstElectricalVal'
p13354
((lp13355
S'int32'
p13356
ag34
a((S'taskHandle'
p13357
(lp13358
S'TaskHandle'
p13359
aNtp13360
(S'channel'
p13361
(lp13362
S'char'
p13363
a(lp13364
I-1
aaNtp13365
tp13366
tp13367
sS'DAQmxGetAnlgWinPauseTrigDigSyncEnable'
p13368
((lp13369
S'int32'
p13370
ag34
a((S'taskHandle'
p13371
(lp13372
S'TaskHandle'
p13373
aNtp13374
(S'data'
p13375
(lp13376
S'bool32'
p13377
ag42
aNtp13378
tp13379
tp13380
sS'DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth'
p13381
((lp13382
S'int32'
p13383
ag34
a((S'taskHandle'
p13384
(lp13385
S'TaskHandle'
p13386
aNtp13387
(S'data'
p13388
(lp13389
S'float64'
p13390
ag42
aNtp13391
tp13392
tp13393
sS'DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseSrc'
p13394
((lp13395
S'int32'
p13396
ag34
a((S'taskHandle'
p13397
(lp13398
S'TaskHandle'
p13399
aNtp13400
tp13401
tp13402
sS'DAQmxGetAODACRefSrc'
p13403
((lp13404
S'int32'
p13405
ag34
a((S'taskHandle'
p13406
(lp13407
S'TaskHandle'
p13408
aNtp13409
(S'channel'
p13410
(lp13411
S'char'
p13412
a(lp13413
I-1
aaNtp13414
(S'data'
p13415
(lp13416
S'int32'
p13417
ag42
aNtp13418
tp13419
tp13420
sS'DAQmxSetCIFreqTermCfg'
p13421
((lp13422
S'int32'
p13423
ag34
a((S'taskHandle'
p13424
(lp13425
S'TaskHandle'
p13426
aNtp13427
(S'channel'
p13428
(lp13429
S'char'
p13430
a(lp13431
I-1
aaNtp13432
(S'data'
p13433
(lp13434
S'int32'
p13435
aNtp13436
tp13437
tp13438
sS'DAQmxSetAnlgEdgeRefTrigLvl'
p13439
((lp13440
S'int32'
p13441
ag34
a((S'taskHandle'
p13442
(lp13443
S'TaskHandle'
p13444
aNtp13445
(S'data'
p13446
(lp13447
S'float64'
p13448
aNtp13449
tp13450
tp13451
sS'DAQmxCreateAIVoltageChan'
p13452
((lp13453
S'int32'
p13454
ag34
a((S'taskHandle'
p13455
(lp13456
S'TaskHandle'
p13457
aNtp13458
(S'physicalChannel'
p13459
(lp13460
S'char'
p13461
a(lp13462
I-1
aaNtp13463
(S'nameToAssignToChannel'
p13464
(lp13465
S'char'
p13466
a(lp13467
I-1
aaNtp13468
(S'terminalConfig'
p13469
(lp13470
S'int32'
p13471
aNtp13472
(S'minVal'
p13473
(lp13474
S'float64'
p13475
aNtp13476
(S'maxVal'
p13477
(lp13478
S'float64'
p13479
aNtp13480
(S'units'
p13481
(lp13482
S'int32'
p13483
aNtp13484
(S'customScaleName'
p13485
(lp13486
S'char'
p13487
a(lp13488
I-1
aaNtp13489
tp13490
tp13491
sS'DAQmxGetCITimestampUnits'
p13492
((lp13493
S'int32'
p13494
ag34
a((S'taskHandle'
p13495
(lp13496
S'TaskHandle'
p13497
aNtp13498
(S'channel'
p13499
(lp13500
S'char'
p13501
a(lp13502
I-1
aaNtp13503
(S'data'
p13504
(lp13505
S'int32'
p13506
ag42
aNtp13507
tp13508
tp13509
sS'DAQmxGetAILowpassSwitchCapExtClkFreq'
p13510
((lp13511
S'int32'
p13512
ag34
a((S'taskHandle'
p13513
(lp13514
S'TaskHandle'
p13515
aNtp13516
(S'channel'
p13517
(lp13518
S'char'
p13519
a(lp13520
I-1
aaNtp13521
(S'data'
p13522
(lp13523
S'float64'
p13524
ag42
aNtp13525
tp13526
tp13527
sS'DAQmxGetCIPulseFreqDigFltrTimebaseRate'
p13528
((lp13529
S'int32'
p13530
ag34
a((S'taskHandle'
p13531
(lp13532
S'TaskHandle'
p13533
aNtp13534
(S'channel'
p13535
(lp13536
S'char'
p13537
a(lp13538
I-1
aaNtp13539
(S'data'
p13540
(lp13541
S'float64'
p13542
ag42
aNtp13543
tp13544
tp13545
sS'DAQmxGetChangeDetectDIFallingEdgePhysicalChans'
p13546
((lp13547
S'int32'
p13548
ag34
a((S'taskHandle'
p13549
(lp13550
S'TaskHandle'
p13551
aNtp13552
(S'data'
p13553
(lp13554
S'char'
p13555
ag42
aNtp13556
(S'bufferSize'
p13557
(lp13558
S'uInt32'
p13559
aNtp13560
tp13561
tp13562
sS'DAQmxResetWatchdogAOOutputType'
p13563
((lp13564
S'int32'
p13565
ag34
a((S'taskHandle'
p13566
(lp13567
S'TaskHandle'
p13568
aNtp13569
(S'lines'
p13570
(lp13571
S'char'
p13572
a(lp13573
I-1
aaNtp13574
tp13575
tp13576
sS'DAQmxResetCIEncoderZInputTermCfg'
p13577
((lp13578
S'int32'
p13579
ag34
a((S'taskHandle'
p13580
(lp13581
S'TaskHandle'
p13582
aNtp13583
(S'channel'
p13584
(lp13585
S'char'
p13586
a(lp13587
I-1
aaNtp13588
tp13589
tp13590
sS'DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior'
p13591
((lp13592
S'int32'
p13593
ag34
a((S'taskHandle'
p13594
(lp13595
S'TaskHandle'
p13596
aNtp13597
(S'channel'
p13598
(lp13599
S'char'
p13600
a(lp13601
I-1
aaNtp13602
(S'data'
p13603
(lp13604
S'int32'
p13605
ag42
aNtp13606
tp13607
tp13608
sS'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate'
p13609
((lp13610
S'int32'
p13611
ag34
a((S'taskHandle'
p13612
(lp13613
S'TaskHandle'
p13614
aNtp13615
(S'data'
p13616
(lp13617
S'float64'
p13618
ag42
aNtp13619
tp13620
tp13621
sS'DAQmxSetWatchdogExpirTrigTrigOnNetworkConnLoss'
p13622
((lp13623
S'int32'
p13624
ag34
a((S'taskHandle'
p13625
(lp13626
S'TaskHandle'
p13627
aNtp13628
(S'data'
p13629
(lp13630
S'bool32'
p13631
aNtp13632
tp13633
tp13634
sS'DAQmxGetDevPCIBusNum'
p13635
((lp13636
S'int32'
p13637
ag34
a((S'device'
p13638
(lp13639
S'char'
p13640
a(lp13641
I-1
aaNtp13642
(S'data'
p13643
(lp13644
S'uInt32'
p13645
ag42
aNtp13646
tp13647
tp13648
sS'DAQmxResetCIDutyCycleLogicLvlBehavior'
p13649
((lp13650
S'int32'
p13651
ag34
a((S'taskHandle'
p13652
(lp13653
S'TaskHandle'
p13654
aNtp13655
(S'channel'
p13656
(lp13657
S'char'
p13658
a(lp13659
I-1
aaNtp13660
tp13661
tp13662
sS'DAQmxCreateAITorqueBridgeTableChan'
p13663
((lp13664
S'int32'
p13665
ag34
a((S'taskHandle'
p13666
(lp13667
S'TaskHandle'
p13668
aNtp13669
(S'physicalChannel'
p13670
(lp13671
S'char'
p13672
a(lp13673
I-1
aaNtp13674
(S'nameToAssignToChannel'
p13675
(lp13676
S'char'
p13677
a(lp13678
I-1
aaNtp13679
(S'minVal'
p13680
(lp13681
S'float64'
p13682
aNtp13683
(S'maxVal'
p13684
(lp13685
S'float64'
p13686
aNtp13687
(S'units'
p13688
(lp13689
S'int32'
p13690
aNtp13691
(S'bridgeConfig'
p13692
(lp13693
S'int32'
p13694
aNtp13695
(S'voltageExcitSource'
p13696
(lp13697
S'int32'
p13698
aNtp13699
(S'voltageExcitVal'
p13700
(lp13701
S'float64'
p13702
aNtp13703
(S'nominalBridgeResistance'
p13704
(lp13705
S'float64'
p13706
aNtp13707
(S'electricalVals'
p13708
(lp13709
S'float64'
p13710
a(lp13711
I-1
aaNtp13712
(S'numElectricalVals'
p13713
(lp13714
S'uInt32'
p13715
aNtp13716
(S'electricalUnits'
p13717
(lp13718
S'int32'
p13719
aNtp13720
(S'physicalVals'
p13721
(lp13722
S'float64'
p13723
a(lp13724
I-1
aaNtp13725
(S'numPhysicalVals'
p13726
(lp13727
S'uInt32'
p13728
aNtp13729
(S'physicalUnits'
p13730
(lp13731
S'int32'
p13732
aNtp13733
(S'customScaleName'
p13734
(lp13735
S'char'
p13736
a(lp13737
I-1
aaNtp13738
tp13739
tp13740
sS'DAQmxUnreserveNetworkDevice'
p13741
((lp13742
S'int32'
p13743
ag34
a((S'deviceName'
p13744
(lp13745
S'char'
p13746
a(lp13747
I-1
aaNtp13748
tp13749
tp13750
sS'DAQmxSetCIPeriodStartingEdge'
p13751
((lp13752
S'int32'
p13753
ag34
a((S'taskHandle'
p13754
(lp13755
S'TaskHandle'
p13756
aNtp13757
(S'channel'
p13758
(lp13759
S'char'
p13760
a(lp13761
I-1
aaNtp13762
(S'data'
p13763
(lp13764
S'int32'
p13765
aNtp13766
tp13767
tp13768
sS'DAQmxGetCIPulseFreqTerm'
p13769
((lp13770
S'int32'
p13771
ag34
a((S'taskHandle'
p13772
(lp13773
S'TaskHandle'
p13774
aNtp13775
(S'channel'
p13776
(lp13777
S'char'
p13778
a(lp13779
I-1
aaNtp13780
(S'data'
p13781
(lp13782
S'char'
p13783
ag42
aNtp13784
(S'bufferSize'
p13785
(lp13786
S'uInt32'
p13787
aNtp13788
tp13789
tp13790
sS'DAQmxSetExportedChangeDetectEventPulsePolarity'
p13791
((lp13792
S'int32'
p13793
ag34
a((S'taskHandle'
p13794
(lp13795
S'TaskHandle'
p13796
aNtp13797
(S'data'
p13798
(lp13799
S'int32'
p13800
aNtp13801
tp13802
tp13803
sS'DAQmxGetDevProductNum'
p13804
((lp13805
S'int32'
p13806
ag34
a((S'device'
p13807
(lp13808
S'char'
p13809
a(lp13810
I-1
aaNtp13811
(S'data'
p13812
(lp13813
S'uInt32'
p13814
ag42
aNtp13815
tp13816
tp13817
sS'DAQmxResetAIRTDType'
p13818
((lp13819
S'int32'
p13820
ag34
a((S'taskHandle'
p13821
(lp13822
S'TaskHandle'
p13823
aNtp13824
(S'channel'
p13825
(lp13826
S'char'
p13827
a(lp13828
I-1
aaNtp13829
tp13830
tp13831
sS'DAQmxReadCtrTicksScalar'
p13832
((lp13833
S'int32'
p13834
ag34
a((S'taskHandle'
p13835
(lp13836
S'TaskHandle'
p13837
aNtp13838
(S'timeout'
p13839
(lp13840
S'float64'
p13841
aNtp13842
(S'highTicks'
p13843
(lp13844
S'uInt32'
p13845
ag42
aNtp13846
(S'lowTicks'
p13847
(lp13848
S'uInt32'
p13849
ag42
aNtp13850
(S'reserved'
p13851
(lp13852
S'bool32'
p13853
ag42
aNtp13854
tp13855
tp13856
sS'DAQmxGetDevCIPhysicalChans'
p13857
((lp13858
S'int32'
p13859
ag34
a((S'device'
p13860
(lp13861
S'char'
p13862
a(lp13863
I-1
aaNtp13864
(S'data'
p13865
(lp13866
S'char'
p13867
ag42
aNtp13868
(S'bufferSize'
p13869
(lp13870
S'uInt32'
p13871
aNtp13872
tp13873
tp13874
sS'DAQmxGetCICountEdgesDigFltrTimebaseSrc'
p13875
((lp13876
S'int32'
p13877
ag34
a((S'taskHandle'
p13878
(lp13879
S'TaskHandle'
p13880
aNtp13881
(S'channel'
p13882
(lp13883
S'char'
p13884
a(lp13885
I-1
aaNtp13886
(S'data'
p13887
(lp13888
S'char'
p13889
ag42
aNtp13890
(S'bufferSize'
p13891
(lp13892
S'uInt32'
p13893
aNtp13894
tp13895
tp13896
sS'DAQmxGetExportedAdvCmpltEventPulseWidth'
p13897
((lp13898
S'int32'
p13899
ag34
a((S'taskHandle'
p13900
(lp13901
S'TaskHandle'
p13902
aNtp13903
(S'data'
p13904
(lp13905
S'float64'
p13906
ag42
aNtp13907
tp13908
tp13909
sS'DAQmxGetAIDitherEnable'
p13910
((lp13911
S'int32'
p13912
ag34
a((S'taskHandle'
p13913
(lp13914
S'TaskHandle'
p13915
aNtp13916
(S'channel'
p13917
(lp13918
S'char'
p13919
a(lp13920
I-1
aaNtp13921
(S'data'
p13922
(lp13923
S'bool32'
p13924
ag42
aNtp13925
tp13926
tp13927
sS'DAQmxResetAIForceIEPESensorSensitivity'
p13928
((lp13929
S'int32'
p13930
ag34
a((S'taskHandle'
p13931
(lp13932
S'TaskHandle'
p13933
aNtp13934
(S'channel'
p13935
(lp13936
S'char'
p13937
a(lp13938
I-1
aaNtp13939
tp13940
tp13941
sS'DAQmxResetCIPeriodDigSyncEnable'
p13942
((lp13943
S'int32'
p13944
ag34
a((S'taskHandle'
p13945
(lp13946
S'TaskHandle'
p13947
aNtp13948
(S'channel'
p13949
(lp13950
S'char'
p13951
a(lp13952
I-1
aaNtp13953
tp13954
tp13955
sS'DAQmxGetDevAISampModes'
p13956
((lp13957
S'int32'
p13958
ag34
a((S'device'
p13959
(lp13960
S'char'
p13961
a(lp13962
I-1
aaNtp13963
(S'data'
p13964
(lp13965
S'int32'
p13966
ag42
aNtp13967
(S'arraySizeInElements'
p13968
(lp13969
S'uInt32'
p13970
aNtp13971
tp13972
tp13973
sS'DAQmxCreateCIPulseChanTime'
p13974
((lp13975
S'int32'
p13976
ag34
a((S'taskHandle'
p13977
(lp13978
S'TaskHandle'
p13979
aNtp13980
(S'counter'
p13981
(lp13982
S'char'
p13983
a(lp13984
I-1
aaNtp13985
(S'nameToAssignToChannel'
p13986
(lp13987
S'char'
p13988
a(lp13989
I-1
aaNtp13990
(S'minVal'
p13991
(lp13992
S'float64'
p13993
aNtp13994
(S'maxVal'
p13995
(lp13996
S'float64'
p13997
aNtp13998
(S'units'
p13999
(lp14000
S'int32'
p14001
aNtp14002
tp14003
tp14004
sS'DAQmxSetAIFreqUnits'
p14005
((lp14006
S'int32'
p14007
ag34
a((S'taskHandle'
p14008
(lp14009
S'TaskHandle'
p14010
aNtp14011
(S'channel'
p14012
(lp14013
S'char'
p14014
a(lp14015
I-1
aaNtp14016
(S'data'
p14017
(lp14018
S'int32'
p14019
aNtp14020
tp14021
tp14022
sS'DAQmxGetAIOpenThrmcplDetectEnable'
p14023
((lp14024
S'int32'
p14025
ag34
a((S'taskHandle'
p14026
(lp14027
S'TaskHandle'
p14028
aNtp14029
(S'channel'
p14030
(lp14031
S'char'
p14032
a(lp14033
I-1
aaNtp14034
(S'data'
p14035
(lp14036
S'bool32'
p14037
ag42
aNtp14038
tp14039
tp14040
sS'DAQmxSetDOGenerateOn'
p14041
((lp14042
S'int32'
p14043
ag34
a((S'taskHandle'
p14044
(lp14045
S'TaskHandle'
p14046
aNtp14047
(S'channel'
p14048
(lp14049
S'char'
p14050
a(lp14051
I-1
aaNtp14052
(S'data'
p14053
(lp14054
S'int32'
p14055
aNtp14056
tp14057
tp14058
sS'DAQmxGetScaleLinSlope'
p14059
((lp14060
S'int32'
p14061
ag34
a((S'scaleName'
p14062
(lp14063
S'char'
p14064
a(lp14065
I-1
aaNtp14066
(S'data'
p14067
(lp14068
S'float64'
p14069
ag42
aNtp14070
tp14071
tp14072
sS'DAQmxSetAIProbeAtten'
p14073
((lp14074
S'int32'
p14075
ag34
a((S'taskHandle'
p14076
(lp14077
S'TaskHandle'
p14078
aNtp14079
(S'channel'
p14080
(lp14081
S'char'
p14082
a(lp14083
I-1
aaNtp14084
(S'data'
p14085
(lp14086
S'float64'
p14087
aNtp14088
tp14089
tp14090
sS'DAQmxSetCICountEdgesLogicLvlBehavior'
p14091
((lp14092
S'int32'
p14093
ag34
a((S'taskHandle'
p14094
(lp14095
S'TaskHandle'
p14096
aNtp14097
(S'channel'
p14098
(lp14099
S'char'
p14100
a(lp14101
I-1
aaNtp14102
(S'data'
p14103
(lp14104
S'int32'
p14105
aNtp14106
tp14107
tp14108
sS'DAQmxSetAIStrainGageCfg'
p14109
((lp14110
S'int32'
p14111
ag34
a((S'taskHandle'
p14112
(lp14113
S'TaskHandle'
p14114
aNtp14115
(S'channel'
p14116
(lp14117
S'char'
p14118
a(lp14119
I-1
aaNtp14120
(S'data'
p14121
(lp14122
S'int32'
p14123
aNtp14124
tp14125
tp14126
sS'DAQmxGetTimingSyncPulseForce'
p14127
((lp14128
S'int32'
p14129
ag34
a((S'taskHandle'
p14130
(lp14131
S'TaskHandle'
p14132
aNtp14133
(S'data'
p14134
(lp14135
S'bool32'
p14136
ag42
aNtp14137
tp14138
tp14139
sS'DAQmxResetWatchdogTimeout'
p14140
((lp14141
S'int32'
p14142
ag34
a((S'taskHandle'
p14143
(lp14144
S'TaskHandle'
p14145
aNtp14146
tp14147
tp14148
sS'DAQmxResetAIDitherEnable'
p14149
((lp14150
S'int32'
p14151
ag34
a((S'taskHandle'
p14152
(lp14153
S'TaskHandle'
p14154
aNtp14155
(S'channel'
p14156
(lp14157
S'char'
p14158
a(lp14159
I-1
aaNtp14160
tp14161
tp14162
sS'DAQmxGetWatchdogCOExpirState'
p14163
((lp14164
S'int32'
p14165
ag34
a((S'taskHandle'
p14166
(lp14167
S'TaskHandle'
p14168
aNtp14169
(S'lines'
p14170
(lp14171
S'char'
p14172
a(lp14173
I-1
aaNtp14174
(S'data'
p14175
(lp14176
S'int32'
p14177
ag42
aNtp14178
tp14179
tp14180
sS'DAQmxGetAISampAndHoldEnable'
p14181
((lp14182
S'int32'
p14183
ag34
a((S'taskHandle'
p14184
(lp14185
S'TaskHandle'
p14186
aNtp14187
(S'channel'
p14188
(lp14189
S'char'
p14190
a(lp14191
I-1
aaNtp14192
(S'data'
p14193
(lp14194
S'bool32'
p14195
ag42
aNtp14196
tp14197
tp14198
sS'DAQmxGetDigEdgeStartTrigSrc'
p14199
((lp14200
S'int32'
p14201
ag34
a((S'taskHandle'
p14202
(lp14203
S'TaskHandle'
p14204
aNtp14205
(S'data'
p14206
(lp14207
S'char'
p14208
ag42
aNtp14209
(S'bufferSize'
p14210
(lp14211
S'uInt32'
p14212
aNtp14213
tp14214
tp14215
sS'DAQmxSetCOPulseHighTicks'
p14216
((lp14217
S'int32'
p14218
ag34
a((S'taskHandle'
p14219
(lp14220
S'TaskHandle'
p14221
aNtp14222
(S'channel'
p14223
(lp14224
S'char'
p14225
a(lp14226
I-1
aaNtp14227
(S'data'
p14228
(lp14229
S'uInt32'
p14230
aNtp14231
tp14232
tp14233
sS'DAQmxWriteBinaryU16'
p14234
((lp14235
S'int32'
p14236
ag34
a((S'taskHandle'
p14237
(lp14238
S'TaskHandle'
p14239
aNtp14240
(S'numSampsPerChan'
p14241
(lp14242
S'int32'
p14243
aNtp14244
(S'autoStart'
p14245
(lp14246
S'bool32'
p14247
aNtp14248
(S'timeout'
p14249
(lp14250
S'float64'
p14251
aNtp14252
(S'dataLayout'
p14253
(lp14254
S'bool32'
p14255
aNtp14256
(S'writeArray'
p14257
(lp14258
S'uInt16'
p14259
a(lp14260
I-1
aaNtp14261
(S'sampsPerChanWritten'
p14262
(lp14263
S'int32'
p14264
ag42
aNtp14265
(S'reserved'
p14266
(lp14267
S'bool32'
p14268
ag42
aNtp14269
tp14270
tp14271
sS'DAQmxResetCITimestampInitialSeconds'
p14272
((lp14273
S'int32'
p14274
ag34
a((S'taskHandle'
p14275
(lp14276
S'TaskHandle'
p14277
aNtp14278
(S'channel'
p14279
(lp14280
S'char'
p14281
a(lp14282
I-1
aaNtp14283
tp14284
tp14285
sS'DAQmxGetAIConvActiveEdge'
p14286
((lp14287
S'int32'
p14288
ag34
a((S'taskHandle'
p14289
(lp14290
S'TaskHandle'
p14291
aNtp14292
(S'data'
p14293
(lp14294
S'int32'
p14295
ag42
aNtp14296
tp14297
tp14298
sS'DAQmxSetCICountEdgesDigSyncEnable'
p14299
((lp14300
S'int32'
p14301
ag34
a((S'taskHandle'
p14302
(lp14303
S'TaskHandle'
p14304
aNtp14305
(S'channel'
p14306
(lp14307
S'char'
p14308
a(lp14309
I-1
aaNtp14310
(S'data'
p14311
(lp14312
S'bool32'
p14313
aNtp14314
tp14315
tp14316
sS'DAQmxSetCIPulseTicksStartEdge'
p14317
((lp14318
S'int32'
p14319
ag34
a((S'taskHandle'
p14320
(lp14321
S'TaskHandle'
p14322
aNtp14323
(S'channel'
p14324
(lp14325
S'char'
p14326
a(lp14327
I-1
aaNtp14328
(S'data'
p14329
(lp14330
S'int32'
p14331
aNtp14332
tp14333
tp14334
sS'DAQmxCfgAnlgEdgeStartTrig'
p14335
((lp14336
S'int32'
p14337
ag34
a((S'taskHandle'
p14338
(lp14339
S'TaskHandle'
p14340
aNtp14341
(S'triggerSource'
p14342
(lp14343
S'char'
p14344
a(lp14345
I-1
aaNtp14346
(S'triggerSlope'
p14347
(lp14348
S'int32'
p14349
aNtp14350
(S'triggerLevel'
p14351
(lp14352
S'float64'
p14353
aNtp14354
tp14355
tp14356
sS'DAQmxGetAIDigFltrBandpassCenterFreq'
p14357
((lp14358
S'int32'
p14359
ag34
a((S'taskHandle'
p14360
(lp14361
S'TaskHandle'
p14362
aNtp14363
(S'channel'
p14364
(lp14365
S'char'
p14366
a(lp14367
I-1
aaNtp14368
(S'data'
p14369
(lp14370
S'float64'
p14371
ag42
aNtp14372
tp14373
tp14374
sS'DAQmxGetReadCommonModeRangeErrorChans'
p14375
((lp14376
S'int32'
p14377
ag34
a((S'taskHandle'
p14378
(lp14379
S'TaskHandle'
p14380
aNtp14381
(S'data'
p14382
(lp14383
S'char'
p14384
ag42
aNtp14385
(S'bufferSize'
p14386
(lp14387
S'uInt32'
p14388
aNtp14389
tp14390
tp14391
sS'DAQmxAdjust4225Cal'
p14392
((lp14393
S'int32'
p14394
ag34
a((S'calHandle'
p14395
(lp14396
S'CalHandle'
p14397
aNtp14398
(S'channelNames'
p14399
(lp14400
S'char'
p14401
a(lp14402
I-1
aaNtp14403
(S'gain'
p14404
(lp14405
S'float64'
p14406
aNtp14407
(S'inputVal'
p14408
(lp14409
S'float64'
p14410
aNtp14411
tp14412
tp14413
sS'DAQmxGetReadDigitalLinesBytesPerChan'
p14414
((lp14415
S'int32'
p14416
ag34
a((S'taskHandle'
p14417
(lp14418
S'TaskHandle'
p14419
aNtp14420
(S'data'
p14421
(lp14422
S'uInt32'
p14423
ag42
aNtp14424
tp14425
tp14426
sS'DAQmxGetRefTrigAutoTrigEnable'
p14427
((lp14428
S'int32'
p14429
ag34
a((S'taskHandle'
p14430
(lp14431
S'TaskHandle'
p14432
aNtp14433
(S'data'
p14434
(lp14435
S'bool32'
p14436
ag42
aNtp14437
tp14438
tp14439
sS'DAQmxResetAIConvTimebaseDiv'
p14440
((lp14441
S'int32'
p14442
ag34
a((S'taskHandle'
p14443
(lp14444
S'TaskHandle'
p14445
aNtp14446
tp14447
tp14448
sS'DAQmxGetPhysicalChanTEDSModelNum'
p14449
((lp14450
S'int32'
p14451
ag34
a((S'physicalChannel'
p14452
(lp14453
S'char'
p14454
a(lp14455
I-1
aaNtp14456
(S'data'
p14457
(lp14458
S'uInt32'
p14459
ag42
aNtp14460
tp14461
tp14462
sS'DAQmxGetSampClkDigSyncEnable'
p14463
((lp14464
S'int32'
p14465
ag34
a((S'taskHandle'
p14466
(lp14467
S'TaskHandle'
p14468
aNtp14469
(S'data'
p14470
(lp14471
S'bool32'
p14472
ag42
aNtp14473
tp14474
tp14475
sS'DAQmxCreateAIForceIEPEChan'
p14476
((lp14477
S'int32'
p14478
ag34
a((S'taskHandle'
p14479
(lp14480
S'TaskHandle'
p14481
aNtp14482
(S'physicalChannel'
p14483
(lp14484
S'char'
p14485
a(lp14486
I-1
aaNtp14487
(S'nameToAssignToChannel'
p14488
(lp14489
S'char'
p14490
a(lp14491
I-1
aaNtp14492
(S'terminalConfig'
p14493
(lp14494
S'int32'
p14495
aNtp14496
(S'minVal'
p14497
(lp14498
S'float64'
p14499
aNtp14500
(S'maxVal'
p14501
(lp14502
S'float64'
p14503
aNtp14504
(S'units'
p14505
(lp14506
S'int32'
p14507
aNtp14508
(S'sensitivity'
p14509
(lp14510
S'float64'
p14511
aNtp14512
(S'sensitivityUnits'
p14513
(lp14514
S'int32'
p14515
aNtp14516
(S'currentExcitSource'
p14517
(lp14518
S'int32'
p14519
aNtp14520
(S'currentExcitVal'
p14521
(lp14522
S'float64'
p14523
aNtp14524
(S'customScaleName'
p14525
(lp14526
S'char'
p14527
a(lp14528
I-1
aaNtp14529
tp14530
tp14531
sS'DAQmxSetSyncClkInterval'
p14532
((lp14533
S'int32'
p14534
ag34
a((S'taskHandle'
p14535
(lp14536
S'TaskHandle'
p14537
aNtp14538
(S'data'
p14539
(lp14540
S'uInt32'
p14541
aNtp14542
tp14543
tp14544
sS'DAQmxSetAnlgEdgeStartTrigLvl'
p14545
((lp14546
S'int32'
p14547
ag34
a((S'taskHandle'
p14548
(lp14549
S'TaskHandle'
p14550
aNtp14551
(S'data'
p14552
(lp14553
S'float64'
p14554
aNtp14555
tp14556
tp14557
sS'DAQmxGetPhysicalChanDOSampModes'
p14558
((lp14559
S'int32'
p14560
ag34
a((S'physicalChannel'
p14561
(lp14562
S'char'
p14563
a(lp14564
I-1
aaNtp14565
(S'data'
p14566
(lp14567
S'int32'
p14568
ag42
aNtp14569
(S'arraySizeInElements'
p14570
(lp14571
S'uInt32'
p14572
aNtp14573
tp14574
tp14575
sS'DAQmxSetAIAccelSensitivityUnits'
p14576
((lp14577
S'int32'
p14578
ag34
a((S'taskHandle'
p14579
(lp14580
S'TaskHandle'
p14581
aNtp14582
(S'channel'
p14583
(lp14584
S'char'
p14585
a(lp14586
I-1
aaNtp14587
(S'data'
p14588
(lp14589
S'int32'
p14590
aNtp14591
tp14592
tp14593
sS'DAQmxResetAnlgWinPauseTrigBtm'
p14594
((lp14595
S'int32'
p14596
ag34
a((S'taskHandle'
p14597
(lp14598
S'TaskHandle'
p14599
aNtp14600
tp14601
tp14602
sS'DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate'
p14603
((lp14604
S'int32'
p14605
ag34
a((S'taskHandle'
p14606
(lp14607
S'TaskHandle'
p14608
aNtp14609
(S'data'
p14610
(lp14611
S'float64'
p14612
aNtp14613
tp14614
tp14615
sS'DAQmxResetAIExcitActualVal'
p14616
((lp14617
S'int32'
p14618
ag34
a((S'taskHandle'
p14619
(lp14620
S'TaskHandle'
p14621
aNtp14622
(S'channel'
p14623
(lp14624
S'char'
p14625
a(lp14626
I-1
aaNtp14627
tp14628
tp14629
sS'DAQmxSetSampClkTimebaseSrc'
p14630
((lp14631
S'int32'
p14632
ag34
a((S'taskHandle'
p14633
(lp14634
S'TaskHandle'
p14635
aNtp14636
(S'data'
p14637
(lp14638
S'char'
p14639
ag42
aNtp14640
tp14641
tp14642
sS'DAQmxResetAOFuncGenAmplitude'
p14643
((lp14644
S'int32'
p14645
ag34
a((S'taskHandle'
p14646
(lp14647
S'TaskHandle'
p14648
aNtp14649
(S'channel'
p14650
(lp14651
S'char'
p14652
a(lp14653
I-1
aaNtp14654
tp14655
tp14656
sS'DAQmxGetDevCOMaxTimebase'
p14657
((lp14658
S'int32'
p14659
ag34
a((S'device'
p14660
(lp14661
S'char'
p14662
a(lp14663
I-1
aaNtp14664
(S'data'
p14665
(lp14666
S'float64'
p14667
ag42
aNtp14668
tp14669
tp14670
sS'DAQmxGetExportedSampClkPulsePolarity'
p14671
((lp14672
S'int32'
p14673
ag34
a((S'taskHandle'
p14674
(lp14675
S'TaskHandle'
p14676
aNtp14677
(S'data'
p14678
(lp14679
S'int32'
p14680
ag42
aNtp14681
tp14682
tp14683
sS'DAQmxGetSwitchChanMaxDCSwitchPwr'
p14684
((lp14685
S'int32'
p14686
ag34
a((S'switchChannelName'
p14687
(lp14688
S'char'
p14689
a(lp14690
I-1
aaNtp14691
(S'data'
p14692
(lp14693
S'float64'
p14694
ag42
aNtp14695
tp14696
tp14697
sS'DAQmxGetDigEdgeStartTrigEdge'
p14698
((lp14699
S'int32'
p14700
ag34
a((S'taskHandle'
p14701
(lp14702
S'TaskHandle'
p14703
aNtp14704
(S'data'
p14705
(lp14706
S'int32'
p14707
ag42
aNtp14708
tp14709
tp14710
sS'DAQmxIsReadOrWriteLate'
p14711
((lp14712
S'bool32'
p14713
ag34
a((S'errorCode'
p14714
(lp14715
S'int32'
p14716
aNtp14717
tp14718
tp14719
sS'DAQmxAdjust9205Cal'
p14720
((lp14721
S'int32'
p14722
ag34
a((S'calHandle'
p14723
(lp14724
S'CalHandle'
p14725
aNtp14726
(S'value'
p14727
(lp14728
S'float64'
p14729
aNtp14730
tp14731
tp14732
sS'DAQmxGetDigEdgeArmStartTrigDigSyncEnable'
p14733
((lp14734
S'int32'
p14735
ag34
a((S'taskHandle'
p14736
(lp14737
S'TaskHandle'
p14738
aNtp14739
(S'data'
p14740
(lp14741
S'bool32'
p14742
ag42
aNtp14743
tp14744
tp14745
sS'DAQmxConfigureLogging'
p14746
((lp14747
S'int32'
p14748
ag34
a((S'taskHandle'
p14749
(lp14750
S'TaskHandle'
p14751
aNtp14752
(S'filePath'
p14753
(lp14754
S'char'
p14755
a(lp14756
I-1
aaNtp14757
(S'loggingMode'
p14758
(lp14759
S'int32'
p14760
aNtp14761
(S'groupName'
p14762
(lp14763
S'char'
p14764
a(lp14765
I-1
aaNtp14766
(S'operation'
p14767
(lp14768
S'int32'
p14769
aNtp14770
tp14771
tp14772
sS'DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior'
p14773
((lp14774
S'int32'
p14775
ag34
a((S'taskHandle'
p14776
(lp14777
S'TaskHandle'
p14778
aNtp14779
(S'channel'
p14780
(lp14781
S'char'
p14782
a(lp14783
I-1
aaNtp14784
(S'data'
p14785
(lp14786
S'int32'
p14787
aNtp14788
tp14789
tp14790
sS'DAQmxGetExportedCtrOutEventPulsePolarity'
p14791
((lp14792
S'int32'
p14793
ag34
a((S'taskHandle'
p14794
(lp14795
S'TaskHandle'
p14796
aNtp14797
(S'data'
p14798
(lp14799
S'int32'
p14800
ag42
aNtp14801
tp14802
tp14803
sS'DAQmxSetCIFreqMeasMeth'
p14804
((lp14805
S'int32'
p14806
ag34
a((S'taskHandle'
p14807
(lp14808
S'TaskHandle'
p14809
aNtp14810
(S'channel'
p14811
(lp14812
S'char'
p14813
a(lp14814
I-1
aaNtp14815
(S'data'
p14816
(lp14817
S'int32'
p14818
aNtp14819
tp14820
tp14821
sS'DAQmxGetCIPulseTimeTermCfg'
p14822
((lp14823
S'int32'
p14824
ag34
a((S'taskHandle'
p14825
(lp14826
S'TaskHandle'
p14827
aNtp14828
(S'channel'
p14829
(lp14830
S'char'
p14831
a(lp14832
I-1
aaNtp14833
(S'data'
p14834
(lp14835
S'int32'
p14836
ag42
aNtp14837
tp14838
tp14839
sS'DAQmxResetAIChanCalTablePreScaledVals'
p14840
((lp14841
S'int32'
p14842
ag34
a((S'taskHandle'
p14843
(lp14844
S'TaskHandle'
p14845
aNtp14846
(S'channel'
p14847
(lp14848
S'char'
p14849
a(lp14850
I-1
aaNtp14851
tp14852
tp14853
sS'DAQmxResetAIConvActiveEdge'
p14854
((lp14855
S'int32'
p14856
ag34
a((S'taskHandle'
p14857
(lp14858
S'TaskHandle'
p14859
aNtp14860
tp14861
tp14862
sS'DAQmxSetExportedSampClkOutputTerm'
p14863
((lp14864
S'int32'
p14865
ag34
a((S'taskHandle'
p14866
(lp14867
S'TaskHandle'
p14868
aNtp14869
(S'data'
p14870
(lp14871
S'char'
p14872
ag42
aNtp14873
tp14874
tp14875
sS'DAQmxAdjust1102Cal'
p14876
((lp14877
S'int32'
p14878
ag34
a((S'calHandle'
p14879
(lp14880
S'CalHandle'
p14881
aNtp14882
(S'refVoltage'
p14883
(lp14884
S'float64'
p14885
aNtp14886
(S'measOutput'
p14887
(lp14888
S'float64'
p14889
aNtp14890
tp14891
tp14892
sS'DAQmxGetCICtrTimebaseActiveEdge'
p14893
((lp14894
S'int32'
p14895
ag34
a((S'taskHandle'
p14896
(lp14897
S'TaskHandle'
p14898
aNtp14899
(S'channel'
p14900
(lp14901
S'char'
p14902
a(lp14903
I-1
aaNtp14904
(S'data'
p14905
(lp14906
S'int32'
p14907
ag42
aNtp14908
tp14909
tp14910
sS'DAQmxGet9220CalAdjustPoints'
p14911
((lp14912
S'int32'
p14913
ag34
a((S'calHandle'
p14914
(lp14915
S'CalHandle'
p14916
aNtp14917
(S'adjustmentPoints'
p14918
(lp14919
S'float64'
p14920
ag42
aNtp14921
(S'bufferSize'
p14922
(lp14923
S'uInt32'
p14924
aNtp14925
tp14926
tp14927
sS'DAQmxResetDIDigSyncEnable'
p14928
((lp14929
S'int32'
p14930
ag34
a((S'taskHandle'
p14931
(lp14932
S'TaskHandle'
p14933
aNtp14934
(S'channel'
p14935
(lp14936
S'char'
p14937
a(lp14938
I-1
aaNtp14939
tp14940
tp14941
sS'DAQmxAdjust1502Cal'
p14942
((lp14943
S'int32'
p14944
ag34
a((S'calHandle'
p14945
(lp14946
S'CalHandle'
p14947
aNtp14948
(S'refVoltage'
p14949
(lp14950
S'float64'
p14951
aNtp14952
(S'measOutput'
p14953
(lp14954
S'float64'
p14955
aNtp14956
tp14957
tp14958
sS'DAQmxResetCICtrTimebaseSrc'
p14959
((lp14960
S'int32'
p14961
ag34
a((S'taskHandle'
p14962
(lp14963
S'TaskHandle'
p14964
aNtp14965
(S'channel'
p14966
(lp14967
S'char'
p14968
a(lp14969
I-1
aaNtp14970
tp14971
tp14972
sS'DAQmxResetBufOutputOnbrdBufSize'
p14973
((lp14974
S'int32'
p14975
ag34
a((S'taskHandle'
p14976
(lp14977
S'TaskHandle'
p14978
aNtp14979
tp14980
tp14981
sS'DAQmxSetDelayFromSampClkDelayUnits'
p14982
((lp14983
S'int32'
p14984
ag34
a((S'taskHandle'
p14985
(lp14986
S'TaskHandle'
p14987
aNtp14988
(S'data'
p14989
(lp14990
S'int32'
p14991
aNtp14992
tp14993
tp14994
sS'DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseRate'
p14995
((lp14996
S'int32'
p14997
ag34
a((S'taskHandle'
p14998
(lp14999
S'TaskHandle'
p15000
aNtp15001
tp15002
tp15003
sS'DAQmxSetAIChanCalCalDate'
p15004
((lp15005
S'int32'
p15006
ag34
a((S'taskHandle'
p15007
(lp15008
S'TaskHandle'
p15009
aNtp15010
(S'channelName'
p15011
(lp15012
S'char'
p15013
a(lp15014
I-1
aaNtp15015
(S'year'
p15016
(lp15017
S'uInt32'
p15018
aNtp15019
(S'month'
p15020
(lp15021
S'uInt32'
p15022
aNtp15023
(S'day'
p15024
(lp15025
S'uInt32'
p15026
aNtp15027
(S'hour'
p15028
(lp15029
S'uInt32'
p15030
aNtp15031
(S'minute'
p15032
(lp15033
S'uInt32'
p15034
aNtp15035
tp15036
tp15037
sS'DAQmxSetScaleMapPreScaledMax'
p15038
((lp15039
S'int32'
p15040
ag34
a((S'scaleName'
p15041
(lp15042
S'char'
p15043
a(lp15044
I-1
aaNtp15045
(S'data'
p15046
(lp15047
S'float64'
p15048
aNtp15049
tp15050
tp15051
sS'DAQmxGetAIConvDigFltrEnableEx'
p15052
((lp15053
S'int32'
p15054
ag34
a((S'taskHandle'
p15055
(lp15056
S'TaskHandle'
p15057
aNtp15058
(S'deviceNames'
p15059
(lp15060
S'char'
p15061
a(lp15062
I-1
aaNtp15063
(S'data'
p15064
(lp15065
S'bool32'
p15066
ag42
aNtp15067
tp15068
tp15069
sS'DAQmxGetCIEncoderAInputLogicLvlBehavior'
p15070
((lp15071
S'int32'
p15072
ag34
a((S'taskHandle'
p15073
(lp15074
S'TaskHandle'
p15075
aNtp15076
(S'channel'
p15077
(lp15078
S'char'
p15079
a(lp15080
I-1
aaNtp15081
(S'data'
p15082
(lp15083
S'int32'
p15084
ag42
aNtp15085
tp15086
tp15087
sS'DAQmxGetBufOutputOnbrdBufSize'
p15088
((lp15089
S'int32'
p15090
ag34
a((S'taskHandle'
p15091
(lp15092
S'TaskHandle'
p15093
aNtp15094
(S'data'
p15095
(lp15096
S'uInt32'
p15097
ag42
aNtp15098
tp15099
tp15100
sS'DAQmxSetDITristate'
p15101
((lp15102
S'int32'
p15103
ag34
a((S'taskHandle'
p15104
(lp15105
S'TaskHandle'
p15106
aNtp15107
(S'channel'
p15108
(lp15109
S'char'
p15110
a(lp15111
I-1
aaNtp15112
(S'data'
p15113
(lp15114
S'bool32'
p15115
aNtp15116
tp15117
tp15118
sS'DAQmxSetCIPulseTimeDigFltrTimebaseSrc'
p15119
((lp15120
S'int32'
p15121
ag34
a((S'taskHandle'
p15122
(lp15123
S'TaskHandle'
p15124
aNtp15125
(S'channel'
p15126
(lp15127
S'char'
p15128
a(lp15129
I-1
aaNtp15130
(S'data'
p15131
(lp15132
S'char'
p15133
ag42
aNtp15134
tp15135
tp15136
sS'DAQmxSetCIAngEncoderInitialAngle'
p15137
((lp15138
S'int32'
p15139
ag34
a((S'taskHandle'
p15140
(lp15141
S'TaskHandle'
p15142
aNtp15143
(S'channel'
p15144
(lp15145
S'char'
p15146
a(lp15147
I-1
aaNtp15148
(S'data'
p15149
(lp15150
S'float64'
p15151
aNtp15152
tp15153
tp15154
sS'DAQmxSetWriteRelativeTo'
p15155
((lp15156
S'int32'
p15157
ag34
a((S'taskHandle'
p15158
(lp15159
S'TaskHandle'
p15160
aNtp15161
(S'data'
p15162
(lp15163
S'int32'
p15164
aNtp15165
tp15166
tp15167
sS'DAQmxGetAIBridgeScaleType'
p15168
((lp15169
S'int32'
p15170
ag34
a((S'taskHandle'
p15171
(lp15172
S'TaskHandle'
p15173
aNtp15174
(S'channel'
p15175
(lp15176
S'char'
p15177
a(lp15178
I-1
aaNtp15179
(S'data'
p15180
(lp15181
S'int32'
p15182
ag42
aNtp15183
tp15184
tp15185
sS'DAQmxSetReadRelativeTo'
p15186
((lp15187
S'int32'
p15188
ag34
a((S'taskHandle'
p15189
(lp15190
S'TaskHandle'
p15191
aNtp15192
(S'data'
p15193
(lp15194
S'int32'
p15195
aNtp15196
tp15197
tp15198
sS'DAQmxGetDOLineStatesPausedState'
p15199
((lp15200
S'int32'
p15201
ag34
a((S'taskHandle'
p15202
(lp15203
S'TaskHandle'
p15204
aNtp15205
(S'channel'
p15206
(lp15207
S'char'
p15208
a(lp15209
I-1
aaNtp15210
(S'data'
p15211
(lp15212
S'int32'
p15213
ag42
aNtp15214
tp15215
tp15216
sS'DAQmxGetCICountEdgesDigFltrTimebaseRate'
p15217
((lp15218
S'int32'
p15219
ag34
a((S'taskHandle'
p15220
(lp15221
S'TaskHandle'
p15222
aNtp15223
(S'channel'
p15224
(lp15225
S'char'
p15226
a(lp15227
I-1
aaNtp15228
(S'data'
p15229
(lp15230
S'float64'
p15231
ag42
aNtp15232
tp15233
tp15234
sS'DAQmxResetDigEdgeStartTrigDigSyncEnable'
p15235
((lp15236
S'int32'
p15237
ag34
a((S'taskHandle'
p15238
(lp15239
S'TaskHandle'
p15240
aNtp15241
tp15242
tp15243
sS'DAQmxGetDODataXferMech'
p15244
((lp15245
S'int32'
p15246
ag34
a((S'taskHandle'
p15247
(lp15248
S'TaskHandle'
p15249
aNtp15250
(S'channel'
p15251
(lp15252
S'char'
p15253
a(lp15254
I-1
aaNtp15255
(S'data'
p15256
(lp15257
S'int32'
p15258
ag42
aNtp15259
tp15260
tp15261
sS'DAQmxSetAIBridgeShuntCalShuntCalAActualResistance'
p15262
((lp15263
S'int32'
p15264
ag34
a((S'taskHandle'
p15265
(lp15266
S'TaskHandle'
p15267
aNtp15268
(S'channel'
p15269
(lp15270
S'char'
p15271
a(lp15272
I-1
aaNtp15273
(S'data'
p15274
(lp15275
S'float64'
p15276
aNtp15277
tp15278
tp15279
sS'DAQmxSetCIEncoderAInputTermCfg'
p15280
((lp15281
S'int32'
p15282
ag34
a((S'taskHandle'
p15283
(lp15284
S'TaskHandle'
p15285
aNtp15286
(S'channel'
p15287
(lp15288
S'char'
p15289
a(lp15290
I-1
aaNtp15291
(S'data'
p15292
(lp15293
S'int32'
p15294
aNtp15295
tp15296
tp15297
sS'DAQmxSetAIRTDR0'
p15298
((lp15299
S'int32'
p15300
ag34
a((S'taskHandle'
p15301
(lp15302
S'TaskHandle'
p15303
aNtp15304
(S'channel'
p15305
(lp15306
S'char'
p15307
a(lp15308
I-1
aaNtp15309
(S'data'
p15310
(lp15311
S'float64'
p15312
aNtp15313
tp15314
tp15315
sS'DAQmxSetCICountEdgesCountResetDigSyncEnable'
p15316
((lp15317
S'int32'
p15318
ag34
a((S'taskHandle'
p15319
(lp15320
S'TaskHandle'
p15321
aNtp15322
(S'channel'
p15323
(lp15324
S'char'
p15325
a(lp15326
I-1
aaNtp15327
(S'data'
p15328
(lp15329
S'bool32'
p15330
aNtp15331
tp15332
tp15333
sS'DAQmxSetExportedRdyForXferEventLvlActiveLvl'
p15334
((lp15335
S'int32'
p15336
ag34
a((S'taskHandle'
p15337
(lp15338
S'TaskHandle'
p15339
aNtp15340
(S'data'
p15341
(lp15342
S'int32'
p15343
aNtp15344
tp15345
tp15346
sS'DAQmxResetDOLineStatesDoneState'
p15347
((lp15348
S'int32'
p15349
ag34
a((S'taskHandle'
p15350
(lp15351
S'TaskHandle'
p15352
aNtp15353
(S'channel'
p15354
(lp15355
S'char'
p15356
a(lp15357
I-1
aaNtp15358
tp15359
tp15360
sS'DAQmxResetAnlgWinRefTrigDigFltrTimebaseRate'
p15361
((lp15362
S'int32'
p15363
ag34
a((S'taskHandle'
p15364
(lp15365
S'TaskHandle'
p15366
aNtp15367
tp15368
tp15369
sS'DAQmxGetCIEncoderAInputDigFltrTimebaseSrc'
p15370
((lp15371
S'int32'
p15372
ag34
a((S'taskHandle'
p15373
(lp15374
S'TaskHandle'
p15375
aNtp15376
(S'channel'
p15377
(lp15378
S'char'
p15379
a(lp15380
I-1
aaNtp15381
(S'data'
p15382
(lp15383
S'char'
p15384
ag42
aNtp15385
(S'bufferSize'
p15386
(lp15387
S'uInt32'
p15388
aNtp15389
tp15390
tp15391
sS'DAQmxGetDevDOPorts'
p15392
((lp15393
S'int32'
p15394
ag34
a((S'device'
p15395
(lp15396
S'char'
p15397
a(lp15398
I-1
aaNtp15399
(S'data'
p15400
(lp15401
S'char'
p15402
ag42
aNtp15403
(S'bufferSize'
p15404
(lp15405
S'uInt32'
p15406
aNtp15407
tp15408
tp15409
sS'DAQmxGetCIEncoderAInputDigSyncEnable'
p15410
((lp15411
S'int32'
p15412
ag34
a((S'taskHandle'
p15413
(lp15414
S'TaskHandle'
p15415
aNtp15416
(S'channel'
p15417
(lp15418
S'char'
p15419
a(lp15420
I-1
aaNtp15421
(S'data'
p15422
(lp15423
S'bool32'
p15424
ag42
aNtp15425
tp15426
tp15427
sS'DAQmxGetAIVelocityIEPESensorSensitivityUnits'
p15428
((lp15429
S'int32'
p15430
ag34
a((S'taskHandle'
p15431
(lp15432
S'TaskHandle'
p15433
aNtp15434
(S'channel'
p15435
(lp15436
S'char'
p15437
a(lp15438
I-1
aaNtp15439
(S'data'
p15440
(lp15441
S'int32'
p15442
ag42
aNtp15443
tp15444
tp15445
sS'DAQmxSetCIPulseTicksDigFltrTimebaseRate'
p15446
((lp15447
S'int32'
p15448
ag34
a((S'taskHandle'
p15449
(lp15450
S'TaskHandle'
p15451
aNtp15452
(S'channel'
p15453
(lp15454
S'char'
p15455
a(lp15456
I-1
aaNtp15457
(S'data'
p15458
(lp15459
S'float64'
p15460
aNtp15461
tp15462
tp15463
sS'DAQmxGetAICoupling'
p15464
((lp15465
S'int32'
p15466
ag34
a((S'taskHandle'
p15467
(lp15468
S'TaskHandle'
p15469
aNtp15470
(S'channel'
p15471
(lp15472
S'char'
p15473
a(lp15474
I-1
aaNtp15475
(S'data'
p15476
(lp15477
S'int32'
p15478
ag42
aNtp15479
tp15480
tp15481
sS'DAQmxSetExportedCtrOutEventOutputTerm'
p15482
((lp15483
S'int32'
p15484
ag34
a((S'taskHandle'
p15485
(lp15486
S'TaskHandle'
p15487
aNtp15488
(S'data'
p15489
(lp15490
S'char'
p15491
ag42
aNtp15492
tp15493
tp15494
sS'DAQmxSetScaleTablePreScaledVals'
p15495
((lp15496
S'int32'
p15497
ag34
a((S'scaleName'
p15498
(lp15499
S'char'
p15500
a(lp15501
I-1
aaNtp15502
(S'data'
p15503
(lp15504
S'float64'
p15505
ag42
aNtp15506
(S'arraySizeInElements'
p15507
(lp15508
S'uInt32'
p15509
aNtp15510
tp15511
tp15512
sS'DAQmxSetCIFreqMeasTime'
p15513
((lp15514
S'int32'
p15515
ag34
a((S'taskHandle'
p15516
(lp15517
S'TaskHandle'
p15518
aNtp15519
(S'channel'
p15520
(lp15521
S'char'
p15522
a(lp15523
I-1
aaNtp15524
(S'data'
p15525
(lp15526
S'float64'
p15527
aNtp15528
tp15529
tp15530
sS'DAQmxSetAIConvRateEx'
p15531
((lp15532
S'int32'
p15533
ag34
a((S'taskHandle'
p15534
(lp15535
S'TaskHandle'
p15536
aNtp15537
(S'deviceNames'
p15538
(lp15539
S'char'
p15540
a(lp15541
I-1
aaNtp15542
(S'data'
p15543
(lp15544
S'float64'
p15545
aNtp15546
tp15547
tp15548
sS'DAQmxResetAIDataXferMech'
p15549
((lp15550
S'int32'
p15551
ag34
a((S'taskHandle'
p15552
(lp15553
S'TaskHandle'
p15554
aNtp15555
(S'channel'
p15556
(lp15557
S'char'
p15558
a(lp15559
I-1
aaNtp15560
tp15561
tp15562
sS'DAQmxSetReadWaitMode'
p15563
((lp15564
S'int32'
p15565
ag34
a((S'taskHandle'
p15566
(lp15567
S'TaskHandle'
p15568
aNtp15569
(S'data'
p15570
(lp15571
S'int32'
p15572
aNtp15573
tp15574
tp15575
sS'DAQmxSetCIEncoderZInputLogicLvlBehavior'
p15576
((lp15577
S'int32'
p15578
ag34
a((S'taskHandle'
p15579
(lp15580
S'TaskHandle'
p15581
aNtp15582
(S'channel'
p15583
(lp15584
S'char'
p15585
a(lp15586
I-1
aaNtp15587
(S'data'
p15588
(lp15589
S'int32'
p15590
aNtp15591
tp15592
tp15593
sS'DAQmxGetAIConvDigFltrTimebaseSrcEx'
p15594
((lp15595
S'int32'
p15596
ag34
a((S'taskHandle'
p15597
(lp15598
S'TaskHandle'
p15599
aNtp15600
(S'deviceNames'
p15601
(lp15602
S'char'
p15603
a(lp15604
I-1
aaNtp15605
(S'data'
p15606
(lp15607
S'char'
p15608
ag42
aNtp15609
(S'bufferSize'
p15610
(lp15611
S'uInt32'
p15612
aNtp15613
tp15614
tp15615
sS'DAQmxGetCITwoEdgeSepSecondDigSyncEnable'
p15616
((lp15617
S'int32'
p15618
ag34
a((S'taskHandle'
p15619
(lp15620
S'TaskHandle'
p15621
aNtp15622
(S'channel'
p15623
(lp15624
S'char'
p15625
a(lp15626
I-1
aaNtp15627
(S'data'
p15628
(lp15629
S'bool32'
p15630
ag42
aNtp15631
tp15632
tp15633
sS'DAQmxResetCIAngEncoderInitialAngle'
p15634
((lp15635
S'int32'
p15636
ag34
a((S'taskHandle'
p15637
(lp15638
S'TaskHandle'
p15639
aNtp15640
(S'channel'
p15641
(lp15642
S'char'
p15643
a(lp15644
I-1
aaNtp15645
tp15646
tp15647
sS'DAQmxSetCIPulseWidthDigFltrTimebaseSrc'
p15648
((lp15649
S'int32'
p15650
ag34
a((S'taskHandle'
p15651
(lp15652
S'TaskHandle'
p15653
aNtp15654
(S'channel'
p15655
(lp15656
S'char'
p15657
a(lp15658
I-1
aaNtp15659
(S'data'
p15660
(lp15661
S'char'
p15662
ag42
aNtp15663
tp15664
tp15665
sS'DAQmxResetStartTrigType'
p15666
((lp15667
S'int32'
p15668
ag34
a((S'taskHandle'
p15669
(lp15670
S'TaskHandle'
p15671
aNtp15672
tp15673
tp15674
sS'DAQmxSetAIOpenThrmcplDetectEnable'
p15675
((lp15676
S'int32'
p15677
ag34
a((S'taskHandle'
p15678
(lp15679
S'TaskHandle'
p15680
aNtp15681
(S'channel'
p15682
(lp15683
S'char'
p15684
a(lp15685
I-1
aaNtp15686
(S'data'
p15687
(lp15688
S'bool32'
p15689
aNtp15690
tp15691
tp15692
sS'DAQmxResetAODACRefConnToGnd'
p15693
((lp15694
S'int32'
p15695
ag34
a((S'taskHandle'
p15696
(lp15697
S'TaskHandle'
p15698
aNtp15699
(S'channel'
p15700
(lp15701
S'char'
p15702
a(lp15703
I-1
aaNtp15704
tp15705
tp15706
sS'DAQmxSetAIThrmstrC'
p15707
((lp15708
S'int32'
p15709
ag34
a((S'taskHandle'
p15710
(lp15711
S'TaskHandle'
p15712
aNtp15713
(S'channel'
p15714
(lp15715
S'char'
p15716
a(lp15717
I-1
aaNtp15718
(S'data'
p15719
(lp15720
S'float64'
p15721
aNtp15722
tp15723
tp15724
sS'DAQmxSetAIThrmstrB'
p15725
((lp15726
S'int32'
p15727
ag34
a((S'taskHandle'
p15728
(lp15729
S'TaskHandle'
p15730
aNtp15731
(S'channel'
p15732
(lp15733
S'char'
p15734
a(lp15735
I-1
aaNtp15736
(S'data'
p15737
(lp15738
S'float64'
p15739
aNtp15740
tp15741
tp15742
sS'DAQmxSetAIThrmstrA'
p15743
((lp15744
S'int32'
p15745
ag34
a((S'taskHandle'
p15746
(lp15747
S'TaskHandle'
p15748
aNtp15749
(S'channel'
p15750
(lp15751
S'char'
p15752
a(lp15753
I-1
aaNtp15754
(S'data'
p15755
(lp15756
S'float64'
p15757
aNtp15758
tp15759
tp15760
sS'DAQmxReadBinaryI16'
p15761
((lp15762
S'int32'
p15763
ag34
a((S'taskHandle'
p15764
(lp15765
S'TaskHandle'
p15766
aNtp15767
(S'numSampsPerChan'
p15768
(lp15769
S'int32'
p15770
aNtp15771
(S'timeout'
p15772
(lp15773
S'float64'
p15774
aNtp15775
(S'fillMode'
p15776
(lp15777
S'bool32'
p15778
aNtp15779
(S'readArray'
p15780
(lp15781
S'int16'
p15782
a(lp15783
I-1
aaNtp15784
(S'arraySizeInSamps'
p15785
(lp15786
S'uInt32'
p15787
aNtp15788
(S'sampsPerChanRead'
p15789
(lp15790
S'int32'
p15791
ag42
aNtp15792
(S'reserved'
p15793
(lp15794
S'bool32'
p15795
ag42
aNtp15796
tp15797
tp15798
sS'DAQmxGetAIChanCalTablePreScaledVals'
p15799
((lp15800
S'int32'
p15801
ag34
a((S'taskHandle'
p15802
(lp15803
S'TaskHandle'
p15804
aNtp15805
(S'channel'
p15806
(lp15807
S'char'
p15808
a(lp15809
I-1
aaNtp15810
(S'data'
p15811
(lp15812
S'float64'
p15813
ag42
aNtp15814
(S'arraySizeInElements'
p15815
(lp15816
S'uInt32'
p15817
aNtp15818
tp15819
tp15820
sS'DAQmxGetSampClkTimebaseMasterTimebaseDiv'
p15821
((lp15822
S'int32'
p15823
ag34
a((S'taskHandle'
p15824
(lp15825
S'TaskHandle'
p15826
aNtp15827
(S'data'
p15828
(lp15829
S'uInt32'
p15830
ag42
aNtp15831
tp15832
tp15833
sS'DAQmxGetAIConvDigFltrTimebaseRate'
p15834
((lp15835
S'int32'
p15836
ag34
a((S'taskHandle'
p15837
(lp15838
S'TaskHandle'
p15839
aNtp15840
(S'data'
p15841
(lp15842
S'float64'
p15843
ag42
aNtp15844
tp15845
tp15846
sS'DAQmxSetDIUsbXferReqSize'
p15847
((lp15848
S'int32'
p15849
ag34
a((S'taskHandle'
p15850
(lp15851
S'TaskHandle'
p15852
aNtp15853
(S'channel'
p15854
(lp15855
S'char'
p15856
a(lp15857
I-1
aaNtp15858
(S'data'
p15859
(lp15860
S'uInt32'
p15861
aNtp15862
tp15863
tp15864
sS'DAQmxDeleteSavedGlobalChan'
p15865
((lp15866
S'int32'
p15867
ag34
a((S'channelName'
p15868
(lp15869
S'char'
p15870
a(lp15871
I-1
aaNtp15872
tp15873
tp15874
sS'DAQmxGetExportedAdvTrigOutputTerm'
p15875
((lp15876
S'int32'
p15877
ag34
a((S'taskHandle'
p15878
(lp15879
S'TaskHandle'
p15880
aNtp15881
(S'data'
p15882
(lp15883
S'char'
p15884
ag42
aNtp15885
(S'bufferSize'
p15886
(lp15887
S'uInt32'
p15888
aNtp15889
tp15890
tp15891
sS'DAQmxGetPhysicalChanDOSampClkSupported'
p15892
((lp15893
S'int32'
p15894
ag34
a((S'physicalChannel'
p15895
(lp15896
S'char'
p15897
a(lp15898
I-1
aaNtp15899
(S'data'
p15900
(lp15901
S'bool32'
p15902
ag42
aNtp15903
tp15904
tp15905
sS'DAQmxGetAIInputSrc'
p15906
((lp15907
S'int32'
p15908
ag34
a((S'taskHandle'
p15909
(lp15910
S'TaskHandle'
p15911
aNtp15912
(S'channel'
p15913
(lp15914
S'char'
p15915
a(lp15916
I-1
aaNtp15917
(S'data'
p15918
(lp15919
S'char'
p15920
ag42
aNtp15921
(S'bufferSize'
p15922
(lp15923
S'uInt32'
p15924
aNtp15925
tp15926
tp15927
sS'DAQmxGet9207CalAdjustPoints'
p15928
((lp15929
S'int32'
p15930
ag34
a((S'calHandle'
p15931
(lp15932
S'CalHandle'
p15933
aNtp15934
(S'channelNames'
p15935
(lp15936
S'char'
p15937
a(lp15938
I-1
aaNtp15939
(S'adjustmentPoints'
p15940
(lp15941
S'float64'
p15942
ag42
aNtp15943
(S'bufferSize'
p15944
(lp15945
S'uInt32'
p15946
aNtp15947
tp15948
tp15949
sS'DAQmxSwitchGetSingleRelayCount'
p15950
((lp15951
S'int32'
p15952
ag34
a((S'relayName'
p15953
(lp15954
S'char'
p15955
a(lp15956
I-1
aaNtp15957
(S'count'
p15958
(lp15959
S'uInt32'
p15960
ag42
aNtp15961
tp15962
tp15963
sS'DAQmxGetCICountEdgesDigFltrEnable'
p15964
((lp15965
S'int32'
p15966
ag34
a((S'taskHandle'
p15967
(lp15968
S'TaskHandle'
p15969
aNtp15970
(S'channel'
p15971
(lp15972
S'char'
p15973
a(lp15974
I-1
aaNtp15975
(S'data'
p15976
(lp15977
S'bool32'
p15978
ag42
aNtp15979
tp15980
tp15981
sS'DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc'
p15982
((lp15983
S'int32'
p15984
ag34
a((S'taskHandle'
p15985
(lp15986
S'TaskHandle'
p15987
aNtp15988
(S'data'
p15989
(lp15990
S'char'
p15991
ag42
aNtp15992
(S'bufferSize'
p15993
(lp15994
S'uInt32'
p15995
aNtp15996
tp15997
tp15998
sS'DAQmxSetCOPulseIdleState'
p15999
((lp16000
S'int32'
p16001
ag34
a((S'taskHandle'
p16002
(lp16003
S'TaskHandle'
p16004
aNtp16005
(S'channel'
p16006
(lp16007
S'char'
p16008
a(lp16009
I-1
aaNtp16010
(S'data'
p16011
(lp16012
S'int32'
p16013
aNtp16014
tp16015
tp16016
sS'DAQmxGet9234CalAdjustPoints'
p16017
((lp16018
S'int32'
p16019
ag34
a((S'calHandle'
p16020
(lp16021
S'CalHandle'
p16022
aNtp16023
(S'adjustmentPoints'
p16024
(lp16025
S'float64'
p16026
ag42
aNtp16027
(S'bufferSize'
p16028
(lp16029
S'uInt32'
p16030
aNtp16031
tp16032
tp16033
sS'DAQmxCfgDigEdgeAdvTrig'
p16034
((lp16035
S'int32'
p16036
ag34
a((S'taskHandle'
p16037
(lp16038
S'TaskHandle'
p16039
aNtp16040
(S'triggerSource'
p16041
(lp16042
S'char'
p16043
a(lp16044
I-1
aaNtp16045
(S'triggerEdge'
p16046
(lp16047
S'int32'
p16048
aNtp16049
tp16050
tp16051
sS'DAQmxResetCICountEdgesDigFltrTimebaseRate'
p16052
((lp16053
S'int32'
p16054
ag34
a((S'taskHandle'
p16055
(lp16056
S'TaskHandle'
p16057
aNtp16058
(S'channel'
p16059
(lp16060
S'char'
p16061
a(lp16062
I-1
aaNtp16063
tp16064
tp16065
sS'DAQmxAdjustDSAAOCal'
p16066
((lp16067
S'int32'
p16068
ag34
a((S'calHandle'
p16069
(lp16070
S'CalHandle'
p16071
aNtp16072
(S'channel'
p16073
(lp16074
S'uInt32'
p16075
aNtp16076
(S'requestedLowVoltage'
p16077
(lp16078
S'float64'
p16079
aNtp16080
(S'actualLowVoltage'
p16081
(lp16082
S'float64'
p16083
aNtp16084
(S'requestedHighVoltage'
p16085
(lp16086
S'float64'
p16087
aNtp16088
(S'actualHighVoltage'
p16089
(lp16090
S'float64'
p16091
aNtp16092
(S'gainSetting'
p16093
(lp16094
S'float64'
p16095
aNtp16096
tp16097
tp16098
sS'DAQmxResetAIRVDTUnits'
p16099
((lp16100
S'int32'
p16101
ag34
a((S'taskHandle'
p16102
(lp16103
S'TaskHandle'
p16104
aNtp16105
(S'channel'
p16106
(lp16107
S'char'
p16108
a(lp16109
I-1
aaNtp16110
tp16111
tp16112
sS'DAQmxSetAIForceUnits'
p16113
((lp16114
S'int32'
p16115
ag34
a((S'taskHandle'
p16116
(lp16117
S'TaskHandle'
p16118
aNtp16119
(S'channel'
p16120
(lp16121
S'char'
p16122
a(lp16123
I-1
aaNtp16124
(S'data'
p16125
(lp16126
S'int32'
p16127
aNtp16128
tp16129
tp16130
sS'DAQmxGetCIPeriodMeasTime'
p16131
((lp16132
S'int32'
p16133
ag34
a((S'taskHandle'
p16134
(lp16135
S'TaskHandle'
p16136
aNtp16137
(S'channel'
p16138
(lp16139
S'char'
p16140
a(lp16141
I-1
aaNtp16142
(S'data'
p16143
(lp16144
S'float64'
p16145
ag42
aNtp16146
tp16147
tp16148
sS'DAQmxAdjust4322Cal'
p16149
((lp16150
S'int32'
p16151
ag34
a((S'calHandle'
p16152
(lp16153
S'CalHandle'
p16154
aNtp16155
(S'channelNames'
p16156
(lp16157
S'char'
p16158
a(lp16159
I-1
aaNtp16160
(S'refVal'
p16161
(lp16162
S'float64'
p16163
aNtp16164
tp16165
tp16166
sS'DAQmxGetAnlgEdgeRefTrigDigFltrEnable'
p16167
((lp16168
S'int32'
p16169
ag34
a((S'taskHandle'
p16170
(lp16171
S'TaskHandle'
p16172
aNtp16173
(S'data'
p16174
(lp16175
S'bool32'
p16176
ag42
aNtp16177
tp16178
tp16179
sS'DAQmxSetSampClkOverrunBehavior'
p16180
((lp16181
S'int32'
p16182
ag34
a((S'taskHandle'
p16183
(lp16184
S'TaskHandle'
p16185
aNtp16186
(S'data'
p16187
(lp16188
S'int32'
p16189
aNtp16190
tp16191
tp16192
sS'DAQmxSetDigEdgeArmStartTrigDigSyncEnable'
p16193
((lp16194
S'int32'
p16195
ag34
a((S'taskHandle'
p16196
(lp16197
S'TaskHandle'
p16198
aNtp16199
(S'data'
p16200
(lp16201
S'bool32'
p16202
aNtp16203
tp16204
tp16205
sS'DAQmxResetAIBridgeNomResistance'
p16206
((lp16207
S'int32'
p16208
ag34
a((S'taskHandle'
p16209
(lp16210
S'TaskHandle'
p16211
aNtp16212
(S'channel'
p16213
(lp16214
S'char'
p16215
a(lp16216
I-1
aaNtp16217
tp16218
tp16219
sS'DAQmxGetCIEncoderBInputDigFltrEnable'
p16220
((lp16221
S'int32'
p16222
ag34
a((S'taskHandle'
p16223
(lp16224
S'TaskHandle'
p16225
aNtp16226
(S'channel'
p16227
(lp16228
S'char'
p16229
a(lp16230
I-1
aaNtp16231
(S'data'
p16232
(lp16233
S'bool32'
p16234
ag42
aNtp16235
tp16236
tp16237
sS'DAQmxSetDIAcquireOn'
p16238
((lp16239
S'int32'
p16240
ag34
a((S'taskHandle'
p16241
(lp16242
S'TaskHandle'
p16243
aNtp16244
(S'channel'
p16245
(lp16246
S'char'
p16247
a(lp16248
I-1
aaNtp16249
(S'data'
p16250
(lp16251
S'int32'
p16252
aNtp16253
tp16254
tp16255
sS'DAQmxResetAOUsbXferReqCount'
p16256
((lp16257
S'int32'
p16258
ag34
a((S'taskHandle'
p16259
(lp16260
S'TaskHandle'
p16261
aNtp16262
(S'channel'
p16263
(lp16264
S'char'
p16265
a(lp16266
I-1
aaNtp16267
tp16268
tp16269
sS'DAQmxGetCIMax'
p16270
((lp16271
S'int32'
p16272
ag34
a((S'taskHandle'
p16273
(lp16274
S'TaskHandle'
p16275
aNtp16276
(S'channel'
p16277
(lp16278
S'char'
p16279
a(lp16280
I-1
aaNtp16281
(S'data'
p16282
(lp16283
S'float64'
p16284
ag42
aNtp16285
tp16286
tp16287
sS'DAQmxResetCIEncoderZIndexPhase'
p16288
((lp16289
S'int32'
p16290
ag34
a((S'taskHandle'
p16291
(lp16292
S'TaskHandle'
p16293
aNtp16294
(S'channel'
p16295
(lp16296
S'char'
p16297
a(lp16298
I-1
aaNtp16299
tp16300
tp16301
sS'DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseRate'
p16302
((lp16303
S'int32'
p16304
ag34
a((S'taskHandle'
p16305
(lp16306
S'TaskHandle'
p16307
aNtp16308
(S'data'
p16309
(lp16310
S'float64'
p16311
aNtp16312
tp16313
tp16314
sS'DAQmxResetCOAutoIncrCnt'
p16315
((lp16316
S'int32'
p16317
ag34
a((S'taskHandle'
p16318
(lp16319
S'TaskHandle'
p16320
aNtp16321
(S'channel'
p16322
(lp16323
S'char'
p16324
a(lp16325
I-1
aaNtp16326
tp16327
tp16328
sS'DAQmxSetSyncPulseMinDelayToStart'
p16329
((lp16330
S'int32'
p16331
ag34
a((S'taskHandle'
p16332
(lp16333
S'TaskHandle'
p16334
aNtp16335
(S'data'
p16336
(lp16337
S'float64'
p16338
aNtp16339
tp16340
tp16341
sS'DAQmxResetAODACOffsetSrc'
p16342
((lp16343
S'int32'
p16344
ag34
a((S'taskHandle'
p16345
(lp16346
S'TaskHandle'
p16347
aNtp16348
(S'channel'
p16349
(lp16350
S'char'
p16351
a(lp16352
I-1
aaNtp16353
tp16354
tp16355
sS'DAQmxGetAICurrentACRMSUnits'
p16356
((lp16357
S'int32'
p16358
ag34
a((S'taskHandle'
p16359
(lp16360
S'TaskHandle'
p16361
aNtp16362
(S'channel'
p16363
(lp16364
S'char'
p16365
a(lp16366
I-1
aaNtp16367
(S'data'
p16368
(lp16369
S'int32'
p16370
ag42
aNtp16371
tp16372
tp16373
sS'DAQmxGetAnlgWinRefTrigDigSyncEnable'
p16374
((lp16375
S'int32'
p16376
ag34
a((S'taskHandle'
p16377
(lp16378
S'TaskHandle'
p16379
aNtp16380
(S'data'
p16381
(lp16382
S'bool32'
p16383
ag42
aNtp16384
tp16385
tp16386
sS'DAQmxResetExportedAdvTrigPulseWidthUnits'
p16387
((lp16388
S'int32'
p16389
ag34
a((S'taskHandle'
p16390
(lp16391
S'TaskHandle'
p16392
aNtp16393
tp16394
tp16395
sS'DAQmxSetSCExpressCalAccBridgeOutput'
p16396
((lp16397
S'int32'
p16398
ag34
a((S'calHandle'
p16399
(lp16400
S'CalHandle'
p16401
aNtp16402
(S'voltsPerVolt'
p16403
(lp16404
S'float64'
p16405
aNtp16406
tp16407
tp16408
sS'DAQmxGetCalRecommendedAccConnectionCountLimit'
p16409
((lp16410
S'int32'
p16411
ag34
a((S'deviceName'
p16412
(lp16413
S'char'
p16414
a(lp16415
I-1
aaNtp16416
(S'data'
p16417
(lp16418
S'uInt32'
p16419
ag42
aNtp16420
tp16421
tp16422
sS'DAQmxResetTimingAttributeEx'
p16423
((lp16424
S'int32'
p16425
ag34
a((S'taskHandle'
p16426
(lp16427
S'TaskHandle'
p16428
aNtp16429
(S'deviceNames'
p16430
(lp16431
S'char'
p16432
a(lp16433
I-1
aaNtp16434
(S'attribute'
p16435
(lp16436
S'int32'
p16437
aNtp16438
tp16439
tp16440
sS'DAQmxResetWriteRelativeTo'
p16441
((lp16442
S'int32'
p16443
ag34
a((S'taskHandle'
p16444
(lp16445
S'TaskHandle'
p16446
aNtp16447
tp16448
tp16449
sS'DAQmxResetExportedSampClkOutputBehavior'
p16450
((lp16451
S'int32'
p16452
ag34
a((S'taskHandle'
p16453
(lp16454
S'TaskHandle'
p16455
aNtp16456
tp16457
tp16458
sS'DAQmxResetCIEncoderAInputDigFltrEnable'
p16459
((lp16460
S'int32'
p16461
ag34
a((S'taskHandle'
p16462
(lp16463
S'TaskHandle'
p16464
aNtp16465
(S'channel'
p16466
(lp16467
S'char'
p16468
a(lp16469
I-1
aaNtp16470
tp16471
tp16472
sS'DAQmxGetAnlgLvlPauseTrigWhen'
p16473
((lp16474
S'int32'
p16475
ag34
a((S'taskHandle'
p16476
(lp16477
S'TaskHandle'
p16478
aNtp16479
(S'data'
p16480
(lp16481
S'int32'
p16482
ag42
aNtp16483
tp16484
tp16485
sS'DAQmxSetCIPeriodMeasMeth'
p16486
((lp16487
S'int32'
p16488
ag34
a((S'taskHandle'
p16489
(lp16490
S'TaskHandle'
p16491
aNtp16492
(S'channel'
p16493
(lp16494
S'char'
p16495
a(lp16496
I-1
aaNtp16497
(S'data'
p16498
(lp16499
S'int32'
p16500
aNtp16501
tp16502
tp16503
sS'DAQmxSetCIPulseWidthDigFltrEnable'
p16504
((lp16505
S'int32'
p16506
ag34
a((S'taskHandle'
p16507
(lp16508
S'TaskHandle'
p16509
aNtp16510
(S'channel'
p16511
(lp16512
S'char'
p16513
a(lp16514
I-1
aaNtp16515
(S'data'
p16516
(lp16517
S'bool32'
p16518
aNtp16519
tp16520
tp16521
sS'DAQmxGetCOCtrTimebaseMasterTimebaseDiv'
p16522
((lp16523
S'int32'
p16524
ag34
a((S'taskHandle'
p16525
(lp16526
S'TaskHandle'
p16527
aNtp16528
(S'channel'
p16529
(lp16530
S'char'
p16531
a(lp16532
I-1
aaNtp16533
(S'data'
p16534
(lp16535
S'uInt32'
p16536
ag42
aNtp16537
tp16538
tp16539
sS'DAQmxSetAIDigFltrCoeff'
p16540
((lp16541
S'int32'
p16542
ag34
a((S'taskHandle'
p16543
(lp16544
S'TaskHandle'
p16545
aNtp16546
(S'channel'
p16547
(lp16548
S'char'
p16549
a(lp16550
I-1
aaNtp16551
(S'data'
p16552
(lp16553
S'float64'
p16554
ag42
aNtp16555
(S'arraySizeInElements'
p16556
(lp16557
S'uInt32'
p16558
aNtp16559
tp16560
tp16561
sS'DAQmxGetCIEncoderBInputTerm'
p16562
((lp16563
S'int32'
p16564
ag34
a((S'taskHandle'
p16565
(lp16566
S'TaskHandle'
p16567
aNtp16568
(S'channel'
p16569
(lp16570
S'char'
p16571
a(lp16572
I-1
aaNtp16573
(S'data'
p16574
(lp16575
S'char'
p16576
ag42
aNtp16577
(S'bufferSize'
p16578
(lp16579
S'uInt32'
p16580
aNtp16581
tp16582
tp16583
sS'DAQmxCreateCIPeriodChan'
p16584
((lp16585
S'int32'
p16586
ag34
a((S'taskHandle'
p16587
(lp16588
S'TaskHandle'
p16589
aNtp16590
(S'counter'
p16591
(lp16592
S'char'
p16593
a(lp16594
I-1
aaNtp16595
(S'nameToAssignToChannel'
p16596
(lp16597
S'char'
p16598
a(lp16599
I-1
aaNtp16600
(S'minVal'
p16601
(lp16602
S'float64'
p16603
aNtp16604
(S'maxVal'
p16605
(lp16606
S'float64'
p16607
aNtp16608
(S'units'
p16609
(lp16610
S'int32'
p16611
aNtp16612
(S'edge'
p16613
(lp16614
S'int32'
p16615
aNtp16616
(S'measMethod'
p16617
(lp16618
S'int32'
p16619
aNtp16620
(S'measTime'
p16621
(lp16622
S'float64'
p16623
aNtp16624
(S'divisor'
p16625
(lp16626
S'uInt32'
p16627
aNtp16628
(S'customScaleName'
p16629
(lp16630
S'char'
p16631
a(lp16632
I-1
aaNtp16633
tp16634
tp16635
sS'DAQmxGetDevTerminals'
p16636
((lp16637
S'int32'
p16638
ag34
a((S'device'
p16639
(lp16640
S'char'
p16641
a(lp16642
I-1
aaNtp16643
(S'data'
p16644
(lp16645
S'char'
p16646
ag42
aNtp16647
(S'bufferSize'
p16648
(lp16649
S'uInt32'
p16650
aNtp16651
tp16652
tp16653
sS'DAQmxResetSampClkDigFltrTimebaseSrc'
p16654
((lp16655
S'int32'
p16656
ag34
a((S'taskHandle'
p16657
(lp16658
S'TaskHandle'
p16659
aNtp16660
tp16661
tp16662
sS'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p16663
((lp16664
S'int32'
p16665
ag34
a((S'taskHandle'
p16666
(lp16667
S'TaskHandle'
p16668
aNtp16669
(S'channel'
p16670
(lp16671
S'char'
p16672
a(lp16673
I-1
aaNtp16674
(S'data'
p16675
(lp16676
S'char'
p16677
ag42
aNtp16678
(S'bufferSize'
p16679
(lp16680
S'uInt32'
p16681
aNtp16682
tp16683
tp16684
sS'DAQmxResetAIConvRate'
p16685
((lp16686
S'int32'
p16687
ag34
a((S'taskHandle'
p16688
(lp16689
S'TaskHandle'
p16690
aNtp16691
tp16692
tp16693
sS'DAQmxSetCITwoEdgeSepFirstTermCfg'
p16694
((lp16695
S'int32'
p16696
ag34
a((S'taskHandle'
p16697
(lp16698
S'TaskHandle'
p16699
aNtp16700
(S'channel'
p16701
(lp16702
S'char'
p16703
a(lp16704
I-1
aaNtp16705
(S'data'
p16706
(lp16707
S'int32'
p16708
aNtp16709
tp16710
tp16711
sS'DAQmxResetCOEnableInitialDelayOnRetrigger'
p16712
((lp16713
S'int32'
p16714
ag34
a((S'taskHandle'
p16715
(lp16716
S'TaskHandle'
p16717
aNtp16718
(S'channel'
p16719
(lp16720
S'char'
p16721
a(lp16722
I-1
aaNtp16723
tp16724
tp16725
sS'DAQmxSetSampQuantSampMode'
p16726
((lp16727
S'int32'
p16728
ag34
a((S'taskHandle'
p16729
(lp16730
S'TaskHandle'
p16731
aNtp16732
(S'data'
p16733
(lp16734
S'int32'
p16735
aNtp16736
tp16737
tp16738
sS'DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc'
p16739
((lp16740
S'int32'
p16741
ag34
a((S'taskHandle'
p16742
(lp16743
S'TaskHandle'
p16744
aNtp16745
(S'data'
p16746
(lp16747
S'char'
p16748
ag42
aNtp16749
(S'bufferSize'
p16750
(lp16751
S'uInt32'
p16752
aNtp16753
tp16754
tp16755
sS'DAQmxResetAIDigFltrNotchCenterFreq'
p16756
((lp16757
S'int32'
p16758
ag34
a((S'taskHandle'
p16759
(lp16760
S'TaskHandle'
p16761
aNtp16762
(S'channel'
p16763
(lp16764
S'char'
p16765
a(lp16766
I-1
aaNtp16767
tp16768
tp16769
sS'DAQmxGet9247CalAdjustPoints'
p16770
((lp16771
S'int32'
p16772
ag34
a((S'calHandle'
p16773
(lp16774
S'CalHandle'
p16775
aNtp16776
(S'adjustmentPoints'
p16777
(lp16778
S'float64'
p16779
ag42
aNtp16780
(S'bufferSize'
p16781
(lp16782
S'uInt32'
p16783
aNtp16784
tp16785
tp16786
sS'DAQmxResetCIPeriodMeasMeth'
p16787
((lp16788
S'int32'
p16789
ag34
a((S'taskHandle'
p16790
(lp16791
S'TaskHandle'
p16792
aNtp16793
(S'channel'
p16794
(lp16795
S'char'
p16796
a(lp16797
I-1
aaNtp16798
tp16799
tp16800
sS'DAQmxSetAILowpassSwitchCapClkSrc'
p16801
((lp16802
S'int32'
p16803
ag34
a((S'taskHandle'
p16804
(lp16805
S'TaskHandle'
p16806
aNtp16807
(S'channel'
p16808
(lp16809
S'char'
p16810
a(lp16811
I-1
aaNtp16812
(S'data'
p16813
(lp16814
S'int32'
p16815
aNtp16816
tp16817
tp16818
sS'DAQmxResetCOPulseHighTicks'
p16819
((lp16820
S'int32'
p16821
ag34
a((S'taskHandle'
p16822
(lp16823
S'TaskHandle'
p16824
aNtp16825
(S'channel'
p16826
(lp16827
S'char'
p16828
a(lp16829
I-1
aaNtp16830
tp16831
tp16832
sS'DAQmxGetAIBridgeShuntCalShuntCalAResistance'
p16833
((lp16834
S'int32'
p16835
ag34
a((S'taskHandle'
p16836
(lp16837
S'TaskHandle'
p16838
aNtp16839
(S'channel'
p16840
(lp16841
S'char'
p16842
a(lp16843
I-1
aaNtp16844
(S'data'
p16845
(lp16846
S'float64'
p16847
ag42
aNtp16848
tp16849
tp16850
sS'DAQmxSetCIPulseWidthLogicLvlBehavior'
p16851
((lp16852
S'int32'
p16853
ag34
a((S'taskHandle'
p16854
(lp16855
S'TaskHandle'
p16856
aNtp16857
(S'channel'
p16858
(lp16859
S'char'
p16860
a(lp16861
I-1
aaNtp16862
(S'data'
p16863
(lp16864
S'int32'
p16865
aNtp16866
tp16867
tp16868
sS'DAQmxSetCICountEdgesCountResetTermCfg'
p16869
((lp16870
S'int32'
p16871
ag34
a((S'taskHandle'
p16872
(lp16873
S'TaskHandle'
p16874
aNtp16875
(S'channel'
p16876
(lp16877
S'char'
p16878
a(lp16879
I-1
aaNtp16880
(S'data'
p16881
(lp16882
S'int32'
p16883
aNtp16884
tp16885
tp16886
sS'DAQmxGetAODACRngLow'
p16887
((lp16888
S'int32'
p16889
ag34
a((S'taskHandle'
p16890
(lp16891
S'TaskHandle'
p16892
aNtp16893
(S'channel'
p16894
(lp16895
S'char'
p16896
a(lp16897
I-1
aaNtp16898
(S'data'
p16899
(lp16900
S'float64'
p16901
ag42
aNtp16902
tp16903
tp16904
sS'DAQmxGetCOEnableInitialDelayOnRetrigger'
p16905
((lp16906
S'int32'
p16907
ag34
a((S'taskHandle'
p16908
(lp16909
S'TaskHandle'
p16910
aNtp16911
(S'channel'
p16912
(lp16913
S'char'
p16914
a(lp16915
I-1
aaNtp16916
(S'data'
p16917
(lp16918
S'bool32'
p16919
ag42
aNtp16920
tp16921
tp16922
sS'DAQmxResetRealTimeReportMissedSamp'
p16923
((lp16924
S'int32'
p16925
ag34
a((S'taskHandle'
p16926
(lp16927
S'TaskHandle'
p16928
aNtp16929
tp16930
tp16931
sS'DAQmxGetCIFreqDigFltrMinPulseWidth'
p16932
((lp16933
S'int32'
p16934
ag34
a((S'taskHandle'
p16935
(lp16936
S'TaskHandle'
p16937
aNtp16938
(S'channel'
p16939
(lp16940
S'char'
p16941
a(lp16942
I-1
aaNtp16943
(S'data'
p16944
(lp16945
S'float64'
p16946
ag42
aNtp16947
tp16948
tp16949
sS'DAQmxGetPhysicalChanAOManualControlShortDetected'
p16950
((lp16951
S'int32'
p16952
ag34
a((S'physicalChannel'
p16953
(lp16954
S'char'
p16955
a(lp16956
I-1
aaNtp16957
(S'data'
p16958
(lp16959
S'bool32'
p16960
ag42
aNtp16961
tp16962
tp16963
sS'DAQmxGetDevAOSampClkSupported'
p16964
((lp16965
S'int32'
p16966
ag34
a((S'device'
p16967
(lp16968
S'char'
p16969
a(lp16970
I-1
aaNtp16971
(S'data'
p16972
(lp16973
S'bool32'
p16974
ag42
aNtp16975
tp16976
tp16977
sS'DAQmxGetCITwoEdgeSepFirstDigSyncEnable'
p16978
((lp16979
S'int32'
p16980
ag34
a((S'taskHandle'
p16981
(lp16982
S'TaskHandle'
p16983
aNtp16984
(S'channel'
p16985
(lp16986
S'char'
p16987
a(lp16988
I-1
aaNtp16989
(S'data'
p16990
(lp16991
S'bool32'
p16992
ag42
aNtp16993
tp16994
tp16995
sS'DAQmxResetCIDataXferMech'
p16996
((lp16997
S'int32'
p16998
ag34
a((S'taskHandle'
p16999
(lp17000
S'TaskHandle'
p17001
aNtp17002
(S'channel'
p17003
(lp17004
S'char'
p17005
a(lp17006
I-1
aaNtp17007
tp17008
tp17009
sS'DAQmxCreateCOPulseChanTicks'
p17010
((lp17011
S'int32'
p17012
ag34
a((S'taskHandle'
p17013
(lp17014
S'TaskHandle'
p17015
aNtp17016
(S'counter'
p17017
(lp17018
S'char'
p17019
a(lp17020
I-1
aaNtp17021
(S'nameToAssignToChannel'
p17022
(lp17023
S'char'
p17024
a(lp17025
I-1
aaNtp17026
(S'sourceTerminal'
p17027
(lp17028
S'char'
p17029
a(lp17030
I-1
aaNtp17031
(S'idleState'
p17032
(lp17033
S'int32'
p17034
aNtp17035
(S'initialDelay'
p17036
(lp17037
S'int32'
p17038
aNtp17039
(S'lowTicks'
p17040
(lp17041
S'int32'
p17042
aNtp17043
(S'highTicks'
p17044
(lp17045
S'int32'
p17046
aNtp17047
tp17048
tp17049
sS'DAQmxResetCIPeriodStartingEdge'
p17050
((lp17051
S'int32'
p17052
ag34
a((S'taskHandle'
p17053
(lp17054
S'TaskHandle'
p17055
aNtp17056
(S'channel'
p17057
(lp17058
S'char'
p17059
a(lp17060
I-1
aaNtp17061
tp17062
tp17063
sS'DAQmxResetCOCtrTimebaseDigSyncEnable'
p17064
((lp17065
S'int32'
p17066
ag34
a((S'taskHandle'
p17067
(lp17068
S'TaskHandle'
p17069
aNtp17070
(S'channel'
p17071
(lp17072
S'char'
p17073
a(lp17074
I-1
aaNtp17075
tp17076
tp17077
sS'DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate'
p17078
((lp17079
S'int32'
p17080
ag34
a((S'taskHandle'
p17081
(lp17082
S'TaskHandle'
p17083
aNtp17084
(S'data'
p17085
(lp17086
S'float64'
p17087
ag42
aNtp17088
tp17089
tp17090
sS'DAQmxGetExportedAIConvClkOutputTerm'
p17091
((lp17092
S'int32'
p17093
ag34
a((S'taskHandle'
p17094
(lp17095
S'TaskHandle'
p17096
aNtp17097
(S'data'
p17098
(lp17099
S'char'
p17100
ag42
aNtp17101
(S'bufferSize'
p17102
(lp17103
S'uInt32'
p17104
aNtp17105
tp17106
tp17107
sS'DAQmxResetCISemiPeriodDigSyncEnable'
p17108
((lp17109
S'int32'
p17110
ag34
a((S'taskHandle'
p17111
(lp17112
S'TaskHandle'
p17113
aNtp17114
(S'channel'
p17115
(lp17116
S'char'
p17117
a(lp17118
I-1
aaNtp17119
tp17120
tp17121
sS'DAQmxResetRefTrigPretrigSamples'
p17122
((lp17123
S'int32'
p17124
ag34
a((S'taskHandle'
p17125
(lp17126
S'TaskHandle'
p17127
aNtp17128
tp17129
tp17130
sS'DAQmxSetAICurrentShuntResistance'
p17131
((lp17132
S'int32'
p17133
ag34
a((S'taskHandle'
p17134
(lp17135
S'TaskHandle'
p17136
aNtp17137
(S'channel'
p17138
(lp17139
S'char'
p17140
a(lp17141
I-1
aaNtp17142
(S'data'
p17143
(lp17144
S'float64'
p17145
aNtp17146
tp17147
tp17148
sS'DAQmxResetAIRngHigh'
p17149
((lp17150
S'int32'
p17151
ag34
a((S'taskHandle'
p17152
(lp17153
S'TaskHandle'
p17154
aNtp17155
(S'channel'
p17156
(lp17157
S'char'
p17158
a(lp17159
I-1
aaNtp17160
tp17161
tp17162
sS'DAQmxResetAILowpassSwitchCapExtClkDiv'
p17163
((lp17164
S'int32'
p17165
ag34
a((S'taskHandle'
p17166
(lp17167
S'TaskHandle'
p17168
aNtp17169
(S'channel'
p17170
(lp17171
S'char'
p17172
a(lp17173
I-1
aaNtp17174
tp17175
tp17176
sS'DAQmxSetAOFuncGenType'
p17177
((lp17178
S'int32'
p17179
ag34
a((S'taskHandle'
p17180
(lp17181
S'TaskHandle'
p17182
aNtp17183
(S'channel'
p17184
(lp17185
S'char'
p17186
a(lp17187
I-1
aaNtp17188
(S'data'
p17189
(lp17190
S'int32'
p17191
aNtp17192
tp17193
tp17194
sS'DAQmxResetAnlgWinPauseTrigDigFltrEnable'
p17195
((lp17196
S'int32'
p17197
ag34
a((S'taskHandle'
p17198
(lp17199
S'TaskHandle'
p17200
aNtp17201
tp17202
tp17203
sS'DAQmxSetCICountEdgesDigFltrEnable'
p17204
((lp17205
S'int32'
p17206
ag34
a((S'taskHandle'
p17207
(lp17208
S'TaskHandle'
p17209
aNtp17210
(S'channel'
p17211
(lp17212
S'char'
p17213
a(lp17214
I-1
aaNtp17215
(S'data'
p17216
(lp17217
S'bool32'
p17218
aNtp17219
tp17220
tp17221
sS'DAQmxSetAnlgWinStartTrigDigFltrEnable'
p17222
((lp17223
S'int32'
p17224
ag34
a((S'taskHandle'
p17225
(lp17226
S'TaskHandle'
p17227
aNtp17228
(S'data'
p17229
(lp17230
S'bool32'
p17231
aNtp17232
tp17233
tp17234
sS'DAQmxSetAIConvDigFltrEnableEx'
p17235
((lp17236
S'int32'
p17237
ag34
a((S'taskHandle'
p17238
(lp17239
S'TaskHandle'
p17240
aNtp17241
(S'deviceNames'
p17242
(lp17243
S'char'
p17244
a(lp17245
I-1
aaNtp17246
(S'data'
p17247
(lp17248
S'bool32'
p17249
aNtp17250
tp17251
tp17252
sS'DAQmxGetSampClkOverrunBehavior'
p17253
((lp17254
S'int32'
p17255
ag34
a((S'taskHandle'
p17256
(lp17257
S'TaskHandle'
p17258
aNtp17259
(S'data'
p17260
(lp17261
S'int32'
p17262
ag42
aNtp17263
tp17264
tp17265
sS'DAQmxSetExported20MHzTimebaseOutputTerm'
p17266
((lp17267
S'int32'
p17268
ag34
a((S'taskHandle'
p17269
(lp17270
S'TaskHandle'
p17271
aNtp17272
(S'data'
p17273
(lp17274
S'char'
p17275
ag42
aNtp17276
tp17277
tp17278
sS'DAQmxGetDevAIResistanceRngs'
p17279
((lp17280
S'int32'
p17281
ag34
a((S'device'
p17282
(lp17283
S'char'
p17284
a(lp17285
I-1
aaNtp17286
(S'data'
p17287
(lp17288
S'float64'
p17289
ag42
aNtp17290
(S'arraySizeInElements'
p17291
(lp17292
S'uInt32'
p17293
aNtp17294
tp17295
tp17296
sS'DAQmxSetDigEdgeRefTrigDigSyncEnable'
p17297
((lp17298
S'int32'
p17299
ag34
a((S'taskHandle'
p17300
(lp17301
S'TaskHandle'
p17302
aNtp17303
(S'data'
p17304
(lp17305
S'bool32'
p17306
aNtp17307
tp17308
tp17309
sS'DAQmxResetTriggerSyncType'
p17310
((lp17311
S'int32'
p17312
ag34
a((S'taskHandle'
p17313
(lp17314
S'TaskHandle'
p17315
aNtp17316
tp17317
tp17318
sS'DAQmxResetExportedChangeDetectEventPulsePolarity'
p17319
((lp17320
S'int32'
p17321
ag34
a((S'taskHandle'
p17322
(lp17323
S'TaskHandle'
p17324
aNtp17325
tp17326
tp17327
sS'DAQmxGetExportedRefTrigOutputTerm'
p17328
((lp17329
S'int32'
p17330
ag34
a((S'taskHandle'
p17331
(lp17332
S'TaskHandle'
p17333
aNtp17334
(S'data'
p17335
(lp17336
S'char'
p17337
ag42
aNtp17338
(S'bufferSize'
p17339
(lp17340
S'uInt32'
p17341
aNtp17342
tp17343
tp17344
sS'DAQmxSetExportedCtrOutEventOutputBehavior'
p17345
((lp17346
S'int32'
p17347
ag34
a((S'taskHandle'
p17348
(lp17349
S'TaskHandle'
p17350
aNtp17351
(S'data'
p17352
(lp17353
S'int32'
p17354
aNtp17355
tp17356
tp17357
sS'DAQmxGetDevAIPhysicalChans'
p17358
((lp17359
S'int32'
p17360
ag34
a((S'device'
p17361
(lp17362
S'char'
p17363
a(lp17364
I-1
aaNtp17365
(S'data'
p17366
(lp17367
S'char'
p17368
ag42
aNtp17369
(S'bufferSize'
p17370
(lp17371
S'uInt32'
p17372
aNtp17373
tp17374
tp17375
sS'DAQmxResetCIPulseFreqStartEdge'
p17376
((lp17377
S'int32'
p17378
ag34
a((S'taskHandle'
p17379
(lp17380
S'TaskHandle'
p17381
aNtp17382
(S'channel'
p17383
(lp17384
S'char'
p17385
a(lp17386
I-1
aaNtp17387
tp17388
tp17389
sS'DAQmxGetAIStrainGageGageFactor'
p17390
((lp17391
S'int32'
p17392
ag34
a((S'taskHandle'
p17393
(lp17394
S'TaskHandle'
p17395
aNtp17396
(S'channel'
p17397
(lp17398
S'char'
p17399
a(lp17400
I-1
aaNtp17401
(S'data'
p17402
(lp17403
S'float64'
p17404
ag42
aNtp17405
tp17406
tp17407
sS'DAQmxGetPersistedTaskAuthor'
p17408
((lp17409
S'int32'
p17410
ag34
a((S'taskName'
p17411
(lp17412
S'char'
p17413
a(lp17414
I-1
aaNtp17415
(S'data'
p17416
(lp17417
S'char'
p17418
ag42
aNtp17419
(S'bufferSize'
p17420
(lp17421
S'uInt32'
p17422
aNtp17423
tp17424
tp17425
sS'DAQmxResetAIRawDataCompressionType'
p17426
((lp17427
S'int32'
p17428
ag34
a((S'taskHandle'
p17429
(lp17430
S'TaskHandle'
p17431
aNtp17432
(S'channel'
p17433
(lp17434
S'char'
p17435
a(lp17436
I-1
aaNtp17437
tp17438
tp17439
sS'DAQmxResetReadReadAllAvailSamp'
p17440
((lp17441
S'int32'
p17442
ag34
a((S'taskHandle'
p17443
(lp17444
S'TaskHandle'
p17445
aNtp17446
tp17447
tp17448
sS'DAQmxSetAIConvTimebaseSrc'
p17449
((lp17450
S'int32'
p17451
ag34
a((S'taskHandle'
p17452
(lp17453
S'TaskHandle'
p17454
aNtp17455
(S'data'
p17456
(lp17457
S'int32'
p17458
aNtp17459
tp17460
tp17461
sS'DAQmxAdjust1143Cal'
p17462
((lp17463
S'int32'
p17464
ag34
a((S'calHandle'
p17465
(lp17466
S'CalHandle'
p17467
aNtp17468
(S'refVoltage'
p17469
(lp17470
S'float64'
p17471
aNtp17472
(S'measOutput'
p17473
(lp17474
S'float64'
p17475
aNtp17476
tp17477
tp17478
sS'DAQmxCreateTEDSAIThrmcplChan'
p17479
((lp17480
S'int32'
p17481
ag34
a((S'taskHandle'
p17482
(lp17483
S'TaskHandle'
p17484
aNtp17485
(S'physicalChannel'
p17486
(lp17487
S'char'
p17488
a(lp17489
I-1
aaNtp17490
(S'nameToAssignToChannel'
p17491
(lp17492
S'char'
p17493
a(lp17494
I-1
aaNtp17495
(S'minVal'
p17496
(lp17497
S'float64'
p17498
aNtp17499
(S'maxVal'
p17500
(lp17501
S'float64'
p17502
aNtp17503
(S'units'
p17504
(lp17505
S'int32'
p17506
aNtp17507
(S'cjcSource'
p17508
(lp17509
S'int32'
p17510
aNtp17511
(S'cjcVal'
p17512
(lp17513
S'float64'
p17514
aNtp17515
(S'cjcChannel'
p17516
(lp17517
S'char'
p17518
a(lp17519
I-1
aaNtp17520
tp17521
tp17522
sS'DAQmxGetAIBridgeBalanceCoarsePot'
p17523
((lp17524
S'int32'
p17525
ag34
a((S'taskHandle'
p17526
(lp17527
S'TaskHandle'
p17528
aNtp17529
(S'channel'
p17530
(lp17531
S'char'
p17532
a(lp17533
I-1
aaNtp17534
(S'data'
p17535
(lp17536
S'int32'
p17537
ag42
aNtp17538
tp17539
tp17540
sS'DAQmxSetAnlgWinStartTrigDigFltrMinPulseWidth'
p17541
((lp17542
S'int32'
p17543
ag34
a((S'taskHandle'
p17544
(lp17545
S'TaskHandle'
p17546
aNtp17547
(S'data'
p17548
(lp17549
S'float64'
p17550
aNtp17551
tp17552
tp17553
sS'DAQmxGetCIPulseTimeStartEdge'
p17554
((lp17555
S'int32'
p17556
ag34
a((S'taskHandle'
p17557
(lp17558
S'TaskHandle'
p17559
aNtp17560
(S'channel'
p17561
(lp17562
S'char'
p17563
a(lp17564
I-1
aaNtp17565
(S'data'
p17566
(lp17567
S'int32'
p17568
ag42
aNtp17569
tp17570
tp17571
sS'DAQmxSetScaleTableScaledVals'
p17572
((lp17573
S'int32'
p17574
ag34
a((S'scaleName'
p17575
(lp17576
S'char'
p17577
a(lp17578
I-1
aaNtp17579
(S'data'
p17580
(lp17581
S'float64'
p17582
ag42
aNtp17583
(S'arraySizeInElements'
p17584
(lp17585
S'uInt32'
p17586
aNtp17587
tp17588
tp17589
sS'DAQmxGetCalAccConnectionCount'
p17590
((lp17591
S'int32'
p17592
ag34
a((S'deviceName'
p17593
(lp17594
S'char'
p17595
a(lp17596
I-1
aaNtp17597
(S'data'
p17598
(lp17599
S'uInt32'
p17600
ag42
aNtp17601
tp17602
tp17603
sS'DAQmxGetDigEdgeRefTrigSrc'
p17604
((lp17605
S'int32'
p17606
ag34
a((S'taskHandle'
p17607
(lp17608
S'TaskHandle'
p17609
aNtp17610
(S'data'
p17611
(lp17612
S'char'
p17613
ag42
aNtp17614
(S'bufferSize'
p17615
(lp17616
S'uInt32'
p17617
aNtp17618
tp17619
tp17620
sS'DAQmxGetCOCtrTimebaseActiveEdge'
p17621
((lp17622
S'int32'
p17623
ag34
a((S'taskHandle'
p17624
(lp17625
S'TaskHandle'
p17626
aNtp17627
(S'channel'
p17628
(lp17629
S'char'
p17630
a(lp17631
I-1
aaNtp17632
(S'data'
p17633
(lp17634
S'int32'
p17635
ag42
aNtp17636
tp17637
tp17638
sS'DAQmxGetCIEncoderBInputDigFltrMinPulseWidth'
p17639
((lp17640
S'int32'
p17641
ag34
a((S'taskHandle'
p17642
(lp17643
S'TaskHandle'
p17644
aNtp17645
(S'channel'
p17646
(lp17647
S'char'
p17648
a(lp17649
I-1
aaNtp17650
(S'data'
p17651
(lp17652
S'float64'
p17653
ag42
aNtp17654
tp17655
tp17656
sS'DAQmxGetExportedSampClkOutputTerm'
p17657
((lp17658
S'int32'
p17659
ag34
a((S'taskHandle'
p17660
(lp17661
S'TaskHandle'
p17662
aNtp17663
(S'data'
p17664
(lp17665
S'char'
p17666
ag42
aNtp17667
(S'bufferSize'
p17668
(lp17669
S'uInt32'
p17670
aNtp17671
tp17672
tp17673
sS'DAQmxGet4463AdjustPoints'
p17674
((lp17675
S'int32'
p17676
ag34
a((S'calHandle'
p17677
(lp17678
S'CalHandle'
p17679
aNtp17680
(S'terminalConfig'
p17681
(lp17682
S'int32'
p17683
aNtp17684
(S'gain'
p17685
(lp17686
S'float64'
p17687
aNtp17688
(S'adjustmentPoints'
p17689
(lp17690
S'float64'
p17691
ag42
aNtp17692
(S'bufferSize'
p17693
(lp17694
S'uInt32'
p17695
aNtp17696
tp17697
tp17698
sS'DAQmxResetDOLineStatesPausedState'
p17699
((lp17700
S'int32'
p17701
ag34
a((S'taskHandle'
p17702
(lp17703
S'TaskHandle'
p17704
aNtp17705
(S'channel'
p17706
(lp17707
S'char'
p17708
a(lp17709
I-1
aaNtp17710
tp17711
tp17712
sS'DAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth'
p17713
((lp17714
S'int32'
p17715
ag34
a((S'taskHandle'
p17716
(lp17717
S'TaskHandle'
p17718
aNtp17719
(S'data'
p17720
(lp17721
S'float64'
p17722
ag42
aNtp17723
tp17724
tp17725
sS'DAQmxGetCIPulseWidthTerm'
p17726
((lp17727
S'int32'
p17728
ag34
a((S'taskHandle'
p17729
(lp17730
S'TaskHandle'
p17731
aNtp17732
(S'channel'
p17733
(lp17734
S'char'
p17735
a(lp17736
I-1
aaNtp17737
(S'data'
p17738
(lp17739
S'char'
p17740
ag42
aNtp17741
(S'bufferSize'
p17742
(lp17743
S'uInt32'
p17744
aNtp17745
tp17746
tp17747
sS'DAQmxResetAIACExcitSyncEnable'
p17748
((lp17749
S'int32'
p17750
ag34
a((S'taskHandle'
p17751
(lp17752
S'TaskHandle'
p17753
aNtp17754
(S'channel'
p17755
(lp17756
S'char'
p17757
a(lp17758
I-1
aaNtp17759
tp17760
tp17761
sS'DAQmxSetCOUsbXferReqCount'
p17762
((lp17763
S'int32'
p17764
ag34
a((S'taskHandle'
p17765
(lp17766
S'TaskHandle'
p17767
aNtp17768
(S'channel'
p17769
(lp17770
S'char'
p17771
a(lp17772
I-1
aaNtp17773
(S'data'
p17774
(lp17775
S'uInt32'
p17776
aNtp17777
tp17778
tp17779
sS'DAQmxResetCITwoEdgeSepSecondDigFltrEnable'
p17780
((lp17781
S'int32'
p17782
ag34
a((S'taskHandle'
p17783
(lp17784
S'TaskHandle'
p17785
aNtp17786
(S'channel'
p17787
(lp17788
S'char'
p17789
a(lp17790
I-1
aaNtp17791
tp17792
tp17793
sS'DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc'
p17794
((lp17795
S'int32'
p17796
ag34
a((S'taskHandle'
p17797
(lp17798
S'TaskHandle'
p17799
aNtp17800
(S'channel'
p17801
(lp17802
S'char'
p17803
a(lp17804
I-1
aaNtp17805
(S'data'
p17806
(lp17807
S'char'
p17808
ag42
aNtp17809
(S'bufferSize'
p17810
(lp17811
S'uInt32'
p17812
aNtp17813
tp17814
tp17815
sS'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate'
p17816
((lp17817
S'int32'
p17818
ag34
a((S'taskHandle'
p17819
(lp17820
S'TaskHandle'
p17821
aNtp17822
(S'channel'
p17823
(lp17824
S'char'
p17825
a(lp17826
I-1
aaNtp17827
(S'data'
p17828
(lp17829
S'float64'
p17830
aNtp17831
tp17832
tp17833
sS'DAQmxGetWriteDigitalLinesBytesPerChan'
p17834
((lp17835
S'int32'
p17836
ag34
a((S'taskHandle'
p17837
(lp17838
S'TaskHandle'
p17839
aNtp17840
(S'data'
p17841
(lp17842
S'uInt32'
p17843
ag42
aNtp17844
tp17845
tp17846
sS'DAQmxSetExportedHshkEventPulsePolarity'
p17847
((lp17848
S'int32'
p17849
ag34
a((S'taskHandle'
p17850
(lp17851
S'TaskHandle'
p17852
aNtp17853
(S'data'
p17854
(lp17855
S'int32'
p17856
aNtp17857
tp17858
tp17859
sS'DAQmxResetAIADCTimingMode'
p17860
((lp17861
S'int32'
p17862
ag34
a((S'taskHandle'
p17863
(lp17864
S'TaskHandle'
p17865
aNtp17866
(S'channel'
p17867
(lp17868
S'char'
p17869
a(lp17870
I-1
aaNtp17871
tp17872
tp17873
sS'DAQmxSetAIFreqHyst'
p17874
((lp17875
S'int32'
p17876
ag34
a((S'taskHandle'
p17877
(lp17878
S'TaskHandle'
p17879
aNtp17880
(S'channel'
p17881
(lp17882
S'char'
p17883
a(lp17884
I-1
aaNtp17885
(S'data'
p17886
(lp17887
S'float64'
p17888
aNtp17889
tp17890
tp17891
sS'DAQmxGetSwitchScanBreakMode'
p17892
((lp17893
S'int32'
p17894
ag34
a((S'taskHandle'
p17895
(lp17896
S'TaskHandle'
p17897
aNtp17898
(S'data'
p17899
(lp17900
S'int32'
p17901
ag42
aNtp17902
tp17903
tp17904
sS'DAQmxSetReadReadAllAvailSamp'
p17905
((lp17906
S'int32'
p17907
ag34
a((S'taskHandle'
p17908
(lp17909
S'TaskHandle'
p17910
aNtp17911
(S'data'
p17912
(lp17913
S'bool32'
p17914
aNtp17915
tp17916
tp17917
sS'DAQmxResetCISemiPeriodDigFltrMinPulseWidth'
p17918
((lp17919
S'int32'
p17920
ag34
a((S'taskHandle'
p17921
(lp17922
S'TaskHandle'
p17923
aNtp17924
(S'channel'
p17925
(lp17926
S'char'
p17927
a(lp17928
I-1
aaNtp17929
tp17930
tp17931
sS'DAQmxGetAIRVDTSensitivityUnits'
p17932
((lp17933
S'int32'
p17934
ag34
a((S'taskHandle'
p17935
(lp17936
S'TaskHandle'
p17937
aNtp17938
(S'channel'
p17939
(lp17940
S'char'
p17941
a(lp17942
I-1
aaNtp17943
(S'data'
p17944
(lp17945
S'int32'
p17946
ag42
aNtp17947
tp17948
tp17949
sS'DAQmxCreateAIForceBridgePolynomialChan'
p17950
((lp17951
S'int32'
p17952
ag34
a((S'taskHandle'
p17953
(lp17954
S'TaskHandle'
p17955
aNtp17956
(S'physicalChannel'
p17957
(lp17958
S'char'
p17959
a(lp17960
I-1
aaNtp17961
(S'nameToAssignToChannel'
p17962
(lp17963
S'char'
p17964
a(lp17965
I-1
aaNtp17966
(S'minVal'
p17967
(lp17968
S'float64'
p17969
aNtp17970
(S'maxVal'
p17971
(lp17972
S'float64'
p17973
aNtp17974
(S'units'
p17975
(lp17976
S'int32'
p17977
aNtp17978
(S'bridgeConfig'
p17979
(lp17980
S'int32'
p17981
aNtp17982
(S'voltageExcitSource'
p17983
(lp17984
S'int32'
p17985
aNtp17986
(S'voltageExcitVal'
p17987
(lp17988
S'float64'
p17989
aNtp17990
(S'nominalBridgeResistance'
p17991
(lp17992
S'float64'
p17993
aNtp17994
(S'forwardCoeffs'
p17995
(lp17996
S'float64'
p17997
a(lp17998
I-1
aaNtp17999
(S'numForwardCoeffs'
p18000
(lp18001
S'uInt32'
p18002
aNtp18003
(S'reverseCoeffs'
p18004
(lp18005
S'float64'
p18006
a(lp18007
I-1
aaNtp18008
(S'numReverseCoeffs'
p18009
(lp18010
S'uInt32'
p18011
aNtp18012
(S'electricalUnits'
p18013
(lp18014
S'int32'
p18015
aNtp18016
(S'physicalUnits'
p18017
(lp18018
S'int32'
p18019
aNtp18020
(S'customScaleName'
p18021
(lp18022
S'char'
p18023
a(lp18024
I-1
aaNtp18025
tp18026
tp18027
sS'DAQmxResetCIPulseTimeDigFltrTimebaseRate'
p18028
((lp18029
S'int32'
p18030
ag34
a((S'taskHandle'
p18031
(lp18032
S'TaskHandle'
p18033
aNtp18034
(S'channel'
p18035
(lp18036
S'char'
p18037
a(lp18038
I-1
aaNtp18039
tp18040
tp18041
sS'DAQmxSendSoftwareTrigger'
p18042
((lp18043
S'int32'
p18044
ag34
a((S'taskHandle'
p18045
(lp18046
S'TaskHandle'
p18047
aNtp18048
(S'triggerID'
p18049
(lp18050
S'int32'
p18051
aNtp18052
tp18053
tp18054
sS'DAQmxCfgWatchdogCOExpirStates'
p18055
((lp18056
S'int32'
p18057
ag34
a((S'taskHandle'
p18058
(lp18059
S'TaskHandle'
p18060
aNtp18061
(S'channelNames'
p18062
(lp18063
S'char'
p18064
a(lp18065
I-1
aaNtp18066
(S'expirStateArray'
p18067
(lp18068
S'int32'
p18069
a(lp18070
I-1
aaNtp18071
(S'arraySize'
p18072
(lp18073
S'uInt32'
p18074
aNtp18075
tp18076
tp18077
sS'DAQmxGetArmStartTerm'
p18078
((lp18079
S'int32'
p18080
ag34
a((S'taskHandle'
p18081
(lp18082
S'TaskHandle'
p18083
aNtp18084
(S'data'
p18085
(lp18086
S'char'
p18087
ag42
aNtp18088
(S'bufferSize'
p18089
(lp18090
S'uInt32'
p18091
aNtp18092
tp18093
tp18094
sS'DAQmxSetAIConvTimebaseDivEx'
p18095
((lp18096
S'int32'
p18097
ag34
a((S'taskHandle'
p18098
(lp18099
S'TaskHandle'
p18100
aNtp18101
(S'deviceNames'
p18102
(lp18103
S'char'
p18104
a(lp18105
I-1
aaNtp18106
(S'data'
p18107
(lp18108
S'uInt32'
p18109
aNtp18110
tp18111
tp18112
sS'DAQmxSetAIMin'
p18113
((lp18114
S'int32'
p18115
ag34
a((S'taskHandle'
p18116
(lp18117
S'TaskHandle'
p18118
aNtp18119
(S'channel'
p18120
(lp18121
S'char'
p18122
a(lp18123
I-1
aaNtp18124
(S'data'
p18125
(lp18126
S'float64'
p18127
aNtp18128
tp18129
tp18130
sS'DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth'
p18131
((lp18132
S'int32'
p18133
ag34
a((S'taskHandle'
p18134
(lp18135
S'TaskHandle'
p18136
aNtp18137
(S'data'
p18138
(lp18139
S'float64'
p18140
ag42
aNtp18141
tp18142
tp18143
sS'DAQmxResetCIPulseTimeDigSyncEnable'
p18144
((lp18145
S'int32'
p18146
ag34
a((S'taskHandle'
p18147
(lp18148
S'TaskHandle'
p18149
aNtp18150
(S'channel'
p18151
(lp18152
S'char'
p18153
a(lp18154
I-1
aaNtp18155
tp18156
tp18157
sS'DAQmxGetSampQuantSampMode'
p18158
((lp18159
S'int32'
p18160
ag34
a((S'taskHandle'
p18161
(lp18162
S'TaskHandle'
p18163
aNtp18164
(S'data'
p18165
(lp18166
S'int32'
p18167
ag42
aNtp18168
tp18169
tp18170
sS'DAQmxGetCICountEdgesDigFltrMinPulseWidth'
p18171
((lp18172
S'int32'
p18173
ag34
a((S'taskHandle'
p18174
(lp18175
S'TaskHandle'
p18176
aNtp18177
(S'channel'
p18178
(lp18179
S'char'
p18180
a(lp18181
I-1
aaNtp18182
(S'data'
p18183
(lp18184
S'float64'
p18185
ag42
aNtp18186
tp18187
tp18188
sS'DAQmxGetAOVoltageUnits'
p18189
((lp18190
S'int32'
p18191
ag34
a((S'taskHandle'
p18192
(lp18193
S'TaskHandle'
p18194
aNtp18195
(S'channel'
p18196
(lp18197
S'char'
p18198
a(lp18199
I-1
aaNtp18200
(S'data'
p18201
(lp18202
S'int32'
p18203
ag42
aNtp18204
tp18205
tp18206
sS'DAQmxResetCOCtrTimebaseActiveEdge'
p18207
((lp18208
S'int32'
p18209
ag34
a((S'taskHandle'
p18210
(lp18211
S'TaskHandle'
p18212
aNtp18213
(S'channel'
p18214
(lp18215
S'char'
p18216
a(lp18217
I-1
aaNtp18218
tp18219
tp18220
sS'DAQmxResetSampQuantSampPerChan'
p18221
((lp18222
S'int32'
p18223
ag34
a((S'taskHandle'
p18224
(lp18225
S'TaskHandle'
p18226
aNtp18227
tp18228
tp18229
sS'DAQmxSetAIChanCalPolyForwardCoeff'
p18230
((lp18231
S'int32'
p18232
ag34
a((S'taskHandle'
p18233
(lp18234
S'TaskHandle'
p18235
aNtp18236
(S'channel'
p18237
(lp18238
S'char'
p18239
a(lp18240
I-1
aaNtp18241
(S'data'
p18242
(lp18243
S'float64'
p18244
ag42
aNtp18245
(S'arraySizeInElements'
p18246
(lp18247
S'uInt32'
p18248
aNtp18249
tp18250
tp18251
sS'DAQmxSetSampClkUnderflowBehavior'
p18252
((lp18253
S'int32'
p18254
ag34
a((S'taskHandle'
p18255
(lp18256
S'TaskHandle'
p18257
aNtp18258
(S'data'
p18259
(lp18260
S'int32'
p18261
aNtp18262
tp18263
tp18264
sS'DAQmxGetAIBridgeShuntCalEnable'
p18265
((lp18266
S'int32'
p18267
ag34
a((S'taskHandle'
p18268
(lp18269
S'TaskHandle'
p18270
aNtp18271
(S'channel'
p18272
(lp18273
S'char'
p18274
a(lp18275
I-1
aaNtp18276
(S'data'
p18277
(lp18278
S'bool32'
p18279
ag42
aNtp18280
tp18281
tp18282
sS'DAQmxResetAIStrainGageGageFactor'
p18283
((lp18284
S'int32'
p18285
ag34
a((S'taskHandle'
p18286
(lp18287
S'TaskHandle'
p18288
aNtp18289
(S'channel'
p18290
(lp18291
S'char'
p18292
a(lp18293
I-1
aaNtp18294
tp18295
tp18296
sS'DAQmxSetDigEdgeRefTrigSrc'
p18297
((lp18298
S'int32'
p18299
ag34
a((S'taskHandle'
p18300
(lp18301
S'TaskHandle'
p18302
aNtp18303
(S'data'
p18304
(lp18305
S'char'
p18306
ag42
aNtp18307
tp18308
tp18309
sS'DAQmxResetAOReglitchEnable'
p18310
((lp18311
S'int32'
p18312
ag34
a((S'taskHandle'
p18313
(lp18314
S'TaskHandle'
p18315
aNtp18316
(S'channel'
p18317
(lp18318
S'char'
p18319
a(lp18320
I-1
aaNtp18321
tp18322
tp18323
sS'DAQmxSetAIVoltageUnits'
p18324
((lp18325
S'int32'
p18326
ag34
a((S'taskHandle'
p18327
(lp18328
S'TaskHandle'
p18329
aNtp18330
(S'channel'
p18331
(lp18332
S'char'
p18333
a(lp18334
I-1
aaNtp18335
(S'data'
p18336
(lp18337
S'int32'
p18338
aNtp18339
tp18340
tp18341
sS'DAQmxGetCIPulseFreqDigFltrMinPulseWidth'
p18342
((lp18343
S'int32'
p18344
ag34
a((S'taskHandle'
p18345
(lp18346
S'TaskHandle'
p18347
aNtp18348
(S'channel'
p18349
(lp18350
S'char'
p18351
a(lp18352
I-1
aaNtp18353
(S'data'
p18354
(lp18355
S'float64'
p18356
ag42
aNtp18357
tp18358
tp18359
sS'DAQmxCreateAIPressureBridgeTwoPointLinChan'
p18360
((lp18361
S'int32'
p18362
ag34
a((S'taskHandle'
p18363
(lp18364
S'TaskHandle'
p18365
aNtp18366
(S'physicalChannel'
p18367
(lp18368
S'char'
p18369
a(lp18370
I-1
aaNtp18371
(S'nameToAssignToChannel'
p18372
(lp18373
S'char'
p18374
a(lp18375
I-1
aaNtp18376
(S'minVal'
p18377
(lp18378
S'float64'
p18379
aNtp18380
(S'maxVal'
p18381
(lp18382
S'float64'
p18383
aNtp18384
(S'units'
p18385
(lp18386
S'int32'
p18387
aNtp18388
(S'bridgeConfig'
p18389
(lp18390
S'int32'
p18391
aNtp18392
(S'voltageExcitSource'
p18393
(lp18394
S'int32'
p18395
aNtp18396
(S'voltageExcitVal'
p18397
(lp18398
S'float64'
p18399
aNtp18400
(S'nominalBridgeResistance'
p18401
(lp18402
S'float64'
p18403
aNtp18404
(S'firstElectricalVal'
p18405
(lp18406
S'float64'
p18407
aNtp18408
(S'secondElectricalVal'
p18409
(lp18410
S'float64'
p18411
aNtp18412
(S'electricalUnits'
p18413
(lp18414
S'int32'
p18415
aNtp18416
(S'firstPhysicalVal'
p18417
(lp18418
S'float64'
p18419
aNtp18420
(S'secondPhysicalVal'
p18421
(lp18422
S'float64'
p18423
aNtp18424
(S'physicalUnits'
p18425
(lp18426
S'int32'
p18427
aNtp18428
(S'customScaleName'
p18429
(lp18430
S'char'
p18431
a(lp18432
I-1
aaNtp18433
tp18434
tp18435
sS'DAQmxGetSwitchChanAnlgBusSharingEnable'
p18436
((lp18437
S'int32'
p18438
ag34
a((S'switchChannelName'
p18439
(lp18440
S'char'
p18441
a(lp18442
I-1
aaNtp18443
(S'data'
p18444
(lp18445
S'bool32'
p18446
ag42
aNtp18447
tp18448
tp18449
sS'DAQmxGetAIThrmcplCJCChan'
p18450
((lp18451
S'int32'
p18452
ag34
a((S'taskHandle'
p18453
(lp18454
S'TaskHandle'
p18455
aNtp18456
(S'channel'
p18457
(lp18458
S'char'
p18459
a(lp18460
I-1
aaNtp18461
(S'data'
p18462
(lp18463
S'char'
p18464
ag42
aNtp18465
(S'bufferSize'
p18466
(lp18467
S'uInt32'
p18468
aNtp18469
tp18470
tp18471
sS'DAQmxResetCIEncoderBInputDigSyncEnable'
p18472
((lp18473
S'int32'
p18474
ag34
a((S'taskHandle'
p18475
(lp18476
S'TaskHandle'
p18477
aNtp18478
(S'channel'
p18479
(lp18480
S'char'
p18481
a(lp18482
I-1
aaNtp18483
tp18484
tp18485
sS'DAQmxGetSwitchChanMaxACCarryCurrent'
p18486
((lp18487
S'int32'
p18488
ag34
a((S'switchChannelName'
p18489
(lp18490
S'char'
p18491
a(lp18492
I-1
aaNtp18493
(S'data'
p18494
(lp18495
S'float64'
p18496
ag42
aNtp18497
tp18498
tp18499
sS'DAQmxResetAODACRngHigh'
p18500
((lp18501
S'int32'
p18502
ag34
a((S'taskHandle'
p18503
(lp18504
S'TaskHandle'
p18505
aNtp18506
(S'channel'
p18507
(lp18508
S'char'
p18509
a(lp18510
I-1
aaNtp18511
tp18512
tp18513
sS'DAQmxXSeriesCalAdjust'
p18514
((lp18515
S'int32'
p18516
ag34
a((S'calHandle'
p18517
(lp18518
S'CalHandle'
p18519
aNtp18520
(S'referenceVoltage'
p18521
(lp18522
S'float64'
p18523
aNtp18524
tp18525
tp18526
sS'DAQmxSetExportedAIHoldCmpltEventPulsePolarity'
p18527
((lp18528
S'int32'
p18529
ag34
a((S'taskHandle'
p18530
(lp18531
S'TaskHandle'
p18532
aNtp18533
(S'data'
p18534
(lp18535
S'int32'
p18536
aNtp18537
tp18538
tp18539
sS'DAQmxResetAnlgEdgeRefTrigHyst'
p18540
((lp18541
S'int32'
p18542
ag34
a((S'taskHandle'
p18543
(lp18544
S'TaskHandle'
p18545
aNtp18546
tp18547
tp18548
sS'DAQmxGetDigPatternStartTrigWhen'
p18549
((lp18550
S'int32'
p18551
ag34
a((S'taskHandle'
p18552
(lp18553
S'TaskHandle'
p18554
aNtp18555
(S'data'
p18556
(lp18557
S'int32'
p18558
ag42
aNtp18559
tp18560
tp18561
sS'DAQmxGetDevPCIDevNum'
p18562
((lp18563
S'int32'
p18564
ag34
a((S'device'
p18565
(lp18566
S'char'
p18567
a(lp18568
I-1
aaNtp18569
(S'data'
p18570
(lp18571
S'uInt32'
p18572
ag42
aNtp18573
tp18574
tp18575
sS'DAQmxResetAIConvDigFltrTimebaseRate'
p18576
((lp18577
S'int32'
p18578
ag34
a((S'taskHandle'
p18579
(lp18580
S'TaskHandle'
p18581
aNtp18582
tp18583
tp18584
sS'DAQmxGetMasterTimebaseRate'
p18585
((lp18586
S'int32'
p18587
ag34
a((S'taskHandle'
p18588
(lp18589
S'TaskHandle'
p18590
aNtp18591
(S'data'
p18592
(lp18593
S'float64'
p18594
ag42
aNtp18595
tp18596
tp18597
sS'DAQmxResetCICtrTimebaseMasterTimebaseDiv'
p18598
((lp18599
S'int32'
p18600
ag34
a((S'taskHandle'
p18601
(lp18602
S'TaskHandle'
p18603
aNtp18604
(S'channel'
p18605
(lp18606
S'char'
p18607
a(lp18608
I-1
aaNtp18609
tp18610
tp18611
sS'DAQmxSetImplicitUnderflowBehavior'
p18612
((lp18613
S'int32'
p18614
ag34
a((S'taskHandle'
p18615
(lp18616
S'TaskHandle'
p18617
aNtp18618
(S'data'
p18619
(lp18620
S'int32'
p18621
aNtp18622
tp18623
tp18624
sS'DAQmxSetExportedRefTrigPulsePolarity'
p18625
((lp18626
S'int32'
p18627
ag34
a((S'taskHandle'
p18628
(lp18629
S'TaskHandle'
p18630
aNtp18631
(S'data'
p18632
(lp18633
S'int32'
p18634
aNtp18635
tp18636
tp18637
sS'DAQmxGetCICountEdgesInitialCnt'
p18638
((lp18639
S'int32'
p18640
ag34
a((S'taskHandle'
p18641
(lp18642
S'TaskHandle'
p18643
aNtp18644
(S'channel'
p18645
(lp18646
S'char'
p18647
a(lp18648
I-1
aaNtp18649
(S'data'
p18650
(lp18651
S'uInt32'
p18652
ag42
aNtp18653
tp18654
tp18655
sS'DAQmxResetCICountEdgesDigFltrEnable'
p18656
((lp18657
S'int32'
p18658
ag34
a((S'taskHandle'
p18659
(lp18660
S'TaskHandle'
p18661
aNtp18662
(S'channel'
p18663
(lp18664
S'char'
p18665
a(lp18666
I-1
aaNtp18667
tp18668
tp18669
sS'DAQmxResetReadChannelsToRead'
p18670
((lp18671
S'int32'
p18672
ag34
a((S'taskHandle'
p18673
(lp18674
S'TaskHandle'
p18675
aNtp18676
tp18677
tp18678
sS'DAQmxResetAOMemMapEnable'
p18679
((lp18680
S'int32'
p18681
ag34
a((S'taskHandle'
p18682
(lp18683
S'TaskHandle'
p18684
aNtp18685
(S'channel'
p18686
(lp18687
S'char'
p18688
a(lp18689
I-1
aaNtp18690
tp18691
tp18692
sS'DAQmxGetDIDigFltrTimebaseSrc'
p18693
((lp18694
S'int32'
p18695
ag34
a((S'taskHandle'
p18696
(lp18697
S'TaskHandle'
p18698
aNtp18699
(S'channel'
p18700
(lp18701
S'char'
p18702
a(lp18703
I-1
aaNtp18704
(S'data'
p18705
(lp18706
S'char'
p18707
ag42
aNtp18708
(S'bufferSize'
p18709
(lp18710
S'uInt32'
p18711
aNtp18712
tp18713
tp18714
sS'DAQmxGetAIBridgeElectricalUnits'
p18715
((lp18716
S'int32'
p18717
ag34
a((S'taskHandle'
p18718
(lp18719
S'TaskHandle'
p18720
aNtp18721
(S'channel'
p18722
(lp18723
S'char'
p18724
a(lp18725
I-1
aaNtp18726
(S'data'
p18727
(lp18728
S'int32'
p18729
ag42
aNtp18730
tp18731
tp18732
sS'DAQmxSetCITwoEdgeSepSecondTerm'
p18733
((lp18734
S'int32'
p18735
ag34
a((S'taskHandle'
p18736
(lp18737
S'TaskHandle'
p18738
aNtp18739
(S'channel'
p18740
(lp18741
S'char'
p18742
a(lp18743
I-1
aaNtp18744
(S'data'
p18745
(lp18746
S'char'
p18747
ag42
aNtp18748
tp18749
tp18750
sS'DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate'
p18751
((lp18752
S'int32'
p18753
ag34
a((S'taskHandle'
p18754
(lp18755
S'TaskHandle'
p18756
aNtp18757
(S'data'
p18758
(lp18759
S'float64'
p18760
ag42
aNtp18761
tp18762
tp18763
sS'DAQmxGetDigPatternRefTrigPattern'
p18764
((lp18765
S'int32'
p18766
ag34
a((S'taskHandle'
p18767
(lp18768
S'TaskHandle'
p18769
aNtp18770
(S'data'
p18771
(lp18772
S'char'
p18773
ag42
aNtp18774
(S'bufferSize'
p18775
(lp18776
S'uInt32'
p18777
aNtp18778
tp18779
tp18780
sS'DAQmxGetWriteExternalOvervoltageChansExist'
p18781
((lp18782
S'int32'
p18783
ag34
a((S'taskHandle'
p18784
(lp18785
S'TaskHandle'
p18786
aNtp18787
(S'data'
p18788
(lp18789
S'bool32'
p18790
ag42
aNtp18791
tp18792
tp18793
sS'DAQmxSetCIPulseFreqDigFltrTimebaseSrc'
p18794
((lp18795
S'int32'
p18796
ag34
a((S'taskHandle'
p18797
(lp18798
S'TaskHandle'
p18799
aNtp18800
(S'channel'
p18801
(lp18802
S'char'
p18803
a(lp18804
I-1
aaNtp18805
(S'data'
p18806
(lp18807
S'char'
p18808
ag42
aNtp18809
tp18810
tp18811
sS'DAQmxSetCIDutyCycleDigFltrTimebaseSrc'
p18812
((lp18813
S'int32'
p18814
ag34
a((S'taskHandle'
p18815
(lp18816
S'TaskHandle'
p18817
aNtp18818
(S'channel'
p18819
(lp18820
S'char'
p18821
a(lp18822
I-1
aaNtp18823
(S'data'
p18824
(lp18825
S'char'
p18826
ag42
aNtp18827
tp18828
tp18829
sS'DAQmxSetAOPowerAmpChannelEnable'
p18830
((lp18831
S'int32'
p18832
ag34
a((S'physicalChannel'
p18833
(lp18834
S'char'
p18835
a(lp18836
I-1
aaNtp18837
(S'data'
p18838
(lp18839
S'bool32'
p18840
aNtp18841
tp18842
tp18843
sS'DAQmxSetAOMax'
p18844
((lp18845
S'int32'
p18846
ag34
a((S'taskHandle'
p18847
(lp18848
S'TaskHandle'
p18849
aNtp18850
(S'channel'
p18851
(lp18852
S'char'
p18853
a(lp18854
I-1
aaNtp18855
(S'data'
p18856
(lp18857
S'float64'
p18858
aNtp18859
tp18860
tp18861
sS'DAQmxResetCIFreqUnits'
p18862
((lp18863
S'int32'
p18864
ag34
a((S'taskHandle'
p18865
(lp18866
S'TaskHandle'
p18867
aNtp18868
(S'channel'
p18869
(lp18870
S'char'
p18871
a(lp18872
I-1
aaNtp18873
tp18874
tp18875
sS'DAQmxSetAILVDTSensitivity'
p18876
((lp18877
S'int32'
p18878
ag34
a((S'taskHandle'
p18879
(lp18880
S'TaskHandle'
p18881
aNtp18882
(S'channel'
p18883
(lp18884
S'char'
p18885
a(lp18886
I-1
aaNtp18887
(S'data'
p18888
(lp18889
S'float64'
p18890
aNtp18891
tp18892
tp18893
sS'DAQmxAdjust9238Cal'
p18894
((lp18895
S'int32'
p18896
ag34
a((S'calHandle'
p18897
(lp18898
S'CalHandle'
p18899
aNtp18900
(S'channelNames'
p18901
(lp18902
S'char'
p18903
a(lp18904
I-1
aaNtp18905
(S'value'
p18906
(lp18907
S'float64'
p18908
aNtp18909
tp18910
tp18911
sS'DAQmxResetAIAtten'
p18912
((lp18913
S'int32'
p18914
ag34
a((S'taskHandle'
p18915
(lp18916
S'TaskHandle'
p18917
aNtp18918
(S'channel'
p18919
(lp18920
S'char'
p18921
a(lp18922
I-1
aaNtp18923
tp18924
tp18925
sS'DAQmxSetDigEdgeRefTrigDigFltrEnable'
p18926
((lp18927
S'int32'
p18928
ag34
a((S'taskHandle'
p18929
(lp18930
S'TaskHandle'
p18931
aNtp18932
(S'data'
p18933
(lp18934
S'bool32'
p18935
aNtp18936
tp18937
tp18938
sS'DAQmxSetCIFreqDigSyncEnable'
p18939
((lp18940
S'int32'
p18941
ag34
a((S'taskHandle'
p18942
(lp18943
S'TaskHandle'
p18944
aNtp18945
(S'channel'
p18946
(lp18947
S'char'
p18948
a(lp18949
I-1
aaNtp18950
(S'data'
p18951
(lp18952
S'bool32'
p18953
aNtp18954
tp18955
tp18956
sS'DAQmxResetCICountEdgesDigSyncEnable'
p18957
((lp18958
S'int32'
p18959
ag34
a((S'taskHandle'
p18960
(lp18961
S'TaskHandle'
p18962
aNtp18963
(S'channel'
p18964
(lp18965
S'char'
p18966
a(lp18967
I-1
aaNtp18968
tp18969
tp18970
sS'DAQmxGetDIAcquireOn'
p18971
((lp18972
S'int32'
p18973
ag34
a((S'taskHandle'
p18974
(lp18975
S'TaskHandle'
p18976
aNtp18977
(S'channel'
p18978
(lp18979
S'char'
p18980
a(lp18981
I-1
aaNtp18982
(S'data'
p18983
(lp18984
S'int32'
p18985
ag42
aNtp18986
tp18987
tp18988
sS'DAQmxSetCIUsbXferReqSize'
p18989
((lp18990
S'int32'
p18991
ag34
a((S'taskHandle'
p18992
(lp18993
S'TaskHandle'
p18994
aNtp18995
(S'channel'
p18996
(lp18997
S'char'
p18998
a(lp18999
I-1
aaNtp19000
(S'data'
p19001
(lp19002
S'uInt32'
p19003
aNtp19004
tp19005
tp19006
sS'DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior'
p19007
((lp19008
S'int32'
p19009
ag34
a((S'taskHandle'
p19010
(lp19011
S'TaskHandle'
p19012
aNtp19013
(S'channel'
p19014
(lp19015
S'char'
p19016
a(lp19017
I-1
aaNtp19018
(S'data'
p19019
(lp19020
S'int32'
p19021
aNtp19022
tp19023
tp19024
sS'DAQmxAdjust4610Cal'
p19025
((lp19026
S'int32'
p19027
ag34
a((S'calHandle'
p19028
(lp19029
S'CalHandle'
p19030
aNtp19031
(S'channelName'
p19032
(lp19033
S'char'
p19034
a(lp19035
I-1
aaNtp19036
(S'gain'
p19037
(lp19038
S'float64'
p19039
aNtp19040
(S'offset'
p19041
(lp19042
S'float64'
p19043
aNtp19044
tp19045
tp19046
sS'DAQmxSetAIFilterDelayUnits'
p19047
((lp19048
S'int32'
p19049
ag34
a((S'taskHandle'
p19050
(lp19051
S'TaskHandle'
p19052
aNtp19053
(S'channel'
p19054
(lp19055
S'char'
p19056
a(lp19057
I-1
aaNtp19058
(S'data'
p19059
(lp19060
S'int32'
p19061
aNtp19062
tp19063
tp19064
sS'DAQmxGetCIPrescaler'
p19065
((lp19066
S'int32'
p19067
ag34
a((S'taskHandle'
p19068
(lp19069
S'TaskHandle'
p19070
aNtp19071
(S'channel'
p19072
(lp19073
S'char'
p19074
a(lp19075
I-1
aaNtp19076
(S'data'
p19077
(lp19078
S'uInt32'
p19079
ag42
aNtp19080
tp19081
tp19082
sS'DAQmxGetChanDescr'
p19083
((lp19084
S'int32'
p19085
ag34
a((S'taskHandle'
p19086
(lp19087
S'TaskHandle'
p19088
aNtp19089
(S'channel'
p19090
(lp19091
S'char'
p19092
a(lp19093
I-1
aaNtp19094
(S'data'
p19095
(lp19096
S'char'
p19097
ag42
aNtp19098
(S'bufferSize'
p19099
(lp19100
S'uInt32'
p19101
aNtp19102
tp19103
tp19104
sS'DAQmxResetCOPulseTimeUnits'
p19105
((lp19106
S'int32'
p19107
ag34
a((S'taskHandle'
p19108
(lp19109
S'TaskHandle'
p19110
aNtp19111
(S'channel'
p19112
(lp19113
S'char'
p19114
a(lp19115
I-1
aaNtp19116
tp19117
tp19118
sS'DAQmxSetCIEncoderZInputDigSyncEnable'
p19119
((lp19120
S'int32'
p19121
ag34
a((S'taskHandle'
p19122
(lp19123
S'TaskHandle'
p19124
aNtp19125
(S'channel'
p19126
(lp19127
S'char'
p19128
a(lp19129
I-1
aaNtp19130
(S'data'
p19131
(lp19132
S'bool32'
p19133
aNtp19134
tp19135
tp19136
sS'DAQmxGetAutoConfiguredCDAQSyncConnections'
p19137
((lp19138
S'int32'
p19139
ag34
a((S'portList'
p19140
(lp19141
S'char'
p19142
a(lp19143
I-1
aaNtp19144
(S'portListSize'
p19145
(lp19146
S'uInt32'
p19147
aNtp19148
tp19149
tp19150
sS'DAQmxResetCIPulseTicksTerm'
p19151
((lp19152
S'int32'
p19153
ag34
a((S'taskHandle'
p19154
(lp19155
S'TaskHandle'
p19156
aNtp19157
(S'channel'
p19158
(lp19159
S'char'
p19160
a(lp19161
I-1
aaNtp19162
tp19163
tp19164
sS'DAQmxGetCIPulseTimeDigFltrTimebaseSrc'
p19165
((lp19166
S'int32'
p19167
ag34
a((S'taskHandle'
p19168
(lp19169
S'TaskHandle'
p19170
aNtp19171
(S'channel'
p19172
(lp19173
S'char'
p19174
a(lp19175
I-1
aaNtp19176
(S'data'
p19177
(lp19178
S'char'
p19179
ag42
aNtp19180
(S'bufferSize'
p19181
(lp19182
S'uInt32'
p19183
aNtp19184
tp19185
tp19186
sS'DAQmxSetAIChanCalDesc'
p19187
((lp19188
S'int32'
p19189
ag34
a((S'taskHandle'
p19190
(lp19191
S'TaskHandle'
p19192
aNtp19193
(S'channel'
p19194
(lp19195
S'char'
p19196
a(lp19197
I-1
aaNtp19198
(S'data'
p19199
(lp19200
S'char'
p19201
ag42
aNtp19202
tp19203
tp19204
sS'DAQmxSetAOVoltageUnits'
p19205
((lp19206
S'int32'
p19207
ag34
a((S'taskHandle'
p19208
(lp19209
S'TaskHandle'
p19210
aNtp19211
(S'channel'
p19212
(lp19213
S'char'
p19214
a(lp19215
I-1
aaNtp19216
(S'data'
p19217
(lp19218
S'int32'
p19219
aNtp19220
tp19221
tp19222
sS'DAQmxSetAIForceIEPESensorSensitivity'
p19223
((lp19224
S'int32'
p19225
ag34
a((S'taskHandle'
p19226
(lp19227
S'TaskHandle'
p19228
aNtp19229
(S'channel'
p19230
(lp19231
S'char'
p19232
a(lp19233
I-1
aaNtp19234
(S'data'
p19235
(lp19236
S'float64'
p19237
aNtp19238
tp19239
tp19240
sS'DAQmxResetExportedRdyForXferEventLvlActiveLvl'
p19241
((lp19242
S'int32'
p19243
ag34
a((S'taskHandle'
p19244
(lp19245
S'TaskHandle'
p19246
aNtp19247
tp19248
tp19249
sS'DAQmxGet9214CalAdjustPoints'
p19250
((lp19251
S'int32'
p19252
ag34
a((S'calHandle'
p19253
(lp19254
S'CalHandle'
p19255
aNtp19256
(S'channelNames'
p19257
(lp19258
S'char'
p19259
a(lp19260
I-1
aaNtp19261
(S'adjustmentPoints'
p19262
(lp19263
S'float64'
p19264
ag42
aNtp19265
(S'bufferSize'
p19266
(lp19267
S'uInt32'
p19268
aNtp19269
tp19270
tp19271
sS'DAQmxGetSampClkTerm'
p19272
((lp19273
S'int32'
p19274
ag34
a((S'taskHandle'
p19275
(lp19276
S'TaskHandle'
p19277
aNtp19278
(S'data'
p19279
(lp19280
S'char'
p19281
ag42
aNtp19282
(S'bufferSize'
p19283
(lp19284
S'uInt32'
p19285
aNtp19286
tp19287
tp19288
sS'DAQmxResetCITwoEdgeSepSecondDigSyncEnable'
p19289
((lp19290
S'int32'
p19291
ag34
a((S'taskHandle'
p19292
(lp19293
S'TaskHandle'
p19294
aNtp19295
(S'channel'
p19296
(lp19297
S'char'
p19298
a(lp19299
I-1
aaNtp19300
tp19301
tp19302
sS'DAQmxResetAIForceUnits'
p19303
((lp19304
S'int32'
p19305
ag34
a((S'taskHandle'
p19306
(lp19307
S'TaskHandle'
p19308
aNtp19309
(S'channel'
p19310
(lp19311
S'char'
p19312
a(lp19313
I-1
aaNtp19314
tp19315
tp19316
sS'DAQmxGetScalePolyReverseCoeff'
p19317
((lp19318
S'int32'
p19319
ag34
a((S'scaleName'
p19320
(lp19321
S'char'
p19322
a(lp19323
I-1
aaNtp19324
(S'data'
p19325
(lp19326
S'float64'
p19327
ag42
aNtp19328
(S'arraySizeInElements'
p19329
(lp19330
S'uInt32'
p19331
aNtp19332
tp19333
tp19334
sS'DAQmxGetPhysicalChanTEDSBitStream'
p19335
((lp19336
S'int32'
p19337
ag34
a((S'physicalChannel'
p19338
(lp19339
S'char'
p19340
a(lp19341
I-1
aaNtp19342
(S'data'
p19343
(lp19344
S'uInt8'
p19345
ag42
aNtp19346
(S'arraySizeInElements'
p19347
(lp19348
S'uInt32'
p19349
aNtp19350
tp19351
tp19352
sS'DAQmxResetDOLineStatesStartState'
p19353
((lp19354
S'int32'
p19355
ag34
a((S'taskHandle'
p19356
(lp19357
S'TaskHandle'
p19358
aNtp19359
(S'channel'
p19360
(lp19361
S'char'
p19362
a(lp19363
I-1
aaNtp19364
tp19365
tp19366
sS'DAQmxSetAILowpassSwitchCapExtClkFreq'
p19367
((lp19368
S'int32'
p19369
ag34
a((S'taskHandle'
p19370
(lp19371
S'TaskHandle'
p19372
aNtp19373
(S'channel'
p19374
(lp19375
S'char'
p19376
a(lp19377
I-1
aaNtp19378
(S'data'
p19379
(lp19380
S'float64'
p19381
aNtp19382
tp19383
tp19384
sS'DAQmxAddNetworkDevice'
p19385
((lp19386
S'int32'
p19387
ag34
a((S'IPAddress'
p19388
(lp19389
S'char'
p19390
a(lp19391
I-1
aaNtp19392
(S'deviceName'
p19393
(lp19394
S'char'
p19395
a(lp19396
I-1
aaNtp19397
(S'attemptReservation'
p19398
(lp19399
S'bool32'
p19400
aNtp19401
(S'timeout'
p19402
(lp19403
S'float64'
p19404
aNtp19405
(S'deviceNameOut'
p19406
(lp19407
S'char'
p19408
a(lp19409
I-1
aaNtp19410
(S'deviceNameOutBufferSize'
p19411
(lp19412
S'uInt32'
p19413
aNtp19414
tp19415
tp19416
sS'DAQmxGetChangeDetectDIRisingEdgePhysicalChans'
p19417
((lp19418
S'int32'
p19419
ag34
a((S'taskHandle'
p19420
(lp19421
S'TaskHandle'
p19422
aNtp19423
(S'data'
p19424
(lp19425
S'char'
p19426
ag42
aNtp19427
(S'bufferSize'
p19428
(lp19429
S'uInt32'
p19430
aNtp19431
tp19432
tp19433
sS'DAQmxGetSwitchDevNumRelays'
p19434
((lp19435
S'int32'
p19436
ag34
a((S'deviceName'
p19437
(lp19438
S'char'
p19439
a(lp19440
I-1
aaNtp19441
(S'data'
p19442
(lp19443
S'uInt32'
p19444
ag42
aNtp19445
tp19446
tp19447
sS'DAQmxResetAIStrainGageCfg'
p19448
((lp19449
S'int32'
p19450
ag34
a((S'taskHandle'
p19451
(lp19452
S'TaskHandle'
p19453
aNtp19454
(S'channel'
p19455
(lp19456
S'char'
p19457
a(lp19458
I-1
aaNtp19459
tp19460
tp19461
sS'DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate'
p19462
((lp19463
S'int32'
p19464
ag34
a((S'taskHandle'
p19465
(lp19466
S'TaskHandle'
p19467
aNtp19468
(S'channel'
p19469
(lp19470
S'char'
p19471
a(lp19472
I-1
aaNtp19473
tp19474
tp19475
sS'DAQmxSetCIEncoderAInputDigFltrMinPulseWidth'
p19476
((lp19477
S'int32'
p19478
ag34
a((S'taskHandle'
p19479
(lp19480
S'TaskHandle'
p19481
aNtp19482
(S'channel'
p19483
(lp19484
S'char'
p19485
a(lp19486
I-1
aaNtp19487
(S'data'
p19488
(lp19489
S'float64'
p19490
aNtp19491
tp19492
tp19493
sS'DAQmxResetReadAttribute'
p19494
((lp19495
S'int32'
p19496
ag34
a((S'taskHandle'
p19497
(lp19498
S'TaskHandle'
p19499
aNtp19500
(S'attribute'
p19501
(lp19502
S'int32'
p19503
aNtp19504
tp19505
tp19506
sS'DAQmxSetDOOvercurrentLimit'
p19507
((lp19508
S'int32'
p19509
ag34
a((S'taskHandle'
p19510
(lp19511
S'TaskHandle'
p19512
aNtp19513
(S'channel'
p19514
(lp19515
S'char'
p19516
a(lp19517
I-1
aaNtp19518
(S'data'
p19519
(lp19520
S'float64'
p19521
aNtp19522
tp19523
tp19524
sS'DAQmxGetDevAITrigUsage'
p19525
((lp19526
S'int32'
p19527
ag34
a((S'device'
p19528
(lp19529
S'char'
p19530
a(lp19531
I-1
aaNtp19532
(S'data'
p19533
(lp19534
S'int32'
p19535
ag42
aNtp19536
tp19537
tp19538
sS'DAQmxSetDigPatternPauseTrigPattern'
p19539
((lp19540
S'int32'
p19541
ag34
a((S'taskHandle'
p19542
(lp19543
S'TaskHandle'
p19544
aNtp19545
(S'data'
p19546
(lp19547
S'char'
p19548
ag42
aNtp19549
tp19550
tp19551
sS'DAQmxGetDevCOSupportedOutputTypes'
p19552
((lp19553
S'int32'
p19554
ag34
a((S'device'
p19555
(lp19556
S'char'
p19557
a(lp19558
I-1
aaNtp19559
(S'data'
p19560
(lp19561
S'int32'
p19562
ag42
aNtp19563
(S'arraySizeInElements'
p19564
(lp19565
S'uInt32'
p19566
aNtp19567
tp19568
tp19569
sS'DAQmxSetAILowpassSwitchCapOutClkDiv'
p19570
((lp19571
S'int32'
p19572
ag34
a((S'taskHandle'
p19573
(lp19574
S'TaskHandle'
p19575
aNtp19576
(S'channel'
p19577
(lp19578
S'char'
p19579
a(lp19580
I-1
aaNtp19581
(S'data'
p19582
(lp19583
S'uInt32'
p19584
aNtp19585
tp19586
tp19587
sS'DAQmxGetDONumLines'
p19588
((lp19589
S'int32'
p19590
ag34
a((S'taskHandle'
p19591
(lp19592
S'TaskHandle'
p19593
aNtp19594
(S'channel'
p19595
(lp19596
S'char'
p19597
a(lp19598
I-1
aaNtp19599
(S'data'
p19600
(lp19601
S'uInt32'
p19602
ag42
aNtp19603
tp19604
tp19605
sS'DAQmxSetAILossyLSBRemovalCompressedSampSize'
p19606
((lp19607
S'int32'
p19608
ag34
a((S'taskHandle'
p19609
(lp19610
S'TaskHandle'
p19611
aNtp19612
(S'channel'
p19613
(lp19614
S'char'
p19615
a(lp19616
I-1
aaNtp19617
(S'data'
p19618
(lp19619
S'uInt32'
p19620
aNtp19621
tp19622
tp19623
sS'DAQmxAdjust4300Cal'
p19624
((lp19625
S'int32'
p19626
ag34
a((S'calHandle'
p19627
(lp19628
S'CalHandle'
p19629
aNtp19630
(S'refVoltage'
p19631
(lp19632
S'float64'
p19633
aNtp19634
tp19635
tp19636
sS'DAQmxResetAOFilterDelayAdjustment'
p19637
((lp19638
S'int32'
p19639
ag34
a((S'taskHandle'
p19640
(lp19641
S'TaskHandle'
p19642
aNtp19643
(S'channel'
p19644
(lp19645
S'char'
p19646
a(lp19647
I-1
aaNtp19648
tp19649
tp19650
sS'DAQmxGetCOAutoIncrCnt'
p19651
((lp19652
S'int32'
p19653
ag34
a((S'taskHandle'
p19654
(lp19655
S'TaskHandle'
p19656
aNtp19657
(S'channel'
p19658
(lp19659
S'char'
p19660
a(lp19661
I-1
aaNtp19662
(S'data'
p19663
(lp19664
S'uInt32'
p19665
ag42
aNtp19666
tp19667
tp19668
sS'DAQmxCfgAnlgWindowRefTrig'
p19669
((lp19670
S'int32'
p19671
ag34
a((S'taskHandle'
p19672
(lp19673
S'TaskHandle'
p19674
aNtp19675
(S'triggerSource'
p19676
(lp19677
S'char'
p19678
a(lp19679
I-1
aaNtp19680
(S'triggerWhen'
p19681
(lp19682
S'int32'
p19683
aNtp19684
(S'windowTop'
p19685
(lp19686
S'float64'
p19687
aNtp19688
(S'windowBottom'
p19689
(lp19690
S'float64'
p19691
aNtp19692
(S'pretriggerSamples'
p19693
(lp19694
S'uInt32'
p19695
aNtp19696
tp19697
tp19698
sS'DAQmxSetDOLineStatesDoneState'
p19699
((lp19700
S'int32'
p19701
ag34
a((S'taskHandle'
p19702
(lp19703
S'TaskHandle'
p19704
aNtp19705
(S'channel'
p19706
(lp19707
S'char'
p19708
a(lp19709
I-1
aaNtp19710
(S'data'
p19711
(lp19712
S'int32'
p19713
aNtp19714
tp19715
tp19716
sS'DAQmxSetDigPatternRefTrigPattern'
p19717
((lp19718
S'int32'
p19719
ag34
a((S'taskHandle'
p19720
(lp19721
S'TaskHandle'
p19722
aNtp19723
(S'data'
p19724
(lp19725
S'char'
p19726
ag42
aNtp19727
tp19728
tp19729
sS'DAQmxResetExportedSyncPulseEventOutputTerm'
p19730
((lp19731
S'int32'
p19732
ag34
a((S'taskHandle'
p19733
(lp19734
S'TaskHandle'
p19735
aNtp19736
tp19737
tp19738
sS'DAQmxResetAIConvDigFltrMinPulseWidth'
p19739
((lp19740
S'int32'
p19741
ag34
a((S'taskHandle'
p19742
(lp19743
S'TaskHandle'
p19744
aNtp19745
tp19746
tp19747
sS'DAQmxResetCIPulseTicksDigFltrTimebaseRate'
p19748
((lp19749
S'int32'
p19750
ag34
a((S'taskHandle'
p19751
(lp19752
S'TaskHandle'
p19753
aNtp19754
(S'channel'
p19755
(lp19756
S'char'
p19757
a(lp19758
I-1
aaNtp19759
tp19760
tp19761
sS'DAQmxGetCIPulseWidthDigFltrEnable'
p19762
((lp19763
S'int32'
p19764
ag34
a((S'taskHandle'
p19765
(lp19766
S'TaskHandle'
p19767
aNtp19768
(S'channel'
p19769
(lp19770
S'char'
p19771
a(lp19772
I-1
aaNtp19773
(S'data'
p19774
(lp19775
S'bool32'
p19776
ag42
aNtp19777
tp19778
tp19779
sS'DAQmxReadCtrTimeScalar'
p19780
((lp19781
S'int32'
p19782
ag34
a((S'taskHandle'
p19783
(lp19784
S'TaskHandle'
p19785
aNtp19786
(S'timeout'
p19787
(lp19788
S'float64'
p19789
aNtp19790
(S'highTime'
p19791
(lp19792
S'float64'
p19793
ag42
aNtp19794
(S'lowTime'
p19795
(lp19796
S'float64'
p19797
ag42
aNtp19798
(S'reserved'
p19799
(lp19800
S'bool32'
p19801
ag42
aNtp19802
tp19803
tp19804
sS'DAQmxGetDevPXIChassisNum'
p19805
((lp19806
S'int32'
p19807
ag34
a((S'device'
p19808
(lp19809
S'char'
p19810
a(lp19811
I-1
aaNtp19812
(S'data'
p19813
(lp19814
S'uInt32'
p19815
ag42
aNtp19816
tp19817
tp19818
sS'DAQmxResetDigEdgeRefTrigDigFltrEnable'
p19819
((lp19820
S'int32'
p19821
ag34
a((S'taskHandle'
p19822
(lp19823
S'TaskHandle'
p19824
aNtp19825
tp19826
tp19827
sS'DAQmxGetWriteDevsWithInsertedOrRemovedAccessories'
p19828
((lp19829
S'int32'
p19830
ag34
a((S'taskHandle'
p19831
(lp19832
S'TaskHandle'
p19833
aNtp19834
(S'data'
p19835
(lp19836
S'char'
p19837
ag42
aNtp19838
(S'bufferSize'
p19839
(lp19840
S'uInt32'
p19841
aNtp19842
tp19843
tp19844
sS'DAQmxGetAIBridgePolyReverseCoeff'
p19845
((lp19846
S'int32'
p19847
ag34
a((S'taskHandle'
p19848
(lp19849
S'TaskHandle'
p19850
aNtp19851
(S'channel'
p19852
(lp19853
S'char'
p19854
a(lp19855
I-1
aaNtp19856
(S'data'
p19857
(lp19858
S'float64'
p19859
ag42
aNtp19860
(S'arraySizeInElements'
p19861
(lp19862
S'uInt32'
p19863
aNtp19864
tp19865
tp19866
sS'DAQmxGetDevAIVoltageRngs'
p19867
((lp19868
S'int32'
p19869
ag34
a((S'device'
p19870
(lp19871
S'char'
p19872
a(lp19873
I-1
aaNtp19874
(S'data'
p19875
(lp19876
S'float64'
p19877
ag42
aNtp19878
(S'arraySizeInElements'
p19879
(lp19880
S'uInt32'
p19881
aNtp19882
tp19883
tp19884
sS'DAQmxGetSwitchChanMaxACCarryPwr'
p19885
((lp19886
S'int32'
p19887
ag34
a((S'switchChannelName'
p19888
(lp19889
S'char'
p19890
a(lp19891
I-1
aaNtp19892
(S'data'
p19893
(lp19894
S'float64'
p19895
ag42
aNtp19896
tp19897
tp19898
sS'DAQmxGetAIBridgeInitialVoltage'
p19899
((lp19900
S'int32'
p19901
ag34
a((S'taskHandle'
p19902
(lp19903
S'TaskHandle'
p19904
aNtp19905
(S'channel'
p19906
(lp19907
S'char'
p19908
a(lp19909
I-1
aaNtp19910
(S'data'
p19911
(lp19912
S'float64'
p19913
ag42
aNtp19914
tp19915
tp19916
sS'DAQmxResetCIPulseTicksDigFltrTimebaseSrc'
p19917
((lp19918
S'int32'
p19919
ag34
a((S'taskHandle'
p19920
(lp19921
S'TaskHandle'
p19922
aNtp19923
(S'channel'
p19924
(lp19925
S'char'
p19926
a(lp19927
I-1
aaNtp19928
tp19929
tp19930
sS'DAQmxSetAnlgLvlPauseTrigCoupling'
p19931
((lp19932
S'int32'
p19933
ag34
a((S'taskHandle'
p19934
(lp19935
S'TaskHandle'
p19936
aNtp19937
(S'data'
p19938
(lp19939
S'int32'
p19940
aNtp19941
tp19942
tp19943
sS'DAQmxCreateAIPressureBridgePolynomialChan'
p19944
((lp19945
S'int32'
p19946
ag34
a((S'taskHandle'
p19947
(lp19948
S'TaskHandle'
p19949
aNtp19950
(S'physicalChannel'
p19951
(lp19952
S'char'
p19953
a(lp19954
I-1
aaNtp19955
(S'nameToAssignToChannel'
p19956
(lp19957
S'char'
p19958
a(lp19959
I-1
aaNtp19960
(S'minVal'
p19961
(lp19962
S'float64'
p19963
aNtp19964
(S'maxVal'
p19965
(lp19966
S'float64'
p19967
aNtp19968
(S'units'
p19969
(lp19970
S'int32'
p19971
aNtp19972
(S'bridgeConfig'
p19973
(lp19974
S'int32'
p19975
aNtp19976
(S'voltageExcitSource'
p19977
(lp19978
S'int32'
p19979
aNtp19980
(S'voltageExcitVal'
p19981
(lp19982
S'float64'
p19983
aNtp19984
(S'nominalBridgeResistance'
p19985
(lp19986
S'float64'
p19987
aNtp19988
(S'forwardCoeffs'
p19989
(lp19990
S'float64'
p19991
a(lp19992
I-1
aaNtp19993
(S'numForwardCoeffs'
p19994
(lp19995
S'uInt32'
p19996
aNtp19997
(S'reverseCoeffs'
p19998
(lp19999
S'float64'
p20000
a(lp20001
I-1
aaNtp20002
(S'numReverseCoeffs'
p20003
(lp20004
S'uInt32'
p20005
aNtp20006
(S'electricalUnits'
p20007
(lp20008
S'int32'
p20009
aNtp20010
(S'physicalUnits'
p20011
(lp20012
S'int32'
p20013
aNtp20014
(S'customScaleName'
p20015
(lp20016
S'char'
p20017
a(lp20018
I-1
aaNtp20019
tp20020
tp20021
sS'DAQmxGetExportedPauseTrigLvlActiveLvl'
p20022
((lp20023
S'int32'
p20024
ag34
a((S'taskHandle'
p20025
(lp20026
S'TaskHandle'
p20027
aNtp20028
(S'data'
p20029
(lp20030
S'int32'
p20031
ag42
aNtp20032
tp20033
tp20034
sS'DAQmxResetCICountEdgesCountDirDigSyncEnable'
p20035
((lp20036
S'int32'
p20037
ag34
a((S'taskHandle'
p20038
(lp20039
S'TaskHandle'
p20040
aNtp20041
(S'channel'
p20042
(lp20043
S'char'
p20044
a(lp20045
I-1
aaNtp20046
tp20047
tp20048
sS'DAQmxResetSampClkRate'
p20049
((lp20050
S'int32'
p20051
ag34
a((S'taskHandle'
p20052
(lp20053
S'TaskHandle'
p20054
aNtp20055
tp20056
tp20057
sS'DAQmxGetAIRngLow'
p20058
((lp20059
S'int32'
p20060
ag34
a((S'taskHandle'
p20061
(lp20062
S'TaskHandle'
p20063
aNtp20064
(S'channel'
p20065
(lp20066
S'char'
p20067
a(lp20068
I-1
aaNtp20069
(S'data'
p20070
(lp20071
S'float64'
p20072
ag42
aNtp20073
tp20074
tp20075
sS'DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth'
p20076
((lp20077
S'int32'
p20078
ag34
a((S'taskHandle'
p20079
(lp20080
S'TaskHandle'
p20081
aNtp20082
tp20083
tp20084
sS'DAQmxGetCIPulseFreqLogicLvlBehavior'
p20085
((lp20086
S'int32'
p20087
ag34
a((S'taskHandle'
p20088
(lp20089
S'TaskHandle'
p20090
aNtp20091
(S'channel'
p20092
(lp20093
S'char'
p20094
a(lp20095
I-1
aaNtp20096
(S'data'
p20097
(lp20098
S'int32'
p20099
ag42
aNtp20100
tp20101
tp20102
sS'DAQmxGetAODACRefConnToGnd'
p20103
((lp20104
S'int32'
p20105
ag34
a((S'taskHandle'
p20106
(lp20107
S'TaskHandle'
p20108
aNtp20109
(S'channel'
p20110
(lp20111
S'char'
p20112
a(lp20113
I-1
aaNtp20114
(S'data'
p20115
(lp20116
S'bool32'
p20117
ag42
aNtp20118
tp20119
tp20120
sS'DAQmxSetCISampClkOverrunSentinelVal'
p20121
((lp20122
S'int32'
p20123
ag34
a((S'taskHandle'
p20124
(lp20125
S'TaskHandle'
p20126
aNtp20127
(S'channel'
p20128
(lp20129
S'char'
p20130
a(lp20131
I-1
aaNtp20132
(S'data'
p20133
(lp20134
S'int32'
p20135
aNtp20136
tp20137
tp20138
sS'DAQmxSetAIChanCalScaleType'
p20139
((lp20140
S'int32'
p20141
ag34
a((S'taskHandle'
p20142
(lp20143
S'TaskHandle'
p20144
aNtp20145
(S'channel'
p20146
(lp20147
S'char'
p20148
a(lp20149
I-1
aaNtp20150
(S'data'
p20151
(lp20152
S'int32'
p20153
aNtp20154
tp20155
tp20156
sS'DAQmxGetSelfCalSupported'
p20157
((lp20158
S'int32'
p20159
ag34
a((S'deviceName'
p20160
(lp20161
S'char'
p20162
a(lp20163
I-1
aaNtp20164
(S'data'
p20165
(lp20166
S'bool32'
p20167
ag42
aNtp20168
tp20169
tp20170
sS'DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseSrc'
p20171
((lp20172
S'int32'
p20173
ag34
a((S'taskHandle'
p20174
(lp20175
S'TaskHandle'
p20176
aNtp20177
tp20178
tp20179
sS'DAQmxGetPersistedTaskAllowInteractiveDeletion'
p20180
((lp20181
S'int32'
p20182
ag34
a((S'taskName'
p20183
(lp20184
S'char'
p20185
a(lp20186
I-1
aaNtp20187
(S'data'
p20188
(lp20189
S'bool32'
p20190
ag42
aNtp20191
tp20192
tp20193
sS'DAQmxGetAOFuncGenType'
p20194
((lp20195
S'int32'
p20196
ag34
a((S'taskHandle'
p20197
(lp20198
S'TaskHandle'
p20199
aNtp20200
(S'channel'
p20201
(lp20202
S'char'
p20203
a(lp20204
I-1
aaNtp20205
(S'data'
p20206
(lp20207
S'int32'
p20208
ag42
aNtp20209
tp20210
tp20211
sS'DAQmxGetDevTCPIPHostname'
p20212
((lp20213
S'int32'
p20214
ag34
a((S'device'
p20215
(lp20216
S'char'
p20217
a(lp20218
I-1
aaNtp20219
(S'data'
p20220
(lp20221
S'char'
p20222
ag42
aNtp20223
(S'bufferSize'
p20224
(lp20225
S'uInt32'
p20226
aNtp20227
tp20228
tp20229
sS'DAQmxGetCOCtrTimebaseDigFltrTimebaseRate'
p20230
((lp20231
S'int32'
p20232
ag34
a((S'taskHandle'
p20233
(lp20234
S'TaskHandle'
p20235
aNtp20236
(S'channel'
p20237
(lp20238
S'char'
p20239
a(lp20240
I-1
aaNtp20241
(S'data'
p20242
(lp20243
S'float64'
p20244
ag42
aNtp20245
tp20246
tp20247
sS'DAQmxResetDIDigFltrTimebaseRate'
p20248
((lp20249
S'int32'
p20250
ag34
a((S'taskHandle'
p20251
(lp20252
S'TaskHandle'
p20253
aNtp20254
(S'channel'
p20255
(lp20256
S'char'
p20257
a(lp20258
I-1
aaNtp20259
tp20260
tp20261
sS'DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth'
p20262
((lp20263
S'int32'
p20264
ag34
a((S'taskHandle'
p20265
(lp20266
S'TaskHandle'
p20267
aNtp20268
(S'channel'
p20269
(lp20270
S'char'
p20271
a(lp20272
I-1
aaNtp20273
tp20274
tp20275
sS'DAQmxGetAODACOffsetExtSrc'
p20276
((lp20277
S'int32'
p20278
ag34
a((S'taskHandle'
p20279
(lp20280
S'TaskHandle'
p20281
aNtp20282
(S'channel'
p20283
(lp20284
S'char'
p20285
a(lp20286
I-1
aaNtp20287
(S'data'
p20288
(lp20289
S'char'
p20290
ag42
aNtp20291
(S'bufferSize'
p20292
(lp20293
S'uInt32'
p20294
aNtp20295
tp20296
tp20297
sS'DAQmxResetAIExcitDCorAC'
p20298
((lp20299
S'int32'
p20300
ag34
a((S'taskHandle'
p20301
(lp20302
S'TaskHandle'
p20303
aNtp20304
(S'channel'
p20305
(lp20306
S'char'
p20307
a(lp20308
I-1
aaNtp20309
tp20310
tp20311
sS'DAQmxGetCOCtrTimebaseRate'
p20312
((lp20313
S'int32'
p20314
ag34
a((S'taskHandle'
p20315
(lp20316
S'TaskHandle'
p20317
aNtp20318
(S'channel'
p20319
(lp20320
S'char'
p20321
a(lp20322
I-1
aaNtp20323
(S'data'
p20324
(lp20325
S'float64'
p20326
ag42
aNtp20327
tp20328
tp20329
sS'DAQmxSetDODataXferMech'
p20330
((lp20331
S'int32'
p20332
ag34
a((S'taskHandle'
p20333
(lp20334
S'TaskHandle'
p20335
aNtp20336
(S'channel'
p20337
(lp20338
S'char'
p20339
a(lp20340
I-1
aaNtp20341
(S'data'
p20342
(lp20343
S'int32'
p20344
aNtp20345
tp20346
tp20347
sS'DAQmxGetPhysicalChanAOSupportedOutputTypes'
p20348
((lp20349
S'int32'
p20350
ag34
a((S'physicalChannel'
p20351
(lp20352
S'char'
p20353
a(lp20354
I-1
aaNtp20355
(S'data'
p20356
(lp20357
S'int32'
p20358
ag42
aNtp20359
(S'arraySizeInElements'
p20360
(lp20361
S'uInt32'
p20362
aNtp20363
tp20364
tp20365
sS'DAQmxGetSwitchChanBandwidth'
p20366
((lp20367
S'int32'
p20368
ag34
a((S'switchChannelName'
p20369
(lp20370
S'char'
p20371
a(lp20372
I-1
aaNtp20373
(S'data'
p20374
(lp20375
S'float64'
p20376
ag42
aNtp20377
tp20378
tp20379
sS'DAQmxResetInterlockedHshkTrigSrc'
p20380
((lp20381
S'int32'
p20382
ag34
a((S'taskHandle'
p20383
(lp20384
S'TaskHandle'
p20385
aNtp20386
tp20387
tp20388
sS'DAQmxResetAIConvTimebaseSrcEx'
p20389
((lp20390
S'int32'
p20391
ag34
a((S'taskHandle'
p20392
(lp20393
S'TaskHandle'
p20394
aNtp20395
(S'deviceNames'
p20396
(lp20397
S'char'
p20398
a(lp20399
I-1
aaNtp20400
tp20401
tp20402
sS'DAQmxResetAIVelocityUnits'
p20403
((lp20404
S'int32'
p20405
ag34
a((S'taskHandle'
p20406
(lp20407
S'TaskHandle'
p20408
aNtp20409
(S'channel'
p20410
(lp20411
S'char'
p20412
a(lp20413
I-1
aaNtp20414
tp20415
tp20416
sS'DAQmxResetChangeDetectDITristate'
p20417
((lp20418
S'int32'
p20419
ag34
a((S'taskHandle'
p20420
(lp20421
S'TaskHandle'
p20422
aNtp20423
tp20424
tp20425
sS'DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc'
p20426
((lp20427
S'int32'
p20428
ag34
a((S'taskHandle'
p20429
(lp20430
S'TaskHandle'
p20431
aNtp20432
(S'data'
p20433
(lp20434
S'char'
p20435
ag42
aNtp20436
tp20437
tp20438
sS'DAQmxGetAIConvDigSyncEnable'
p20439
((lp20440
S'int32'
p20441
ag34
a((S'taskHandle'
p20442
(lp20443
S'TaskHandle'
p20444
aNtp20445
(S'data'
p20446
(lp20447
S'bool32'
p20448
ag42
aNtp20449
tp20450
tp20451
sS'DAQmxResetCIDataXferReqCond'
p20452
((lp20453
S'int32'
p20454
ag34
a((S'taskHandle'
p20455
(lp20456
S'TaskHandle'
p20457
aNtp20458
(S'channel'
p20459
(lp20460
S'char'
p20461
a(lp20462
I-1
aaNtp20463
tp20464
tp20465
sS'DAQmxGetCOUseOnlyOnBrdMem'
p20466
((lp20467
S'int32'
p20468
ag34
a((S'taskHandle'
p20469
(lp20470
S'TaskHandle'
p20471
aNtp20472
(S'channel'
p20473
(lp20474
S'char'
p20475
a(lp20476
I-1
aaNtp20477
(S'data'
p20478
(lp20479
S'bool32'
p20480
ag42
aNtp20481
tp20482
tp20483
sS'DAQmxSetAIAveragingWinSize'
p20484
((lp20485
S'int32'
p20486
ag34
a((S'taskHandle'
p20487
(lp20488
S'TaskHandle'
p20489
aNtp20490
(S'channel'
p20491
(lp20492
S'char'
p20493
a(lp20494
I-1
aaNtp20495
(S'data'
p20496
(lp20497
S'uInt32'
p20498
aNtp20499
tp20500
tp20501
sS'DAQmxSetAIRTDType'
p20502
((lp20503
S'int32'
p20504
ag34
a((S'taskHandle'
p20505
(lp20506
S'TaskHandle'
p20507
aNtp20508
(S'channel'
p20509
(lp20510
S'char'
p20511
a(lp20512
I-1
aaNtp20513
(S'data'
p20514
(lp20515
S'int32'
p20516
aNtp20517
tp20518
tp20519
sS'DAQmxGetAIBridgeShuntCalSelect'
p20520
((lp20521
S'int32'
p20522
ag34
a((S'taskHandle'
p20523
(lp20524
S'TaskHandle'
p20525
aNtp20526
(S'channel'
p20527
(lp20528
S'char'
p20529
a(lp20530
I-1
aaNtp20531
(S'data'
p20532
(lp20533
S'int32'
p20534
ag42
aNtp20535
tp20536
tp20537
sS'DAQmxGetCIThreshVoltage'
p20538
((lp20539
S'int32'
p20540
ag34
a((S'taskHandle'
p20541
(lp20542
S'TaskHandle'
p20543
aNtp20544
(S'channel'
p20545
(lp20546
S'char'
p20547
a(lp20548
I-1
aaNtp20549
(S'data'
p20550
(lp20551
S'float64'
p20552
ag42
aNtp20553
tp20554
tp20555
sS'DAQmxGetDigEdgeWatchdogExpirTrigSrc'
p20556
((lp20557
S'int32'
p20558
ag34
a((S'taskHandle'
p20559
(lp20560
S'TaskHandle'
p20561
aNtp20562
(S'data'
p20563
(lp20564
S'char'
p20565
ag42
aNtp20566
(S'bufferSize'
p20567
(lp20568
S'uInt32'
p20569
aNtp20570
tp20571
tp20572
sS'DAQmxGetCIPeriodLogicLvlBehavior'
p20573
((lp20574
S'int32'
p20575
ag34
a((S'taskHandle'
p20576
(lp20577
S'TaskHandle'
p20578
aNtp20579
(S'channel'
p20580
(lp20581
S'char'
p20582
a(lp20583
I-1
aaNtp20584
(S'data'
p20585
(lp20586
S'int32'
p20587
ag42
aNtp20588
tp20589
tp20590
sS'DAQmxGetHshkSampleInputDataWhen'
p20591
((lp20592
S'int32'
p20593
ag34
a((S'taskHandle'
p20594
(lp20595
S'TaskHandle'
p20596
aNtp20597
(S'data'
p20598
(lp20599
S'int32'
p20600
ag42
aNtp20601
tp20602
tp20603
sS'DAQmxGetInterlockedHshkTrigAssertedLvl'
p20604
((lp20605
S'int32'
p20606
ag34
a((S'taskHandle'
p20607
(lp20608
S'TaskHandle'
p20609
aNtp20610
(S'data'
p20611
(lp20612
S'int32'
p20613
ag42
aNtp20614
tp20615
tp20616
sS'DAQmxGetCIEncoderZInputDigSyncEnable'
p20617
((lp20618
S'int32'
p20619
ag34
a((S'taskHandle'
p20620
(lp20621
S'TaskHandle'
p20622
aNtp20623
(S'channel'
p20624
(lp20625
S'char'
p20626
a(lp20627
I-1
aaNtp20628
(S'data'
p20629
(lp20630
S'bool32'
p20631
ag42
aNtp20632
tp20633
tp20634
sS'DAQmxResetAnlgWinRefTrigTop'
p20635
((lp20636
S'int32'
p20637
ag34
a((S'taskHandle'
p20638
(lp20639
S'TaskHandle'
p20640
aNtp20641
tp20642
tp20643
sS'DAQmxGetAIExcitSrc'
p20644
((lp20645
S'int32'
p20646
ag34
a((S'taskHandle'
p20647
(lp20648
S'TaskHandle'
p20649
aNtp20650
(S'channel'
p20651
(lp20652
S'char'
p20653
a(lp20654
I-1
aaNtp20655
(S'data'
p20656
(lp20657
S'int32'
p20658
ag42
aNtp20659
tp20660
tp20661
sS'DAQmxSetAdvTrigType'
p20662
((lp20663
S'int32'
p20664
ag34
a((S'taskHandle'
p20665
(lp20666
S'TaskHandle'
p20667
aNtp20668
(S'data'
p20669
(lp20670
S'int32'
p20671
aNtp20672
tp20673
tp20674
sS'DAQmxResetAILeadWireResistance'
p20675
((lp20676
S'int32'
p20677
ag34
a((S'taskHandle'
p20678
(lp20679
S'TaskHandle'
p20680
aNtp20681
(S'channel'
p20682
(lp20683
S'char'
p20684
a(lp20685
I-1
aaNtp20686
tp20687
tp20688
sS'DAQmxResetCIPulseTimeDigFltrTimebaseSrc'
p20689
((lp20690
S'int32'
p20691
ag34
a((S'taskHandle'
p20692
(lp20693
S'TaskHandle'
p20694
aNtp20695
(S'channel'
p20696
(lp20697
S'char'
p20698
a(lp20699
I-1
aaNtp20700
tp20701
tp20702
sS'DAQmxResetDITristate'
p20703
((lp20704
S'int32'
p20705
ag34
a((S'taskHandle'
p20706
(lp20707
S'TaskHandle'
p20708
aNtp20709
(S'channel'
p20710
(lp20711
S'char'
p20712
a(lp20713
I-1
aaNtp20714
tp20715
tp20716
sS'DAQmxSetup9244Cal'
p20717
((lp20718
S'int32'
p20719
ag34
a((S'calHandle'
p20720
(lp20721
S'CalHandle'
p20722
aNtp20723
(S'channelNames'
p20724
(lp20725
S'char'
p20726
a(lp20727
I-1
aaNtp20728
(S'value'
p20729
(lp20730
S'float64'
p20731
aNtp20732
tp20733
tp20734
sS'DAQmxSetAODACRefConnToGnd'
p20735
((lp20736
S'int32'
p20737
ag34
a((S'taskHandle'
p20738
(lp20739
S'TaskHandle'
p20740
aNtp20741
(S'channel'
p20742
(lp20743
S'char'
p20744
a(lp20745
I-1
aaNtp20746
(S'data'
p20747
(lp20748
S'bool32'
p20749
aNtp20750
tp20751
tp20752
sS'DAQmxResetCIEncoderZIndexEnable'
p20753
((lp20754
S'int32'
p20755
ag34
a((S'taskHandle'
p20756
(lp20757
S'TaskHandle'
p20758
aNtp20759
(S'channel'
p20760
(lp20761
S'char'
p20762
a(lp20763
I-1
aaNtp20764
tp20765
tp20766
sS'DAQmxCfgDigPatternRefTrig'
p20767
((lp20768
S'int32'
p20769
ag34
a((S'taskHandle'
p20770
(lp20771
S'TaskHandle'
p20772
aNtp20773
(S'triggerSource'
p20774
(lp20775
S'char'
p20776
a(lp20777
I-1
aaNtp20778
(S'triggerPattern'
p20779
(lp20780
S'char'
p20781
a(lp20782
I-1
aaNtp20783
(S'triggerWhen'
p20784
(lp20785
S'int32'
p20786
aNtp20787
(S'pretriggerSamples'
p20788
(lp20789
S'uInt32'
p20790
aNtp20791
tp20792
tp20793
sS'DAQmxSetCOConstrainedGenMode'
p20794
((lp20795
S'int32'
p20796
ag34
a((S'taskHandle'
p20797
(lp20798
S'TaskHandle'
p20799
aNtp20800
(S'channel'
p20801
(lp20802
S'char'
p20803
a(lp20804
I-1
aaNtp20805
(S'data'
p20806
(lp20807
S'int32'
p20808
aNtp20809
tp20810
tp20811
sS'DAQmxResetWriteSleepTime'
p20812
((lp20813
S'int32'
p20814
ag34
a((S'taskHandle'
p20815
(lp20816
S'TaskHandle'
p20817
aNtp20818
tp20819
tp20820
sS'DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc'
p20821
((lp20822
S'int32'
p20823
ag34
a((S'taskHandle'
p20824
(lp20825
S'TaskHandle'
p20826
aNtp20827
(S'channel'
p20828
(lp20829
S'char'
p20830
a(lp20831
I-1
aaNtp20832
(S'data'
p20833
(lp20834
S'char'
p20835
ag42
aNtp20836
tp20837
tp20838
sS'DAQmxGetAnalogPowerUpStatesWithOutputType'
p20839
((lp20840
S'int32'
p20841
ag3995
a((S'channelNames'
p20842
(lp20843
S'char'
p20844
a(lp20845
I-1
aaNtp20846
(S'stateArray'
p20847
(lp20848
S'float64'
p20849
a(lp20850
I-1
aaNtp20851
(S'channelTypeArray'
p20852
(lp20853
S'int32'
p20854
a(lp20855
I-1
aaNtp20856
(S'arraySizePtr'
p20857
(lp20858
S'uInt32'
p20859
ag42
aNtp20860
tp20861
tp20862
sS'DAQmxResetDIAcquireOn'
p20863
((lp20864
S'int32'
p20865
ag34
a((S'taskHandle'
p20866
(lp20867
S'TaskHandle'
p20868
aNtp20869
(S'channel'
p20870
(lp20871
S'char'
p20872
a(lp20873
I-1
aaNtp20874
tp20875
tp20876
sS'DAQmxResetAnlgEdgeStartTrigSlope'
p20877
((lp20878
S'int32'
p20879
ag34
a((S'taskHandle'
p20880
(lp20881
S'TaskHandle'
p20882
aNtp20883
tp20884
tp20885
sS'DAQmxSetDigPatternPauseTrigWhen'
p20886
((lp20887
S'int32'
p20888
ag34
a((S'taskHandle'
p20889
(lp20890
S'TaskHandle'
p20891
aNtp20892
(S'data'
p20893
(lp20894
S'int32'
p20895
aNtp20896
tp20897
tp20898
sS'DAQmxSetAIResistanceUnits'
p20899
((lp20900
S'int32'
p20901
ag34
a((S'taskHandle'
p20902
(lp20903
S'TaskHandle'
p20904
aNtp20905
(S'channel'
p20906
(lp20907
S'char'
p20908
a(lp20909
I-1
aaNtp20910
(S'data'
p20911
(lp20912
S'int32'
p20913
aNtp20914
tp20915
tp20916
sS'DAQmxGetAIDataXferMech'
p20917
((lp20918
S'int32'
p20919
ag34
a((S'taskHandle'
p20920
(lp20921
S'TaskHandle'
p20922
aNtp20923
(S'channel'
p20924
(lp20925
S'char'
p20926
a(lp20927
I-1
aaNtp20928
(S'data'
p20929
(lp20930
S'int32'
p20931
ag42
aNtp20932
tp20933
tp20934
sS'DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc'
p20935
((lp20936
S'int32'
p20937
ag34
a((S'taskHandle'
p20938
(lp20939
S'TaskHandle'
p20940
aNtp20941
tp20942
tp20943
sS'DAQmxGetAICurrentShuntLoc'
p20944
((lp20945
S'int32'
p20946
ag34
a((S'taskHandle'
p20947
(lp20948
S'TaskHandle'
p20949
aNtp20950
(S'channel'
p20951
(lp20952
S'char'
p20953
a(lp20954
I-1
aaNtp20955
(S'data'
p20956
(lp20957
S'int32'
p20958
ag42
aNtp20959
tp20960
tp20961
sS'DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p20962
((lp20963
S'int32'
p20964
ag34
a((S'taskHandle'
p20965
(lp20966
S'TaskHandle'
p20967
aNtp20968
(S'channel'
p20969
(lp20970
S'char'
p20971
a(lp20972
I-1
aaNtp20973
(S'data'
p20974
(lp20975
S'float64'
p20976
ag42
aNtp20977
tp20978
tp20979
sS'DAQmxResetAILVDTSensitivity'
p20980
((lp20981
S'int32'
p20982
ag34
a((S'taskHandle'
p20983
(lp20984
S'TaskHandle'
p20985
aNtp20986
(S'channel'
p20987
(lp20988
S'char'
p20989
a(lp20990
I-1
aaNtp20991
tp20992
tp20993
sS'DAQmxSetExportedSampClkTimebaseOutputTerm'
p20994
((lp20995
S'int32'
p20996
ag34
a((S'taskHandle'
p20997
(lp20998
S'TaskHandle'
p20999
aNtp21000
(S'data'
p21001
(lp21002
S'char'
p21003
ag42
aNtp21004
tp21005
tp21006
sS'DAQmxGetAIDigFltrNotchCenterFreq'
p21007
((lp21008
S'int32'
p21009
ag34
a((S'taskHandle'
p21010
(lp21011
S'TaskHandle'
p21012
aNtp21013
(S'channel'
p21014
(lp21015
S'char'
p21016
a(lp21017
I-1
aaNtp21018
(S'data'
p21019
(lp21020
S'float64'
p21021
ag42
aNtp21022
tp21023
tp21024
sS'DAQmxGetDevBusType'
p21025
((lp21026
S'int32'
p21027
ag34
a((S'device'
p21028
(lp21029
S'char'
p21030
a(lp21031
I-1
aaNtp21032
(S'data'
p21033
(lp21034
S'int32'
p21035
ag42
aNtp21036
tp21037
tp21038
sS'DAQmxGetDigPatternPauseTrigPattern'
p21039
((lp21040
S'int32'
p21041
ag34
a((S'taskHandle'
p21042
(lp21043
S'TaskHandle'
p21044
aNtp21045
(S'data'
p21046
(lp21047
S'char'
p21048
ag42
aNtp21049
(S'bufferSize'
p21050
(lp21051
S'uInt32'
p21052
aNtp21053
tp21054
tp21055
sS'DAQmxGetAIThrmcplScaleType'
p21056
((lp21057
S'int32'
p21058
ag34
a((S'taskHandle'
p21059
(lp21060
S'TaskHandle'
p21061
aNtp21062
(S'channel'
p21063
(lp21064
S'char'
p21065
a(lp21066
I-1
aaNtp21067
(S'data'
p21068
(lp21069
S'int32'
p21070
ag42
aNtp21071
tp21072
tp21073
sS'DAQmxSetExportedPauseTrigOutputTerm'
p21074
((lp21075
S'int32'
p21076
ag34
a((S'taskHandle'
p21077
(lp21078
S'TaskHandle'
p21079
aNtp21080
(S'data'
p21081
(lp21082
S'char'
p21083
ag42
aNtp21084
tp21085
tp21086
sS'DAQmxSetReadSleepTime'
p21087
((lp21088
S'int32'
p21089
ag34
a((S'taskHandle'
p21090
(lp21091
S'TaskHandle'
p21092
aNtp21093
(S'data'
p21094
(lp21095
S'float64'
p21096
aNtp21097
tp21098
tp21099
sS'DAQmxResetExportedHshkEventInterlockedAssertedLvl'
p21100
((lp21101
S'int32'
p21102
ag34
a((S'taskHandle'
p21103
(lp21104
S'TaskHandle'
p21105
aNtp21106
tp21107
tp21108
sS'DAQmxAdjust9208GainCal'
p21109
((lp21110
S'int32'
p21111
ag34
a((S'calHandle'
p21112
(lp21113
S'CalHandle'
p21114
aNtp21115
(S'channelNames'
p21116
(lp21117
S'char'
p21118
a(lp21119
I-1
aaNtp21120
(S'value'
p21121
(lp21122
S'float64'
p21123
aNtp21124
tp21125
tp21126
sS'DAQmxAdjust9203GainCal'
p21127
((lp21128
S'int32'
p21129
ag34
a((S'calHandle'
p21130
(lp21131
S'CalHandle'
p21132
aNtp21133
(S'channelNames'
p21134
(lp21135
S'char'
p21136
a(lp21137
I-1
aaNtp21138
(S'rangeMin'
p21139
(lp21140
S'float64'
p21141
aNtp21142
(S'rangeMax'
p21143
(lp21144
S'float64'
p21145
aNtp21146
(S'value'
p21147
(lp21148
S'float64'
p21149
aNtp21150
tp21151
tp21152
sS'DAQmxGetCIAngEncoderUnits'
p21153
((lp21154
S'int32'
p21155
ag34
a((S'taskHandle'
p21156
(lp21157
S'TaskHandle'
p21158
aNtp21159
(S'channel'
p21160
(lp21161
S'char'
p21162
a(lp21163
I-1
aaNtp21164
(S'data'
p21165
(lp21166
S'int32'
p21167
ag42
aNtp21168
tp21169
tp21170
sS'DAQmxGetRefTrigType'
p21171
((lp21172
S'int32'
p21173
ag34
a((S'taskHandle'
p21174
(lp21175
S'TaskHandle'
p21176
aNtp21177
(S'data'
p21178
(lp21179
S'int32'
p21180
ag42
aNtp21181
tp21182
tp21183
sS'DAQmxGetSwitchDevSettled'
p21184
((lp21185
S'int32'
p21186
ag34
a((S'deviceName'
p21187
(lp21188
S'char'
p21189
a(lp21190
I-1
aaNtp21191
(S'data'
p21192
(lp21193
S'bool32'
p21194
ag42
aNtp21195
tp21196
tp21197
sS'DAQmxResetAITorqueUnits'
p21198
((lp21199
S'int32'
p21200
ag34
a((S'taskHandle'
p21201
(lp21202
S'TaskHandle'
p21203
aNtp21204
(S'channel'
p21205
(lp21206
S'char'
p21207
a(lp21208
I-1
aaNtp21209
tp21210
tp21211
sS'DAQmxSetCIPulseWidthTerm'
p21212
((lp21213
S'int32'
p21214
ag34
a((S'taskHandle'
p21215
(lp21216
S'TaskHandle'
p21217
aNtp21218
(S'channel'
p21219
(lp21220
S'char'
p21221
a(lp21222
I-1
aaNtp21223
(S'data'
p21224
(lp21225
S'char'
p21226
ag42
aNtp21227
tp21228
tp21229
sS'DAQmxResetAISoundPressureUnits'
p21230
((lp21231
S'int32'
p21232
ag34
a((S'taskHandle'
p21233
(lp21234
S'TaskHandle'
p21235
aNtp21236
(S'channel'
p21237
(lp21238
S'char'
p21239
a(lp21240
I-1
aaNtp21241
tp21242
tp21243
sS'DAQmxSetAILowpassCutoffFreq'
p21244
((lp21245
S'int32'
p21246
ag34
a((S'taskHandle'
p21247
(lp21248
S'TaskHandle'
p21249
aNtp21250
(S'channel'
p21251
(lp21252
S'char'
p21253
a(lp21254
I-1
aaNtp21255
(S'data'
p21256
(lp21257
S'float64'
p21258
aNtp21259
tp21260
tp21261
sS'DAQmxResetAIDataXferReqCond'
p21262
((lp21263
S'int32'
p21264
ag34
a((S'taskHandle'
p21265
(lp21266
S'TaskHandle'
p21267
aNtp21268
(S'channel'
p21269
(lp21270
S'char'
p21271
a(lp21272
I-1
aaNtp21273
tp21274
tp21275
sS'DAQmxGetWriteOpenCurrentLoopChansExist'
p21276
((lp21277
S'int32'
p21278
ag34
a((S'taskHandle'
p21279
(lp21280
S'TaskHandle'
p21281
aNtp21282
(S'data'
p21283
(lp21284
S'bool32'
p21285
ag42
aNtp21286
tp21287
tp21288
sS'DAQmxGetInterlockedHshkTrigSrc'
p21289
((lp21290
S'int32'
p21291
ag34
a((S'taskHandle'
p21292
(lp21293
S'TaskHandle'
p21294
aNtp21295
(S'data'
p21296
(lp21297
S'char'
p21298
ag42
aNtp21299
(S'bufferSize'
p21300
(lp21301
S'uInt32'
p21302
aNtp21303
tp21304
tp21305
sS'DAQmxGetExportedSampClkTimebaseOutputTerm'
p21306
((lp21307
S'int32'
p21308
ag34
a((S'taskHandle'
p21309
(lp21310
S'TaskHandle'
p21311
aNtp21312
(S'data'
p21313
(lp21314
S'char'
p21315
ag42
aNtp21316
(S'bufferSize'
p21317
(lp21318
S'uInt32'
p21319
aNtp21320
tp21321
tp21322
sS'DAQmxSetPauseTrigType'
p21323
((lp21324
S'int32'
p21325
ag34
a((S'taskHandle'
p21326
(lp21327
S'TaskHandle'
p21328
aNtp21329
(S'data'
p21330
(lp21331
S'int32'
p21332
aNtp21333
tp21334
tp21335
sS'DAQmxGetCIGPSSyncSrc'
p21336
((lp21337
S'int32'
p21338
ag34
a((S'taskHandle'
p21339
(lp21340
S'TaskHandle'
p21341
aNtp21342
(S'channel'
p21343
(lp21344
S'char'
p21345
a(lp21346
I-1
aaNtp21347
(S'data'
p21348
(lp21349
S'char'
p21350
ag42
aNtp21351
(S'bufferSize'
p21352
(lp21353
S'uInt32'
p21354
aNtp21355
tp21356
tp21357
sS'DAQmxSetBufOutputBufSize'
p21358
((lp21359
S'int32'
p21360
ag34
a((S'taskHandle'
p21361
(lp21362
S'TaskHandle'
p21363
aNtp21364
(S'data'
p21365
(lp21366
S'uInt32'
p21367
aNtp21368
tp21369
tp21370
sS'DAQmxGetSwitchChanMaxDCCarryPwr'
p21371
((lp21372
S'int32'
p21373
ag34
a((S'switchChannelName'
p21374
(lp21375
S'char'
p21376
a(lp21377
I-1
aaNtp21378
(S'data'
p21379
(lp21380
S'float64'
p21381
ag42
aNtp21382
tp21383
tp21384
sS'DAQmxAdjust1520Cal'
p21385
((lp21386
S'int32'
p21387
ag34
a((S'calHandle'
p21388
(lp21389
S'CalHandle'
p21390
aNtp21391
(S'refVoltage'
p21392
(lp21393
S'float64'
p21394
aNtp21395
(S'measOutput'
p21396
(lp21397
S'float64'
p21398
aNtp21399
tp21400
tp21401
sS'DAQmxSetAnlgWinPauseTrigDigFltrMinPulseWidth'
p21402
((lp21403
S'int32'
p21404
ag34
a((S'taskHandle'
p21405
(lp21406
S'TaskHandle'
p21407
aNtp21408
(S'data'
p21409
(lp21410
S'float64'
p21411
aNtp21412
tp21413
tp21414
sS'DAQmxSetup1104Cal'
p21415
((lp21416
S'int32'
p21417
ag34
a((S'calHandle'
p21418
(lp21419
S'CalHandle'
p21420
aNtp21421
(S'channelName'
p21422
(lp21423
S'char'
p21424
a(lp21425
I-1
aaNtp21426
tp21427
tp21428
sS'DAQmxResetAIDCOffset'
p21429
((lp21430
S'int32'
p21431
ag34
a((S'taskHandle'
p21432
(lp21433
S'TaskHandle'
p21434
aNtp21435
(S'channel'
p21436
(lp21437
S'char'
p21438
a(lp21439
I-1
aaNtp21440
tp21441
tp21442
sS'DAQmxResetWatchdogAttribute'
p21443
((lp21444
S'int32'
p21445
ag34
a((S'taskHandle'
p21446
(lp21447
S'TaskHandle'
p21448
aNtp21449
(S'lines'
p21450
(lp21451
S'char'
p21452
a(lp21453
I-1
aaNtp21454
(S'attribute'
p21455
(lp21456
S'int32'
p21457
aNtp21458
tp21459
tp21460
sS'DAQmxResetCIPulseFreqUnits'
p21461
((lp21462
S'int32'
p21463
ag34
a((S'taskHandle'
p21464
(lp21465
S'TaskHandle'
p21466
aNtp21467
(S'channel'
p21468
(lp21469
S'char'
p21470
a(lp21471
I-1
aaNtp21472
tp21473
tp21474
sS'DAQmxSetCIDutyCycleDigFltrMinPulseWidth'
p21475
((lp21476
S'int32'
p21477
ag34
a((S'taskHandle'
p21478
(lp21479
S'TaskHandle'
p21480
aNtp21481
(S'channel'
p21482
(lp21483
S'char'
p21484
a(lp21485
I-1
aaNtp21486
(S'data'
p21487
(lp21488
S'float64'
p21489
aNtp21490
tp21491
tp21492
sS'DAQmxResetCIEncoderZInputLogicLvlBehavior'
p21493
((lp21494
S'int32'
p21495
ag34
a((S'taskHandle'
p21496
(lp21497
S'TaskHandle'
p21498
aNtp21499
(S'channel'
p21500
(lp21501
S'char'
p21502
a(lp21503
I-1
aaNtp21504
tp21505
tp21506
sS'DAQmxSetAIDitherEnable'
p21507
((lp21508
S'int32'
p21509
ag34
a((S'taskHandle'
p21510
(lp21511
S'TaskHandle'
p21512
aNtp21513
(S'channel'
p21514
(lp21515
S'char'
p21516
a(lp21517
I-1
aaNtp21518
(S'data'
p21519
(lp21520
S'bool32'
p21521
aNtp21522
tp21523
tp21524
sS'DAQmxSetCIPulseFreqTermCfg'
p21525
((lp21526
S'int32'
p21527
ag34
a((S'taskHandle'
p21528
(lp21529
S'TaskHandle'
p21530
aNtp21531
(S'channel'
p21532
(lp21533
S'char'
p21534
a(lp21535
I-1
aaNtp21536
(S'data'
p21537
(lp21538
S'int32'
p21539
aNtp21540
tp21541
tp21542
sS'DAQmxResetAOFuncGenFMDeviation'
p21543
((lp21544
S'int32'
p21545
ag34
a((S'taskHandle'
p21546
(lp21547
S'TaskHandle'
p21548
aNtp21549
(S'channel'
p21550
(lp21551
S'char'
p21552
a(lp21553
I-1
aaNtp21554
tp21555
tp21556
sS'DAQmxCreateMapScale'
p21557
((lp21558
S'int32'
p21559
ag34
a((S'name'
p21560
(lp21561
S'char'
p21562
a(lp21563
I-1
aaNtp21564
(S'prescaledMin'
p21565
(lp21566
S'float64'
p21567
aNtp21568
(S'prescaledMax'
p21569
(lp21570
S'float64'
p21571
aNtp21572
(S'scaledMin'
p21573
(lp21574
S'float64'
p21575
aNtp21576
(S'scaledMax'
p21577
(lp21578
S'float64'
p21579
aNtp21580
(S'preScaledUnits'
p21581
(lp21582
S'int32'
p21583
aNtp21584
(S'scaledUnits'
p21585
(lp21586
S'char'
p21587
a(lp21588
I-1
aaNtp21589
tp21590
tp21591
sS'DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc'
p21592
((lp21593
S'int32'
p21594
ag34
a((S'taskHandle'
p21595
(lp21596
S'TaskHandle'
p21597
aNtp21598
(S'channel'
p21599
(lp21600
S'char'
p21601
a(lp21602
I-1
aaNtp21603
(S'data'
p21604
(lp21605
S'char'
p21606
ag42
aNtp21607
(S'bufferSize'
p21608
(lp21609
S'uInt32'
p21610
aNtp21611
tp21612
tp21613
sS'DAQmxAdjust1503Cal'
p21614
((lp21615
S'int32'
p21616
ag34
a((S'calHandle'
p21617
(lp21618
S'CalHandle'
p21619
aNtp21620
(S'refVoltage'
p21621
(lp21622
S'float64'
p21623
aNtp21624
(S'measOutput'
p21625
(lp21626
S'float64'
p21627
aNtp21628
tp21629
tp21630
sS'DAQmxGetSampClkActiveEdge'
p21631
((lp21632
S'int32'
p21633
ag34
a((S'taskHandle'
p21634
(lp21635
S'TaskHandle'
p21636
aNtp21637
(S'data'
p21638
(lp21639
S'int32'
p21640
ag42
aNtp21641
tp21642
tp21643
sS'DAQmxResetCIPeriodUnits'
p21644
((lp21645
S'int32'
p21646
ag34
a((S'taskHandle'
p21647
(lp21648
S'TaskHandle'
p21649
aNtp21650
(S'channel'
p21651
(lp21652
S'char'
p21653
a(lp21654
I-1
aaNtp21655
tp21656
tp21657
sS'DAQmxGetAIMin'
p21658
((lp21659
S'int32'
p21660
ag34
a((S'taskHandle'
p21661
(lp21662
S'TaskHandle'
p21663
aNtp21664
(S'channel'
p21665
(lp21666
S'char'
p21667
a(lp21668
I-1
aaNtp21669
(S'data'
p21670
(lp21671
S'float64'
p21672
ag42
aNtp21673
tp21674
tp21675
sS'DAQmxSetAnlgEdgeRefTrigHyst'
p21676
((lp21677
S'int32'
p21678
ag34
a((S'taskHandle'
p21679
(lp21680
S'TaskHandle'
p21681
aNtp21682
(S'data'
p21683
(lp21684
S'float64'
p21685
aNtp21686
tp21687
tp21688
sS'DAQmxResetCIPeriodDiv'
p21689
((lp21690
S'int32'
p21691
ag34
a((S'taskHandle'
p21692
(lp21693
S'TaskHandle'
p21694
aNtp21695
(S'channel'
p21696
(lp21697
S'char'
p21698
a(lp21699
I-1
aaNtp21700
tp21701
tp21702
sS'DAQmxPerformBridgeOffsetNullingCalEx'
p21703
((lp21704
S'int32'
p21705
ag34
a((S'taskHandle'
p21706
(lp21707
S'TaskHandle'
p21708
aNtp21709
(S'channel'
p21710
(lp21711
S'char'
p21712
a(lp21713
I-1
aaNtp21714
(S'skipUnsupportedChannels'
p21715
(lp21716
S'bool32'
p21717
aNtp21718
tp21719
tp21720
sS'DAQmxResetSwitchScanRepeatMode'
p21721
((lp21722
S'int32'
p21723
ag34
a((S'taskHandle'
p21724
(lp21725
S'TaskHandle'
p21726
aNtp21727
tp21728
tp21729
sS'DAQmxSetCITwoEdgeSepSecondDigFltrEnable'
p21730
((lp21731
S'int32'
p21732
ag34
a((S'taskHandle'
p21733
(lp21734
S'TaskHandle'
p21735
aNtp21736
(S'channel'
p21737
(lp21738
S'char'
p21739
a(lp21740
I-1
aaNtp21741
(S'data'
p21742
(lp21743
S'bool32'
p21744
aNtp21745
tp21746
tp21747
sS'DAQmxGetCIDataXferReqCond'
p21748
((lp21749
S'int32'
p21750
ag34
a((S'taskHandle'
p21751
(lp21752
S'TaskHandle'
p21753
aNtp21754
(S'channel'
p21755
(lp21756
S'char'
p21757
a(lp21758
I-1
aaNtp21759
(S'data'
p21760
(lp21761
S'int32'
p21762
ag42
aNtp21763
tp21764
tp21765
sS'DAQmxResetAIBridgeInitialRatio'
p21766
((lp21767
S'int32'
p21768
ag34
a((S'taskHandle'
p21769
(lp21770
S'TaskHandle'
p21771
aNtp21772
(S'channel'
p21773
(lp21774
S'char'
p21775
a(lp21776
I-1
aaNtp21777
tp21778
tp21779
sS'DAQmxGetAIConvDigFltrTimebaseSrc'
p21780
((lp21781
S'int32'
p21782
ag34
a((S'taskHandle'
p21783
(lp21784
S'TaskHandle'
p21785
aNtp21786
(S'data'
p21787
(lp21788
S'char'
p21789
ag42
aNtp21790
(S'bufferSize'
p21791
(lp21792
S'uInt32'
p21793
aNtp21794
tp21795
tp21796
sS'DAQmxAdjust9247GainCal'
p21797
((lp21798
S'int32'
p21799
ag34
a((S'calHandle'
p21800
(lp21801
S'CalHandle'
p21802
aNtp21803
(S'channelNames'
p21804
(lp21805
S'char'
p21806
a(lp21807
I-1
aaNtp21808
(S'value'
p21809
(lp21810
S'float64'
p21811
aNtp21812
tp21813
tp21814
sS'DAQmxGetAIConvSrc'
p21815
((lp21816
S'int32'
p21817
ag34
a((S'taskHandle'
p21818
(lp21819
S'TaskHandle'
p21820
aNtp21821
(S'data'
p21822
(lp21823
S'char'
p21824
ag42
aNtp21825
(S'bufferSize'
p21826
(lp21827
S'uInt32'
p21828
aNtp21829
tp21830
tp21831
sS'DAQmxResetRefTrigAutoTrigEnable'
p21832
((lp21833
S'int32'
p21834
ag34
a((S'taskHandle'
p21835
(lp21836
S'TaskHandle'
p21837
aNtp21838
tp21839
tp21840
sS'DAQmxGetAIVoltageACRMSUnits'
p21841
((lp21842
S'int32'
p21843
ag34
a((S'taskHandle'
p21844
(lp21845
S'TaskHandle'
p21846
aNtp21847
(S'channel'
p21848
(lp21849
S'char'
p21850
a(lp21851
I-1
aaNtp21852
(S'data'
p21853
(lp21854
S'int32'
p21855
ag42
aNtp21856
tp21857
tp21858
sS'DAQmxSetCIMax'
p21859
((lp21860
S'int32'
p21861
ag34
a((S'taskHandle'
p21862
(lp21863
S'TaskHandle'
p21864
aNtp21865
(S'channel'
p21866
(lp21867
S'char'
p21868
a(lp21869
I-1
aaNtp21870
(S'data'
p21871
(lp21872
S'float64'
p21873
aNtp21874
tp21875
tp21876
sS'DAQmxResetAIMemMapEnable'
p21877
((lp21878
S'int32'
p21879
ag34
a((S'taskHandle'
p21880
(lp21881
S'TaskHandle'
p21882
aNtp21883
(S'channel'
p21884
(lp21885
S'char'
p21886
a(lp21887
I-1
aaNtp21888
tp21889
tp21890
sS'DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p21891
((lp21892
S'int32'
p21893
ag34
a((S'taskHandle'
p21894
(lp21895
S'TaskHandle'
p21896
aNtp21897
(S'channel'
p21898
(lp21899
S'char'
p21900
a(lp21901
I-1
aaNtp21902
(S'data'
p21903
(lp21904
S'float64'
p21905
aNtp21906
tp21907
tp21908
sS'DAQmxSetAnlgLvlPauseTrigSrc'
p21909
((lp21910
S'int32'
p21911
ag34
a((S'taskHandle'
p21912
(lp21913
S'TaskHandle'
p21914
aNtp21915
(S'data'
p21916
(lp21917
S'char'
p21918
ag42
aNtp21919
tp21920
tp21921
sS'DAQmxResetDigEdgeArmStartTrigEdge'
p21922
((lp21923
S'int32'
p21924
ag34
a((S'taskHandle'
p21925
(lp21926
S'TaskHandle'
p21927
aNtp21928
tp21929
tp21930
sS'DAQmxSetCIPulseWidthDigFltrMinPulseWidth'
p21931
((lp21932
S'int32'
p21933
ag34
a((S'taskHandle'
p21934
(lp21935
S'TaskHandle'
p21936
aNtp21937
(S'channel'
p21938
(lp21939
S'char'
p21940
a(lp21941
I-1
aaNtp21942
(S'data'
p21943
(lp21944
S'float64'
p21945
aNtp21946
tp21947
tp21948
sS'DAQmxGetDelayFromSampClkDelayUnitsEx'
p21949
((lp21950
S'int32'
p21951
ag34
a((S'taskHandle'
p21952
(lp21953
S'TaskHandle'
p21954
aNtp21955
(S'deviceNames'
p21956
(lp21957
S'char'
p21958
a(lp21959
I-1
aaNtp21960
(S'data'
p21961
(lp21962
S'int32'
p21963
ag42
aNtp21964
tp21965
tp21966
sS'DAQmxSetCISemiPeriodUnits'
p21967
((lp21968
S'int32'
p21969
ag34
a((S'taskHandle'
p21970
(lp21971
S'TaskHandle'
p21972
aNtp21973
(S'channel'
p21974
(lp21975
S'char'
p21976
a(lp21977
I-1
aaNtp21978
(S'data'
p21979
(lp21980
S'int32'
p21981
aNtp21982
tp21983
tp21984
sS'DAQmxResetAISoundPressureMaxSoundPressureLvl'
p21985
((lp21986
S'int32'
p21987
ag34
a((S'taskHandle'
p21988
(lp21989
S'TaskHandle'
p21990
aNtp21991
(S'channel'
p21992
(lp21993
S'char'
p21994
a(lp21995
I-1
aaNtp21996
tp21997
tp21998
sS'DAQmxGetAIADCTimingMode'
p21999
((lp22000
S'int32'
p22001
ag34
a((S'taskHandle'
p22002
(lp22003
S'TaskHandle'
p22004
aNtp22005
(S'channel'
p22006
(lp22007
S'char'
p22008
a(lp22009
I-1
aaNtp22010
(S'data'
p22011
(lp22012
S'int32'
p22013
ag42
aNtp22014
tp22015
tp22016
sS'DAQmxSetAIACExcitWireMode'
p22017
((lp22018
S'int32'
p22019
ag34
a((S'taskHandle'
p22020
(lp22021
S'TaskHandle'
p22022
aNtp22023
(S'channel'
p22024
(lp22025
S'char'
p22026
a(lp22027
I-1
aaNtp22028
(S'data'
p22029
(lp22030
S'int32'
p22031
aNtp22032
tp22033
tp22034
sS'DAQmxGetExportedRdyForStartEventLvlActiveLvl'
p22035
((lp22036
S'int32'
p22037
ag34
a((S'taskHandle'
p22038
(lp22039
S'TaskHandle'
p22040
aNtp22041
(S'data'
p22042
(lp22043
S'int32'
p22044
ag42
aNtp22045
tp22046
tp22047
sS'DAQmxResetCOConstrainedGenMode'
p22048
((lp22049
S'int32'
p22050
ag34
a((S'taskHandle'
p22051
(lp22052
S'TaskHandle'
p22053
aNtp22054
(S'channel'
p22055
(lp22056
S'char'
p22057
a(lp22058
I-1
aaNtp22059
tp22060
tp22061
sS'DAQmxAdjust1124Cal'
p22062
((lp22063
S'int32'
p22064
ag34
a((S'calHandle'
p22065
(lp22066
S'CalHandle'
p22067
aNtp22068
(S'measOutput'
p22069
(lp22070
S'float64'
p22071
aNtp22072
tp22073
tp22074
sS'DAQmxGetCIEncoderAInputTerm'
p22075
((lp22076
S'int32'
p22077
ag34
a((S'taskHandle'
p22078
(lp22079
S'TaskHandle'
p22080
aNtp22081
(S'channel'
p22082
(lp22083
S'char'
p22084
a(lp22085
I-1
aaNtp22086
(S'data'
p22087
(lp22088
S'char'
p22089
ag42
aNtp22090
(S'bufferSize'
p22091
(lp22092
S'uInt32'
p22093
aNtp22094
tp22095
tp22096
sS'DAQmxGetAnlgEdgeRefTrigCoupling'
p22097
((lp22098
S'int32'
p22099
ag34
a((S'taskHandle'
p22100
(lp22101
S'TaskHandle'
p22102
aNtp22103
(S'data'
p22104
(lp22105
S'int32'
p22106
ag42
aNtp22107
tp22108
tp22109
sS'DAQmxResetAILVDTUnits'
p22110
((lp22111
S'int32'
p22112
ag34
a((S'taskHandle'
p22113
(lp22114
S'TaskHandle'
p22115
aNtp22116
(S'channel'
p22117
(lp22118
S'char'
p22119
a(lp22120
I-1
aaNtp22121
tp22122
tp22123
sS'DAQmxResetCIEncoderBInputDigFltrEnable'
p22124
((lp22125
S'int32'
p22126
ag34
a((S'taskHandle'
p22127
(lp22128
S'TaskHandle'
p22129
aNtp22130
(S'channel'
p22131
(lp22132
S'char'
p22133
a(lp22134
I-1
aaNtp22135
tp22136
tp22137
sS'DAQmxSetCIPulseFreqLogicLvlBehavior'
p22138
((lp22139
S'int32'
p22140
ag34
a((S'taskHandle'
p22141
(lp22142
S'TaskHandle'
p22143
aNtp22144
(S'channel'
p22145
(lp22146
S'char'
p22147
a(lp22148
I-1
aaNtp22149
(S'data'
p22150
(lp22151
S'int32'
p22152
aNtp22153
tp22154
tp22155
sS'DAQmxGetScaleMapScaledMin'
p22156
((lp22157
S'int32'
p22158
ag34
a((S'scaleName'
p22159
(lp22160
S'char'
p22161
a(lp22162
I-1
aaNtp22163
(S'data'
p22164
(lp22165
S'float64'
p22166
ag42
aNtp22167
tp22168
tp22169
sS'DAQmxGetWriteAccessoryInsertionOrRemovalDetected'
p22170
((lp22171
S'int32'
p22172
ag34
a((S'taskHandle'
p22173
(lp22174
S'TaskHandle'
p22175
aNtp22176
(S'data'
p22177
(lp22178
S'bool32'
p22179
ag42
aNtp22180
tp22181
tp22182
sS'DAQmxAdjust9207GainCal'
p22183
((lp22184
S'int32'
p22185
ag34
a((S'calHandle'
p22186
(lp22187
S'CalHandle'
p22188
aNtp22189
(S'channelNames'
p22190
(lp22191
S'char'
p22192
a(lp22193
I-1
aaNtp22194
(S'value'
p22195
(lp22196
S'float64'
p22197
aNtp22198
tp22199
tp22200
sS'DAQmxSetWriteSleepTime'
p22201
((lp22202
S'int32'
p22203
ag34
a((S'taskHandle'
p22204
(lp22205
S'TaskHandle'
p22206
aNtp22207
(S'data'
p22208
(lp22209
S'float64'
p22210
aNtp22211
tp22212
tp22213
sS'DAQmxResetCIPeriodEnableAveraging'
p22214
((lp22215
S'int32'
p22216
ag34
a((S'taskHandle'
p22217
(lp22218
S'TaskHandle'
p22219
aNtp22220
(S'channel'
p22221
(lp22222
S'char'
p22223
a(lp22224
I-1
aaNtp22225
tp22226
tp22227
sS'DAQmxSetAnlgEdgeRefTrigDigFltrMinPulseWidth'
p22228
((lp22229
S'int32'
p22230
ag34
a((S'taskHandle'
p22231
(lp22232
S'TaskHandle'
p22233
aNtp22234
(S'data'
p22235
(lp22236
S'float64'
p22237
aNtp22238
tp22239
tp22240
sS'DAQmxGetAIIsTEDS'
p22241
((lp22242
S'int32'
p22243
ag34
a((S'taskHandle'
p22244
(lp22245
S'TaskHandle'
p22246
aNtp22247
(S'channel'
p22248
(lp22249
S'char'
p22250
a(lp22251
I-1
aaNtp22252
(S'data'
p22253
(lp22254
S'bool32'
p22255
ag42
aNtp22256
tp22257
tp22258
sS'DAQmxGetAOIdleOutputBehavior'
p22259
((lp22260
S'int32'
p22261
ag34
a((S'taskHandle'
p22262
(lp22263
S'TaskHandle'
p22264
aNtp22265
(S'channel'
p22266
(lp22267
S'char'
p22268
a(lp22269
I-1
aaNtp22270
(S'data'
p22271
(lp22272
S'int32'
p22273
ag42
aNtp22274
tp22275
tp22276
sS'DAQmxSetAOResolutionUnits'
p22277
((lp22278
S'int32'
p22279
ag34
a((S'taskHandle'
p22280
(lp22281
S'TaskHandle'
p22282
aNtp22283
(S'channel'
p22284
(lp22285
S'char'
p22286
a(lp22287
I-1
aaNtp22288
(S'data'
p22289
(lp22290
S'int32'
p22291
aNtp22292
tp22293
tp22294
sS'DAQmxGetAIRVDTUnits'
p22295
((lp22296
S'int32'
p22297
ag34
a((S'taskHandle'
p22298
(lp22299
S'TaskHandle'
p22300
aNtp22301
(S'channel'
p22302
(lp22303
S'char'
p22304
a(lp22305
I-1
aaNtp22306
(S'data'
p22307
(lp22308
S'int32'
p22309
ag42
aNtp22310
tp22311
tp22312
sS'DAQmxSetCIPulseTimeDigFltrTimebaseRate'
p22313
((lp22314
S'int32'
p22315
ag34
a((S'taskHandle'
p22316
(lp22317
S'TaskHandle'
p22318
aNtp22319
(S'channel'
p22320
(lp22321
S'char'
p22322
a(lp22323
I-1
aaNtp22324
(S'data'
p22325
(lp22326
S'float64'
p22327
aNtp22328
tp22329
tp22330
sS'DAQmxGetAIExcitVoltageOrCurrent'
p22331
((lp22332
S'int32'
p22333
ag34
a((S'taskHandle'
p22334
(lp22335
S'TaskHandle'
p22336
aNtp22337
(S'channel'
p22338
(lp22339
S'char'
p22340
a(lp22341
I-1
aaNtp22342
(S'data'
p22343
(lp22344
S'int32'
p22345
ag42
aNtp22346
tp22347
tp22348
sS'DAQmxResetDIUsbXferReqCount'
p22349
((lp22350
S'int32'
p22351
ag34
a((S'taskHandle'
p22352
(lp22353
S'TaskHandle'
p22354
aNtp22355
(S'channel'
p22356
(lp22357
S'char'
p22358
a(lp22359
I-1
aaNtp22360
tp22361
tp22362
sS'DAQmxResetAIResistanceUnits'
p22363
((lp22364
S'int32'
p22365
ag34
a((S'taskHandle'
p22366
(lp22367
S'TaskHandle'
p22368
aNtp22369
(S'channel'
p22370
(lp22371
S'char'
p22372
a(lp22373
I-1
aaNtp22374
tp22375
tp22376
sS'DAQmxSetDigitalLogicFamilyPowerUpState'
p22377
((lp22378
S'int32'
p22379
ag34
a((S'deviceName'
p22380
(lp22381
S'char'
p22382
a(lp22383
I-1
aaNtp22384
(S'logicFamily'
p22385
(lp22386
S'int32'
p22387
aNtp22388
tp22389
tp22390
sS'DAQmxSetAIPressureUnits'
p22391
((lp22392
S'int32'
p22393
ag34
a((S'taskHandle'
p22394
(lp22395
S'TaskHandle'
p22396
aNtp22397
(S'channel'
p22398
(lp22399
S'char'
p22400
a(lp22401
I-1
aaNtp22402
(S'data'
p22403
(lp22404
S'int32'
p22405
aNtp22406
tp22407
tp22408
sS'DAQmxGetAOResolution'
p22409
((lp22410
S'int32'
p22411
ag34
a((S'taskHandle'
p22412
(lp22413
S'TaskHandle'
p22414
aNtp22415
(S'channel'
p22416
(lp22417
S'char'
p22418
a(lp22419
I-1
aaNtp22420
(S'data'
p22421
(lp22422
S'float64'
p22423
ag42
aNtp22424
tp22425
tp22426
sS'DAQmxSetCICountEdgesDir'
p22427
((lp22428
S'int32'
p22429
ag34
a((S'taskHandle'
p22430
(lp22431
S'TaskHandle'
p22432
aNtp22433
(S'channel'
p22434
(lp22435
S'char'
p22436
a(lp22437
I-1
aaNtp22438
(S'data'
p22439
(lp22440
S'int32'
p22441
aNtp22442
tp22443
tp22444
sS'DAQmxResetAIBridgeCfg'
p22445
((lp22446
S'int32'
p22447
ag34
a((S'taskHandle'
p22448
(lp22449
S'TaskHandle'
p22450
aNtp22451
(S'channel'
p22452
(lp22453
S'char'
p22454
a(lp22455
I-1
aaNtp22456
tp22457
tp22458
sS'DAQmxGetAILeadWireResistance'
p22459
((lp22460
S'int32'
p22461
ag34
a((S'taskHandle'
p22462
(lp22463
S'TaskHandle'
p22464
aNtp22465
(S'channel'
p22466
(lp22467
S'char'
p22468
a(lp22469
I-1
aaNtp22470
(S'data'
p22471
(lp22472
S'float64'
p22473
ag42
aNtp22474
tp22475
tp22476
sS'DAQmxResetExportedHshkEventInterlockedAssertOnStart'
p22477
((lp22478
S'int32'
p22479
ag34
a((S'taskHandle'
p22480
(lp22481
S'TaskHandle'
p22482
aNtp22483
tp22484
tp22485
sS'DAQmxGetDevCOTrigUsage'
p22486
((lp22487
S'int32'
p22488
ag34
a((S'device'
p22489
(lp22490
S'char'
p22491
a(lp22492
I-1
aaNtp22493
(S'data'
p22494
(lp22495
S'int32'
p22496
ag42
aNtp22497
tp22498
tp22499
sS'DAQmxAdjustDSAAICal'
p22500
((lp22501
S'int32'
p22502
ag34
a((S'calHandle'
p22503
(lp22504
S'CalHandle'
p22505
aNtp22506
(S'referenceVoltage'
p22507
(lp22508
S'float64'
p22509
aNtp22510
tp22511
tp22512
sS'DAQmxSetAIChanCalEnableCal'
p22513
((lp22514
S'int32'
p22515
ag34
a((S'taskHandle'
p22516
(lp22517
S'TaskHandle'
p22518
aNtp22519
(S'channel'
p22520
(lp22521
S'char'
p22522
a(lp22523
I-1
aaNtp22524
(S'data'
p22525
(lp22526
S'bool32'
p22527
aNtp22528
tp22529
tp22530
sS'DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate'
p22531
((lp22532
S'int32'
p22533
ag34
a((S'taskHandle'
p22534
(lp22535
S'TaskHandle'
p22536
aNtp22537
(S'data'
p22538
(lp22539
S'float64'
p22540
ag42
aNtp22541
tp22542
tp22543
sS'DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p22544
((lp22545
S'int32'
p22546
ag34
a((S'taskHandle'
p22547
(lp22548
S'TaskHandle'
p22549
aNtp22550
(S'data'
p22551
(lp22552
S'float64'
p22553
ag42
aNtp22554
tp22555
tp22556
sS'DAQmxGetExported20MHzTimebaseOutputTerm'
p22557
((lp22558
S'int32'
p22559
ag34
a((S'taskHandle'
p22560
(lp22561
S'TaskHandle'
p22562
aNtp22563
(S'data'
p22564
(lp22565
S'char'
p22566
ag42
aNtp22567
(S'bufferSize'
p22568
(lp22569
S'uInt32'
p22570
aNtp22571
tp22572
tp22573
sS'DAQmxResetAnlgWinPauseTrigDigSyncEnable'
p22574
((lp22575
S'int32'
p22576
ag34
a((S'taskHandle'
p22577
(lp22578
S'TaskHandle'
p22579
aNtp22580
tp22581
tp22582
sS'DAQmxResetCIPulseWidthDigFltrTimebaseRate'
p22583
((lp22584
S'int32'
p22585
ag34
a((S'taskHandle'
p22586
(lp22587
S'TaskHandle'
p22588
aNtp22589
(S'channel'
p22590
(lp22591
S'char'
p22592
a(lp22593
I-1
aaNtp22594
tp22595
tp22596
sS'DAQmxResetCIPulseWidthDigFltrTimebaseSrc'
p22597
((lp22598
S'int32'
p22599
ag34
a((S'taskHandle'
p22600
(lp22601
S'TaskHandle'
p22602
aNtp22603
(S'channel'
p22604
(lp22605
S'char'
p22606
a(lp22607
I-1
aaNtp22608
tp22609
tp22610
sS'DAQmxSetCIEncoderZInputDigFltrTimebaseSrc'
p22611
((lp22612
S'int32'
p22613
ag34
a((S'taskHandle'
p22614
(lp22615
S'TaskHandle'
p22616
aNtp22617
(S'channel'
p22618
(lp22619
S'char'
p22620
a(lp22621
I-1
aaNtp22622
(S'data'
p22623
(lp22624
S'char'
p22625
ag42
aNtp22626
tp22627
tp22628
sS'DAQmxSetCIPulseFreqDigSyncEnable'
p22629
((lp22630
S'int32'
p22631
ag34
a((S'taskHandle'
p22632
(lp22633
S'TaskHandle'
p22634
aNtp22635
(S'channel'
p22636
(lp22637
S'char'
p22638
a(lp22639
I-1
aaNtp22640
(S'data'
p22641
(lp22642
S'bool32'
p22643
aNtp22644
tp22645
tp22646
sS'DAQmxResetCIDutyCycleDigFltrTimebaseRate'
p22647
((lp22648
S'int32'
p22649
ag34
a((S'taskHandle'
p22650
(lp22651
S'TaskHandle'
p22652
aNtp22653
(S'channel'
p22654
(lp22655
S'char'
p22656
a(lp22657
I-1
aaNtp22658
tp22659
tp22660
sS'DAQmxGetPersistedChanAllowInteractiveEditing'
p22661
((lp22662
S'int32'
p22663
ag34
a((S'channel'
p22664
(lp22665
S'char'
p22666
a(lp22667
I-1
aaNtp22668
(S'data'
p22669
(lp22670
S'bool32'
p22671
ag42
aNtp22672
tp22673
tp22674
sS'DAQmxWriteCtrFreqScalar'
p22675
((lp22676
S'int32'
p22677
ag34
a((S'taskHandle'
p22678
(lp22679
S'TaskHandle'
p22680
aNtp22681
(S'autoStart'
p22682
(lp22683
S'bool32'
p22684
aNtp22685
(S'timeout'
p22686
(lp22687
S'float64'
p22688
aNtp22689
(S'frequency'
p22690
(lp22691
S'float64'
p22692
aNtp22693
(S'dutyCycle'
p22694
(lp22695
S'float64'
p22696
aNtp22697
(S'reserved'
p22698
(lp22699
S'bool32'
p22700
ag42
aNtp22701
tp22702
tp22703
sS'DAQmxGetAODataXferReqCond'
p22704
((lp22705
S'int32'
p22706
ag34
a((S'taskHandle'
p22707
(lp22708
S'TaskHandle'
p22709
aNtp22710
(S'channel'
p22711
(lp22712
S'char'
p22713
a(lp22714
I-1
aaNtp22715
(S'data'
p22716
(lp22717
S'int32'
p22718
ag42
aNtp22719
tp22720
tp22721
sS'DAQmxSetExportedRdyForXferEventDeassertCond'
p22722
((lp22723
S'int32'
p22724
ag34
a((S'taskHandle'
p22725
(lp22726
S'TaskHandle'
p22727
aNtp22728
(S'data'
p22729
(lp22730
S'int32'
p22731
aNtp22732
tp22733
tp22734
sS'DAQmxResetDODataXferReqCond'
p22735
((lp22736
S'int32'
p22737
ag34
a((S'taskHandle'
p22738
(lp22739
S'TaskHandle'
p22740
aNtp22741
(S'channel'
p22742
(lp22743
S'char'
p22744
a(lp22745
I-1
aaNtp22746
tp22747
tp22748
sS'DAQmxResetAIEnhancedAliasRejectionEnable'
p22749
((lp22750
S'int32'
p22751
ag34
a((S'taskHandle'
p22752
(lp22753
S'TaskHandle'
p22754
aNtp22755
(S'channel'
p22756
(lp22757
S'char'
p22758
a(lp22759
I-1
aaNtp22760
tp22761
tp22762
sS'DAQmxAdjust9206Cal'
p22763
((lp22764
S'int32'
p22765
ag34
a((S'calHandle'
p22766
(lp22767
S'CalHandle'
p22768
aNtp22769
(S'value'
p22770
(lp22771
S'float64'
p22772
aNtp22773
tp22774
tp22775
sS'DAQmxSetScaleLinSlope'
p22776
((lp22777
S'int32'
p22778
ag34
a((S'scaleName'
p22779
(lp22780
S'char'
p22781
a(lp22782
I-1
aaNtp22783
(S'data'
p22784
(lp22785
S'float64'
p22786
aNtp22787
tp22788
tp22789
sS'DAQmxGet9219CalAdjustPoints'
p22790
((lp22791
S'int32'
p22792
ag34
a((S'calHandle'
p22793
(lp22794
S'CalHandle'
p22795
aNtp22796
(S'adjustmentPoints'
p22797
(lp22798
S'float64'
p22799
ag42
aNtp22800
(S'bufferSize'
p22801
(lp22802
S'uInt32'
p22803
aNtp22804
tp22805
tp22806
sS'DAQmxSetDigEdgeWatchdogExpirTrigSrc'
p22807
((lp22808
S'int32'
p22809
ag34
a((S'taskHandle'
p22810
(lp22811
S'TaskHandle'
p22812
aNtp22813
(S'data'
p22814
(lp22815
S'char'
p22816
ag42
aNtp22817
tp22818
tp22819
sS'DAQmxResetImplicitUnderflowBehavior'
p22820
((lp22821
S'int32'
p22822
ag34
a((S'taskHandle'
p22823
(lp22824
S'TaskHandle'
p22825
aNtp22826
tp22827
tp22828
sS'DAQmxResetExportedAdvCmpltEventPulseWidth'
p22829
((lp22830
S'int32'
p22831
ag34
a((S'taskHandle'
p22832
(lp22833
S'TaskHandle'
p22834
aNtp22835
tp22836
tp22837
sS'DAQmxResetAISoundPressuredBRef'
p22838
((lp22839
S'int32'
p22840
ag34
a((S'taskHandle'
p22841
(lp22842
S'TaskHandle'
p22843
aNtp22844
(S'channel'
p22845
(lp22846
S'char'
p22847
a(lp22848
I-1
aaNtp22849
tp22850
tp22851
sS'DAQmxGetSampClkTimebaseSrc'
p22852
((lp22853
S'int32'
p22854
ag34
a((S'taskHandle'
p22855
(lp22856
S'TaskHandle'
p22857
aNtp22858
(S'data'
p22859
(lp22860
S'char'
p22861
ag42
aNtp22862
(S'bufferSize'
p22863
(lp22864
S'uInt32'
p22865
aNtp22866
tp22867
tp22868
sS'DAQmxGetBufInputOnbrdBufSize'
p22869
((lp22870
S'int32'
p22871
ag34
a((S'taskHandle'
p22872
(lp22873
S'TaskHandle'
p22874
aNtp22875
(S'data'
p22876
(lp22877
S'uInt32'
p22878
ag42
aNtp22879
tp22880
tp22881
sS'DAQmxReadBinaryI32'
p22882
((lp22883
S'int32'
p22884
ag34
a((S'taskHandle'
p22885
(lp22886
S'TaskHandle'
p22887
aNtp22888
(S'numSampsPerChan'
p22889
(lp22890
S'int32'
p22891
aNtp22892
(S'timeout'
p22893
(lp22894
S'float64'
p22895
aNtp22896
(S'fillMode'
p22897
(lp22898
S'bool32'
p22899
aNtp22900
(S'readArray'
p22901
(lp22902
S'int32'
p22903
a(lp22904
I-1
aaNtp22905
(S'arraySizeInSamps'
p22906
(lp22907
S'uInt32'
p22908
aNtp22909
(S'sampsPerChanRead'
p22910
(lp22911
S'int32'
p22912
ag42
aNtp22913
(S'reserved'
p22914
(lp22915
S'bool32'
p22916
ag42
aNtp22917
tp22918
tp22919
sS'DAQmxSetOnDemandSimultaneousAOEnable'
p22920
((lp22921
S'int32'
p22922
ag34
a((S'taskHandle'
p22923
(lp22924
S'TaskHandle'
p22925
aNtp22926
(S'data'
p22927
(lp22928
S'bool32'
p22929
aNtp22930
tp22931
tp22932
sS'DAQmxSetAIDCOffset'
p22933
((lp22934
S'int32'
p22935
ag34
a((S'taskHandle'
p22936
(lp22937
S'TaskHandle'
p22938
aNtp22939
(S'channel'
p22940
(lp22941
S'char'
p22942
a(lp22943
I-1
aaNtp22944
(S'data'
p22945
(lp22946
S'float64'
p22947
aNtp22948
tp22949
tp22950
sS'DAQmxResetAOVoltageCurrentLimit'
p22951
((lp22952
S'int32'
p22953
ag34
a((S'taskHandle'
p22954
(lp22955
S'TaskHandle'
p22956
aNtp22957
(S'channel'
p22958
(lp22959
S'char'
p22960
a(lp22961
I-1
aaNtp22962
tp22963
tp22964
sS'DAQmxResetAnlgWinStartTrigWhen'
p22965
((lp22966
S'int32'
p22967
ag34
a((S'taskHandle'
p22968
(lp22969
S'TaskHandle'
p22970
aNtp22971
tp22972
tp22973
sS'DAQmxResetDOMemMapEnable'
p22974
((lp22975
S'int32'
p22976
ag34
a((S'taskHandle'
p22977
(lp22978
S'TaskHandle'
p22979
aNtp22980
(S'channel'
p22981
(lp22982
S'char'
p22983
a(lp22984
I-1
aaNtp22985
tp22986
tp22987
sS'DAQmxResetAnlgEdgeStartTrigCoupling'
p22988
((lp22989
S'int32'
p22990
ag34
a((S'taskHandle'
p22991
(lp22992
S'TaskHandle'
p22993
aNtp22994
tp22995
tp22996
sS'DAQmxCreateAIRTDChan'
p22997
((lp22998
S'int32'
p22999
ag34
a((S'taskHandle'
p23000
(lp23001
S'TaskHandle'
p23002
aNtp23003
(S'physicalChannel'
p23004
(lp23005
S'char'
p23006
a(lp23007
I-1
aaNtp23008
(S'nameToAssignToChannel'
p23009
(lp23010
S'char'
p23011
a(lp23012
I-1
aaNtp23013
(S'minVal'
p23014
(lp23015
S'float64'
p23016
aNtp23017
(S'maxVal'
p23018
(lp23019
S'float64'
p23020
aNtp23021
(S'units'
p23022
(lp23023
S'int32'
p23024
aNtp23025
(S'rtdType'
p23026
(lp23027
S'int32'
p23028
aNtp23029
(S'resistanceConfig'
p23030
(lp23031
S'int32'
p23032
aNtp23033
(S'currentExcitSource'
p23034
(lp23035
S'int32'
p23036
aNtp23037
(S'currentExcitVal'
p23038
(lp23039
S'float64'
p23040
aNtp23041
(S'r0'
p23042
(lp23043
S'float64'
p23044
aNtp23045
tp23046
tp23047
sS'DAQmxGetWatchdogTimeout'
p23048
((lp23049
S'int32'
p23050
ag34
a((S'taskHandle'
p23051
(lp23052
S'TaskHandle'
p23053
aNtp23054
(S'data'
p23055
(lp23056
S'float64'
p23057
ag42
aNtp23058
tp23059
tp23060
sS'DAQmxGetCIPulseFreqStartEdge'
p23061
((lp23062
S'int32'
p23063
ag34
a((S'taskHandle'
p23064
(lp23065
S'TaskHandle'
p23066
aNtp23067
(S'channel'
p23068
(lp23069
S'char'
p23070
a(lp23071
I-1
aaNtp23072
(S'data'
p23073
(lp23074
S'int32'
p23075
ag42
aNtp23076
tp23077
tp23078
sS'DAQmxGetAIRosetteStrainGageStrainChans'
p23079
((lp23080
S'int32'
p23081
ag34
a((S'taskHandle'
p23082
(lp23083
S'TaskHandle'
p23084
aNtp23085
(S'channel'
p23086
(lp23087
S'char'
p23088
a(lp23089
I-1
aaNtp23090
(S'data'
p23091
(lp23092
S'char'
p23093
ag42
aNtp23094
(S'bufferSize'
p23095
(lp23096
S'uInt32'
p23097
aNtp23098
tp23099
tp23100
sS'DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc'
p23101
((lp23102
S'int32'
p23103
ag34
a((S'taskHandle'
p23104
(lp23105
S'TaskHandle'
p23106
aNtp23107
(S'data'
p23108
(lp23109
S'char'
p23110
ag42
aNtp23111
tp23112
tp23113
sS'DAQmxResetDOInvertLines'
p23114
((lp23115
S'int32'
p23116
ag34
a((S'taskHandle'
p23117
(lp23118
S'TaskHandle'
p23119
aNtp23120
(S'channel'
p23121
(lp23122
S'char'
p23123
a(lp23124
I-1
aaNtp23125
tp23126
tp23127
sS'DAQmxGetCOMemMapEnable'
p23128
((lp23129
S'int32'
p23130
ag34
a((S'taskHandle'
p23131
(lp23132
S'TaskHandle'
p23133
aNtp23134
(S'channel'
p23135
(lp23136
S'char'
p23137
a(lp23138
I-1
aaNtp23139
(S'data'
p23140
(lp23141
S'bool32'
p23142
ag42
aNtp23143
tp23144
tp23145
sS'DAQmxGetAITorqueUnits'
p23146
((lp23147
S'int32'
p23148
ag34
a((S'taskHandle'
p23149
(lp23150
S'TaskHandle'
p23151
aNtp23152
(S'channel'
p23153
(lp23154
S'char'
p23155
a(lp23156
I-1
aaNtp23157
(S'data'
p23158
(lp23159
S'int32'
p23160
ag42
aNtp23161
tp23162
tp23163
sS'DAQmxGetScaleScaledUnits'
p23164
((lp23165
S'int32'
p23166
ag34
a((S'scaleName'
p23167
(lp23168
S'char'
p23169
a(lp23170
I-1
aaNtp23171
(S'data'
p23172
(lp23173
S'char'
p23174
ag42
aNtp23175
(S'bufferSize'
p23176
(lp23177
S'uInt32'
p23178
aNtp23179
tp23180
tp23181
sS'DAQmxGetSampClkTimingResponseMode'
p23182
((lp23183
S'int32'
p23184
ag34
a((S'taskHandle'
p23185
(lp23186
S'TaskHandle'
p23187
aNtp23188
(S'data'
p23189
(lp23190
S'int32'
p23191
ag42
aNtp23192
tp23193
tp23194
sS'DAQmxSetCIFreqStartingEdge'
p23195
((lp23196
S'int32'
p23197
ag34
a((S'taskHandle'
p23198
(lp23199
S'TaskHandle'
p23200
aNtp23201
(S'channel'
p23202
(lp23203
S'char'
p23204
a(lp23205
I-1
aaNtp23206
(S'data'
p23207
(lp23208
S'int32'
p23209
aNtp23210
tp23211
tp23212
sS'DAQmxResetCIEncoderAInputDigSyncEnable'
p23213
((lp23214
S'int32'
p23215
ag34
a((S'taskHandle'
p23216
(lp23217
S'TaskHandle'
p23218
aNtp23219
(S'channel'
p23220
(lp23221
S'char'
p23222
a(lp23223
I-1
aaNtp23224
tp23225
tp23226
sS'DAQmxGetCIDutyCycleDigFltrTimebaseRate'
p23227
((lp23228
S'int32'
p23229
ag34
a((S'taskHandle'
p23230
(lp23231
S'TaskHandle'
p23232
aNtp23233
(S'channel'
p23234
(lp23235
S'char'
p23236
a(lp23237
I-1
aaNtp23238
(S'data'
p23239
(lp23240
S'float64'
p23241
ag42
aNtp23242
tp23243
tp23244
sS'DAQmxSetAIChanCalTablePreScaledVals'
p23245
((lp23246
S'int32'
p23247
ag34
a((S'taskHandle'
p23248
(lp23249
S'TaskHandle'
p23250
aNtp23251
(S'channel'
p23252
(lp23253
S'char'
p23254
a(lp23255
I-1
aaNtp23256
(S'data'
p23257
(lp23258
S'float64'
p23259
ag42
aNtp23260
(S'arraySizeInElements'
p23261
(lp23262
S'uInt32'
p23263
aNtp23264
tp23265
tp23266
sS'DAQmxSetCODataXferReqCond'
p23267
((lp23268
S'int32'
p23269
ag34
a((S'taskHandle'
p23270
(lp23271
S'TaskHandle'
p23272
aNtp23273
(S'channel'
p23274
(lp23275
S'char'
p23276
a(lp23277
I-1
aaNtp23278
(S'data'
p23279
(lp23280
S'int32'
p23281
aNtp23282
tp23283
tp23284
sS'DAQmxResetAIInputSrc'
p23285
((lp23286
S'int32'
p23287
ag34
a((S'taskHandle'
p23288
(lp23289
S'TaskHandle'
p23290
aNtp23291
(S'channel'
p23292
(lp23293
S'char'
p23294
a(lp23295
I-1
aaNtp23296
tp23297
tp23298
sS'DAQmxSetAICurrentACRMSUnits'
p23299
((lp23300
S'int32'
p23301
ag34
a((S'taskHandle'
p23302
(lp23303
S'TaskHandle'
p23304
aNtp23305
(S'channel'
p23306
(lp23307
S'char'
p23308
a(lp23309
I-1
aaNtp23310
(S'data'
p23311
(lp23312
S'int32'
p23313
aNtp23314
tp23315
tp23316
sS'DAQmxResetCIEncoderZInputDigSyncEnable'
p23317
((lp23318
S'int32'
p23319
ag34
a((S'taskHandle'
p23320
(lp23321
S'TaskHandle'
p23322
aNtp23323
(S'channel'
p23324
(lp23325
S'char'
p23326
a(lp23327
I-1
aaNtp23328
tp23329
tp23330
sS'DAQmxResetCICountEdgesCountResetTerm'
p23331
((lp23332
S'int32'
p23333
ag34
a((S'taskHandle'
p23334
(lp23335
S'TaskHandle'
p23336
aNtp23337
(S'channel'
p23338
(lp23339
S'char'
p23340
a(lp23341
I-1
aaNtp23342
tp23343
tp23344
sS'DAQmxResetDOOutputDriveType'
p23345
((lp23346
S'int32'
p23347
ag34
a((S'taskHandle'
p23348
(lp23349
S'TaskHandle'
p23350
aNtp23351
(S'channel'
p23352
(lp23353
S'char'
p23354
a(lp23355
I-1
aaNtp23356
tp23357
tp23358
sS'DAQmxGetExportedWatchdogExpiredEventOutputTerm'
p23359
((lp23360
S'int32'
p23361
ag34
a((S'taskHandle'
p23362
(lp23363
S'TaskHandle'
p23364
aNtp23365
(S'data'
p23366
(lp23367
S'char'
p23368
ag42
aNtp23369
(S'bufferSize'
p23370
(lp23371
S'uInt32'
p23372
aNtp23373
tp23374
tp23375
sS'DAQmxGetDevIsSimulated'
p23376
((lp23377
S'int32'
p23378
ag34
a((S'device'
p23379
(lp23380
S'char'
p23381
a(lp23382
I-1
aaNtp23383
(S'data'
p23384
(lp23385
S'bool32'
p23386
ag42
aNtp23387
tp23388
tp23389
sS'DAQmxResetCICountEdgesCountDirLogicLvlBehavior'
p23390
((lp23391
S'int32'
p23392
ag34
a((S'taskHandle'
p23393
(lp23394
S'TaskHandle'
p23395
aNtp23396
(S'channel'
p23397
(lp23398
S'char'
p23399
a(lp23400
I-1
aaNtp23401
tp23402
tp23403
sS'DAQmxResetAOCurrentUnits'
p23404
((lp23405
S'int32'
p23406
ag34
a((S'taskHandle'
p23407
(lp23408
S'TaskHandle'
p23409
aNtp23410
(S'channel'
p23411
(lp23412
S'char'
p23413
a(lp23414
I-1
aaNtp23415
tp23416
tp23417
sS'DAQmxWriteDigitalU16'
p23418
((lp23419
S'int32'
p23420
ag34
a((S'taskHandle'
p23421
(lp23422
S'TaskHandle'
p23423
aNtp23424
(S'numSampsPerChan'
p23425
(lp23426
S'int32'
p23427
aNtp23428
(S'autoStart'
p23429
(lp23430
S'bool32'
p23431
aNtp23432
(S'timeout'
p23433
(lp23434
S'float64'
p23435
aNtp23436
(S'dataLayout'
p23437
(lp23438
S'bool32'
p23439
aNtp23440
(S'writeArray'
p23441
(lp23442
S'uInt16'
p23443
a(lp23444
I-1
aaNtp23445
(S'sampsPerChanWritten'
p23446
(lp23447
S'int32'
p23448
ag42
aNtp23449
(S'reserved'
p23450
(lp23451
S'bool32'
p23452
ag42
aNtp23453
tp23454
tp23455
sS'DAQmxSetAIConvTimebaseSrcEx'
p23456
((lp23457
S'int32'
p23458
ag34
a((S'taskHandle'
p23459
(lp23460
S'TaskHandle'
p23461
aNtp23462
(S'deviceNames'
p23463
(lp23464
S'char'
p23465
a(lp23466
I-1
aaNtp23467
(S'data'
p23468
(lp23469
S'int32'
p23470
aNtp23471
tp23472
tp23473
sS'DAQmxSetMasterTimebaseSrc'
p23474
((lp23475
S'int32'
p23476
ag34
a((S'taskHandle'
p23477
(lp23478
S'TaskHandle'
p23479
aNtp23480
(S'data'
p23481
(lp23482
S'char'
p23483
ag42
aNtp23484
tp23485
tp23486
sS'DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal'
p23487
((lp23488
S'int32'
p23489
ag34
a((S'taskHandle'
p23490
(lp23491
S'TaskHandle'
p23492
aNtp23493
(S'channel'
p23494
(lp23495
S'char'
p23496
a(lp23497
I-1
aaNtp23498
(S'data'
p23499
(lp23500
S'float64'
p23501
aNtp23502
tp23503
tp23504
sS'DAQmxSetDIUsbXferReqCount'
p23505
((lp23506
S'int32'
p23507
ag34
a((S'taskHandle'
p23508
(lp23509
S'TaskHandle'
p23510
aNtp23511
(S'channel'
p23512
(lp23513
S'char'
p23514
a(lp23515
I-1
aaNtp23516
(S'data'
p23517
(lp23518
S'uInt32'
p23519
aNtp23520
tp23521
tp23522
sS'DAQmxResetAIThrmcplScaleType'
p23523
((lp23524
S'int32'
p23525
ag34
a((S'taskHandle'
p23526
(lp23527
S'TaskHandle'
p23528
aNtp23529
(S'channel'
p23530
(lp23531
S'char'
p23532
a(lp23533
I-1
aaNtp23534
tp23535
tp23536
sS'DAQmxAdjust9219Cal'
p23537
((lp23538
S'int32'
p23539
ag34
a((S'calHandle'
p23540
(lp23541
S'CalHandle'
p23542
aNtp23543
(S'channelNames'
p23544
(lp23545
S'char'
p23546
a(lp23547
I-1
aaNtp23548
(S'value'
p23549
(lp23550
S'float64'
p23551
aNtp23552
tp23553
tp23554
sS'DAQmxResetAIExcitVal'
p23555
((lp23556
S'int32'
p23557
ag34
a((S'taskHandle'
p23558
(lp23559
S'TaskHandle'
p23560
aNtp23561
(S'channel'
p23562
(lp23563
S'char'
p23564
a(lp23565
I-1
aaNtp23566
tp23567
tp23568
sS'DAQmxResetCIPeriodTermCfg'
p23569
((lp23570
S'int32'
p23571
ag34
a((S'taskHandle'
p23572
(lp23573
S'TaskHandle'
p23574
aNtp23575
(S'channel'
p23576
(lp23577
S'char'
p23578
a(lp23579
I-1
aaNtp23580
tp23581
tp23582
sS'DAQmxResetAODACRefExtSrc'
p23583
((lp23584
S'int32'
p23585
ag34
a((S'taskHandle'
p23586
(lp23587
S'TaskHandle'
p23588
aNtp23589
(S'channel'
p23590
(lp23591
S'char'
p23592
a(lp23593
I-1
aaNtp23594
tp23595
tp23596
sS'DAQmxSetScaleLinYIntercept'
p23597
((lp23598
S'int32'
p23599
ag34
a((S'scaleName'
p23600
(lp23601
S'char'
p23602
a(lp23603
I-1
aaNtp23604
(S'data'
p23605
(lp23606
S'float64'
p23607
aNtp23608
tp23609
tp23610
sS'DAQmxCreateTEDSAIVoltageChan'
p23611
((lp23612
S'int32'
p23613
ag34
a((S'taskHandle'
p23614
(lp23615
S'TaskHandle'
p23616
aNtp23617
(S'physicalChannel'
p23618
(lp23619
S'char'
p23620
a(lp23621
I-1
aaNtp23622
(S'nameToAssignToChannel'
p23623
(lp23624
S'char'
p23625
a(lp23626
I-1
aaNtp23627
(S'terminalConfig'
p23628
(lp23629
S'int32'
p23630
aNtp23631
(S'minVal'
p23632
(lp23633
S'float64'
p23634
aNtp23635
(S'maxVal'
p23636
(lp23637
S'float64'
p23638
aNtp23639
(S'units'
p23640
(lp23641
S'int32'
p23642
aNtp23643
(S'customScaleName'
p23644
(lp23645
S'char'
p23646
a(lp23647
I-1
aaNtp23648
tp23649
tp23650
sS'DAQmxGetReadOpenThrmcplChans'
p23651
((lp23652
S'int32'
p23653
ag34
a((S'taskHandle'
p23654
(lp23655
S'TaskHandle'
p23656
aNtp23657
(S'data'
p23658
(lp23659
S'char'
p23660
ag42
aNtp23661
(S'bufferSize'
p23662
(lp23663
S'uInt32'
p23664
aNtp23665
tp23666
tp23667
sS'DAQmxSetCIPulseTimeDigFltrMinPulseWidth'
p23668
((lp23669
S'int32'
p23670
ag34
a((S'taskHandle'
p23671
(lp23672
S'TaskHandle'
p23673
aNtp23674
(S'channel'
p23675
(lp23676
S'char'
p23677
a(lp23678
I-1
aaNtp23679
(S'data'
p23680
(lp23681
S'float64'
p23682
aNtp23683
tp23684
tp23685
sS'DAQmxSetAOLoadImpedance'
p23686
((lp23687
S'int32'
p23688
ag34
a((S'taskHandle'
p23689
(lp23690
S'TaskHandle'
p23691
aNtp23692
(S'channel'
p23693
(lp23694
S'char'
p23695
a(lp23696
I-1
aaNtp23697
(S'data'
p23698
(lp23699
S'float64'
p23700
aNtp23701
tp23702
tp23703
sS'DAQmxResetExportedAdvCmpltEventOutputTerm'
p23704
((lp23705
S'int32'
p23706
ag34
a((S'taskHandle'
p23707
(lp23708
S'TaskHandle'
p23709
aNtp23710
tp23711
tp23712
sS'DAQmxResetDigEdgeRefTrigDigSyncEnable'
p23713
((lp23714
S'int32'
p23715
ag34
a((S'taskHandle'
p23716
(lp23717
S'TaskHandle'
p23718
aNtp23719
tp23720
tp23721
sS'DAQmxCreateTEDSAIPosRVDTChan'
p23722
((lp23723
S'int32'
p23724
ag34
a((S'taskHandle'
p23725
(lp23726
S'TaskHandle'
p23727
aNtp23728
(S'physicalChannel'
p23729
(lp23730
S'char'
p23731
a(lp23732
I-1
aaNtp23733
(S'nameToAssignToChannel'
p23734
(lp23735
S'char'
p23736
a(lp23737
I-1
aaNtp23738
(S'minVal'
p23739
(lp23740
S'float64'
p23741
aNtp23742
(S'maxVal'
p23743
(lp23744
S'float64'
p23745
aNtp23746
(S'units'
p23747
(lp23748
S'int32'
p23749
aNtp23750
(S'voltageExcitSource'
p23751
(lp23752
S'int32'
p23753
aNtp23754
(S'voltageExcitVal'
p23755
(lp23756
S'float64'
p23757
aNtp23758
(S'voltageExcitFreq'
p23759
(lp23760
S'float64'
p23761
aNtp23762
(S'ACExcitWireMode'
p23763
(lp23764
S'int32'
p23765
aNtp23766
(S'customScaleName'
p23767
(lp23768
S'char'
p23769
a(lp23770
I-1
aaNtp23771
tp23772
tp23773
sS'DAQmxGetCIDutyCycleStartingEdge'
p23774
((lp23775
S'int32'
p23776
ag34
a((S'taskHandle'
p23777
(lp23778
S'TaskHandle'
p23779
aNtp23780
(S'channel'
p23781
(lp23782
S'char'
p23783
a(lp23784
I-1
aaNtp23785
(S'data'
p23786
(lp23787
S'int32'
p23788
ag42
aNtp23789
tp23790
tp23791
sS'DAQmxGetCOOutputState'
p23792
((lp23793
S'int32'
p23794
ag34
a((S'taskHandle'
p23795
(lp23796
S'TaskHandle'
p23797
aNtp23798
(S'channel'
p23799
(lp23800
S'char'
p23801
a(lp23802
I-1
aaNtp23803
(S'data'
p23804
(lp23805
S'int32'
p23806
ag42
aNtp23807
tp23808
tp23809
sS'DAQmxSetRefTrigAutoTrigEnable'
p23810
((lp23811
S'int32'
p23812
ag34
a((S'taskHandle'
p23813
(lp23814
S'TaskHandle'
p23815
aNtp23816
(S'data'
p23817
(lp23818
S'bool32'
p23819
aNtp23820
tp23821
tp23822
sS'DAQmxGetDevDITrigUsage'
p23823
((lp23824
S'int32'
p23825
ag34
a((S'device'
p23826
(lp23827
S'char'
p23828
a(lp23829
I-1
aaNtp23830
(S'data'
p23831
(lp23832
S'int32'
p23833
ag42
aNtp23834
tp23835
tp23836
sS'DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc'
p23837
((lp23838
S'int32'
p23839
ag34
a((S'taskHandle'
p23840
(lp23841
S'TaskHandle'
p23842
aNtp23843
(S'data'
p23844
(lp23845
S'char'
p23846
ag42
aNtp23847
(S'bufferSize'
p23848
(lp23849
S'uInt32'
p23850
aNtp23851
tp23852
tp23853
sS'DAQmxGetAILowpassSwitchCapClkSrc'
p23854
((lp23855
S'int32'
p23856
ag34
a((S'taskHandle'
p23857
(lp23858
S'TaskHandle'
p23859
aNtp23860
(S'channel'
p23861
(lp23862
S'char'
p23863
a(lp23864
I-1
aaNtp23865
(S'data'
p23866
(lp23867
S'int32'
p23868
ag42
aNtp23869
tp23870
tp23871
sS'DAQmxResetAOPowerAmpChannelEnable'
p23872
((lp23873
S'int32'
p23874
ag34
a((S'physicalChannel'
p23875
(lp23876
S'char'
p23877
a(lp23878
I-1
aaNtp23879
tp23880
tp23881
sS'DAQmxSetExportedAdvTrigOutputTerm'
p23882
((lp23883
S'int32'
p23884
ag34
a((S'taskHandle'
p23885
(lp23886
S'TaskHandle'
p23887
aNtp23888
(S'data'
p23889
(lp23890
S'char'
p23891
ag42
aNtp23892
tp23893
tp23894
sS'DAQmxSetAOFuncGenSquareDutyCycle'
p23895
((lp23896
S'int32'
p23897
ag34
a((S'taskHandle'
p23898
(lp23899
S'TaskHandle'
p23900
aNtp23901
(S'channel'
p23902
(lp23903
S'char'
p23904
a(lp23905
I-1
aaNtp23906
(S'data'
p23907
(lp23908
S'float64'
p23909
aNtp23910
tp23911
tp23912
sS'DAQmxSetAnlgWinStartTrigCoupling'
p23913
((lp23914
S'int32'
p23915
ag34
a((S'taskHandle'
p23916
(lp23917
S'TaskHandle'
p23918
aNtp23919
(S'data'
p23920
(lp23921
S'int32'
p23922
aNtp23923
tp23924
tp23925
sS'DAQmxGetDINumLines'
p23926
((lp23927
S'int32'
p23928
ag34
a((S'taskHandle'
p23929
(lp23930
S'TaskHandle'
p23931
aNtp23932
(S'channel'
p23933
(lp23934
S'char'
p23935
a(lp23936
I-1
aaNtp23937
(S'data'
p23938
(lp23939
S'uInt32'
p23940
ag42
aNtp23941
tp23942
tp23943
sS'DAQmxSetAIVelocityUnits'
p23944
((lp23945
S'int32'
p23946
ag34
a((S'taskHandle'
p23947
(lp23948
S'TaskHandle'
p23949
aNtp23950
(S'channel'
p23951
(lp23952
S'char'
p23953
a(lp23954
I-1
aaNtp23955
(S'data'
p23956
(lp23957
S'int32'
p23958
aNtp23959
tp23960
tp23961
sS'DAQmxGetAIExcitDCorAC'
p23962
((lp23963
S'int32'
p23964
ag34
a((S'taskHandle'
p23965
(lp23966
S'TaskHandle'
p23967
aNtp23968
(S'channel'
p23969
(lp23970
S'char'
p23971
a(lp23972
I-1
aaNtp23973
(S'data'
p23974
(lp23975
S'int32'
p23976
ag42
aNtp23977
tp23978
tp23979
sS'DAQmxGetExportedAdvCmpltEventOutputTerm'
p23980
((lp23981
S'int32'
p23982
ag34
a((S'taskHandle'
p23983
(lp23984
S'TaskHandle'
p23985
aNtp23986
(S'data'
p23987
(lp23988
S'char'
p23989
ag42
aNtp23990
(S'bufferSize'
p23991
(lp23992
S'uInt32'
p23993
aNtp23994
tp23995
tp23996
sS'DAQmxResetStartTrigDelayUnits'
p23997
((lp23998
S'int32'
p23999
ag34
a((S'taskHandle'
p24000
(lp24001
S'TaskHandle'
p24002
aNtp24003
tp24004
tp24005
sS'DAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate'
p24006
((lp24007
S'int32'
p24008
ag34
a((S'taskHandle'
p24009
(lp24010
S'TaskHandle'
p24011
aNtp24012
(S'data'
p24013
(lp24014
S'float64'
p24015
ag42
aNtp24016
tp24017
tp24018
sS'DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth'
p24019
((lp24020
S'int32'
p24021
ag34
a((S'taskHandle'
p24022
(lp24023
S'TaskHandle'
p24024
aNtp24025
tp24026
tp24027
sS'DAQmxConnectTerms'
p24028
((lp24029
S'int32'
p24030
ag34
a((S'sourceTerminal'
p24031
(lp24032
S'char'
p24033
a(lp24034
I-1
aaNtp24035
(S'destinationTerminal'
p24036
(lp24037
S'char'
p24038
a(lp24039
I-1
aaNtp24040
(S'signalModifiers'
p24041
(lp24042
S'int32'
p24043
aNtp24044
tp24045
tp24046
sS'DAQmxSetAnlgEdgeStartTrigCoupling'
p24047
((lp24048
S'int32'
p24049
ag34
a((S'taskHandle'
p24050
(lp24051
S'TaskHandle'
p24052
aNtp24053
(S'data'
p24054
(lp24055
S'int32'
p24056
aNtp24057
tp24058
tp24059
sS'DAQmxGetCICountEdgesCountResetDigFltrEnable'
p24060
((lp24061
S'int32'
p24062
ag34
a((S'taskHandle'
p24063
(lp24064
S'TaskHandle'
p24065
aNtp24066
(S'channel'
p24067
(lp24068
S'char'
p24069
a(lp24070
I-1
aaNtp24071
(S'data'
p24072
(lp24073
S'bool32'
p24074
ag42
aNtp24075
tp24076
tp24077
sS'DAQmxGetCICountEdgesCountResetDigSyncEnable'
p24078
((lp24079
S'int32'
p24080
ag34
a((S'taskHandle'
p24081
(lp24082
S'TaskHandle'
p24083
aNtp24084
(S'channel'
p24085
(lp24086
S'char'
p24087
a(lp24088
I-1
aaNtp24089
(S'data'
p24090
(lp24091
S'bool32'
p24092
ag42
aNtp24093
tp24094
tp24095
sS'DAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc'
p24096
((lp24097
S'int32'
p24098
ag34
a((S'taskHandle'
p24099
(lp24100
S'TaskHandle'
p24101
aNtp24102
(S'data'
p24103
(lp24104
S'char'
p24105
ag42
aNtp24106
(S'bufferSize'
p24107
(lp24108
S'uInt32'
p24109
aNtp24110
tp24111
tp24112
sS'DAQmxResetAnlgWinPauseTrigDigFltrMinPulseWidth'
p24113
((lp24114
S'int32'
p24115
ag34
a((S'taskHandle'
p24116
(lp24117
S'TaskHandle'
p24118
aNtp24119
tp24120
tp24121
sS'DAQmxGetCILinEncoderDistPerPulse'
p24122
((lp24123
S'int32'
p24124
ag34
a((S'taskHandle'
p24125
(lp24126
S'TaskHandle'
p24127
aNtp24128
(S'channel'
p24129
(lp24130
S'char'
p24131
a(lp24132
I-1
aaNtp24133
(S'data'
p24134
(lp24135
S'float64'
p24136
ag42
aNtp24137
tp24138
tp24139
sS'DAQmxGetAIChanCalVerifAcqVals'
p24140
((lp24141
S'int32'
p24142
ag34
a((S'taskHandle'
p24143
(lp24144
S'TaskHandle'
p24145
aNtp24146
(S'channel'
p24147
(lp24148
S'char'
p24149
a(lp24150
I-1
aaNtp24151
(S'data'
p24152
(lp24153
S'float64'
p24154
ag42
aNtp24155
(S'arraySizeInElements'
p24156
(lp24157
S'uInt32'
p24158
aNtp24159
tp24160
tp24161
sS'DAQmxSetAnlgLvlPauseTrigHyst'
p24162
((lp24163
S'int32'
p24164
ag34
a((S'taskHandle'
p24165
(lp24166
S'TaskHandle'
p24167
aNtp24168
(S'data'
p24169
(lp24170
S'float64'
p24171
aNtp24172
tp24173
tp24174
sS'DAQmxGetSwitchDevNumColumns'
p24175
((lp24176
S'int32'
p24177
ag34
a((S'deviceName'
p24178
(lp24179
S'char'
p24180
a(lp24181
I-1
aaNtp24182
(S'data'
p24183
(lp24184
S'uInt32'
p24185
ag42
aNtp24186
tp24187
tp24188
sS'DAQmxResetCIEncoderZIndexVal'
p24189
((lp24190
S'int32'
p24191
ag34
a((S'taskHandle'
p24192
(lp24193
S'TaskHandle'
p24194
aNtp24195
(S'channel'
p24196
(lp24197
S'char'
p24198
a(lp24199
I-1
aaNtp24200
tp24201
tp24202
sS'DAQmxSetCITwoEdgeSepFirstDigSyncEnable'
p24203
((lp24204
S'int32'
p24205
ag34
a((S'taskHandle'
p24206
(lp24207
S'TaskHandle'
p24208
aNtp24209
(S'channel'
p24210
(lp24211
S'char'
p24212
a(lp24213
I-1
aaNtp24214
(S'data'
p24215
(lp24216
S'bool32'
p24217
aNtp24218
tp24219
tp24220
sS'DAQmxSetDigEdgeArmStartTrigEdge'
p24221
((lp24222
S'int32'
p24223
ag34
a((S'taskHandle'
p24224
(lp24225
S'TaskHandle'
p24226
aNtp24227
(S'data'
p24228
(lp24229
S'int32'
p24230
aNtp24231
tp24232
tp24233
sS'DAQmxSetLoggingTDMSOperation'
p24234
((lp24235
S'int32'
p24236
ag34
a((S'taskHandle'
p24237
(lp24238
S'TaskHandle'
p24239
aNtp24240
(S'data'
p24241
(lp24242
S'int32'
p24243
aNtp24244
tp24245
tp24246
sS'DAQmxSetAIAutoZeroMode'
p24247
((lp24248
S'int32'
p24249
ag34
a((S'taskHandle'
p24250
(lp24251
S'TaskHandle'
p24252
aNtp24253
(S'channel'
p24254
(lp24255
S'char'
p24256
a(lp24257
I-1
aaNtp24258
(S'data'
p24259
(lp24260
S'int32'
p24261
aNtp24262
tp24263
tp24264
sS'DAQmxSetAIFreqThreshVoltage'
p24265
((lp24266
S'int32'
p24267
ag34
a((S'taskHandle'
p24268
(lp24269
S'TaskHandle'
p24270
aNtp24271
(S'channel'
p24272
(lp24273
S'char'
p24274
a(lp24275
I-1
aaNtp24276
(S'data'
p24277
(lp24278
S'float64'
p24279
aNtp24280
tp24281
tp24282
sS'DAQmxGetAnlgWinPauseTrigBtm'
p24283
((lp24284
S'int32'
p24285
ag34
a((S'taskHandle'
p24286
(lp24287
S'TaskHandle'
p24288
aNtp24289
(S'data'
p24290
(lp24291
S'float64'
p24292
ag42
aNtp24293
tp24294
tp24295
sS'DAQmxSetAIDigFltrType'
p24296
((lp24297
S'int32'
p24298
ag34
a((S'taskHandle'
p24299
(lp24300
S'TaskHandle'
p24301
aNtp24302
(S'channel'
p24303
(lp24304
S'char'
p24305
a(lp24306
I-1
aaNtp24307
(S'data'
p24308
(lp24309
S'int32'
p24310
aNtp24311
tp24312
tp24313
sS'DAQmxResetDigEdgeAdvTrigDigFltrEnable'
p24314
((lp24315
S'int32'
p24316
ag34
a((S'taskHandle'
p24317
(lp24318
S'TaskHandle'
p24319
aNtp24320
tp24321
tp24322
sS'DAQmxSetDOLogicFamily'
p24323
((lp24324
S'int32'
p24325
ag34
a((S'taskHandle'
p24326
(lp24327
S'TaskHandle'
p24328
aNtp24329
(S'channel'
p24330
(lp24331
S'char'
p24332
a(lp24333
I-1
aaNtp24334
(S'data'
p24335
(lp24336
S'int32'
p24337
aNtp24338
tp24339
tp24340
sS'DAQmxSetExportedAdvCmpltEventPulsePolarity'
p24341
((lp24342
S'int32'
p24343
ag34
a((S'taskHandle'
p24344
(lp24345
S'TaskHandle'
p24346
aNtp24347
(S'data'
p24348
(lp24349
S'int32'
p24350
aNtp24351
tp24352
tp24353
sS'DAQmxGetSelfCalLastDateAndTime'
p24354
((lp24355
S'int32'
p24356
ag34
a((S'deviceName'
p24357
(lp24358
S'char'
p24359
a(lp24360
I-1
aaNtp24361
(S'year'
p24362
(lp24363
S'uInt32'
p24364
ag42
aNtp24365
(S'month'
p24366
(lp24367
S'uInt32'
p24368
ag42
aNtp24369
(S'day'
p24370
(lp24371
S'uInt32'
p24372
ag42
aNtp24373
(S'hour'
p24374
(lp24375
S'uInt32'
p24376
ag42
aNtp24377
(S'minute'
p24378
(lp24379
S'uInt32'
p24380
ag42
aNtp24381
tp24382
tp24383
sS'DAQmxGetAIFilterDelay'
p24384
((lp24385
S'int32'
p24386
ag34
a((S'taskHandle'
p24387
(lp24388
S'TaskHandle'
p24389
aNtp24390
(S'channel'
p24391
(lp24392
S'char'
p24393
a(lp24394
I-1
aaNtp24395
(S'data'
p24396
(lp24397
S'float64'
p24398
ag42
aNtp24399
tp24400
tp24401
sS'DAQmxGetCIPulseTicksDigFltrTimebaseSrc'
p24402
((lp24403
S'int32'
p24404
ag34
a((S'taskHandle'
p24405
(lp24406
S'TaskHandle'
p24407
aNtp24408
(S'channel'
p24409
(lp24410
S'char'
p24411
a(lp24412
I-1
aaNtp24413
(S'data'
p24414
(lp24415
S'char'
p24416
ag42
aNtp24417
(S'bufferSize'
p24418
(lp24419
S'uInt32'
p24420
aNtp24421
tp24422
tp24423
sS'DAQmxResetDigPatternPauseTrigWhen'
p24424
((lp24425
S'int32'
p24426
ag34
a((S'taskHandle'
p24427
(lp24428
S'TaskHandle'
p24429
aNtp24430
tp24431
tp24432
sS'DAQmxResetDigPatternPauseTrigPattern'
p24433
((lp24434
S'int32'
p24435
ag34
a((S'taskHandle'
p24436
(lp24437
S'TaskHandle'
p24438
aNtp24439
tp24440
tp24441
sS'DAQmxGetDevCISampModes'
p24442
((lp24443
S'int32'
p24444
ag34
a((S'device'
p24445
(lp24446
S'char'
p24447
a(lp24448
I-1
aaNtp24449
(S'data'
p24450
(lp24451
S'int32'
p24452
ag42
aNtp24453
(S'arraySizeInElements'
p24454
(lp24455
S'uInt32'
p24456
aNtp24457
tp24458
tp24459
sS'DAQmxResetAIBridgeTablePhysicalVals'
p24460
((lp24461
S'int32'
p24462
ag34
a((S'taskHandle'
p24463
(lp24464
S'TaskHandle'
p24465
aNtp24466
(S'channel'
p24467
(lp24468
S'char'
p24469
a(lp24470
I-1
aaNtp24471
tp24472
tp24473
sS'DAQmxGetCIFreqMeasMeth'
p24474
((lp24475
S'int32'
p24476
ag34
a((S'taskHandle'
p24477
(lp24478
S'TaskHandle'
p24479
aNtp24480
(S'channel'
p24481
(lp24482
S'char'
p24483
a(lp24484
I-1
aaNtp24485
(S'data'
p24486
(lp24487
S'int32'
p24488
ag42
aNtp24489
tp24490
tp24491
sS'DAQmxGetAOUsbXferReqSize'
p24492
((lp24493
S'int32'
p24494
ag34
a((S'taskHandle'
p24495
(lp24496
S'TaskHandle'
p24497
aNtp24498
(S'channel'
p24499
(lp24500
S'char'
p24501
a(lp24502
I-1
aaNtp24503
(S'data'
p24504
(lp24505
S'uInt32'
p24506
ag42
aNtp24507
tp24508
tp24509
sS'DAQmxSetDOOvercurrentReenablePeriod'
p24510
((lp24511
S'int32'
p24512
ag34
a((S'taskHandle'
p24513
(lp24514
S'TaskHandle'
p24515
aNtp24516
(S'channel'
p24517
(lp24518
S'char'
p24519
a(lp24520
I-1
aaNtp24521
(S'data'
p24522
(lp24523
S'float64'
p24524
aNtp24525
tp24526
tp24527
sS'DAQmxResetExportedDataActiveEventOutputTerm'
p24528
((lp24529
S'int32'
p24530
ag34
a((S'taskHandle'
p24531
(lp24532
S'TaskHandle'
p24533
aNtp24534
tp24535
tp24536
sS'DAQmxSetAIACExcitSyncEnable'
p24537
((lp24538
S'int32'
p24539
ag34
a((S'taskHandle'
p24540
(lp24541
S'TaskHandle'
p24542
aNtp24543
(S'channel'
p24544
(lp24545
S'char'
p24546
a(lp24547
I-1
aaNtp24548
(S'data'
p24549
(lp24550
S'bool32'
p24551
aNtp24552
tp24553
tp24554
sS'DAQmxResetAIUsbXferReqCount'
p24555
((lp24556
S'int32'
p24557
ag34
a((S'taskHandle'
p24558
(lp24559
S'TaskHandle'
p24560
aNtp24561
(S'channel'
p24562
(lp24563
S'char'
p24564
a(lp24565
I-1
aaNtp24566
tp24567
tp24568
sS'DAQmxGetAIBridgeTwoPointLinSecondElectricalVal'
p24569
((lp24570
S'int32'
p24571
ag34
a((S'taskHandle'
p24572
(lp24573
S'TaskHandle'
p24574
aNtp24575
(S'channel'
p24576
(lp24577
S'char'
p24578
a(lp24579
I-1
aaNtp24580
(S'data'
p24581
(lp24582
S'float64'
p24583
ag42
aNtp24584
tp24585
tp24586
sS'DAQmxGetCIOutputState'
p24587
((lp24588
S'int32'
p24589
ag34
a((S'taskHandle'
p24590
(lp24591
S'TaskHandle'
p24592
aNtp24593
(S'channel'
p24594
(lp24595
S'char'
p24596
a(lp24597
I-1
aaNtp24598
(S'data'
p24599
(lp24600
S'int32'
p24601
ag42
aNtp24602
tp24603
tp24604
sS'DAQmxSetSwitchScanBreakMode'
p24605
((lp24606
S'int32'
p24607
ag34
a((S'taskHandle'
p24608
(lp24609
S'TaskHandle'
p24610
aNtp24611
(S'data'
p24612
(lp24613
S'int32'
p24614
aNtp24615
tp24616
tp24617
sS'DAQmxResetAIConvDigFltrTimebaseSrcEx'
p24618
((lp24619
S'int32'
p24620
ag34
a((S'taskHandle'
p24621
(lp24622
S'TaskHandle'
p24623
aNtp24624
(S'deviceNames'
p24625
(lp24626
S'char'
p24627
a(lp24628
I-1
aaNtp24629
tp24630
tp24631
sS'DAQmxSetAIAccelUnits'
p24632
((lp24633
S'int32'
p24634
ag34
a((S'taskHandle'
p24635
(lp24636
S'TaskHandle'
p24637
aNtp24638
(S'channel'
p24639
(lp24640
S'char'
p24641
a(lp24642
I-1
aaNtp24643
(S'data'
p24644
(lp24645
S'int32'
p24646
aNtp24647
tp24648
tp24649
sS'DAQmxSetAIChanCalOperatorName'
p24650
((lp24651
S'int32'
p24652
ag34
a((S'taskHandle'
p24653
(lp24654
S'TaskHandle'
p24655
aNtp24656
(S'channel'
p24657
(lp24658
S'char'
p24659
a(lp24660
I-1
aaNtp24661
(S'data'
p24662
(lp24663
S'char'
p24664
ag42
aNtp24665
tp24666
tp24667
sS'DAQmxGetWriteOverloadedChans'
p24668
((lp24669
S'int32'
p24670
ag34
a((S'taskHandle'
p24671
(lp24672
S'TaskHandle'
p24673
aNtp24674
(S'data'
p24675
(lp24676
S'char'
p24677
ag42
aNtp24678
(S'bufferSize'
p24679
(lp24680
S'uInt32'
p24681
aNtp24682
tp24683
tp24684
sS'DAQmxSetArmStartTrigType'
p24685
((lp24686
S'int32'
p24687
ag34
a((S'taskHandle'
p24688
(lp24689
S'TaskHandle'
p24690
aNtp24691
(S'data'
p24692
(lp24693
S'int32'
p24694
aNtp24695
tp24696
tp24697
sS'DAQmxSetAISoundPressuredBRef'
p24698
((lp24699
S'int32'
p24700
ag34
a((S'taskHandle'
p24701
(lp24702
S'TaskHandle'
p24703
aNtp24704
(S'channel'
p24705
(lp24706
S'char'
p24707
a(lp24708
I-1
aaNtp24709
(S'data'
p24710
(lp24711
S'float64'
p24712
aNtp24713
tp24714
tp24715
sS'DAQmxGetSyncPulseTerm'
p24716
((lp24717
S'int32'
p24718
ag34
a((S'taskHandle'
p24719
(lp24720
S'TaskHandle'
p24721
aNtp24722
(S'data'
p24723
(lp24724
S'char'
p24725
ag42
aNtp24726
(S'bufferSize'
p24727
(lp24728
S'uInt32'
p24729
aNtp24730
tp24731
tp24732
sS'DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate'
p24733
((lp24734
S'int32'
p24735
ag34
a((S'taskHandle'
p24736
(lp24737
S'TaskHandle'
p24738
aNtp24739
(S'data'
p24740
(lp24741
S'float64'
p24742
ag42
aNtp24743
tp24744
tp24745
sS'DAQmxGetAIExcitIdleOutputBehavior'
p24746
((lp24747
S'int32'
p24748
ag34
a((S'taskHandle'
p24749
(lp24750
S'TaskHandle'
p24751
aNtp24752
(S'channel'
p24753
(lp24754
S'char'
p24755
a(lp24756
I-1
aaNtp24757
(S'data'
p24758
(lp24759
S'int32'
p24760
ag42
aNtp24761
tp24762
tp24763
sS'DAQmxSetAISoundPressureMaxSoundPressureLvl'
p24764
((lp24765
S'int32'
p24766
ag34
a((S'taskHandle'
p24767
(lp24768
S'TaskHandle'
p24769
aNtp24770
(S'channel'
p24771
(lp24772
S'char'
p24773
a(lp24774
I-1
aaNtp24775
(S'data'
p24776
(lp24777
S'float64'
p24778
aNtp24779
tp24780
tp24781
sS'DAQmxSetAIADCCustomTimingMode'
p24782
((lp24783
S'int32'
p24784
ag34
a((S'taskHandle'
p24785
(lp24786
S'TaskHandle'
p24787
aNtp24788
(S'channel'
p24789
(lp24790
S'char'
p24791
a(lp24792
I-1
aaNtp24793
(S'data'
p24794
(lp24795
S'uInt32'
p24796
aNtp24797
tp24798
tp24799
sS'DAQmxGetAIConvRateEx'
p24800
((lp24801
S'int32'
p24802
ag34
a((S'taskHandle'
p24803
(lp24804
S'TaskHandle'
p24805
aNtp24806
(S'deviceNames'
p24807
(lp24808
S'char'
p24809
a(lp24810
I-1
aaNtp24811
(S'data'
p24812
(lp24813
S'float64'
p24814
ag42
aNtp24815
tp24816
tp24817
sS'DAQmxSetDigEdgeWatchdogExpirTrigEdge'
p24818
((lp24819
S'int32'
p24820
ag34
a((S'taskHandle'
p24821
(lp24822
S'TaskHandle'
p24823
aNtp24824
(S'data'
p24825
(lp24826
S'int32'
p24827
aNtp24828
tp24829
tp24830
sS'DAQmxGetAIResolutionUnits'
p24831
((lp24832
S'int32'
p24833
ag34
a((S'taskHandle'
p24834
(lp24835
S'TaskHandle'
p24836
aNtp24837
(S'channel'
p24838
(lp24839
S'char'
p24840
a(lp24841
I-1
aaNtp24842
(S'data'
p24843
(lp24844
S'int32'
p24845
ag42
aNtp24846
tp24847
tp24848
sS'DAQmxSetRealTimeNumOfWarmupIters'
p24849
((lp24850
S'int32'
p24851
ag34
a((S'taskHandle'
p24852
(lp24853
S'TaskHandle'
p24854
aNtp24855
(S'data'
p24856
(lp24857
S'uInt32'
p24858
aNtp24859
tp24860
tp24861
sS'DAQmxSwitchFindPath'
p24862
((lp24863
S'int32'
p24864
ag34
a((S'switchChannel1'
p24865
(lp24866
S'char'
p24867
a(lp24868
I-1
aaNtp24869
(S'switchChannel2'
p24870
(lp24871
S'char'
p24872
a(lp24873
I-1
aaNtp24874
(S'path'
p24875
(lp24876
S'char'
p24877
a(lp24878
I-1
aaNtp24879
(S'pathBufferSize'
p24880
(lp24881
S'uInt32'
p24882
aNtp24883
(S'pathStatus'
p24884
(lp24885
S'int32'
p24886
ag42
aNtp24887
tp24888
tp24889
sS'DAQmxResetCIDutyCycleDigFltrEnable'
p24890
((lp24891
S'int32'
p24892
ag34
a((S'taskHandle'
p24893
(lp24894
S'TaskHandle'
p24895
aNtp24896
(S'channel'
p24897
(lp24898
S'char'
p24899
a(lp24900
I-1
aaNtp24901
tp24902
tp24903
sS'DAQmxGetExportedHshkEventDelay'
p24904
((lp24905
S'int32'
p24906
ag34
a((S'taskHandle'
p24907
(lp24908
S'TaskHandle'
p24909
aNtp24910
(S'data'
p24911
(lp24912
S'float64'
p24913
ag42
aNtp24914
tp24915
tp24916
sS'DAQmxResetAIBridgeShuntCalShuntCalAResistance'
p24917
((lp24918
S'int32'
p24919
ag34
a((S'taskHandle'
p24920
(lp24921
S'TaskHandle'
p24922
aNtp24923
(S'channel'
p24924
(lp24925
S'char'
p24926
a(lp24927
I-1
aaNtp24928
tp24929
tp24930
sS'DAQmxCreateAIThrmcplChan'
p24931
((lp24932
S'int32'
p24933
ag34
a((S'taskHandle'
p24934
(lp24935
S'TaskHandle'
p24936
aNtp24937
(S'physicalChannel'
p24938
(lp24939
S'char'
p24940
a(lp24941
I-1
aaNtp24942
(S'nameToAssignToChannel'
p24943
(lp24944
S'char'
p24945
a(lp24946
I-1
aaNtp24947
(S'minVal'
p24948
(lp24949
S'float64'
p24950
aNtp24951
(S'maxVal'
p24952
(lp24953
S'float64'
p24954
aNtp24955
(S'units'
p24956
(lp24957
S'int32'
p24958
aNtp24959
(S'thermocoupleType'
p24960
(lp24961
S'int32'
p24962
aNtp24963
(S'cjcSource'
p24964
(lp24965
S'int32'
p24966
aNtp24967
(S'cjcVal'
p24968
(lp24969
S'float64'
p24970
aNtp24971
(S'cjcChannel'
p24972
(lp24973
S'char'
p24974
a(lp24975
I-1
aaNtp24976
tp24977
tp24978
sS'DAQmxGetDigEdgeAdvTrigDigFltrEnable'
p24979
((lp24980
S'int32'
p24981
ag34
a((S'taskHandle'
p24982
(lp24983
S'TaskHandle'
p24984
aNtp24985
(S'data'
p24986
(lp24987
S'bool32'
p24988
ag42
aNtp24989
tp24990
tp24991
sS'DAQmxGet9222CalAdjustPoints'
p24992
((lp24993
S'int32'
p24994
ag34
a((S'calHandle'
p24995
(lp24996
S'CalHandle'
p24997
aNtp24998
(S'adjustmentPoints'
p24999
(lp25000
S'float64'
p25001
ag42
aNtp25002
(S'bufferSize'
p25003
(lp25004
S'uInt32'
p25005
aNtp25006
tp25007
tp25008
sS'DAQmxResetCOPulseFreq'
p25009
((lp25010
S'int32'
p25011
ag34
a((S'taskHandle'
p25012
(lp25013
S'TaskHandle'
p25014
aNtp25015
(S'channel'
p25016
(lp25017
S'char'
p25018
a(lp25019
I-1
aaNtp25020
tp25021
tp25022
sS'DAQmxAdjust9203OffsetCal'
p25023
((lp25024
S'int32'
p25025
ag34
a((S'calHandle'
p25026
(lp25027
S'CalHandle'
p25028
aNtp25029
(S'channelNames'
p25030
(lp25031
S'char'
p25032
a(lp25033
I-1
aaNtp25034
(S'rangeMin'
p25035
(lp25036
S'float64'
p25037
aNtp25038
(S'rangeMax'
p25039
(lp25040
S'float64'
p25041
aNtp25042
tp25043
tp25044
sS'DAQmxSetAIBridgeShuntCalShuntCalAResistance'
p25045
((lp25046
S'int32'
p25047
ag34
a((S'taskHandle'
p25048
(lp25049
S'TaskHandle'
p25050
aNtp25051
(S'channel'
p25052
(lp25053
S'char'
p25054
a(lp25055
I-1
aaNtp25056
(S'data'
p25057
(lp25058
S'float64'
p25059
aNtp25060
tp25061
tp25062
sS'DAQmxResetWatchdogDOExpirState'
p25063
((lp25064
S'int32'
p25065
ag34
a((S'taskHandle'
p25066
(lp25067
S'TaskHandle'
p25068
aNtp25069
(S'lines'
p25070
(lp25071
S'char'
p25072
a(lp25073
I-1
aaNtp25074
tp25075
tp25076
sS'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p25077
((lp25078
S'int32'
p25079
ag34
a((S'taskHandle'
p25080
(lp25081
S'TaskHandle'
p25082
aNtp25083
tp25084
tp25085
sS'DAQmxGetAIUsbXferReqSize'
p25086
((lp25087
S'int32'
p25088
ag34
a((S'taskHandle'
p25089
(lp25090
S'TaskHandle'
p25091
aNtp25092
(S'channel'
p25093
(lp25094
S'char'
p25095
a(lp25096
I-1
aaNtp25097
(S'data'
p25098
(lp25099
S'uInt32'
p25100
ag42
aNtp25101
tp25102
tp25103
sS'DAQmxSetCICtrTimebaseRate'
p25104
((lp25105
S'int32'
p25106
ag34
a((S'taskHandle'
p25107
(lp25108
S'TaskHandle'
p25109
aNtp25110
(S'channel'
p25111
(lp25112
S'char'
p25113
a(lp25114
I-1
aaNtp25115
(S'data'
p25116
(lp25117
S'float64'
p25118
aNtp25119
tp25120
tp25121
sS'DAQmxGetDevAIVoltageIntExcitRangeVals'
p25122
((lp25123
S'int32'
p25124
ag34
a((S'device'
p25125
(lp25126
S'char'
p25127
a(lp25128
I-1
aaNtp25129
(S'data'
p25130
(lp25131
S'float64'
p25132
ag42
aNtp25133
(S'arraySizeInElements'
p25134
(lp25135
S'uInt32'
p25136
aNtp25137
tp25138
tp25139
sS'DAQmxGetCIUsbXferReqSize'
p25140
((lp25141
S'int32'
p25142
ag34
a((S'taskHandle'
p25143
(lp25144
S'TaskHandle'
p25145
aNtp25146
(S'channel'
p25147
(lp25148
S'char'
p25149
a(lp25150
I-1
aaNtp25151
(S'data'
p25152
(lp25153
S'uInt32'
p25154
ag42
aNtp25155
tp25156
tp25157
sS'DAQmxGetAIDigFltrNotchWidth'
p25158
((lp25159
S'int32'
p25160
ag34
a((S'taskHandle'
p25161
(lp25162
S'TaskHandle'
p25163
aNtp25164
(S'channel'
p25165
(lp25166
S'char'
p25167
a(lp25168
I-1
aaNtp25169
(S'data'
p25170
(lp25171
S'float64'
p25172
ag42
aNtp25173
tp25174
tp25175
sS'DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p25176
((lp25177
S'int32'
p25178
ag34
a((S'taskHandle'
p25179
(lp25180
S'TaskHandle'
p25181
aNtp25182
(S'channel'
p25183
(lp25184
S'char'
p25185
a(lp25186
I-1
aaNtp25187
tp25188
tp25189
sS'DAQmxGetSwitchChanWireMode'
p25190
((lp25191
S'int32'
p25192
ag34
a((S'switchChannelName'
p25193
(lp25194
S'char'
p25195
a(lp25196
I-1
aaNtp25197
(S'data'
p25198
(lp25199
S'uInt32'
p25200
ag42
aNtp25201
tp25202
tp25203
sS'DAQmxAdjust1540Cal'
p25204
((lp25205
S'int32'
p25206
ag34
a((S'calHandle'
p25207
(lp25208
S'CalHandle'
p25209
aNtp25210
(S'refVoltage'
p25211
(lp25212
S'float64'
p25213
aNtp25214
(S'measOutput'
p25215
(lp25216
S'float64'
p25217
aNtp25218
(S'inputCalSource'
p25219
(lp25220
S'int32'
p25221
aNtp25222
tp25223
tp25224
sS'DAQmxCreateTask'
p25225
((lp25226
S'int32'
p25227
ag34
a((S'taskName'
p25228
(lp25229
S'char'
p25230
a(lp25231
I-1
aaNtp25232
(S'taskHandle'
p25233
(lp25234
S'TaskHandle'
p25235
ag42
aNtp25236
tp25237
tp25238
sS'DAQmxCreateCIPulseWidthChan'
p25239
((lp25240
S'int32'
p25241
ag34
a((S'taskHandle'
p25242
(lp25243
S'TaskHandle'
p25244
aNtp25245
(S'counter'
p25246
(lp25247
S'char'
p25248
a(lp25249
I-1
aaNtp25250
(S'nameToAssignToChannel'
p25251
(lp25252
S'char'
p25253
a(lp25254
I-1
aaNtp25255
(S'minVal'
p25256
(lp25257
S'float64'
p25258
aNtp25259
(S'maxVal'
p25260
(lp25261
S'float64'
p25262
aNtp25263
(S'units'
p25264
(lp25265
S'int32'
p25266
aNtp25267
(S'startingEdge'
p25268
(lp25269
S'int32'
p25270
aNtp25271
(S'customScaleName'
p25272
(lp25273
S'char'
p25274
a(lp25275
I-1
aaNtp25276
tp25277
tp25278
sS'DAQmxGetAIConvDigFltrTimebaseRateEx'
p25279
((lp25280
S'int32'
p25281
ag34
a((S'taskHandle'
p25282
(lp25283
S'TaskHandle'
p25284
aNtp25285
(S'deviceNames'
p25286
(lp25287
S'char'
p25288
a(lp25289
I-1
aaNtp25290
(S'data'
p25291
(lp25292
S'float64'
p25293
ag42
aNtp25294
tp25295
tp25296
sS'DAQmxSetAIVelocityIEPESensorSensitivity'
p25297
((lp25298
S'int32'
p25299
ag34
a((S'taskHandle'
p25300
(lp25301
S'TaskHandle'
p25302
aNtp25303
(S'channel'
p25304
(lp25305
S'char'
p25306
a(lp25307
I-1
aaNtp25308
(S'data'
p25309
(lp25310
S'float64'
p25311
aNtp25312
tp25313
tp25314
sS'DAQmxGetAOReglitchEnable'
p25315
((lp25316
S'int32'
p25317
ag34
a((S'taskHandle'
p25318
(lp25319
S'TaskHandle'
p25320
aNtp25321
(S'channel'
p25322
(lp25323
S'char'
p25324
a(lp25325
I-1
aaNtp25326
(S'data'
p25327
(lp25328
S'bool32'
p25329
ag42
aNtp25330
tp25331
tp25332
sS'DAQmxResetDOOvercurrentLimit'
p25333
((lp25334
S'int32'
p25335
ag34
a((S'taskHandle'
p25336
(lp25337
S'TaskHandle'
p25338
aNtp25339
(S'channel'
p25340
(lp25341
S'char'
p25342
a(lp25343
I-1
aaNtp25344
tp25345
tp25346
sS'DAQmxReadDigitalScalarU32'
p25347
((lp25348
S'int32'
p25349
ag34
a((S'taskHandle'
p25350
(lp25351
S'TaskHandle'
p25352
aNtp25353
(S'timeout'
p25354
(lp25355
S'float64'
p25356
aNtp25357
(S'value'
p25358
(lp25359
S'uInt32'
p25360
ag42
aNtp25361
(S'reserved'
p25362
(lp25363
S'bool32'
p25364
ag42
aNtp25365
tp25366
tp25367
sS'DAQmxSetCIDutyCycleTermCfg'
p25368
((lp25369
S'int32'
p25370
ag34
a((S'taskHandle'
p25371
(lp25372
S'TaskHandle'
p25373
aNtp25374
(S'channel'
p25375
(lp25376
S'char'
p25377
a(lp25378
I-1
aaNtp25379
(S'data'
p25380
(lp25381
S'int32'
p25382
aNtp25383
tp25384
tp25385
sS'DAQmxGetCICountEdgesCountResetEnable'
p25386
((lp25387
S'int32'
p25388
ag34
a((S'taskHandle'
p25389
(lp25390
S'TaskHandle'
p25391
aNtp25392
(S'channel'
p25393
(lp25394
S'char'
p25395
a(lp25396
I-1
aaNtp25397
(S'data'
p25398
(lp25399
S'bool32'
p25400
ag42
aNtp25401
tp25402
tp25403
sS'DAQmxGetPersistedScaleAllowInteractiveEditing'
p25404
((lp25405
S'int32'
p25406
ag34
a((S'scaleName'
p25407
(lp25408
S'char'
p25409
a(lp25410
I-1
aaNtp25411
(S'data'
p25412
(lp25413
S'bool32'
p25414
ag42
aNtp25415
tp25416
tp25417
sS'DAQmxAdjust9239Cal'
p25418
((lp25419
S'int32'
p25420
ag34
a((S'calHandle'
p25421
(lp25422
S'CalHandle'
p25423
aNtp25424
(S'channelNames'
p25425
(lp25426
S'char'
p25427
a(lp25428
I-1
aaNtp25429
(S'value'
p25430
(lp25431
S'float64'
p25432
aNtp25433
tp25434
tp25435
sS'DAQmxGetSwitchChanMaxDCCarryCurrent'
p25436
((lp25437
S'int32'
p25438
ag34
a((S'switchChannelName'
p25439
(lp25440
S'char'
p25441
a(lp25442
I-1
aaNtp25443
(S'data'
p25444
(lp25445
S'float64'
p25446
ag42
aNtp25447
tp25448
tp25449
sS'DAQmxResetCOUsbXferReqSize'
p25450
((lp25451
S'int32'
p25452
ag34
a((S'taskHandle'
p25453
(lp25454
S'TaskHandle'
p25455
aNtp25456
(S'channel'
p25457
(lp25458
S'char'
p25459
a(lp25460
I-1
aaNtp25461
tp25462
tp25463
sS'DAQmxGetExportedRefTrigPulsePolarity'
p25464
((lp25465
S'int32'
p25466
ag34
a((S'taskHandle'
p25467
(lp25468
S'TaskHandle'
p25469
aNtp25470
(S'data'
p25471
(lp25472
S'int32'
p25473
ag42
aNtp25474
tp25475
tp25476
sS'DAQmxGetAnlgWinPauseTrigWhen'
p25477
((lp25478
S'int32'
p25479
ag34
a((S'taskHandle'
p25480
(lp25481
S'TaskHandle'
p25482
aNtp25483
(S'data'
p25484
(lp25485
S'int32'
p25486
ag42
aNtp25487
tp25488
tp25489
sS'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p25490
((lp25491
S'int32'
p25492
ag34
a((S'taskHandle'
p25493
(lp25494
S'TaskHandle'
p25495
aNtp25496
(S'channel'
p25497
(lp25498
S'char'
p25499
a(lp25500
I-1
aaNtp25501
tp25502
tp25503
sS'DAQmxGetSwitchScanAttribute'
p25504
((lp25505
S'int32'
p25506
ag3995
a((S'taskHandle'
p25507
(lp25508
S'TaskHandle'
p25509
aNtp25510
(S'attribute'
p25511
(lp25512
S'int32'
p25513
aNtp25514
(S'value'
p25515
(lp25516
S'void'
p25517
ag42
aNtp25518
tp25519
tp25520
sS'DAQmxSetAIBridgeInitialVoltage'
p25521
((lp25522
S'int32'
p25523
ag34
a((S'taskHandle'
p25524
(lp25525
S'TaskHandle'
p25526
aNtp25527
(S'channel'
p25528
(lp25529
S'char'
p25530
a(lp25531
I-1
aaNtp25532
(S'data'
p25533
(lp25534
S'float64'
p25535
aNtp25536
tp25537
tp25538
sS'DAQmxAdjust9234OffsetCal'
p25539
((lp25540
S'int32'
p25541
ag34
a((S'calHandle'
p25542
(lp25543
S'CalHandle'
p25544
aNtp25545
(S'channelNames'
p25546
(lp25547
S'char'
p25548
a(lp25549
I-1
aaNtp25550
tp25551
tp25552
sS'DAQmxSetAIBridgeElectricalUnits'
p25553
((lp25554
S'int32'
p25555
ag34
a((S'taskHandle'
p25556
(lp25557
S'TaskHandle'
p25558
aNtp25559
(S'channel'
p25560
(lp25561
S'char'
p25562
a(lp25563
I-1
aaNtp25564
(S'data'
p25565
(lp25566
S'int32'
p25567
aNtp25568
tp25569
tp25570
sS'DAQmxGetExportedRdyForXferEventDeassertCondCustomThreshold'
p25571
((lp25572
S'int32'
p25573
ag34
a((S'taskHandle'
p25574
(lp25575
S'TaskHandle'
p25576
aNtp25577
(S'data'
p25578
(lp25579
S'uInt32'
p25580
ag42
aNtp25581
tp25582
tp25583
sS'DAQmxResetCOPulseFreqUnits'
p25584
((lp25585
S'int32'
p25586
ag34
a((S'taskHandle'
p25587
(lp25588
S'TaskHandle'
p25589
aNtp25590
(S'channel'
p25591
(lp25592
S'char'
p25593
a(lp25594
I-1
aaNtp25595
tp25596
tp25597
sS'DAQmxResetCIEncoderAInputDigFltrTimebaseSrc'
p25598
((lp25599
S'int32'
p25600
ag34
a((S'taskHandle'
p25601
(lp25602
S'TaskHandle'
p25603
aNtp25604
(S'channel'
p25605
(lp25606
S'char'
p25607
a(lp25608
I-1
aaNtp25609
tp25610
tp25611
sS'DAQmxGetAIVelocityUnits'
p25612
((lp25613
S'int32'
p25614
ag34
a((S'taskHandle'
p25615
(lp25616
S'TaskHandle'
p25617
aNtp25618
(S'channel'
p25619
(lp25620
S'char'
p25621
a(lp25622
I-1
aaNtp25623
(S'data'
p25624
(lp25625
S'int32'
p25626
ag42
aNtp25627
tp25628
tp25629
sS'DAQmxResetDigEdgeStartTrigSrc'
p25630
((lp25631
S'int32'
p25632
ag34
a((S'taskHandle'
p25633
(lp25634
S'TaskHandle'
p25635
aNtp25636
tp25637
tp25638
sS'DAQmxCreateAIPosLVDTChan'
p25639
((lp25640
S'int32'
p25641
ag34
a((S'taskHandle'
p25642
(lp25643
S'TaskHandle'
p25644
aNtp25645
(S'physicalChannel'
p25646
(lp25647
S'char'
p25648
a(lp25649
I-1
aaNtp25650
(S'nameToAssignToChannel'
p25651
(lp25652
S'char'
p25653
a(lp25654
I-1
aaNtp25655
(S'minVal'
p25656
(lp25657
S'float64'
p25658
aNtp25659
(S'maxVal'
p25660
(lp25661
S'float64'
p25662
aNtp25663
(S'units'
p25664
(lp25665
S'int32'
p25666
aNtp25667
(S'sensitivity'
p25668
(lp25669
S'float64'
p25670
aNtp25671
(S'sensitivityUnits'
p25672
(lp25673
S'int32'
p25674
aNtp25675
(S'voltageExcitSource'
p25676
(lp25677
S'int32'
p25678
aNtp25679
(S'voltageExcitVal'
p25680
(lp25681
S'float64'
p25682
aNtp25683
(S'voltageExcitFreq'
p25684
(lp25685
S'float64'
p25686
aNtp25687
(S'ACExcitWireMode'
p25688
(lp25689
S'int32'
p25690
aNtp25691
(S'customScaleName'
p25692
(lp25693
S'char'
p25694
a(lp25695
I-1
aaNtp25696
tp25697
tp25698
sS'DAQmxCreateAICurrentChan'
p25699
((lp25700
S'int32'
p25701
ag34
a((S'taskHandle'
p25702
(lp25703
S'TaskHandle'
p25704
aNtp25705
(S'physicalChannel'
p25706
(lp25707
S'char'
p25708
a(lp25709
I-1
aaNtp25710
(S'nameToAssignToChannel'
p25711
(lp25712
S'char'
p25713
a(lp25714
I-1
aaNtp25715
(S'terminalConfig'
p25716
(lp25717
S'int32'
p25718
aNtp25719
(S'minVal'
p25720
(lp25721
S'float64'
p25722
aNtp25723
(S'maxVal'
p25724
(lp25725
S'float64'
p25726
aNtp25727
(S'units'
p25728
(lp25729
S'int32'
p25730
aNtp25731
(S'shuntResistorLoc'
p25732
(lp25733
S'int32'
p25734
aNtp25735
(S'extShuntResistorVal'
p25736
(lp25737
S'float64'
p25738
aNtp25739
(S'customScaleName'
p25740
(lp25741
S'char'
p25742
a(lp25743
I-1
aaNtp25744
tp25745
tp25746
sS'DAQmxResetExportedRdyForXferEventDeassertCondCustomThreshold'
p25747
((lp25748
S'int32'
p25749
ag34
a((S'taskHandle'
p25750
(lp25751
S'TaskHandle'
p25752
aNtp25753
tp25754
tp25755
sS'DAQmxGetCISemiPeriodUnits'
p25756
((lp25757
S'int32'
p25758
ag34
a((S'taskHandle'
p25759
(lp25760
S'TaskHandle'
p25761
aNtp25762
(S'channel'
p25763
(lp25764
S'char'
p25765
a(lp25766
I-1
aaNtp25767
(S'data'
p25768
(lp25769
S'int32'
p25770
ag42
aNtp25771
tp25772
tp25773
sS'DAQmxGetDevAICurrentRngs'
p25774
((lp25775
S'int32'
p25776
ag34
a((S'device'
p25777
(lp25778
S'char'
p25779
a(lp25780
I-1
aaNtp25781
(S'data'
p25782
(lp25783
S'float64'
p25784
ag42
aNtp25785
(S'arraySizeInElements'
p25786
(lp25787
S'uInt32'
p25788
aNtp25789
tp25790
tp25791
sS'DAQmxGetCICtrTimebaseDigFltrMinPulseWidth'
p25792
((lp25793
S'int32'
p25794
ag34
a((S'taskHandle'
p25795
(lp25796
S'TaskHandle'
p25797
aNtp25798
(S'channel'
p25799
(lp25800
S'char'
p25801
a(lp25802
I-1
aaNtp25803
(S'data'
p25804
(lp25805
S'float64'
p25806
ag42
aNtp25807
tp25808
tp25809
sS'DAQmxResetAIConvDigFltrMinPulseWidthEx'
p25810
((lp25811
S'int32'
p25812
ag34
a((S'taskHandle'
p25813
(lp25814
S'TaskHandle'
p25815
aNtp25816
(S'deviceNames'
p25817
(lp25818
S'char'
p25819
a(lp25820
I-1
aaNtp25821
tp25822
tp25823
sS'DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate'
p25824
((lp25825
S'int32'
p25826
ag34
a((S'taskHandle'
p25827
(lp25828
S'TaskHandle'
p25829
aNtp25830
(S'channel'
p25831
(lp25832
S'char'
p25833
a(lp25834
I-1
aaNtp25835
(S'data'
p25836
(lp25837
S'float64'
p25838
aNtp25839
tp25840
tp25841
sS'DAQmxGetAIDigFltrHighpassCutoffFreq'
p25842
((lp25843
S'int32'
p25844
ag34
a((S'taskHandle'
p25845
(lp25846
S'TaskHandle'
p25847
aNtp25848
(S'channel'
p25849
(lp25850
S'char'
p25851
a(lp25852
I-1
aaNtp25853
(S'data'
p25854
(lp25855
S'float64'
p25856
ag42
aNtp25857
tp25858
tp25859
sS'DAQmxSetup1102Cal'
p25860
((lp25861
S'int32'
p25862
ag34
a((S'calHandle'
p25863
(lp25864
S'CalHandle'
p25865
aNtp25866
(S'channelName'
p25867
(lp25868
S'char'
p25869
a(lp25870
I-1
aaNtp25871
(S'gain'
p25872
(lp25873
S'float64'
p25874
aNtp25875
tp25876
tp25877
sS'DAQmxSetAnlgWinPauseTrigBtm'
p25878
((lp25879
S'int32'
p25880
ag34
a((S'taskHandle'
p25881
(lp25882
S'TaskHandle'
p25883
aNtp25884
(S'data'
p25885
(lp25886
S'float64'
p25887
aNtp25888
tp25889
tp25890
sS'DAQmxResetCIFreqTermCfg'
p25891
((lp25892
S'int32'
p25893
ag34
a((S'taskHandle'
p25894
(lp25895
S'TaskHandle'
p25896
aNtp25897
(S'channel'
p25898
(lp25899
S'char'
p25900
a(lp25901
I-1
aaNtp25902
tp25903
tp25904
sS'DAQmxGetCOUsbXferReqSize'
p25905
((lp25906
S'int32'
p25907
ag34
a((S'taskHandle'
p25908
(lp25909
S'TaskHandle'
p25910
aNtp25911
(S'channel'
p25912
(lp25913
S'char'
p25914
a(lp25915
I-1
aaNtp25916
(S'data'
p25917
(lp25918
S'uInt32'
p25919
ag42
aNtp25920
tp25921
tp25922
sS'DAQmxGetAISoundPressureMaxSoundPressureLvl'
p25923
((lp25924
S'int32'
p25925
ag34
a((S'taskHandle'
p25926
(lp25927
S'TaskHandle'
p25928
aNtp25929
(S'channel'
p25930
(lp25931
S'char'
p25932
a(lp25933
I-1
aaNtp25934
(S'data'
p25935
(lp25936
S'float64'
p25937
ag42
aNtp25938
tp25939
tp25940
sS'DAQmxSetCIEncoderBInputDigFltrEnable'
p25941
((lp25942
S'int32'
p25943
ag34
a((S'taskHandle'
p25944
(lp25945
S'TaskHandle'
p25946
aNtp25947
(S'channel'
p25948
(lp25949
S'char'
p25950
a(lp25951
I-1
aaNtp25952
(S'data'
p25953
(lp25954
S'bool32'
p25955
aNtp25956
tp25957
tp25958
sS'DAQmxResetCIPulseTicksLogicLvlBehavior'
p25959
((lp25960
S'int32'
p25961
ag34
a((S'taskHandle'
p25962
(lp25963
S'TaskHandle'
p25964
aNtp25965
(S'channel'
p25966
(lp25967
S'char'
p25968
a(lp25969
I-1
aaNtp25970
tp25971
tp25972
sS'DAQmxResetSampClkUnderflowBehavior'
p25973
((lp25974
S'int32'
p25975
ag34
a((S'taskHandle'
p25976
(lp25977
S'TaskHandle'
p25978
aNtp25979
tp25980
tp25981
sS'DAQmxGetCOCtrTimebaseSrc'
p25982
((lp25983
S'int32'
p25984
ag34
a((S'taskHandle'
p25985
(lp25986
S'TaskHandle'
p25987
aNtp25988
(S'channel'
p25989
(lp25990
S'char'
p25991
a(lp25992
I-1
aaNtp25993
(S'data'
p25994
(lp25995
S'char'
p25996
ag42
aNtp25997
(S'bufferSize'
p25998
(lp25999
S'uInt32'
p26000
aNtp26001
tp26002
tp26003
sS'DAQmxSetAICustomScaleName'
p26004
((lp26005
S'int32'
p26006
ag34
a((S'taskHandle'
p26007
(lp26008
S'TaskHandle'
p26009
aNtp26010
(S'channel'
p26011
(lp26012
S'char'
p26013
a(lp26014
I-1
aaNtp26015
(S'data'
p26016
(lp26017
S'char'
p26018
ag42
aNtp26019
tp26020
tp26021
sS'DAQmxResetAIADCCustomTimingMode'
p26022
((lp26023
S'int32'
p26024
ag34
a((S'taskHandle'
p26025
(lp26026
S'TaskHandle'
p26027
aNtp26028
(S'channel'
p26029
(lp26030
S'char'
p26031
a(lp26032
I-1
aaNtp26033
tp26034
tp26035
sS'DAQmxSetTriggerSyncType'
p26036
((lp26037
S'int32'
p26038
ag34
a((S'taskHandle'
p26039
(lp26040
S'TaskHandle'
p26041
aNtp26042
(S'data'
p26043
(lp26044
S'int32'
p26045
aNtp26046
tp26047
tp26048
sS'DAQmxGetDisconnectedCDAQSyncPorts'
p26049
((lp26050
S'int32'
p26051
ag34
a((S'portList'
p26052
(lp26053
S'char'
p26054
a(lp26055
I-1
aaNtp26056
(S'portListSize'
p26057
(lp26058
S'uInt32'
p26059
aNtp26060
tp26061
tp26062
sS'DAQmxSetExportedWatchdogExpiredEventOutputTerm'
p26063
((lp26064
S'int32'
p26065
ag34
a((S'taskHandle'
p26066
(lp26067
S'TaskHandle'
p26068
aNtp26069
(S'data'
p26070
(lp26071
S'char'
p26072
ag42
aNtp26073
tp26074
tp26075
sS'DAQmxResetAODataXferMech'
p26076
((lp26077
S'int32'
p26078
ag34
a((S'taskHandle'
p26079
(lp26080
S'TaskHandle'
p26081
aNtp26082
(S'channel'
p26083
(lp26084
S'char'
p26085
a(lp26086
I-1
aaNtp26087
tp26088
tp26089
sS'DAQmxResetAIDigFltrResponse'
p26090
((lp26091
S'int32'
p26092
ag34
a((S'taskHandle'
p26093
(lp26094
S'TaskHandle'
p26095
aNtp26096
(S'channel'
p26097
(lp26098
S'char'
p26099
a(lp26100
I-1
aaNtp26101
tp26102
tp26103
sS'DAQmxResetWriteNextWriteIsLast'
p26104
((lp26105
S'int32'
p26106
ag34
a((S'taskHandle'
p26107
(lp26108
S'TaskHandle'
p26109
aNtp26110
tp26111
tp26112
sS'DAQmxResetCISemiPeriodUnits'
p26113
((lp26114
S'int32'
p26115
ag34
a((S'taskHandle'
p26116
(lp26117
S'TaskHandle'
p26118
aNtp26119
(S'channel'
p26120
(lp26121
S'char'
p26122
a(lp26123
I-1
aaNtp26124
tp26125
tp26126
sS'DAQmxResetDILogicFamily'
p26127
((lp26128
S'int32'
p26129
ag34
a((S'taskHandle'
p26130
(lp26131
S'TaskHandle'
p26132
aNtp26133
(S'channel'
p26134
(lp26135
S'char'
p26136
a(lp26137
I-1
aaNtp26138
tp26139
tp26140
sS'DAQmxGetCOCount'
p26141
((lp26142
S'int32'
p26143
ag34
a((S'taskHandle'
p26144
(lp26145
S'TaskHandle'
p26146
aNtp26147
(S'channel'
p26148
(lp26149
S'char'
p26150
a(lp26151
I-1
aaNtp26152
(S'data'
p26153
(lp26154
S'uInt32'
p26155
ag42
aNtp26156
tp26157
tp26158
sS'DAQmxSetAnlgWinRefTrigTop'
p26159
((lp26160
S'int32'
p26161
ag34
a((S'taskHandle'
p26162
(lp26163
S'TaskHandle'
p26164
aNtp26165
(S'data'
p26166
(lp26167
S'float64'
p26168
aNtp26169
tp26170
tp26171
sS'DAQmxGetCICtrTimebaseSrc'
p26172
((lp26173
S'int32'
p26174
ag34
a((S'taskHandle'
p26175
(lp26176
S'TaskHandle'
p26177
aNtp26178
(S'channel'
p26179
(lp26180
S'char'
p26181
a(lp26182
I-1
aaNtp26183
(S'data'
p26184
(lp26185
S'char'
p26186
ag42
aNtp26187
(S'bufferSize'
p26188
(lp26189
S'uInt32'
p26190
aNtp26191
tp26192
tp26193
sS'DAQmxSetCOPulseLowTime'
p26194
((lp26195
S'int32'
p26196
ag34
a((S'taskHandle'
p26197
(lp26198
S'TaskHandle'
p26199
aNtp26200
(S'channel'
p26201
(lp26202
S'char'
p26203
a(lp26204
I-1
aaNtp26205
(S'data'
p26206
(lp26207
S'float64'
p26208
aNtp26209
tp26210
tp26211
sS'DAQmxGetDIDigFltrEnableBusMode'
p26212
((lp26213
S'int32'
p26214
ag34
a((S'taskHandle'
p26215
(lp26216
S'TaskHandle'
p26217
aNtp26218
(S'channel'
p26219
(lp26220
S'char'
p26221
a(lp26222
I-1
aaNtp26223
(S'data'
p26224
(lp26225
S'bool32'
p26226
ag42
aNtp26227
tp26228
tp26229
sS'DAQmxGetAIThrmcplCJCVal'
p26230
((lp26231
S'int32'
p26232
ag34
a((S'taskHandle'
p26233
(lp26234
S'TaskHandle'
p26235
aNtp26236
(S'channel'
p26237
(lp26238
S'char'
p26239
a(lp26240
I-1
aaNtp26241
(S'data'
p26242
(lp26243
S'float64'
p26244
ag42
aNtp26245
tp26246
tp26247
sS'DAQmxResetSwitchScanAttribute'
p26248
((lp26249
S'int32'
p26250
ag34
a((S'taskHandle'
p26251
(lp26252
S'TaskHandle'
p26253
aNtp26254
(S'attribute'
p26255
(lp26256
S'int32'
p26257
aNtp26258
tp26259
tp26260
sS'DAQmxSetAIBridgeInitialRatio'
p26261
((lp26262
S'int32'
p26263
ag34
a((S'taskHandle'
p26264
(lp26265
S'TaskHandle'
p26266
aNtp26267
(S'channel'
p26268
(lp26269
S'char'
p26270
a(lp26271
I-1
aaNtp26272
(S'data'
p26273
(lp26274
S'float64'
p26275
aNtp26276
tp26277
tp26278
sS'DAQmxSetWriteNextWriteIsLast'
p26279
((lp26280
S'int32'
p26281
ag34
a((S'taskHandle'
p26282
(lp26283
S'TaskHandle'
p26284
aNtp26285
(S'data'
p26286
(lp26287
S'bool32'
p26288
aNtp26289
tp26290
tp26291
sS'DAQmxResetCIAngEncoderPulsesPerRev'
p26292
((lp26293
S'int32'
p26294
ag34
a((S'taskHandle'
p26295
(lp26296
S'TaskHandle'
p26297
aNtp26298
(S'channel'
p26299
(lp26300
S'char'
p26301
a(lp26302
I-1
aaNtp26303
tp26304
tp26305
sS'DAQmxResetDigEdgeRefTrigSrc'
p26306
((lp26307
S'int32'
p26308
ag34
a((S'taskHandle'
p26309
(lp26310
S'TaskHandle'
p26311
aNtp26312
tp26313
tp26314
sS'DAQmxWriteToTEDSFromFile'
p26315
((lp26316
S'int32'
p26317
ag34
a((S'physicalChannel'
p26318
(lp26319
S'char'
p26320
a(lp26321
I-1
aaNtp26322
(S'filePath'
p26323
(lp26324
S'char'
p26325
a(lp26326
I-1
aaNtp26327
(S'basicTEDSOptions'
p26328
(lp26329
S'int32'
p26330
aNtp26331
tp26332
tp26333
sS'DAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc'
p26334
((lp26335
S'int32'
p26336
ag34
a((S'taskHandle'
p26337
(lp26338
S'TaskHandle'
p26339
aNtp26340
(S'data'
p26341
(lp26342
S'char'
p26343
ag42
aNtp26344
tp26345
tp26346
sS'DAQmxResetDigLvlPauseTrigSrc'
p26347
((lp26348
S'int32'
p26349
ag34
a((S'taskHandle'
p26350
(lp26351
S'TaskHandle'
p26352
aNtp26353
tp26354
tp26355
sS'DAQmxGetDevAIBridgeRngs'
p26356
((lp26357
S'int32'
p26358
ag34
a((S'device'
p26359
(lp26360
S'char'
p26361
a(lp26362
I-1
aaNtp26363
(S'data'
p26364
(lp26365
S'float64'
p26366
ag42
aNtp26367
(S'arraySizeInElements'
p26368
(lp26369
S'uInt32'
p26370
aNtp26371
tp26372
tp26373
sS'DAQmxResetAnlgLvlPauseTrigLvl'
p26374
((lp26375
S'int32'
p26376
ag34
a((S'taskHandle'
p26377
(lp26378
S'TaskHandle'
p26379
aNtp26380
tp26381
tp26382
sS'DAQmxSetStartTrigDelayUnits'
p26383
((lp26384
S'int32'
p26385
ag34
a((S'taskHandle'
p26386
(lp26387
S'TaskHandle'
p26388
aNtp26389
(S'data'
p26390
(lp26391
S'int32'
p26392
aNtp26393
tp26394
tp26395
sS'DAQmxResetCOPulseLowTime'
p26396
((lp26397
S'int32'
p26398
ag34
a((S'taskHandle'
p26399
(lp26400
S'TaskHandle'
p26401
aNtp26402
(S'channel'
p26403
(lp26404
S'char'
p26405
a(lp26406
I-1
aaNtp26407
tp26408
tp26409
sS'DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc'
p26410
((lp26411
S'int32'
p26412
ag34
a((S'taskHandle'
p26413
(lp26414
S'TaskHandle'
p26415
aNtp26416
(S'channel'
p26417
(lp26418
S'char'
p26419
a(lp26420
I-1
aaNtp26421
tp26422
tp26423
sS'DAQmxSetAnlgWinRefTrigDigFltrEnable'
p26424
((lp26425
S'int32'
p26426
ag34
a((S'taskHandle'
p26427
(lp26428
S'TaskHandle'
p26429
aNtp26430
(S'data'
p26431
(lp26432
S'bool32'
p26433
aNtp26434
tp26435
tp26436
sS'DAQmxWriteDigitalLines'
p26437
((lp26438
S'int32'
p26439
ag34
a((S'taskHandle'
p26440
(lp26441
S'TaskHandle'
p26442
aNtp26443
(S'numSampsPerChan'
p26444
(lp26445
S'int32'
p26446
aNtp26447
(S'autoStart'
p26448
(lp26449
S'bool32'
p26450
aNtp26451
(S'timeout'
p26452
(lp26453
S'float64'
p26454
aNtp26455
(S'dataLayout'
p26456
(lp26457
S'bool32'
p26458
aNtp26459
(S'writeArray'
p26460
(lp26461
S'uInt8'
p26462
a(lp26463
I-1
aaNtp26464
(S'sampsPerChanWritten'
p26465
(lp26466
S'int32'
p26467
ag42
aNtp26468
(S'reserved'
p26469
(lp26470
S'bool32'
p26471
ag42
aNtp26472
tp26473
tp26474
sS'DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth'
p26475
((lp26476
S'int32'
p26477
ag34
a((S'taskHandle'
p26478
(lp26479
S'TaskHandle'
p26480
aNtp26481
(S'data'
p26482
(lp26483
S'float64'
p26484
aNtp26485
tp26486
tp26487
sS'DAQmxGetSelfCalLastTemp'
p26488
((lp26489
S'int32'
p26490
ag34
a((S'deviceName'
p26491
(lp26492
S'char'
p26493
a(lp26494
I-1
aaNtp26495
(S'data'
p26496
(lp26497
S'float64'
p26498
ag42
aNtp26499
tp26500
tp26501
sS'DAQmxSetAODataXferReqCond'
p26502
((lp26503
S'int32'
p26504
ag34
a((S'taskHandle'
p26505
(lp26506
S'TaskHandle'
p26507
aNtp26508
(S'channel'
p26509
(lp26510
S'char'
p26511
a(lp26512
I-1
aaNtp26513
(S'data'
p26514
(lp26515
S'int32'
p26516
aNtp26517
tp26518
tp26519
sS'DAQmxResetBufferAttribute'
p26520
((lp26521
S'int32'
p26522
ag34
a((S'taskHandle'
p26523
(lp26524
S'TaskHandle'
p26525
aNtp26526
(S'attribute'
p26527
(lp26528
S'int32'
p26529
aNtp26530
tp26531
tp26532
sS'DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals'
p26533
((lp26534
S'int32'
p26535
ag34
a((S'device'
p26536
(lp26537
S'char'
p26538
a(lp26539
I-1
aaNtp26540
(S'data'
p26541
(lp26542
S'float64'
p26543
ag42
aNtp26544
(S'arraySizeInElements'
p26545
(lp26546
S'uInt32'
p26547
aNtp26548
tp26549
tp26550
sS'DAQmxSetDigPatternPauseTrigSrc'
p26551
((lp26552
S'int32'
p26553
ag34
a((S'taskHandle'
p26554
(lp26555
S'TaskHandle'
p26556
aNtp26557
(S'data'
p26558
(lp26559
S'char'
p26560
ag42
aNtp26561
tp26562
tp26563
sS'DAQmxSetAODACRefAllowConnToGnd'
p26564
((lp26565
S'int32'
p26566
ag34
a((S'taskHandle'
p26567
(lp26568
S'TaskHandle'
p26569
aNtp26570
(S'channel'
p26571
(lp26572
S'char'
p26573
a(lp26574
I-1
aaNtp26575
(S'data'
p26576
(lp26577
S'bool32'
p26578
aNtp26579
tp26580
tp26581
sS'DAQmxCreateTEDSAITorqueBridgeChan'
p26582
((lp26583
S'int32'
p26584
ag34
a((S'taskHandle'
p26585
(lp26586
S'TaskHandle'
p26587
aNtp26588
(S'physicalChannel'
p26589
(lp26590
S'char'
p26591
a(lp26592
I-1
aaNtp26593
(S'nameToAssignToChannel'
p26594
(lp26595
S'char'
p26596
a(lp26597
I-1
aaNtp26598
(S'minVal'
p26599
(lp26600
S'float64'
p26601
aNtp26602
(S'maxVal'
p26603
(lp26604
S'float64'
p26605
aNtp26606
(S'units'
p26607
(lp26608
S'int32'
p26609
aNtp26610
(S'voltageExcitSource'
p26611
(lp26612
S'int32'
p26613
aNtp26614
(S'voltageExcitVal'
p26615
(lp26616
S'float64'
p26617
aNtp26618
(S'customScaleName'
p26619
(lp26620
S'char'
p26621
a(lp26622
I-1
aaNtp26623
tp26624
tp26625
sS'DAQmxSetAnlgEdgeRefTrigSrc'
p26626
((lp26627
S'int32'
p26628
ag34
a((S'taskHandle'
p26629
(lp26630
S'TaskHandle'
p26631
aNtp26632
(S'data'
p26633
(lp26634
S'char'
p26635
ag42
aNtp26636
tp26637
tp26638
sS'DAQmxResetLoggingTDMSOperation'
p26639
((lp26640
S'int32'
p26641
ag34
a((S'taskHandle'
p26642
(lp26643
S'TaskHandle'
p26644
aNtp26645
tp26646
tp26647
sS'DAQmxResetCIEncoderBInputLogicLvlBehavior'
p26648
((lp26649
S'int32'
p26650
ag34
a((S'taskHandle'
p26651
(lp26652
S'TaskHandle'
p26653
aNtp26654
(S'channel'
p26655
(lp26656
S'char'
p26657
a(lp26658
I-1
aaNtp26659
tp26660
tp26661
sS'DAQmxGet9239CalAdjustPoints'
p26662
((lp26663
S'int32'
p26664
ag34
a((S'calHandle'
p26665
(lp26666
S'CalHandle'
p26667
aNtp26668
(S'adjustmentPoints'
p26669
(lp26670
S'float64'
p26671
ag42
aNtp26672
(S'bufferSize'
p26673
(lp26674
S'uInt32'
p26675
aNtp26676
tp26677
tp26678
sS'DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseRate'
p26679
((lp26680
S'int32'
p26681
ag34
a((S'taskHandle'
p26682
(lp26683
S'TaskHandle'
p26684
aNtp26685
tp26686
tp26687
sS'DAQmxResetExportedAIConvClkOutputTerm'
p26688
((lp26689
S'int32'
p26690
ag34
a((S'taskHandle'
p26691
(lp26692
S'TaskHandle'
p26693
aNtp26694
tp26695
tp26696
sS'DAQmxSetAIConvDigSyncEnable'
p26697
((lp26698
S'int32'
p26699
ag34
a((S'taskHandle'
p26700
(lp26701
S'TaskHandle'
p26702
aNtp26703
(S'data'
p26704
(lp26705
S'bool32'
p26706
aNtp26707
tp26708
tp26709
sS'DAQmxGetAIConvActiveEdgeEx'
p26710
((lp26711
S'int32'
p26712
ag34
a((S'taskHandle'
p26713
(lp26714
S'TaskHandle'
p26715
aNtp26716
(S'deviceNames'
p26717
(lp26718
S'char'
p26719
a(lp26720
I-1
aaNtp26721
(S'data'
p26722
(lp26723
S'int32'
p26724
ag42
aNtp26725
tp26726
tp26727
sS'DAQmxResetAICurrentUnits'
p26728
((lp26729
S'int32'
p26730
ag34
a((S'taskHandle'
p26731
(lp26732
S'TaskHandle'
p26733
aNtp26734
(S'channel'
p26735
(lp26736
S'char'
p26737
a(lp26738
I-1
aaNtp26739
tp26740
tp26741
sS'DAQmxGetBufInputBufSize'
p26742
((lp26743
S'int32'
p26744
ag34
a((S'taskHandle'
p26745
(lp26746
S'TaskHandle'
p26747
aNtp26748
(S'data'
p26749
(lp26750
S'uInt32'
p26751
ag42
aNtp26752
tp26753
tp26754
sS'DAQmxCreateAOFuncGenChan'
p26755
((lp26756
S'int32'
p26757
ag34
a((S'taskHandle'
p26758
(lp26759
S'TaskHandle'
p26760
aNtp26761
(S'physicalChannel'
p26762
(lp26763
S'char'
p26764
a(lp26765
I-1
aaNtp26766
(S'nameToAssignToChannel'
p26767
(lp26768
S'char'
p26769
a(lp26770
I-1
aaNtp26771
(S'type'
p26772
(lp26773
S'int32'
p26774
aNtp26775
(S'freq'
p26776
(lp26777
S'float64'
p26778
aNtp26779
(S'amplitude'
p26780
(lp26781
S'float64'
p26782
aNtp26783
(S'offset'
p26784
(lp26785
S'float64'
p26786
aNtp26787
tp26788
tp26789
sS'DAQmxAutoConfigureCDAQSyncConnections'
p26790
((lp26791
S'int32'
p26792
ag34
a((S'chassisDevicesPorts'
p26793
(lp26794
S'char'
p26795
a(lp26796
I-1
aaNtp26797
(S'timeout'
p26798
(lp26799
S'float64'
p26800
aNtp26801
tp26802
tp26803
sS'DAQmxResetDevice'
p26804
((lp26805
S'int32'
p26806
ag34
a((S'deviceName'
p26807
(lp26808
S'char'
p26809
a(lp26810
I-1
aaNtp26811
tp26812
tp26813
sS'DAQmxReadCtrFreqScalar'
p26814
((lp26815
S'int32'
p26816
ag34
a((S'taskHandle'
p26817
(lp26818
S'TaskHandle'
p26819
aNtp26820
(S'timeout'
p26821
(lp26822
S'float64'
p26823
aNtp26824
(S'frequency'
p26825
(lp26826
S'float64'
p26827
ag42
aNtp26828
(S'dutyCycle'
p26829
(lp26830
S'float64'
p26831
ag42
aNtp26832
(S'reserved'
p26833
(lp26834
S'bool32'
p26835
ag42
aNtp26836
tp26837
tp26838
sS'DAQmxSwitchCloseRelays'
p26839
((lp26840
S'int32'
p26841
ag34
a((S'relayList'
p26842
(lp26843
S'char'
p26844
a(lp26845
I-1
aaNtp26846
(S'waitForSettling'
p26847
(lp26848
S'bool32'
p26849
aNtp26850
tp26851
tp26852
sS'DAQmxResetChanAttribute'
p26853
((lp26854
S'int32'
p26855
ag34
a((S'taskHandle'
p26856
(lp26857
S'TaskHandle'
p26858
aNtp26859
(S'channel'
p26860
(lp26861
S'char'
p26862
a(lp26863
I-1
aaNtp26864
(S'attribute'
p26865
(lp26866
S'int32'
p26867
aNtp26868
tp26869
tp26870
sS'DAQmxAdjust9215Cal'
p26871
((lp26872
S'int32'
p26873
ag34
a((S'calHandle'
p26874
(lp26875
S'CalHandle'
p26876
aNtp26877
(S'channelNames'
p26878
(lp26879
S'char'
p26880
a(lp26881
I-1
aaNtp26882
(S'value'
p26883
(lp26884
S'float64'
p26885
aNtp26886
tp26887
tp26888
sS'DAQmxSetAIAcceldBRef'
p26889
((lp26890
S'int32'
p26891
ag34
a((S'taskHandle'
p26892
(lp26893
S'TaskHandle'
p26894
aNtp26895
(S'channel'
p26896
(lp26897
S'char'
p26898
a(lp26899
I-1
aaNtp26900
(S'data'
p26901
(lp26902
S'float64'
p26903
aNtp26904
tp26905
tp26906
sS'DAQmxResetCIPulseTimeTermCfg'
p26907
((lp26908
S'int32'
p26909
ag34
a((S'taskHandle'
p26910
(lp26911
S'TaskHandle'
p26912
aNtp26913
(S'channel'
p26914
(lp26915
S'char'
p26916
a(lp26917
I-1
aaNtp26918
tp26919
tp26920
sS'DAQmxSetExportedRdyForStartEventOutputTerm'
p26921
((lp26922
S'int32'
p26923
ag34
a((S'taskHandle'
p26924
(lp26925
S'TaskHandle'
p26926
aNtp26927
(S'data'
p26928
(lp26929
S'char'
p26930
ag42
aNtp26931
tp26932
tp26933
sS'DAQmxResetAIAutoZeroMode'
p26934
((lp26935
S'int32'
p26936
ag34
a((S'taskHandle'
p26937
(lp26938
S'TaskHandle'
p26939
aNtp26940
(S'channel'
p26941
(lp26942
S'char'
p26943
a(lp26944
I-1
aaNtp26945
tp26946
tp26947
sS'DAQmxSetExportedSyncPulseEventOutputTerm'
p26948
((lp26949
S'int32'
p26950
ag34
a((S'taskHandle'
p26951
(lp26952
S'TaskHandle'
p26953
aNtp26954
(S'data'
p26955
(lp26956
S'char'
p26957
ag42
aNtp26958
tp26959
tp26960
sS'DAQmxSetCIPeriodDigFltrTimebaseSrc'
p26961
((lp26962
S'int32'
p26963
ag34
a((S'taskHandle'
p26964
(lp26965
S'TaskHandle'
p26966
aNtp26967
(S'channel'
p26968
(lp26969
S'char'
p26970
a(lp26971
I-1
aaNtp26972
(S'data'
p26973
(lp26974
S'char'
p26975
ag42
aNtp26976
tp26977
tp26978
sS'DAQmxResetAIRngLow'
p26979
((lp26980
S'int32'
p26981
ag34
a((S'taskHandle'
p26982
(lp26983
S'TaskHandle'
p26984
aNtp26985
(S'channel'
p26986
(lp26987
S'char'
p26988
a(lp26989
I-1
aaNtp26990
tp26991
tp26992
sS'DAQmxSetAIConvDigFltrEnable'
p26993
((lp26994
S'int32'
p26995
ag34
a((S'taskHandle'
p26996
(lp26997
S'TaskHandle'
p26998
aNtp26999
(S'data'
p27000
(lp27001
S'bool32'
p27002
aNtp27003
tp27004
tp27005
sS'DAQmxSetCIPeriodUnits'
p27006
((lp27007
S'int32'
p27008
ag34
a((S'taskHandle'
p27009
(lp27010
S'TaskHandle'
p27011
aNtp27012
(S'channel'
p27013
(lp27014
S'char'
p27015
a(lp27016
I-1
aaNtp27017
(S'data'
p27018
(lp27019
S'int32'
p27020
aNtp27021
tp27022
tp27023
sS'DAQmxSwitchDisconnectAll'
p27024
((lp27025
S'int32'
p27026
ag34
a((S'deviceName'
p27027
(lp27028
S'char'
p27029
a(lp27030
I-1
aaNtp27031
(S'waitForSettling'
p27032
(lp27033
S'bool32'
p27034
aNtp27035
tp27036
tp27037
sS'DAQmxAdjustDSATimebaseCal'
p27038
((lp27039
S'int32'
p27040
ag34
a((S'calHandle'
p27041
(lp27042
S'CalHandle'
p27043
aNtp27044
(S'referenceFrequency'
p27045
(lp27046
S'float64'
p27047
aNtp27048
tp27049
tp27050
sS'DAQmxGetCIEncoderZIndexEnable'
p27051
((lp27052
S'int32'
p27053
ag34
a((S'taskHandle'
p27054
(lp27055
S'TaskHandle'
p27056
aNtp27057
(S'channel'
p27058
(lp27059
S'char'
p27060
a(lp27061
I-1
aaNtp27062
(S'data'
p27063
(lp27064
S'bool32'
p27065
ag42
aNtp27066
tp27067
tp27068
sS'DAQmxGetExportedRdyForStartEventOutputTerm'
p27069
((lp27070
S'int32'
p27071
ag34
a((S'taskHandle'
p27072
(lp27073
S'TaskHandle'
p27074
aNtp27075
(S'data'
p27076
(lp27077
S'char'
p27078
ag42
aNtp27079
(S'bufferSize'
p27080
(lp27081
S'uInt32'
p27082
aNtp27083
tp27084
tp27085
sS'DAQmxResetCISemiPeriodDigFltrTimebaseRate'
p27086
((lp27087
S'int32'
p27088
ag34
a((S'taskHandle'
p27089
(lp27090
S'TaskHandle'
p27091
aNtp27092
(S'channel'
p27093
(lp27094
S'char'
p27095
a(lp27096
I-1
aaNtp27097
tp27098
tp27099
sS'DAQmxResetSampClkDigFltrTimebaseRate'
p27100
((lp27101
S'int32'
p27102
ag34
a((S'taskHandle'
p27103
(lp27104
S'TaskHandle'
p27105
aNtp27106
tp27107
tp27108
sS'DAQmxAdjust1126Cal'
p27109
((lp27110
S'int32'
p27111
ag34
a((S'calHandle'
p27112
(lp27113
S'CalHandle'
p27114
aNtp27115
(S'refFreq'
p27116
(lp27117
S'float64'
p27118
aNtp27119
(S'measOutput'
p27120
(lp27121
S'float64'
p27122
aNtp27123
tp27124
tp27125
sS'DAQmxCreateTEDSAIRTDChan'
p27126
((lp27127
S'int32'
p27128
ag34
a((S'taskHandle'
p27129
(lp27130
S'TaskHandle'
p27131
aNtp27132
(S'physicalChannel'
p27133
(lp27134
S'char'
p27135
a(lp27136
I-1
aaNtp27137
(S'nameToAssignToChannel'
p27138
(lp27139
S'char'
p27140
a(lp27141
I-1
aaNtp27142
(S'minVal'
p27143
(lp27144
S'float64'
p27145
aNtp27146
(S'maxVal'
p27147
(lp27148
S'float64'
p27149
aNtp27150
(S'units'
p27151
(lp27152
S'int32'
p27153
aNtp27154
(S'resistanceConfig'
p27155
(lp27156
S'int32'
p27157
aNtp27158
(S'currentExcitSource'
p27159
(lp27160
S'int32'
p27161
aNtp27162
(S'currentExcitVal'
p27163
(lp27164
S'float64'
p27165
aNtp27166
tp27167
tp27168
sS'DAQmxGetDevAOMaxRate'
p27169
((lp27170
S'int32'
p27171
ag34
a((S'device'
p27172
(lp27173
S'char'
p27174
a(lp27175
I-1
aaNtp27176
(S'data'
p27177
(lp27178
S'float64'
p27179
ag42
aNtp27180
tp27181
tp27182
sS'DAQmxGet9244CalAdjustPoints'
p27183
((lp27184
S'int32'
p27185
ag34
a((S'calHandle'
p27186
(lp27187
S'CalHandle'
p27188
aNtp27189
(S'adjustmentPoints'
p27190
(lp27191
S'float64'
p27192
ag42
aNtp27193
(S'bufferSize'
p27194
(lp27195
S'uInt32'
p27196
aNtp27197
tp27198
tp27199
sS'DAQmxSetAIEddyCurrentProxProbeSensitivity'
p27200
((lp27201
S'int32'
p27202
ag34
a((S'taskHandle'
p27203
(lp27204
S'TaskHandle'
p27205
aNtp27206
(S'channel'
p27207
(lp27208
S'char'
p27209
a(lp27210
I-1
aaNtp27211
(S'data'
p27212
(lp27213
S'float64'
p27214
aNtp27215
tp27216
tp27217
sS'DAQmxGetCORdyForNewVal'
p27218
((lp27219
S'int32'
p27220
ag34
a((S'taskHandle'
p27221
(lp27222
S'TaskHandle'
p27223
aNtp27224
(S'channel'
p27225
(lp27226
S'char'
p27227
a(lp27228
I-1
aaNtp27229
(S'data'
p27230
(lp27231
S'bool32'
p27232
ag42
aNtp27233
tp27234
tp27235
sS'DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p27236
((lp27237
S'int32'
p27238
ag34
a((S'taskHandle'
p27239
(lp27240
S'TaskHandle'
p27241
aNtp27242
(S'channel'
p27243
(lp27244
S'char'
p27245
a(lp27246
I-1
aaNtp27247
(S'data'
p27248
(lp27249
S'float64'
p27250
aNtp27251
tp27252
tp27253
sS'DAQmxResetAIChanCalEnableCal'
p27254
((lp27255
S'int32'
p27256
ag34
a((S'taskHandle'
p27257
(lp27258
S'TaskHandle'
p27259
aNtp27260
(S'channel'
p27261
(lp27262
S'char'
p27263
a(lp27264
I-1
aaNtp27265
tp27266
tp27267
sS'DAQmxGetAIThrmstrC'
p27268
((lp27269
S'int32'
p27270
ag34
a((S'taskHandle'
p27271
(lp27272
S'TaskHandle'
p27273
aNtp27274
(S'channel'
p27275
(lp27276
S'char'
p27277
a(lp27278
I-1
aaNtp27279
(S'data'
p27280
(lp27281
S'float64'
p27282
ag42
aNtp27283
tp27284
tp27285
sS'DAQmxGetAIThrmstrB'
p27286
((lp27287
S'int32'
p27288
ag34
a((S'taskHandle'
p27289
(lp27290
S'TaskHandle'
p27291
aNtp27292
(S'channel'
p27293
(lp27294
S'char'
p27295
a(lp27296
I-1
aaNtp27297
(S'data'
p27298
(lp27299
S'float64'
p27300
ag42
aNtp27301
tp27302
tp27303
sS'DAQmxGetAIThrmstrA'
p27304
((lp27305
S'int32'
p27306
ag34
a((S'taskHandle'
p27307
(lp27308
S'TaskHandle'
p27309
aNtp27310
(S'channel'
p27311
(lp27312
S'char'
p27313
a(lp27314
I-1
aaNtp27315
(S'data'
p27316
(lp27317
S'float64'
p27318
ag42
aNtp27319
tp27320
tp27321
sS'DAQmxGet4322CalAdjustPoints'
p27322
((lp27323
S'int32'
p27324
ag34
a((S'calHandle'
p27325
(lp27326
S'CalHandle'
p27327
aNtp27328
(S'outputType'
p27329
(lp27330
S'int32'
p27331
aNtp27332
(S'adjustmentPoints'
p27333
(lp27334
S'float64'
p27335
ag42
aNtp27336
(S'bufferSize'
p27337
(lp27338
S'uInt32'
p27339
aNtp27340
tp27341
tp27342
sS'DAQmxResetCIDutyCycleTermCfg'
p27343
((lp27344
S'int32'
p27345
ag34
a((S'taskHandle'
p27346
(lp27347
S'TaskHandle'
p27348
aNtp27349
(S'channel'
p27350
(lp27351
S'char'
p27352
a(lp27353
I-1
aaNtp27354
tp27355
tp27356
sS'DAQmxGetSyncPulseSrc'
p27357
((lp27358
S'int32'
p27359
ag34
a((S'taskHandle'
p27360
(lp27361
S'TaskHandle'
p27362
aNtp27363
(S'data'
p27364
(lp27365
S'char'
p27366
ag42
aNtp27367
(S'bufferSize'
p27368
(lp27369
S'uInt32'
p27370
aNtp27371
tp27372
tp27373
sS'DAQmxResetRealTimeNumOfWarmupIters'
p27374
((lp27375
S'int32'
p27376
ag34
a((S'taskHandle'
p27377
(lp27378
S'TaskHandle'
p27379
aNtp27380
tp27381
tp27382
sS'DAQmxGetDelayFromSampClkDelay'
p27383
((lp27384
S'int32'
p27385
ag34
a((S'taskHandle'
p27386
(lp27387
S'TaskHandle'
p27388
aNtp27389
(S'data'
p27390
(lp27391
S'float64'
p27392
ag42
aNtp27393
tp27394
tp27395
sS'DAQmxGetDigPatternPauseTrigWhen'
p27396
((lp27397
S'int32'
p27398
ag34
a((S'taskHandle'
p27399
(lp27400
S'TaskHandle'
p27401
aNtp27402
(S'data'
p27403
(lp27404
S'int32'
p27405
ag42
aNtp27406
tp27407
tp27408
sS'DAQmxDSASetCalTemp'
p27409
((lp27410
S'int32'
p27411
ag34
a((S'calHandle'
p27412
(lp27413
S'CalHandle'
p27414
aNtp27415
(S'temperature'
p27416
(lp27417
S'float64'
p27418
aNtp27419
tp27420
tp27421
sS'DAQmxSetDIDigSyncEnable'
p27422
((lp27423
S'int32'
p27424
ag34
a((S'taskHandle'
p27425
(lp27426
S'TaskHandle'
p27427
aNtp27428
(S'channel'
p27429
(lp27430
S'char'
p27431
a(lp27432
I-1
aaNtp27433
(S'data'
p27434
(lp27435
S'bool32'
p27436
aNtp27437
tp27438
tp27439
sS'DAQmxGetAnlgEdgeStartTrigDigSyncEnable'
p27440
((lp27441
S'int32'
p27442
ag34
a((S'taskHandle'
p27443
(lp27444
S'TaskHandle'
p27445
aNtp27446
(S'data'
p27447
(lp27448
S'bool32'
p27449
ag42
aNtp27450
tp27451
tp27452
sS'DAQmxResetCICountEdgesTermCfg'
p27453
((lp27454
S'int32'
p27455
ag34
a((S'taskHandle'
p27456
(lp27457
S'TaskHandle'
p27458
aNtp27459
(S'channel'
p27460
(lp27461
S'char'
p27462
a(lp27463
I-1
aaNtp27464
tp27465
tp27466
sS'DAQmxGetCIEncoderAInputTermCfg'
p27467
((lp27468
S'int32'
p27469
ag34
a((S'taskHandle'
p27470
(lp27471
S'TaskHandle'
p27472
aNtp27473
(S'channel'
p27474
(lp27475
S'char'
p27476
a(lp27477
I-1
aaNtp27478
(S'data'
p27479
(lp27480
S'int32'
p27481
ag42
aNtp27482
tp27483
tp27484
sS'DAQmxSetAIRVDTSensitivityUnits'
p27485
((lp27486
S'int32'
p27487
ag34
a((S'taskHandle'
p27488
(lp27489
S'TaskHandle'
p27490
aNtp27491
(S'channel'
p27492
(lp27493
S'char'
p27494
a(lp27495
I-1
aaNtp27496
(S'data'
p27497
(lp27498
S'int32'
p27499
aNtp27500
tp27501
tp27502
sS'DAQmxGetCOPulseLowTicks'
p27503
((lp27504
S'int32'
p27505
ag34
a((S'taskHandle'
p27506
(lp27507
S'TaskHandle'
p27508
aNtp27509
(S'channel'
p27510
(lp27511
S'char'
p27512
a(lp27513
I-1
aaNtp27514
(S'data'
p27515
(lp27516
S'uInt32'
p27517
ag42
aNtp27518
tp27519
tp27520
sS'DAQmxSetDigLvlPauseTrigDigSyncEnable'
p27521
((lp27522
S'int32'
p27523
ag34
a((S'taskHandle'
p27524
(lp27525
S'TaskHandle'
p27526
aNtp27527
(S'data'
p27528
(lp27529
S'bool32'
p27530
aNtp27531
tp27532
tp27533
sS'DAQmxGetDOInvertLines'
p27534
((lp27535
S'int32'
p27536
ag34
a((S'taskHandle'
p27537
(lp27538
S'TaskHandle'
p27539
aNtp27540
(S'channel'
p27541
(lp27542
S'char'
p27543
a(lp27544
I-1
aaNtp27545
(S'data'
p27546
(lp27547
S'bool32'
p27548
ag42
aNtp27549
tp27550
tp27551
sS'DAQmxSetAnlgEdgeStartTrigDigFltrEnable'
p27552
((lp27553
S'int32'
p27554
ag34
a((S'taskHandle'
p27555
(lp27556
S'TaskHandle'
p27557
aNtp27558
(S'data'
p27559
(lp27560
S'bool32'
p27561
aNtp27562
tp27563
tp27564
sS'DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate'
p27565
((lp27566
S'int32'
p27567
ag34
a((S'taskHandle'
p27568
(lp27569
S'TaskHandle'
p27570
aNtp27571
(S'data'
p27572
(lp27573
S'float64'
p27574
ag42
aNtp27575
tp27576
tp27577
sS'DAQmxSetWatchdogExpirTrigType'
p27578
((lp27579
S'int32'
p27580
ag34
a((S'taskHandle'
p27581
(lp27582
S'TaskHandle'
p27583
aNtp27584
(S'data'
p27585
(lp27586
S'int32'
p27587
aNtp27588
tp27589
tp27590
sS'DAQmxSetAIConvDigFltrTimebaseSrcEx'
p27591
((lp27592
S'int32'
p27593
ag34
a((S'taskHandle'
p27594
(lp27595
S'TaskHandle'
p27596
aNtp27597
(S'deviceNames'
p27598
(lp27599
S'char'
p27600
a(lp27601
I-1
aaNtp27602
(S'data'
p27603
(lp27604
S'char'
p27605
ag42
aNtp27606
tp27607
tp27608
sS'DAQmxResetCIEncoderZInputDigFltrTimebaseSrc'
p27609
((lp27610
S'int32'
p27611
ag34
a((S'taskHandle'
p27612
(lp27613
S'TaskHandle'
p27614
aNtp27615
(S'channel'
p27616
(lp27617
S'char'
p27618
a(lp27619
I-1
aaNtp27620
tp27621
tp27622
sS'DAQmxGetCIEncoderBInputTermCfg'
p27623
((lp27624
S'int32'
p27625
ag34
a((S'taskHandle'
p27626
(lp27627
S'TaskHandle'
p27628
aNtp27629
(S'channel'
p27630
(lp27631
S'char'
p27632
a(lp27633
I-1
aaNtp27634
(S'data'
p27635
(lp27636
S'int32'
p27637
ag42
aNtp27638
tp27639
tp27640
sS'DAQmxResetExportedDataActiveEventLvlActiveLvl'
p27641
((lp27642
S'int32'
p27643
ag34
a((S'taskHandle'
p27644
(lp27645
S'TaskHandle'
p27646
aNtp27647
tp27648
tp27649
sS'DAQmxResetAODACRefVal'
p27650
((lp27651
S'int32'
p27652
ag34
a((S'taskHandle'
p27653
(lp27654
S'TaskHandle'
p27655
aNtp27656
(S'channel'
p27657
(lp27658
S'char'
p27659
a(lp27660
I-1
aaNtp27661
tp27662
tp27663
sS'DAQmxResetAIACExcitFreq'
p27664
((lp27665
S'int32'
p27666
ag34
a((S'taskHandle'
p27667
(lp27668
S'TaskHandle'
p27669
aNtp27670
(S'channel'
p27671
(lp27672
S'char'
p27673
a(lp27674
I-1
aaNtp27675
tp27676
tp27677
sS'DAQmxGetAIAccelSensitivity'
p27678
((lp27679
S'int32'
p27680
ag34
a((S'taskHandle'
p27681
(lp27682
S'TaskHandle'
p27683
aNtp27684
(S'channel'
p27685
(lp27686
S'char'
p27687
a(lp27688
I-1
aaNtp27689
(S'data'
p27690
(lp27691
S'float64'
p27692
ag42
aNtp27693
tp27694
tp27695
sS'DAQmxGetWriteOvertemperatureChans'
p27696
((lp27697
S'int32'
p27698
ag34
a((S'taskHandle'
p27699
(lp27700
S'TaskHandle'
p27701
aNtp27702
(S'data'
p27703
(lp27704
S'char'
p27705
ag42
aNtp27706
(S'bufferSize'
p27707
(lp27708
S'uInt32'
p27709
aNtp27710
tp27711
tp27712
sS'DAQmxAdjust1521Cal'
p27713
((lp27714
S'int32'
p27715
ag34
a((S'calHandle'
p27716
(lp27717
S'CalHandle'
p27718
aNtp27719
(S'refVoltage'
p27720
(lp27721
S'float64'
p27722
aNtp27723
(S'measOutput'
p27724
(lp27725
S'float64'
p27726
aNtp27727
tp27728
tp27729
sS'DAQmxAdjust9209OffsetCal'
p27730
((lp27731
S'int32'
p27732
ag34
a((S'calHandle'
p27733
(lp27734
S'CalHandle'
p27735
aNtp27736
(S'channelNames'
p27737
(lp27738
S'char'
p27739
a(lp27740
I-1
aaNtp27741
tp27742
tp27743
sS'DAQmxSetCICountEdgesCountResetTerm'
p27744
((lp27745
S'int32'
p27746
ag34
a((S'taskHandle'
p27747
(lp27748
S'TaskHandle'
p27749
aNtp27750
(S'channel'
p27751
(lp27752
S'char'
p27753
a(lp27754
I-1
aaNtp27755
(S'data'
p27756
(lp27757
S'char'
p27758
ag42
aNtp27759
tp27760
tp27761
sS'DAQmxSetCIDupCountPrevent'
p27762
((lp27763
S'int32'
p27764
ag34
a((S'taskHandle'
p27765
(lp27766
S'TaskHandle'
p27767
aNtp27768
(S'channel'
p27769
(lp27770
S'char'
p27771
a(lp27772
I-1
aaNtp27773
(S'data'
p27774
(lp27775
S'bool32'
p27776
aNtp27777
tp27778
tp27779
sS'DAQmxResetAOMin'
p27780
((lp27781
S'int32'
p27782
ag34
a((S'taskHandle'
p27783
(lp27784
S'TaskHandle'
p27785
aNtp27786
(S'channel'
p27787
(lp27788
S'char'
p27789
a(lp27790
I-1
aaNtp27791
tp27792
tp27793
sS'DAQmxSwitchOpenRelays'
p27794
((lp27795
S'int32'
p27796
ag34
a((S'relayList'
p27797
(lp27798
S'char'
p27799
a(lp27800
I-1
aaNtp27801
(S'waitForSettling'
p27802
(lp27803
S'bool32'
p27804
aNtp27805
tp27806
tp27807
sS'DAQmxSetCIPeriodEnableAveraging'
p27808
((lp27809
S'int32'
p27810
ag34
a((S'taskHandle'
p27811
(lp27812
S'TaskHandle'
p27813
aNtp27814
(S'channel'
p27815
(lp27816
S'char'
p27817
a(lp27818
I-1
aaNtp27819
(S'data'
p27820
(lp27821
S'bool32'
p27822
aNtp27823
tp27824
tp27825
sS'DAQmxGetRefTrigPretrigSamples'
p27826
((lp27827
S'int32'
p27828
ag34
a((S'taskHandle'
p27829
(lp27830
S'TaskHandle'
p27831
aNtp27832
(S'data'
p27833
(lp27834
S'uInt32'
p27835
ag42
aNtp27836
tp27837
tp27838
sS'DAQmxSetCIDutyCycleDigFltrEnable'
p27839
((lp27840
S'int32'
p27841
ag34
a((S'taskHandle'
p27842
(lp27843
S'TaskHandle'
p27844
aNtp27845
(S'channel'
p27846
(lp27847
S'char'
p27848
a(lp27849
I-1
aaNtp27850
(S'data'
p27851
(lp27852
S'bool32'
p27853
aNtp27854
tp27855
tp27856
sS'DAQmxWriteRaw'
p27857
((lp27858
S'int32'
p27859
ag34
a((S'taskHandle'
p27860
(lp27861
S'TaskHandle'
p27862
aNtp27863
(S'numSamps'
p27864
(lp27865
S'int32'
p27866
aNtp27867
(S'autoStart'
p27868
(lp27869
S'bool32'
p27870
aNtp27871
(S'timeout'
p27872
(lp27873
S'float64'
p27874
aNtp27875
(S'writeArray'
p27876
(lp27877
S'void'
p27878
ag42
aNtp27879
(S'sampsPerChanWritten'
p27880
(lp27881
S'int32'
p27882
ag42
aNtp27883
(S'reserved'
p27884
(lp27885
S'bool32'
p27886
ag42
aNtp27887
tp27888
tp27889
sS'DAQmxResetAIMax'
p27890
((lp27891
S'int32'
p27892
ag34
a((S'taskHandle'
p27893
(lp27894
S'TaskHandle'
p27895
aNtp27896
(S'channel'
p27897
(lp27898
S'char'
p27899
a(lp27900
I-1
aaNtp27901
tp27902
tp27903
sS'DAQmxCfgWatchdogDOExpirStates'
p27904
((lp27905
S'int32'
p27906
ag34
a((S'taskHandle'
p27907
(lp27908
S'TaskHandle'
p27909
aNtp27910
(S'channelNames'
p27911
(lp27912
S'char'
p27913
a(lp27914
I-1
aaNtp27915
(S'expirStateArray'
p27916
(lp27917
S'int32'
p27918
a(lp27919
I-1
aaNtp27920
(S'arraySize'
p27921
(lp27922
S'uInt32'
p27923
aNtp27924
tp27925
tp27926
sS'DAQmxResetAOOutputImpedance'
p27927
((lp27928
S'int32'
p27929
ag34
a((S'taskHandle'
p27930
(lp27931
S'TaskHandle'
p27932
aNtp27933
(S'channel'
p27934
(lp27935
S'char'
p27936
a(lp27937
I-1
aaNtp27938
tp27939
tp27940
sS'DAQmxSetSampClkDigFltrTimebaseRate'
p27941
((lp27942
S'int32'
p27943
ag34
a((S'taskHandle'
p27944
(lp27945
S'TaskHandle'
p27946
aNtp27947
(S'data'
p27948
(lp27949
S'float64'
p27950
aNtp27951
tp27952
tp27953
sS'DAQmxSetExportedHshkEventDelay'
p27954
((lp27955
S'int32'
p27956
ag34
a((S'taskHandle'
p27957
(lp27958
S'TaskHandle'
p27959
aNtp27960
(S'data'
p27961
(lp27962
S'float64'
p27963
aNtp27964
tp27965
tp27966
sS'DAQmxSetSampTimingEngine'
p27967
((lp27968
S'int32'
p27969
ag34
a((S'taskHandle'
p27970
(lp27971
S'TaskHandle'
p27972
aNtp27973
(S'data'
p27974
(lp27975
S'uInt32'
p27976
aNtp27977
tp27978
tp27979
sS'DAQmxSetCICtrTimebaseDigFltrEnable'
p27980
((lp27981
S'int32'
p27982
ag34
a((S'taskHandle'
p27983
(lp27984
S'TaskHandle'
p27985
aNtp27986
(S'channel'
p27987
(lp27988
S'char'
p27989
a(lp27990
I-1
aaNtp27991
(S'data'
p27992
(lp27993
S'bool32'
p27994
aNtp27995
tp27996
tp27997
sS'DAQmxGetMasterTimebaseSrc'
p27998
((lp27999
S'int32'
p28000
ag34
a((S'taskHandle'
p28001
(lp28002
S'TaskHandle'
p28003
aNtp28004
(S'data'
p28005
(lp28006
S'char'
p28007
ag42
aNtp28008
(S'bufferSize'
p28009
(lp28010
S'uInt32'
p28011
aNtp28012
tp28013
tp28014
sS'DAQmxResetAIDigFltrBandpassWidth'
p28015
((lp28016
S'int32'
p28017
ag34
a((S'taskHandle'
p28018
(lp28019
S'TaskHandle'
p28020
aNtp28021
(S'channel'
p28022
(lp28023
S'char'
p28024
a(lp28025
I-1
aaNtp28026
tp28027
tp28028
sS'DAQmxResetExportedPauseTrigLvlActiveLvl'
p28029
((lp28030
S'int32'
p28031
ag34
a((S'taskHandle'
p28032
(lp28033
S'TaskHandle'
p28034
aNtp28035
tp28036
tp28037
sS'DAQmxResetAILossyLSBRemovalCompressedSampSize'
p28038
((lp28039
S'int32'
p28040
ag34
a((S'taskHandle'
p28041
(lp28042
S'TaskHandle'
p28043
aNtp28044
(S'channel'
p28045
(lp28046
S'char'
p28047
a(lp28048
I-1
aaNtp28049
tp28050
tp28051
sS'DAQmxResetMasterTimebaseRate'
p28052
((lp28053
S'int32'
p28054
ag34
a((S'taskHandle'
p28055
(lp28056
S'TaskHandle'
p28057
aNtp28058
tp28059
tp28060
sS'DAQmxGetAIChanCalOperatorName'
p28061
((lp28062
S'int32'
p28063
ag34
a((S'taskHandle'
p28064
(lp28065
S'TaskHandle'
p28066
aNtp28067
(S'channel'
p28068
(lp28069
S'char'
p28070
a(lp28071
I-1
aaNtp28072
(S'data'
p28073
(lp28074
S'char'
p28075
ag42
aNtp28076
(S'bufferSize'
p28077
(lp28078
S'uInt32'
p28079
aNtp28080
tp28081
tp28082
sS'DAQmxResetWriteRegenMode'
p28083
((lp28084
S'int32'
p28085
ag34
a((S'taskHandle'
p28086
(lp28087
S'TaskHandle'
p28088
aNtp28089
tp28090
tp28091
sS'DAQmxGetExportedDividedSampClkTimebaseOutputTerm'
p28092
((lp28093
S'int32'
p28094
ag34
a((S'taskHandle'
p28095
(lp28096
S'TaskHandle'
p28097
aNtp28098
(S'data'
p28099
(lp28100
S'char'
p28101
ag42
aNtp28102
(S'bufferSize'
p28103
(lp28104
S'uInt32'
p28105
aNtp28106
tp28107
tp28108
sS'DAQmxAdjust1142Cal'
p28109
((lp28110
S'int32'
p28111
ag34
a((S'calHandle'
p28112
(lp28113
S'CalHandle'
p28114
aNtp28115
(S'refVoltage'
p28116
(lp28117
S'float64'
p28118
aNtp28119
(S'measOutput'
p28120
(lp28121
S'float64'
p28122
aNtp28123
tp28124
tp28125
sS'DAQmxGetAnlgLvlPauseTrigSrc'
p28126
((lp28127
S'int32'
p28128
ag34
a((S'taskHandle'
p28129
(lp28130
S'TaskHandle'
p28131
aNtp28132
(S'data'
p28133
(lp28134
S'char'
p28135
ag42
aNtp28136
(S'bufferSize'
p28137
(lp28138
S'uInt32'
p28139
aNtp28140
tp28141
tp28142
sS'DAQmxGetAIChanCalScaleType'
p28143
((lp28144
S'int32'
p28145
ag34
a((S'taskHandle'
p28146
(lp28147
S'TaskHandle'
p28148
aNtp28149
(S'channel'
p28150
(lp28151
S'char'
p28152
a(lp28153
I-1
aaNtp28154
(S'data'
p28155
(lp28156
S'int32'
p28157
ag42
aNtp28158
tp28159
tp28160
sS'DAQmxGetTriggerSyncType'
p28161
((lp28162
S'int32'
p28163
ag34
a((S'taskHandle'
p28164
(lp28165
S'TaskHandle'
p28166
aNtp28167
(S'data'
p28168
(lp28169
S'int32'
p28170
ag42
aNtp28171
tp28172
tp28173
sS'DAQmxSetDOInvertLines'
p28174
((lp28175
S'int32'
p28176
ag34
a((S'taskHandle'
p28177
(lp28178
S'TaskHandle'
p28179
aNtp28180
(S'channel'
p28181
(lp28182
S'char'
p28183
a(lp28184
I-1
aaNtp28185
(S'data'
p28186
(lp28187
S'bool32'
p28188
aNtp28189
tp28190
tp28191
sS'DAQmxGetAIEddyCurrentProxProbeSensitivityUnits'
p28192
((lp28193
S'int32'
p28194
ag34
a((S'taskHandle'
p28195
(lp28196
S'TaskHandle'
p28197
aNtp28198
(S'channel'
p28199
(lp28200
S'char'
p28201
a(lp28202
I-1
aaNtp28203
(S'data'
p28204
(lp28205
S'int32'
p28206
ag42
aNtp28207
tp28208
tp28209
sS'DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth'
p28210
((lp28211
S'int32'
p28212
ag34
a((S'taskHandle'
p28213
(lp28214
S'TaskHandle'
p28215
aNtp28216
(S'channel'
p28217
(lp28218
S'char'
p28219
a(lp28220
I-1
aaNtp28221
(S'data'
p28222
(lp28223
S'float64'
p28224
ag42
aNtp28225
tp28226
tp28227
sS'DAQmxSetAIDigFltrResponse'
p28228
((lp28229
S'int32'
p28230
ag34
a((S'taskHandle'
p28231
(lp28232
S'TaskHandle'
p28233
aNtp28234
(S'channel'
p28235
(lp28236
S'char'
p28237
a(lp28238
I-1
aaNtp28239
(S'data'
p28240
(lp28241
S'int32'
p28242
aNtp28243
tp28244
tp28245
sS'DAQmxResetSyncPulseMinDelayToStart'
p28246
((lp28247
S'int32'
p28248
ag34
a((S'taskHandle'
p28249
(lp28250
S'TaskHandle'
p28251
aNtp28252
tp28253
tp28254
sS'DAQmxResetAnlgWinStartTrigDigFltrTimebaseRate'
p28255
((lp28256
S'int32'
p28257
ag34
a((S'taskHandle'
p28258
(lp28259
S'TaskHandle'
p28260
aNtp28261
tp28262
tp28263
sS'DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate'
p28264
((lp28265
S'int32'
p28266
ag34
a((S'taskHandle'
p28267
(lp28268
S'TaskHandle'
p28269
aNtp28270
(S'data'
p28271
(lp28272
S'float64'
p28273
ag42
aNtp28274
tp28275
tp28276
sS'DAQmxGetCIFreqDigFltrEnable'
p28277
((lp28278
S'int32'
p28279
ag34
a((S'taskHandle'
p28280
(lp28281
S'TaskHandle'
p28282
aNtp28283
(S'channel'
p28284
(lp28285
S'char'
p28286
a(lp28287
I-1
aaNtp28288
(S'data'
p28289
(lp28290
S'bool32'
p28291
ag42
aNtp28292
tp28293
tp28294
sS'DAQmxAdjust9269Cal'
p28295
((lp28296
S'int32'
p28297
ag34
a((S'calHandle'
p28298
(lp28299
S'CalHandle'
p28300
aNtp28301
(S'channelNames'
p28302
(lp28303
S'char'
p28304
a(lp28305
I-1
aaNtp28306
(S'value'
p28307
(lp28308
S'float64'
p28309
aNtp28310
tp28311
tp28312
sS'DAQmxSetCIPulseWidthStartingEdge'
p28313
((lp28314
S'int32'
p28315
ag34
a((S'taskHandle'
p28316
(lp28317
S'TaskHandle'
p28318
aNtp28319
(S'channel'
p28320
(lp28321
S'char'
p28322
a(lp28323
I-1
aaNtp28324
(S'data'
p28325
(lp28326
S'int32'
p28327
aNtp28328
tp28329
tp28330
sS'DAQmxSetChangeDetectDITristate'
p28331
((lp28332
S'int32'
p28333
ag34
a((S'taskHandle'
p28334
(lp28335
S'TaskHandle'
p28336
aNtp28337
(S'data'
p28338
(lp28339
S'bool32'
p28340
aNtp28341
tp28342
tp28343
sS'DAQmxSetAIExcitUseForScaling'
p28344
((lp28345
S'int32'
p28346
ag34
a((S'taskHandle'
p28347
(lp28348
S'TaskHandle'
p28349
aNtp28350
(S'channel'
p28351
(lp28352
S'char'
p28353
a(lp28354
I-1
aaNtp28355
(S'data'
p28356
(lp28357
S'bool32'
p28358
aNtp28359
tp28360
tp28361
sS'DAQmxGetDOLineStatesStartState'
p28362
((lp28363
S'int32'
p28364
ag34
a((S'taskHandle'
p28365
(lp28366
S'TaskHandle'
p28367
aNtp28368
(S'channel'
p28369
(lp28370
S'char'
p28371
a(lp28372
I-1
aaNtp28373
(S'data'
p28374
(lp28375
S'int32'
p28376
ag42
aNtp28377
tp28378
tp28379
sS'DAQmxGetDOUseOnlyOnBrdMem'
p28380
((lp28381
S'int32'
p28382
ag34
a((S'taskHandle'
p28383
(lp28384
S'TaskHandle'
p28385
aNtp28386
(S'channel'
p28387
(lp28388
S'char'
p28389
a(lp28390
I-1
aaNtp28391
(S'data'
p28392
(lp28393
S'bool32'
p28394
ag42
aNtp28395
tp28396
tp28397
sS'DAQmxSetScaleDescr'
p28398
((lp28399
S'int32'
p28400
ag34
a((S'scaleName'
p28401
(lp28402
S'char'
p28403
a(lp28404
I-1
aaNtp28405
(S'data'
p28406
(lp28407
S'char'
p28408
ag42
aNtp28409
tp28410
tp28411
sS'DAQmxGetPhysicalChanTEDSTemplateIDs'
p28412
((lp28413
S'int32'
p28414
ag34
a((S'physicalChannel'
p28415
(lp28416
S'char'
p28417
a(lp28418
I-1
aaNtp28419
(S'data'
p28420
(lp28421
S'uInt32'
p28422
ag42
aNtp28423
(S'arraySizeInElements'
p28424
(lp28425
S'uInt32'
p28426
aNtp28427
tp28428
tp28429
sS'DAQmxResetExportedRdyForStartEventOutputTerm'
p28430
((lp28431
S'int32'
p28432
ag34
a((S'taskHandle'
p28433
(lp28434
S'TaskHandle'
p28435
aNtp28436
tp28437
tp28438
sS'DAQmxResetAIAccelSensitivityUnits'
p28439
((lp28440
S'int32'
p28441
ag34
a((S'taskHandle'
p28442
(lp28443
S'TaskHandle'
p28444
aNtp28445
(S'channel'
p28446
(lp28447
S'char'
p28448
a(lp28449
I-1
aaNtp28450
tp28451
tp28452
sS'DAQmxSaveTask'
p28453
((lp28454
S'int32'
p28455
ag34
a((S'taskHandle'
p28456
(lp28457
S'TaskHandle'
p28458
aNtp28459
(S'saveAs'
p28460
(lp28461
S'char'
p28462
a(lp28463
I-1
aaNtp28464
(S'author'
p28465
(lp28466
S'char'
p28467
a(lp28468
I-1
aaNtp28469
(S'options'
p28470
(lp28471
S'uInt32'
p28472
aNtp28473
tp28474
tp28475
sS'DAQmxGetScaleMapPreScaledMax'
p28476
((lp28477
S'int32'
p28478
ag34
a((S'scaleName'
p28479
(lp28480
S'char'
p28481
a(lp28482
I-1
aaNtp28483
(S'data'
p28484
(lp28485
S'float64'
p28486
ag42
aNtp28487
tp28488
tp28489
sS'DAQmxGetCISemiPeriodLogicLvlBehavior'
p28490
((lp28491
S'int32'
p28492
ag34
a((S'taskHandle'
p28493
(lp28494
S'TaskHandle'
p28495
aNtp28496
(S'channel'
p28497
(lp28498
S'char'
p28499
a(lp28500
I-1
aaNtp28501
(S'data'
p28502
(lp28503
S'int32'
p28504
ag42
aNtp28505
tp28506
tp28507
sS'DAQmxAdjust1125Cal'
p28508
((lp28509
S'int32'
p28510
ag34
a((S'calHandle'
p28511
(lp28512
S'CalHandle'
p28513
aNtp28514
(S'refVoltage'
p28515
(lp28516
S'float64'
p28517
aNtp28518
(S'measOutput'
p28519
(lp28520
S'float64'
p28521
aNtp28522
tp28523
tp28524
sS'DAQmxReadCounterF64Ex'
p28525
((lp28526
S'int32'
p28527
ag34
a((S'taskHandle'
p28528
(lp28529
S'TaskHandle'
p28530
aNtp28531
(S'numSampsPerChan'
p28532
(lp28533
S'int32'
p28534
aNtp28535
(S'timeout'
p28536
(lp28537
S'float64'
p28538
aNtp28539
(S'fillMode'
p28540
(lp28541
S'bool32'
p28542
aNtp28543
(S'readArray'
p28544
(lp28545
S'float64'
p28546
a(lp28547
I-1
aaNtp28548
(S'arraySizeInSamps'
p28549
(lp28550
S'uInt32'
p28551
aNtp28552
(S'sampsPerChanRead'
p28553
(lp28554
S'int32'
p28555
ag42
aNtp28556
(S'reserved'
p28557
(lp28558
S'bool32'
p28559
ag42
aNtp28560
tp28561
tp28562
sS'DAQmxResetCIUsbXferReqCount'
p28563
((lp28564
S'int32'
p28565
ag34
a((S'taskHandle'
p28566
(lp28567
S'TaskHandle'
p28568
aNtp28569
(S'channel'
p28570
(lp28571
S'char'
p28572
a(lp28573
I-1
aaNtp28574
tp28575
tp28576
sS'DAQmxSetExportedSampClkOutputBehavior'
p28577
((lp28578
S'int32'
p28579
ag34
a((S'taskHandle'
p28580
(lp28581
S'TaskHandle'
p28582
aNtp28583
(S'data'
p28584
(lp28585
S'int32'
p28586
aNtp28587
tp28588
tp28589
sS'DAQmxGetPersistedTaskAllowInteractiveEditing'
p28590
((lp28591
S'int32'
p28592
ag34
a((S'taskName'
p28593
(lp28594
S'char'
p28595
a(lp28596
I-1
aaNtp28597
(S'data'
p28598
(lp28599
S'bool32'
p28600
ag42
aNtp28601
tp28602
tp28603
sS'DAQmxResetAOResolutionUnits'
p28604
((lp28605
S'int32'
p28606
ag34
a((S'taskHandle'
p28607
(lp28608
S'TaskHandle'
p28609
aNtp28610
(S'channel'
p28611
(lp28612
S'char'
p28613
a(lp28614
I-1
aaNtp28615
tp28616
tp28617
sS'DAQmxSetExportedAIConvClkOutputTerm'
p28618
((lp28619
S'int32'
p28620
ag34
a((S'taskHandle'
p28621
(lp28622
S'TaskHandle'
p28623
aNtp28624
(S'data'
p28625
(lp28626
S'char'
p28627
ag42
aNtp28628
tp28629
tp28630
sS'DAQmxAdjust9217Cal'
p28631
((lp28632
S'int32'
p28633
ag34
a((S'calHandle'
p28634
(lp28635
S'CalHandle'
p28636
aNtp28637
(S'channelNames'
p28638
(lp28639
S'char'
p28640
a(lp28641
I-1
aaNtp28642
(S'value'
p28643
(lp28644
S'float64'
p28645
aNtp28646
tp28647
tp28648
sS'DAQmxSetCITwoEdgeSepFirstDigFltrEnable'
p28649
((lp28650
S'int32'
p28651
ag34
a((S'taskHandle'
p28652
(lp28653
S'TaskHandle'
p28654
aNtp28655
(S'channel'
p28656
(lp28657
S'char'
p28658
a(lp28659
I-1
aaNtp28660
(S'data'
p28661
(lp28662
S'bool32'
p28663
aNtp28664
tp28665
tp28666
sS'DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p28667
((lp28668
S'int32'
p28669
ag34
a((S'taskHandle'
p28670
(lp28671
S'TaskHandle'
p28672
aNtp28673
(S'data'
p28674
(lp28675
S'float64'
p28676
aNtp28677
tp28678
tp28679
sS'DAQmxGetCIPeriodDigSyncEnable'
p28680
((lp28681
S'int32'
p28682
ag34
a((S'taskHandle'
p28683
(lp28684
S'TaskHandle'
p28685
aNtp28686
(S'channel'
p28687
(lp28688
S'char'
p28689
a(lp28690
I-1
aaNtp28691
(S'data'
p28692
(lp28693
S'bool32'
p28694
ag42
aNtp28695
tp28696
tp28697
sS'DAQmxSetAIChanCalApplyCalIfExp'
p28698
((lp28699
S'int32'
p28700
ag34
a((S'taskHandle'
p28701
(lp28702
S'TaskHandle'
p28703
aNtp28704
(S'channel'
p28705
(lp28706
S'char'
p28707
a(lp28708
I-1
aaNtp28709
(S'data'
p28710
(lp28711
S'bool32'
p28712
aNtp28713
tp28714
tp28715
sS'DAQmxGetCIPulseWidthTermCfg'
p28716
((lp28717
S'int32'
p28718
ag34
a((S'taskHandle'
p28719
(lp28720
S'TaskHandle'
p28721
aNtp28722
(S'channel'
p28723
(lp28724
S'char'
p28725
a(lp28726
I-1
aaNtp28727
(S'data'
p28728
(lp28729
S'int32'
p28730
ag42
aNtp28731
tp28732
tp28733
sS'DAQmxGetDevAILowpassCutoffFreqRangeVals'
p28734
((lp28735
S'int32'
p28736
ag34
a((S'device'
p28737
(lp28738
S'char'
p28739
a(lp28740
I-1
aaNtp28741
(S'data'
p28742
(lp28743
S'float64'
p28744
ag42
aNtp28745
(S'arraySizeInElements'
p28746
(lp28747
S'uInt32'
p28748
aNtp28749
tp28750
tp28751
sS'DAQmxGetSampClkTimebaseDiv'
p28752
((lp28753
S'int32'
p28754
ag34
a((S'taskHandle'
p28755
(lp28756
S'TaskHandle'
p28757
aNtp28758
(S'data'
p28759
(lp28760
S'uInt32'
p28761
ag42
aNtp28762
tp28763
tp28764
sS'DAQmxGetDOTristate'
p28765
((lp28766
S'int32'
p28767
ag34
a((S'taskHandle'
p28768
(lp28769
S'TaskHandle'
p28770
aNtp28771
(S'channel'
p28772
(lp28773
S'char'
p28774
a(lp28775
I-1
aaNtp28776
(S'data'
p28777
(lp28778
S'bool32'
p28779
ag42
aNtp28780
tp28781
tp28782
sS'DAQmxGetPersistedScaleAuthor'
p28783
((lp28784
S'int32'
p28785
ag34
a((S'scaleName'
p28786
(lp28787
S'char'
p28788
a(lp28789
I-1
aaNtp28790
(S'data'
p28791
(lp28792
S'char'
p28793
ag42
aNtp28794
(S'bufferSize'
p28795
(lp28796
S'uInt32'
p28797
aNtp28798
tp28799
tp28800
sS'DAQmxSetup1540Cal'
p28801
((lp28802
S'int32'
p28803
ag34
a((S'calHandle'
p28804
(lp28805
S'CalHandle'
p28806
aNtp28807
(S'channelName'
p28808
(lp28809
S'char'
p28810
a(lp28811
I-1
aaNtp28812
(S'excitationVoltage'
p28813
(lp28814
S'float64'
p28815
aNtp28816
(S'excitationFreq'
p28817
(lp28818
S'float64'
p28819
aNtp28820
tp28821
tp28822
sS'DAQmxGetAILowpassSwitchCapOutClkDiv'
p28823
((lp28824
S'int32'
p28825
ag34
a((S'taskHandle'
p28826
(lp28827
S'TaskHandle'
p28828
aNtp28829
(S'channel'
p28830
(lp28831
S'char'
p28832
a(lp28833
I-1
aaNtp28834
(S'data'
p28835
(lp28836
S'uInt32'
p28837
ag42
aNtp28838
tp28839
tp28840
sS'DAQmxGetAIResistanceCfg'
p28841
((lp28842
S'int32'
p28843
ag34
a((S'taskHandle'
p28844
(lp28845
S'TaskHandle'
p28846
aNtp28847
(S'channel'
p28848
(lp28849
S'char'
p28850
a(lp28851
I-1
aaNtp28852
(S'data'
p28853
(lp28854
S'int32'
p28855
ag42
aNtp28856
tp28857
tp28858
sS'DAQmxGetAnlgWinRefTrigSrc'
p28859
((lp28860
S'int32'
p28861
ag34
a((S'taskHandle'
p28862
(lp28863
S'TaskHandle'
p28864
aNtp28865
(S'data'
p28866
(lp28867
S'char'
p28868
ag42
aNtp28869
(S'bufferSize'
p28870
(lp28871
S'uInt32'
p28872
aNtp28873
tp28874
tp28875
sS'DAQmxGetSampClkDigFltrTimebaseRate'
p28876
((lp28877
S'int32'
p28878
ag34
a((S'taskHandle'
p28879
(lp28880
S'TaskHandle'
p28881
aNtp28882
(S'data'
p28883
(lp28884
S'float64'
p28885
ag42
aNtp28886
tp28887
tp28888
sS'DAQmxResetCITwoEdgeSepFirstEdge'
p28889
((lp28890
S'int32'
p28891
ag34
a((S'taskHandle'
p28892
(lp28893
S'TaskHandle'
p28894
aNtp28895
(S'channel'
p28896
(lp28897
S'char'
p28898
a(lp28899
I-1
aaNtp28900
tp28901
tp28902
sS'DAQmxSetCITwoEdgeSepFirstEdge'
p28903
((lp28904
S'int32'
p28905
ag34
a((S'taskHandle'
p28906
(lp28907
S'TaskHandle'
p28908
aNtp28909
(S'channel'
p28910
(lp28911
S'char'
p28912
a(lp28913
I-1
aaNtp28914
(S'data'
p28915
(lp28916
S'int32'
p28917
aNtp28918
tp28919
tp28920
sS'DAQmxGet9226CalAdjustPoints'
p28921
((lp28922
S'int32'
p28923
ag34
a((S'calHandle'
p28924
(lp28925
S'CalHandle'
p28926
aNtp28927
(S'adjustmentPoints'
p28928
(lp28929
S'float64'
p28930
ag42
aNtp28931
(S'bufferSize'
p28932
(lp28933
S'uInt32'
p28934
aNtp28935
tp28936
tp28937
sS'DAQmxGetCITwoEdgeSepFirstTerm'
p28938
((lp28939
S'int32'
p28940
ag34
a((S'taskHandle'
p28941
(lp28942
S'TaskHandle'
p28943
aNtp28944
(S'channel'
p28945
(lp28946
S'char'
p28947
a(lp28948
I-1
aaNtp28949
(S'data'
p28950
(lp28951
S'char'
p28952
ag42
aNtp28953
(S'bufferSize'
p28954
(lp28955
S'uInt32'
p28956
aNtp28957
tp28958
tp28959
sS'DAQmxGetAIDigFltrResponse'
p28960
((lp28961
S'int32'
p28962
ag34
a((S'taskHandle'
p28963
(lp28964
S'TaskHandle'
p28965
aNtp28966
(S'channel'
p28967
(lp28968
S'char'
p28969
a(lp28970
I-1
aaNtp28971
(S'data'
p28972
(lp28973
S'int32'
p28974
ag42
aNtp28975
tp28976
tp28977
sS'DAQmxSetCIEncoderAInputDigFltrTimebaseRate'
p28978
((lp28979
S'int32'
p28980
ag34
a((S'taskHandle'
p28981
(lp28982
S'TaskHandle'
p28983
aNtp28984
(S'channel'
p28985
(lp28986
S'char'
p28987
a(lp28988
I-1
aaNtp28989
(S'data'
p28990
(lp28991
S'float64'
p28992
aNtp28993
tp28994
tp28995
sS'DAQmxGetDevSerialNum'
p28996
((lp28997
S'int32'
p28998
ag34
a((S'device'
p28999
(lp29000
S'char'
p29001
a(lp29002
I-1
aaNtp29003
(S'data'
p29004
(lp29005
S'uInt32'
p29006
ag42
aNtp29007
tp29008
tp29009
sS'DAQmxGetAODACRngHigh'
p29010
((lp29011
S'int32'
p29012
ag34
a((S'taskHandle'
p29013
(lp29014
S'TaskHandle'
p29015
aNtp29016
(S'channel'
p29017
(lp29018
S'char'
p29019
a(lp29020
I-1
aaNtp29021
(S'data'
p29022
(lp29023
S'float64'
p29024
ag42
aNtp29025
tp29026
tp29027
sS'DAQmxGetCIPulseWidthStartingEdge'
p29028
((lp29029
S'int32'
p29030
ag34
a((S'taskHandle'
p29031
(lp29032
S'TaskHandle'
p29033
aNtp29034
(S'channel'
p29035
(lp29036
S'char'
p29037
a(lp29038
I-1
aaNtp29039
(S'data'
p29040
(lp29041
S'int32'
p29042
ag42
aNtp29043
tp29044
tp29045
sS'DAQmxGetReadRelativeTo'
p29046
((lp29047
S'int32'
p29048
ag34
a((S'taskHandle'
p29049
(lp29050
S'TaskHandle'
p29051
aNtp29052
(S'data'
p29053
(lp29054
S'int32'
p29055
ag42
aNtp29056
tp29057
tp29058
sS'DAQmxCreateTEDSAIAccelChan'
p29059
((lp29060
S'int32'
p29061
ag34
a((S'taskHandle'
p29062
(lp29063
S'TaskHandle'
p29064
aNtp29065
(S'physicalChannel'
p29066
(lp29067
S'char'
p29068
a(lp29069
I-1
aaNtp29070
(S'nameToAssignToChannel'
p29071
(lp29072
S'char'
p29073
a(lp29074
I-1
aaNtp29075
(S'terminalConfig'
p29076
(lp29077
S'int32'
p29078
aNtp29079
(S'minVal'
p29080
(lp29081
S'float64'
p29082
aNtp29083
(S'maxVal'
p29084
(lp29085
S'float64'
p29086
aNtp29087
(S'units'
p29088
(lp29089
S'int32'
p29090
aNtp29091
(S'currentExcitSource'
p29092
(lp29093
S'int32'
p29094
aNtp29095
(S'currentExcitVal'
p29096
(lp29097
S'float64'
p29098
aNtp29099
(S'customScaleName'
p29100
(lp29101
S'char'
p29102
a(lp29103
I-1
aaNtp29104
tp29105
tp29106
sS'DAQmxGetCIEncoderBInputDigFltrTimebaseSrc'
p29107
((lp29108
S'int32'
p29109
ag34
a((S'taskHandle'
p29110
(lp29111
S'TaskHandle'
p29112
aNtp29113
(S'channel'
p29114
(lp29115
S'char'
p29116
a(lp29117
I-1
aaNtp29118
(S'data'
p29119
(lp29120
S'char'
p29121
ag42
aNtp29122
(S'bufferSize'
p29123
(lp29124
S'uInt32'
p29125
aNtp29126
tp29127
tp29128
sS'DAQmxGetDevDIPorts'
p29129
((lp29130
S'int32'
p29131
ag34
a((S'device'
p29132
(lp29133
S'char'
p29134
a(lp29135
I-1
aaNtp29136
(S'data'
p29137
(lp29138
S'char'
p29139
ag42
aNtp29140
(S'bufferSize'
p29141
(lp29142
S'uInt32'
p29143
aNtp29144
tp29145
tp29146
sS'DAQmxGetWatchdogDOExpirState'
p29147
((lp29148
S'int32'
p29149
ag34
a((S'taskHandle'
p29150
(lp29151
S'TaskHandle'
p29152
aNtp29153
(S'lines'
p29154
(lp29155
S'char'
p29156
a(lp29157
I-1
aaNtp29158
(S'data'
p29159
(lp29160
S'int32'
p29161
ag42
aNtp29162
tp29163
tp29164
sS'DAQmxGetDigLvlPauseTrigWhen'
p29165
((lp29166
S'int32'
p29167
ag34
a((S'taskHandle'
p29168
(lp29169
S'TaskHandle'
p29170
aNtp29171
(S'data'
p29172
(lp29173
S'int32'
p29174
ag42
aNtp29175
tp29176
tp29177
sS'DAQmxSetDOOvercurrentAutoReenable'
p29178
((lp29179
S'int32'
p29180
ag34
a((S'taskHandle'
p29181
(lp29182
S'TaskHandle'
p29183
aNtp29184
(S'channel'
p29185
(lp29186
S'char'
p29187
a(lp29188
I-1
aaNtp29189
(S'data'
p29190
(lp29191
S'bool32'
p29192
aNtp29193
tp29194
tp29195
sS'DAQmxGetDevAOSupportedOutputTypes'
p29196
((lp29197
S'int32'
p29198
ag34
a((S'device'
p29199
(lp29200
S'char'
p29201
a(lp29202
I-1
aaNtp29203
(S'data'
p29204
(lp29205
S'int32'
p29206
ag42
aNtp29207
(S'arraySizeInElements'
p29208
(lp29209
S'uInt32'
p29210
aNtp29211
tp29212
tp29213
sS'DAQmxSetCIFreqUnits'
p29214
((lp29215
S'int32'
p29216
ag34
a((S'taskHandle'
p29217
(lp29218
S'TaskHandle'
p29219
aNtp29220
(S'channel'
p29221
(lp29222
S'char'
p29223
a(lp29224
I-1
aaNtp29225
(S'data'
p29226
(lp29227
S'int32'
p29228
aNtp29229
tp29230
tp29231
sS'DAQmxResetExportedAdvTrigOutputTerm'
p29232
((lp29233
S'int32'
p29234
ag34
a((S'taskHandle'
p29235
(lp29236
S'TaskHandle'
p29237
aNtp29238
tp29239
tp29240
sS'DAQmxSetSampClkDigFltrMinPulseWidth'
p29241
((lp29242
S'int32'
p29243
ag34
a((S'taskHandle'
p29244
(lp29245
S'TaskHandle'
p29246
aNtp29247
(S'data'
p29248
(lp29249
S'float64'
p29250
aNtp29251
tp29252
tp29253
sS'DAQmxGetAdvTrigType'
p29254
((lp29255
S'int32'
p29256
ag34
a((S'taskHandle'
p29257
(lp29258
S'TaskHandle'
p29259
aNtp29260
(S'data'
p29261
(lp29262
S'int32'
p29263
ag42
aNtp29264
tp29265
tp29266
sS'DAQmxSetRefTrigDelay'
p29267
((lp29268
S'int32'
p29269
ag34
a((S'taskHandle'
p29270
(lp29271
S'TaskHandle'
p29272
aNtp29273
(S'data'
p29274
(lp29275
S'float64'
p29276
aNtp29277
tp29278
tp29279
sS'DAQmxGetAnlgWinStartTrigSrc'
p29280
((lp29281
S'int32'
p29282
ag34
a((S'taskHandle'
p29283
(lp29284
S'TaskHandle'
p29285
aNtp29286
(S'data'
p29287
(lp29288
S'char'
p29289
ag42
aNtp29290
(S'bufferSize'
p29291
(lp29292
S'uInt32'
p29293
aNtp29294
tp29295
tp29296
sS'DAQmxSetAIBridgeShuntCalGainAdjust'
p29297
((lp29298
S'int32'
p29299
ag34
a((S'taskHandle'
p29300
(lp29301
S'TaskHandle'
p29302
aNtp29303
(S'channel'
p29304
(lp29305
S'char'
p29306
a(lp29307
I-1
aaNtp29308
(S'data'
p29309
(lp29310
S'float64'
p29311
aNtp29312
tp29313
tp29314
sS'DAQmxGetAILVDTSensitivityUnits'
p29315
((lp29316
S'int32'
p29317
ag34
a((S'taskHandle'
p29318
(lp29319
S'TaskHandle'
p29320
aNtp29321
(S'channel'
p29322
(lp29323
S'char'
p29324
a(lp29325
I-1
aaNtp29326
(S'data'
p29327
(lp29328
S'int32'
p29329
ag42
aNtp29330
tp29331
tp29332
sS'DAQmxSetup9242Cal'
p29333
((lp29334
S'int32'
p29335
ag34
a((S'calHandle'
p29336
(lp29337
S'CalHandle'
p29338
aNtp29339
(S'channelNames'
p29340
(lp29341
S'char'
p29342
a(lp29343
I-1
aaNtp29344
(S'value'
p29345
(lp29346
S'float64'
p29347
aNtp29348
tp29349
tp29350
sS'DAQmxGetAIConvDigFltrMinPulseWidthEx'
p29351
((lp29352
S'int32'
p29353
ag34
a((S'taskHandle'
p29354
(lp29355
S'TaskHandle'
p29356
aNtp29357
(S'deviceNames'
p29358
(lp29359
S'char'
p29360
a(lp29361
I-1
aaNtp29362
(S'data'
p29363
(lp29364
S'float64'
p29365
ag42
aNtp29366
tp29367
tp29368
sS'DAQmxGetSyncPulseSyncTime'
p29369
((lp29370
S'int32'
p29371
ag34
a((S'taskHandle'
p29372
(lp29373
S'TaskHandle'
p29374
aNtp29375
(S'data'
p29376
(lp29377
S'float64'
p29378
ag42
aNtp29379
tp29380
tp29381
sS'DAQmxResetWatchdogCOExpirState'
p29382
((lp29383
S'int32'
p29384
ag34
a((S'taskHandle'
p29385
(lp29386
S'TaskHandle'
p29387
aNtp29388
(S'lines'
p29389
(lp29390
S'char'
p29391
a(lp29392
I-1
aaNtp29393
tp29394
tp29395
sS'DAQmxSetAIThrmstrR1'
p29396
((lp29397
S'int32'
p29398
ag34
a((S'taskHandle'
p29399
(lp29400
S'TaskHandle'
p29401
aNtp29402
(S'channel'
p29403
(lp29404
S'char'
p29405
a(lp29406
I-1
aaNtp29407
(S'data'
p29408
(lp29409
S'float64'
p29410
aNtp29411
tp29412
tp29413
sS'DAQmxSetCOPulseHighTime'
p29414
((lp29415
S'int32'
p29416
ag34
a((S'taskHandle'
p29417
(lp29418
S'TaskHandle'
p29419
aNtp29420
(S'channel'
p29421
(lp29422
S'char'
p29423
a(lp29424
I-1
aaNtp29425
(S'data'
p29426
(lp29427
S'float64'
p29428
aNtp29429
tp29430
tp29431
sS'DAQmxSetChangeDetectDIFallingEdgePhysicalChans'
p29432
((lp29433
S'int32'
p29434
ag34
a((S'taskHandle'
p29435
(lp29436
S'TaskHandle'
p29437
aNtp29438
(S'data'
p29439
(lp29440
S'char'
p29441
ag42
aNtp29442
tp29443
tp29444
sS'DAQmxSetAnlgWinStartTrigDigSyncEnable'
p29445
((lp29446
S'int32'
p29447
ag34
a((S'taskHandle'
p29448
(lp29449
S'TaskHandle'
p29450
aNtp29451
(S'data'
p29452
(lp29453
S'bool32'
p29454
aNtp29455
tp29456
tp29457
sS'DAQmxGetCOCtrTimebaseDigFltrEnable'
p29458
((lp29459
S'int32'
p29460
ag34
a((S'taskHandle'
p29461
(lp29462
S'TaskHandle'
p29463
aNtp29464
(S'channel'
p29465
(lp29466
S'char'
p29467
a(lp29468
I-1
aaNtp29469
(S'data'
p29470
(lp29471
S'bool32'
p29472
ag42
aNtp29473
tp29474
tp29475
sS'DAQmxSetAIStrainUnits'
p29476
((lp29477
S'int32'
p29478
ag34
a((S'taskHandle'
p29479
(lp29480
S'TaskHandle'
p29481
aNtp29482
(S'channel'
p29483
(lp29484
S'char'
p29485
a(lp29486
I-1
aaNtp29487
(S'data'
p29488
(lp29489
S'int32'
p29490
aNtp29491
tp29492
tp29493
sS'DAQmxResetCOUsbXferReqCount'
p29494
((lp29495
S'int32'
p29496
ag34
a((S'taskHandle'
p29497
(lp29498
S'TaskHandle'
p29499
aNtp29500
(S'channel'
p29501
(lp29502
S'char'
p29503
a(lp29504
I-1
aaNtp29505
tp29506
tp29507
sS'DAQmxGetAOUsbXferReqCount'
p29508
((lp29509
S'int32'
p29510
ag34
a((S'taskHandle'
p29511
(lp29512
S'TaskHandle'
p29513
aNtp29514
(S'channel'
p29515
(lp29516
S'char'
p29517
a(lp29518
I-1
aaNtp29519
(S'data'
p29520
(lp29521
S'uInt32'
p29522
ag42
aNtp29523
tp29524
tp29525
sS'DAQmxResetHshkSampleInputDataWhen'
p29526
((lp29527
S'int32'
p29528
ag34
a((S'taskHandle'
p29529
(lp29530
S'TaskHandle'
p29531
aNtp29532
tp29533
tp29534
sS'DAQmxSetScaleScaledUnits'
p29535
((lp29536
S'int32'
p29537
ag34
a((S'scaleName'
p29538
(lp29539
S'char'
p29540
a(lp29541
I-1
aaNtp29542
(S'data'
p29543
(lp29544
S'char'
p29545
ag42
aNtp29546
tp29547
tp29548
sS'DAQmxGetSwitchChanUsage'
p29549
((lp29550
S'int32'
p29551
ag34
a((S'switchChannelName'
p29552
(lp29553
S'char'
p29554
a(lp29555
I-1
aaNtp29556
(S'data'
p29557
(lp29558
S'int32'
p29559
ag42
aNtp29560
tp29561
tp29562
sS'DAQmxSetAOFilterDelayAdjustment'
p29563
((lp29564
S'int32'
p29565
ag34
a((S'taskHandle'
p29566
(lp29567
S'TaskHandle'
p29568
aNtp29569
(S'channel'
p29570
(lp29571
S'char'
p29572
a(lp29573
I-1
aaNtp29574
(S'data'
p29575
(lp29576
S'float64'
p29577
aNtp29578
tp29579
tp29580
sS'DAQmxAdjust4463Cal'
p29581
((lp29582
S'int32'
p29583
ag34
a((S'calHandle'
p29584
(lp29585
S'CalHandle'
p29586
aNtp29587
(S'channelNames'
p29588
(lp29589
S'char'
p29590
a(lp29591
I-1
aaNtp29592
(S'referenceVoltage'
p29593
(lp29594
S'float64'
p29595
aNtp29596
tp29597
tp29598
sS'DAQmxResetExportedAIHoldCmpltEventPulsePolarity'
p29599
((lp29600
S'int32'
p29601
ag34
a((S'taskHandle'
p29602
(lp29603
S'TaskHandle'
p29604
aNtp29605
tp29606
tp29607
sS'DAQmxSetCIEncoderZIndexPhase'
p29608
((lp29609
S'int32'
p29610
ag34
a((S'taskHandle'
p29611
(lp29612
S'TaskHandle'
p29613
aNtp29614
(S'channel'
p29615
(lp29616
S'char'
p29617
a(lp29618
I-1
aaNtp29619
(S'data'
p29620
(lp29621
S'int32'
p29622
aNtp29623
tp29624
tp29625
sS'DAQmxGetCIEncoderAInputDigFltrTimebaseRate'
p29626
((lp29627
S'int32'
p29628
ag34
a((S'taskHandle'
p29629
(lp29630
S'TaskHandle'
p29631
aNtp29632
(S'channel'
p29633
(lp29634
S'char'
p29635
a(lp29636
I-1
aaNtp29637
(S'data'
p29638
(lp29639
S'float64'
p29640
ag42
aNtp29641
tp29642
tp29643
sS'DAQmxSetAIConvDigFltrMinPulseWidth'
p29644
((lp29645
S'int32'
p29646
ag34
a((S'taskHandle'
p29647
(lp29648
S'TaskHandle'
p29649
aNtp29650
(S'data'
p29651
(lp29652
S'float64'
p29653
aNtp29654
tp29655
tp29656
sS'DAQmxGetAILowpassSwitchCapExtClkDiv'
p29657
((lp29658
S'int32'
p29659
ag34
a((S'taskHandle'
p29660
(lp29661
S'TaskHandle'
p29662
aNtp29663
(S'channel'
p29664
(lp29665
S'char'
p29666
a(lp29667
I-1
aaNtp29668
(S'data'
p29669
(lp29670
S'uInt32'
p29671
ag42
aNtp29672
tp29673
tp29674
sS'DAQmxResetAIBridgeShuntCalShuntCalAActualResistance'
p29675
((lp29676
S'int32'
p29677
ag34
a((S'taskHandle'
p29678
(lp29679
S'TaskHandle'
p29680
aNtp29681
(S'channel'
p29682
(lp29683
S'char'
p29684
a(lp29685
I-1
aaNtp29686
tp29687
tp29688
sS'DAQmxGetRefTrigDelay'
p29689
((lp29690
S'int32'
p29691
ag34
a((S'taskHandle'
p29692
(lp29693
S'TaskHandle'
p29694
aNtp29695
(S'data'
p29696
(lp29697
S'float64'
p29698
ag42
aNtp29699
tp29700
tp29701
sS'DAQmxResetCIMax'
p29702
((lp29703
S'int32'
p29704
ag34
a((S'taskHandle'
p29705
(lp29706
S'TaskHandle'
p29707
aNtp29708
(S'channel'
p29709
(lp29710
S'char'
p29711
a(lp29712
I-1
aaNtp29713
tp29714
tp29715
sS'DAQmxSetExported10MHzRefClkOutputTerm'
p29716
((lp29717
S'int32'
p29718
ag34
a((S'taskHandle'
p29719
(lp29720
S'TaskHandle'
p29721
aNtp29722
(S'data'
p29723
(lp29724
S'char'
p29725
ag42
aNtp29726
tp29727
tp29728
sS'DAQmxSetAnlgWinRefTrigDigFltrMinPulseWidth'
p29729
((lp29730
S'int32'
p29731
ag34
a((S'taskHandle'
p29732
(lp29733
S'TaskHandle'
p29734
aNtp29735
(S'data'
p29736
(lp29737
S'float64'
p29738
aNtp29739
tp29740
tp29741
sS'DAQmxGetDOOvercurrentLimit'
p29742
((lp29743
S'int32'
p29744
ag34
a((S'taskHandle'
p29745
(lp29746
S'TaskHandle'
p29747
aNtp29748
(S'channel'
p29749
(lp29750
S'char'
p29751
a(lp29752
I-1
aaNtp29753
(S'data'
p29754
(lp29755
S'float64'
p29756
ag42
aNtp29757
tp29758
tp29759
sS'DAQmxSetCIFreqDigFltrEnable'
p29760
((lp29761
S'int32'
p29762
ag34
a((S'taskHandle'
p29763
(lp29764
S'TaskHandle'
p29765
aNtp29766
(S'channel'
p29767
(lp29768
S'char'
p29769
a(lp29770
I-1
aaNtp29771
(S'data'
p29772
(lp29773
S'bool32'
p29774
aNtp29775
tp29776
tp29777
sS'DAQmxGetCIPulseWidthDigFltrTimebaseRate'
p29778
((lp29779
S'int32'
p29780
ag34
a((S'taskHandle'
p29781
(lp29782
S'TaskHandle'
p29783
aNtp29784
(S'channel'
p29785
(lp29786
S'char'
p29787
a(lp29788
I-1
aaNtp29789
(S'data'
p29790
(lp29791
S'float64'
p29792
ag42
aNtp29793
tp29794
tp29795
sS'DAQmxSetup9265Cal'
p29796
((lp29797
S'int32'
p29798
ag34
a((S'calHandle'
p29799
(lp29800
S'CalHandle'
p29801
aNtp29802
(S'channelNames'
p29803
(lp29804
S'char'
p29805
a(lp29806
I-1
aaNtp29807
(S'value'
p29808
(lp29809
S'int32'
p29810
aNtp29811
tp29812
tp29813
sS'DAQmxResetAIThrmstrA'
p29814
((lp29815
S'int32'
p29816
ag34
a((S'taskHandle'
p29817
(lp29818
S'TaskHandle'
p29819
aNtp29820
(S'channel'
p29821
(lp29822
S'char'
p29823
a(lp29824
I-1
aaNtp29825
tp29826
tp29827
sS'DAQmxResetAIThrmstrB'
p29828
((lp29829
S'int32'
p29830
ag34
a((S'taskHandle'
p29831
(lp29832
S'TaskHandle'
p29833
aNtp29834
(S'channel'
p29835
(lp29836
S'char'
p29837
a(lp29838
I-1
aaNtp29839
tp29840
tp29841
sS'DAQmxResetAIThrmstrC'
p29842
((lp29843
S'int32'
p29844
ag34
a((S'taskHandle'
p29845
(lp29846
S'TaskHandle'
p29847
aNtp29848
(S'channel'
p29849
(lp29850
S'char'
p29851
a(lp29852
I-1
aaNtp29853
tp29854
tp29855
sS'DAQmxResetDigEdgeRefTrigDigFltrTimebaseRate'
p29856
((lp29857
S'int32'
p29858
ag34
a((S'taskHandle'
p29859
(lp29860
S'TaskHandle'
p29861
aNtp29862
tp29863
tp29864
sS'DAQmxGetDevChassisModuleDevNames'
p29865
((lp29866
S'int32'
p29867
ag34
a((S'device'
p29868
(lp29869
S'char'
p29870
a(lp29871
I-1
aaNtp29872
(S'data'
p29873
(lp29874
S'char'
p29875
ag42
aNtp29876
(S'bufferSize'
p29877
(lp29878
S'uInt32'
p29879
aNtp29880
tp29881
tp29882
sS'DAQmxGetCIEncoderZIndexPhase'
p29883
((lp29884
S'int32'
p29885
ag34
a((S'taskHandle'
p29886
(lp29887
S'TaskHandle'
p29888
aNtp29889
(S'channel'
p29890
(lp29891
S'char'
p29892
a(lp29893
I-1
aaNtp29894
(S'data'
p29895
(lp29896
S'int32'
p29897
ag42
aNtp29898
tp29899
tp29900
sS'DAQmxGetAOFuncGenOffset'
p29901
((lp29902
S'int32'
p29903
ag34
a((S'taskHandle'
p29904
(lp29905
S'TaskHandle'
p29906
aNtp29907
(S'channel'
p29908
(lp29909
S'char'
p29910
a(lp29911
I-1
aaNtp29912
(S'data'
p29913
(lp29914
S'float64'
p29915
ag42
aNtp29916
tp29917
tp29918
sS'DAQmxSetAIACExcitFreq'
p29919
((lp29920
S'int32'
p29921
ag34
a((S'taskHandle'
p29922
(lp29923
S'TaskHandle'
p29924
aNtp29925
(S'channel'
p29926
(lp29927
S'char'
p29928
a(lp29929
I-1
aaNtp29930
(S'data'
p29931
(lp29932
S'float64'
p29933
aNtp29934
tp29935
tp29936
sS'DAQmxGetDIDigFltrEnable'
p29937
((lp29938
S'int32'
p29939
ag34
a((S'taskHandle'
p29940
(lp29941
S'TaskHandle'
p29942
aNtp29943
(S'channel'
p29944
(lp29945
S'char'
p29946
a(lp29947
I-1
aaNtp29948
(S'data'
p29949
(lp29950
S'bool32'
p29951
ag42
aNtp29952
tp29953
tp29954
sS'DAQmxConnectSCExpressCalAccChans'
p29955
((lp29956
S'int32'
p29957
ag34
a((S'calHandle'
p29958
(lp29959
S'CalHandle'
p29960
aNtp29961
(S'channelNames'
p29962
(lp29963
S'char'
p29964
a(lp29965
I-1
aaNtp29966
(S'connection'
p29967
(lp29968
S'char'
p29969
a(lp29970
I-1
aaNtp29971
tp29972
tp29973
sS'DAQmxSetAIChanCalExpDate'
p29974
((lp29975
S'int32'
p29976
ag34
a((S'taskHandle'
p29977
(lp29978
S'TaskHandle'
p29979
aNtp29980
(S'channelName'
p29981
(lp29982
S'char'
p29983
a(lp29984
I-1
aaNtp29985
(S'year'
p29986
(lp29987
S'uInt32'
p29988
aNtp29989
(S'month'
p29990
(lp29991
S'uInt32'
p29992
aNtp29993
(S'day'
p29994
(lp29995
S'uInt32'
p29996
aNtp29997
(S'hour'
p29998
(lp29999
S'uInt32'
p30000
aNtp30001
(S'minute'
p30002
(lp30003
S'uInt32'
p30004
aNtp30005
tp30006
tp30007
sS'DAQmxGetPersistedChanAuthor'
p30008
((lp30009
S'int32'
p30010
ag34
a((S'channel'
p30011
(lp30012
S'char'
p30013
a(lp30014
I-1
aaNtp30015
(S'data'
p30016
(lp30017
S'char'
p30018
ag42
aNtp30019
(S'bufferSize'
p30020
(lp30021
S'uInt32'
p30022
aNtp30023
tp30024
tp30025
sS'DAQmxSwitchGetSingleRelayPos'
p30026
((lp30027
S'int32'
p30028
ag34
a((S'relayName'
p30029
(lp30030
S'char'
p30031
a(lp30032
I-1
aaNtp30033
(S'relayPos'
p30034
(lp30035
S'uInt32'
p30036
ag42
aNtp30037
tp30038
tp30039
sS'DAQmxResetDigPatternStartTrigSrc'
p30040
((lp30041
S'int32'
p30042
ag34
a((S'taskHandle'
p30043
(lp30044
S'TaskHandle'
p30045
aNtp30046
tp30047
tp30048
sS'DAQmxGetAIPressureUnits'
p30049
((lp30050
S'int32'
p30051
ag34
a((S'taskHandle'
p30052
(lp30053
S'TaskHandle'
p30054
aNtp30055
(S'channel'
p30056
(lp30057
S'char'
p30058
a(lp30059
I-1
aaNtp30060
(S'data'
p30061
(lp30062
S'int32'
p30063
ag42
aNtp30064
tp30065
tp30066
sS'DAQmxWriteDigitalU32'
p30067
((lp30068
S'int32'
p30069
ag34
a((S'taskHandle'
p30070
(lp30071
S'TaskHandle'
p30072
aNtp30073
(S'numSampsPerChan'
p30074
(lp30075
S'int32'
p30076
aNtp30077
(S'autoStart'
p30078
(lp30079
S'bool32'
p30080
aNtp30081
(S'timeout'
p30082
(lp30083
S'float64'
p30084
aNtp30085
(S'dataLayout'
p30086
(lp30087
S'bool32'
p30088
aNtp30089
(S'writeArray'
p30090
(lp30091
S'uInt32'
p30092
a(lp30093
I-1
aaNtp30094
(S'sampsPerChanWritten'
p30095
(lp30096
S'int32'
p30097
ag42
aNtp30098
(S'reserved'
p30099
(lp30100
S'bool32'
p30101
ag42
aNtp30102
tp30103
tp30104
sS'DAQmxGetExportedDataActiveEventLvlActiveLvl'
p30105
((lp30106
S'int32'
p30107
ag34
a((S'taskHandle'
p30108
(lp30109
S'TaskHandle'
p30110
aNtp30111
(S'data'
p30112
(lp30113
S'int32'
p30114
ag42
aNtp30115
tp30116
tp30117
sS'DAQmxGetSwitchScanRepeatMode'
p30118
((lp30119
S'int32'
p30120
ag34
a((S'taskHandle'
p30121
(lp30122
S'TaskHandle'
p30123
aNtp30124
(S'data'
p30125
(lp30126
S'int32'
p30127
ag42
aNtp30128
tp30129
tp30130
sS'DAQmxResetCILinEncoderUnits'
p30131
((lp30132
S'int32'
p30133
ag34
a((S'taskHandle'
p30134
(lp30135
S'TaskHandle'
p30136
aNtp30137
(S'channel'
p30138
(lp30139
S'char'
p30140
a(lp30141
I-1
aaNtp30142
tp30143
tp30144
sS'DAQmxSetCIPulseWidthDigFltrTimebaseRate'
p30145
((lp30146
S'int32'
p30147
ag34
a((S'taskHandle'
p30148
(lp30149
S'TaskHandle'
p30150
aNtp30151
(S'channel'
p30152
(lp30153
S'char'
p30154
a(lp30155
I-1
aaNtp30156
(S'data'
p30157
(lp30158
S'float64'
p30159
aNtp30160
tp30161
tp30162
sS'DAQmxGetExtCalLastTemp'
p30163
((lp30164
S'int32'
p30165
ag34
a((S'deviceName'
p30166
(lp30167
S'char'
p30168
a(lp30169
I-1
aaNtp30170
(S'data'
p30171
(lp30172
S'float64'
p30173
ag42
aNtp30174
tp30175
tp30176
sS'DAQmxResetDOLogicFamily'
p30177
((lp30178
S'int32'
p30179
ag34
a((S'taskHandle'
p30180
(lp30181
S'TaskHandle'
p30182
aNtp30183
(S'channel'
p30184
(lp30185
S'char'
p30186
a(lp30187
I-1
aaNtp30188
tp30189
tp30190
sS'DAQmxSetAIVelocityIEPESensordBRef'
p30191
((lp30192
S'int32'
p30193
ag34
a((S'taskHandle'
p30194
(lp30195
S'TaskHandle'
p30196
aNtp30197
(S'channel'
p30198
(lp30199
S'char'
p30200
a(lp30201
I-1
aaNtp30202
(S'data'
p30203
(lp30204
S'float64'
p30205
aNtp30206
tp30207
tp30208
sS'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p30209
((lp30210
S'int32'
p30211
ag34
a((S'taskHandle'
p30212
(lp30213
S'TaskHandle'
p30214
aNtp30215
(S'channel'
p30216
(lp30217
S'char'
p30218
a(lp30219
I-1
aaNtp30220
tp30221
tp30222
sS'DAQmxSetChanDescr'
p30223
((lp30224
S'int32'
p30225
ag34
a((S'taskHandle'
p30226
(lp30227
S'TaskHandle'
p30228
aNtp30229
(S'channel'
p30230
(lp30231
S'char'
p30232
a(lp30233
I-1
aaNtp30234
(S'data'
p30235
(lp30236
S'char'
p30237
ag42
aNtp30238
tp30239
tp30240
sS'DAQmxSetCIPulseFreqUnits'
p30241
((lp30242
S'int32'
p30243
ag34
a((S'taskHandle'
p30244
(lp30245
S'TaskHandle'
p30246
aNtp30247
(S'channel'
p30248
(lp30249
S'char'
p30250
a(lp30251
I-1
aaNtp30252
(S'data'
p30253
(lp30254
S'int32'
p30255
aNtp30256
tp30257
tp30258
sS'DAQmxSetStartTrigType'
p30259
((lp30260
S'int32'
p30261
ag34
a((S'taskHandle'
p30262
(lp30263
S'TaskHandle'
p30264
aNtp30265
(S'data'
p30266
(lp30267
S'int32'
p30268
aNtp30269
tp30270
tp30271
sS'DAQmxGetRefClkSrc'
p30272
((lp30273
S'int32'
p30274
ag34
a((S'taskHandle'
p30275
(lp30276
S'TaskHandle'
p30277
aNtp30278
(S'data'
p30279
(lp30280
S'char'
p30281
ag42
aNtp30282
(S'bufferSize'
p30283
(lp30284
S'uInt32'
p30285
aNtp30286
tp30287
tp30288
sS'DAQmxResetDigEdgeAdvTrigEdge'
p30289
((lp30290
S'int32'
p30291
ag34
a((S'taskHandle'
p30292
(lp30293
S'TaskHandle'
p30294
aNtp30295
tp30296
tp30297
sS'DAQmxStartNewFile'
p30298
((lp30299
S'int32'
p30300
ag34
a((S'taskHandle'
p30301
(lp30302
S'TaskHandle'
p30303
aNtp30304
(S'filePath'
p30305
(lp30306
S'char'
p30307
a(lp30308
I-1
aaNtp30309
tp30310
tp30311
sS'DAQmxGetCIPulseTicksLogicLvlBehavior'
p30312
((lp30313
S'int32'
p30314
ag34
a((S'taskHandle'
p30315
(lp30316
S'TaskHandle'
p30317
aNtp30318
(S'channel'
p30319
(lp30320
S'char'
p30321
a(lp30322
I-1
aaNtp30323
(S'data'
p30324
(lp30325
S'int32'
p30326
ag42
aNtp30327
tp30328
tp30329
sS'DAQmxResetAIVelocityIEPESensorSensitivity'
p30330
((lp30331
S'int32'
p30332
ag34
a((S'taskHandle'
p30333
(lp30334
S'TaskHandle'
p30335
aNtp30336
(S'channel'
p30337
(lp30338
S'char'
p30339
a(lp30340
I-1
aaNtp30341
tp30342
tp30343
sS'DAQmxSetDigPatternRefTrigWhen'
p30344
((lp30345
S'int32'
p30346
ag34
a((S'taskHandle'
p30347
(lp30348
S'TaskHandle'
p30349
aNtp30350
(S'data'
p30351
(lp30352
S'int32'
p30353
aNtp30354
tp30355
tp30356
sS'DAQmxGetAnlgWinRefTrigCoupling'
p30357
((lp30358
S'int32'
p30359
ag34
a((S'taskHandle'
p30360
(lp30361
S'TaskHandle'
p30362
aNtp30363
(S'data'
p30364
(lp30365
S'int32'
p30366
ag42
aNtp30367
tp30368
tp30369
sS'DAQmxAdjust9247OffsetCal'
p30370
((lp30371
S'int32'
p30372
ag34
a((S'calHandle'
p30373
(lp30374
S'CalHandle'
p30375
aNtp30376
(S'channelNames'
p30377
(lp30378
S'char'
p30379
a(lp30380
I-1
aaNtp30381
tp30382
tp30383
sS'DAQmxGetBufOutputBufSize'
p30384
((lp30385
S'int32'
p30386
ag34
a((S'taskHandle'
p30387
(lp30388
S'TaskHandle'
p30389
aNtp30390
(S'data'
p30391
(lp30392
S'uInt32'
p30393
ag42
aNtp30394
tp30395
tp30396
sS'DAQmxResetAIExcitIdleOutputBehavior'
p30397
((lp30398
S'int32'
p30399
ag34
a((S'taskHandle'
p30400
(lp30401
S'TaskHandle'
p30402
aNtp30403
(S'channel'
p30404
(lp30405
S'char'
p30406
a(lp30407
I-1
aaNtp30408
tp30409
tp30410
sS'DAQmxSetCIEncoderZIndexVal'
p30411
((lp30412
S'int32'
p30413
ag34
a((S'taskHandle'
p30414
(lp30415
S'TaskHandle'
p30416
aNtp30417
(S'channel'
p30418
(lp30419
S'char'
p30420
a(lp30421
I-1
aaNtp30422
(S'data'
p30423
(lp30424
S'float64'
p30425
aNtp30426
tp30427
tp30428
sS'DAQmxSetAnalogPowerUpStatesWithOutputType'
p30429
((lp30430
S'int32'
p30431
ag3995
a((S'channelNames'
p30432
(lp30433
S'char'
p30434
a(lp30435
I-1
aaNtp30436
(S'stateArray'
p30437
(lp30438
S'float64'
p30439
a(lp30440
I-1
aaNtp30441
(S'channelTypeArray'
p30442
(lp30443
S'int32'
p30444
a(lp30445
I-1
aaNtp30446
(S'arraySize'
p30447
(lp30448
S'uInt32'
p30449
aNtp30450
tp30451
tp30452
sS'DAQmxResetAIAccelUnits'
p30453
((lp30454
S'int32'
p30455
ag34
a((S'taskHandle'
p30456
(lp30457
S'TaskHandle'
p30458
aNtp30459
(S'channel'
p30460
(lp30461
S'char'
p30462
a(lp30463
I-1
aaNtp30464
tp30465
tp30466
sS'DAQmxResetAIConvTimebaseDivEx'
p30467
((lp30468
S'int32'
p30469
ag34
a((S'taskHandle'
p30470
(lp30471
S'TaskHandle'
p30472
aNtp30473
(S'deviceNames'
p30474
(lp30475
S'char'
p30476
a(lp30477
I-1
aaNtp30478
tp30479
tp30480
sS'DAQmxSetDIDigFltrTimebaseSrc'
p30481
((lp30482
S'int32'
p30483
ag34
a((S'taskHandle'
p30484
(lp30485
S'TaskHandle'
p30486
aNtp30487
(S'channel'
p30488
(lp30489
S'char'
p30490
a(lp30491
I-1
aaNtp30492
(S'data'
p30493
(lp30494
S'char'
p30495
ag42
aNtp30496
tp30497
tp30498
sS'DAQmxGetCICountEdgesTermCfg'
p30499
((lp30500
S'int32'
p30501
ag34
a((S'taskHandle'
p30502
(lp30503
S'TaskHandle'
p30504
aNtp30505
(S'channel'
p30506
(lp30507
S'char'
p30508
a(lp30509
I-1
aaNtp30510
(S'data'
p30511
(lp30512
S'int32'
p30513
ag42
aNtp30514
tp30515
tp30516
sS'DAQmxResetDIUsbXferReqSize'
p30517
((lp30518
S'int32'
p30519
ag34
a((S'taskHandle'
p30520
(lp30521
S'TaskHandle'
p30522
aNtp30523
(S'channel'
p30524
(lp30525
S'char'
p30526
a(lp30527
I-1
aaNtp30528
tp30529
tp30530
sS'DAQmxGetPhysicalChanDISampClkSupported'
p30531
((lp30532
S'int32'
p30533
ag34
a((S'physicalChannel'
p30534
(lp30535
S'char'
p30536
a(lp30537
I-1
aaNtp30538
(S'data'
p30539
(lp30540
S'bool32'
p30541
ag42
aNtp30542
tp30543
tp30544
sS'DAQmxGet9218CalAdjustPoints'
p30545
((lp30546
S'int32'
p30547
ag34
a((S'calHandle'
p30548
(lp30549
S'CalHandle'
p30550
aNtp30551
(S'adjustmentPoints'
p30552
(lp30553
S'float64'
p30554
ag42
aNtp30555
(S'bufferSize'
p30556
(lp30557
S'uInt32'
p30558
aNtp30559
tp30560
tp30561
sS'DAQmxSetAIConvDigFltrTimebaseRate'
p30562
((lp30563
S'int32'
p30564
ag34
a((S'taskHandle'
p30565
(lp30566
S'TaskHandle'
p30567
aNtp30568
(S'data'
p30569
(lp30570
S'float64'
p30571
aNtp30572
tp30573
tp30574
sS'DAQmxCreateAIPosRVDTChan'
p30575
((lp30576
S'int32'
p30577
ag34
a((S'taskHandle'
p30578
(lp30579
S'TaskHandle'
p30580
aNtp30581
(S'physicalChannel'
p30582
(lp30583
S'char'
p30584
a(lp30585
I-1
aaNtp30586
(S'nameToAssignToChannel'
p30587
(lp30588
S'char'
p30589
a(lp30590
I-1
aaNtp30591
(S'minVal'
p30592
(lp30593
S'float64'
p30594
aNtp30595
(S'maxVal'
p30596
(lp30597
S'float64'
p30598
aNtp30599
(S'units'
p30600
(lp30601
S'int32'
p30602
aNtp30603
(S'sensitivity'
p30604
(lp30605
S'float64'
p30606
aNtp30607
(S'sensitivityUnits'
p30608
(lp30609
S'int32'
p30610
aNtp30611
(S'voltageExcitSource'
p30612
(lp30613
S'int32'
p30614
aNtp30615
(S'voltageExcitVal'
p30616
(lp30617
S'float64'
p30618
aNtp30619
(S'voltageExcitFreq'
p30620
(lp30621
S'float64'
p30622
aNtp30623
(S'ACExcitWireMode'
p30624
(lp30625
S'int32'
p30626
aNtp30627
(S'customScaleName'
p30628
(lp30629
S'char'
p30630
a(lp30631
I-1
aaNtp30632
tp30633
tp30634
sS'DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal'
p30635
((lp30636
S'int32'
p30637
ag34
a((S'taskHandle'
p30638
(lp30639
S'TaskHandle'
p30640
aNtp30641
(S'channel'
p30642
(lp30643
S'char'
p30644
a(lp30645
I-1
aaNtp30646
(S'data'
p30647
(lp30648
S'float64'
p30649
aNtp30650
tp30651
tp30652
sS'DAQmxGetDevCIMaxTimebase'
p30653
((lp30654
S'int32'
p30655
ag34
a((S'device'
p30656
(lp30657
S'char'
p30658
a(lp30659
I-1
aaNtp30660
(S'data'
p30661
(lp30662
S'float64'
p30663
ag42
aNtp30664
tp30665
tp30666
sS'DAQmxResetCICtrTimebaseDigFltrTimebaseSrc'
p30667
((lp30668
S'int32'
p30669
ag34
a((S'taskHandle'
p30670
(lp30671
S'TaskHandle'
p30672
aNtp30673
(S'channel'
p30674
(lp30675
S'char'
p30676
a(lp30677
I-1
aaNtp30678
tp30679
tp30680
sS'DAQmxGet9232CalAdjustPoints'
p30681
((lp30682
S'int32'
p30683
ag34
a((S'calHandle'
p30684
(lp30685
S'CalHandle'
p30686
aNtp30687
(S'adjustmentPoints'
p30688
(lp30689
S'float64'
p30690
ag42
aNtp30691
(S'bufferSize'
p30692
(lp30693
S'uInt32'
p30694
aNtp30695
tp30696
tp30697
sS'DAQmxSetAIStrainGageGageFactor'
p30698
((lp30699
S'int32'
p30700
ag34
a((S'taskHandle'
p30701
(lp30702
S'TaskHandle'
p30703
aNtp30704
(S'channel'
p30705
(lp30706
S'char'
p30707
a(lp30708
I-1
aaNtp30709
(S'data'
p30710
(lp30711
S'float64'
p30712
aNtp30713
tp30714
tp30715
sS'DAQmxGetAIUsbXferReqCount'
p30716
((lp30717
S'int32'
p30718
ag34
a((S'taskHandle'
p30719
(lp30720
S'TaskHandle'
p30721
aNtp30722
(S'channel'
p30723
(lp30724
S'char'
p30725
a(lp30726
I-1
aaNtp30727
(S'data'
p30728
(lp30729
S'uInt32'
p30730
ag42
aNtp30731
tp30732
tp30733
sS'DAQmxCreateAITorqueBridgePolynomialChan'
p30734
((lp30735
S'int32'
p30736
ag34
a((S'taskHandle'
p30737
(lp30738
S'TaskHandle'
p30739
aNtp30740
(S'physicalChannel'
p30741
(lp30742
S'char'
p30743
a(lp30744
I-1
aaNtp30745
(S'nameToAssignToChannel'
p30746
(lp30747
S'char'
p30748
a(lp30749
I-1
aaNtp30750
(S'minVal'
p30751
(lp30752
S'float64'
p30753
aNtp30754
(S'maxVal'
p30755
(lp30756
S'float64'
p30757
aNtp30758
(S'units'
p30759
(lp30760
S'int32'
p30761
aNtp30762
(S'bridgeConfig'
p30763
(lp30764
S'int32'
p30765
aNtp30766
(S'voltageExcitSource'
p30767
(lp30768
S'int32'
p30769
aNtp30770
(S'voltageExcitVal'
p30771
(lp30772
S'float64'
p30773
aNtp30774
(S'nominalBridgeResistance'
p30775
(lp30776
S'float64'
p30777
aNtp30778
(S'forwardCoeffs'
p30779
(lp30780
S'float64'
p30781
a(lp30782
I-1
aaNtp30783
(S'numForwardCoeffs'
p30784
(lp30785
S'uInt32'
p30786
aNtp30787
(S'reverseCoeffs'
p30788
(lp30789
S'float64'
p30790
a(lp30791
I-1
aaNtp30792
(S'numReverseCoeffs'
p30793
(lp30794
S'uInt32'
p30795
aNtp30796
(S'electricalUnits'
p30797
(lp30798
S'int32'
p30799
aNtp30800
(S'physicalUnits'
p30801
(lp30802
S'int32'
p30803
aNtp30804
(S'customScaleName'
p30805
(lp30806
S'char'
p30807
a(lp30808
I-1
aaNtp30809
tp30810
tp30811
sS'DAQmxGetAIChanCalPolyForwardCoeff'
p30812
((lp30813
S'int32'
p30814
ag34
a((S'taskHandle'
p30815
(lp30816
S'TaskHandle'
p30817
aNtp30818
(S'channel'
p30819
(lp30820
S'char'
p30821
a(lp30822
I-1
aaNtp30823
(S'data'
p30824
(lp30825
S'float64'
p30826
ag42
aNtp30827
(S'arraySizeInElements'
p30828
(lp30829
S'uInt32'
p30830
aNtp30831
tp30832
tp30833
sS'DAQmxCreateCOPulseChanTime'
p30834
((lp30835
S'int32'
p30836
ag34
a((S'taskHandle'
p30837
(lp30838
S'TaskHandle'
p30839
aNtp30840
(S'counter'
p30841
(lp30842
S'char'
p30843
a(lp30844
I-1
aaNtp30845
(S'nameToAssignToChannel'
p30846
(lp30847
S'char'
p30848
a(lp30849
I-1
aaNtp30850
(S'units'
p30851
(lp30852
S'int32'
p30853
aNtp30854
(S'idleState'
p30855
(lp30856
S'int32'
p30857
aNtp30858
(S'initialDelay'
p30859
(lp30860
S'float64'
p30861
aNtp30862
(S'lowTime'
p30863
(lp30864
S'float64'
p30865
aNtp30866
(S'highTime'
p30867
(lp30868
S'float64'
p30869
aNtp30870
tp30871
tp30872
sS'DAQmxResetAIAveragingWinSize'
p30873
((lp30874
S'int32'
p30875
ag34
a((S'taskHandle'
p30876
(lp30877
S'TaskHandle'
p30878
aNtp30879
(S'channel'
p30880
(lp30881
S'char'
p30882
a(lp30883
I-1
aaNtp30884
tp30885
tp30886
sS'DAQmxResetAIConvActiveEdgeEx'
p30887
((lp30888
S'int32'
p30889
ag34
a((S'taskHandle'
p30890
(lp30891
S'TaskHandle'
p30892
aNtp30893
(S'deviceNames'
p30894
(lp30895
S'char'
p30896
a(lp30897
I-1
aaNtp30898
tp30899
tp30900
sS'DAQmxGetCIAngEncoderPulsesPerRev'
p30901
((lp30902
S'int32'
p30903
ag34
a((S'taskHandle'
p30904
(lp30905
S'TaskHandle'
p30906
aNtp30907
(S'channel'
p30908
(lp30909
S'char'
p30910
a(lp30911
I-1
aaNtp30912
(S'data'
p30913
(lp30914
S'uInt32'
p30915
ag42
aNtp30916
tp30917
tp30918
sS'DAQmxSetDigEdgeRefTrigDigFltrMinPulseWidth'
p30919
((lp30920
S'int32'
p30921
ag34
a((S'taskHandle'
p30922
(lp30923
S'TaskHandle'
p30924
aNtp30925
(S'data'
p30926
(lp30927
S'float64'
p30928
aNtp30929
tp30930
tp30931
sS'DAQmxSetAIRemoveFilterDelay'
p30932
((lp30933
S'int32'
p30934
ag34
a((S'taskHandle'
p30935
(lp30936
S'TaskHandle'
p30937
aNtp30938
(S'channel'
p30939
(lp30940
S'char'
p30941
a(lp30942
I-1
aaNtp30943
(S'data'
p30944
(lp30945
S'bool32'
p30946
aNtp30947
tp30948
tp30949
sS'DAQmxSetCITwoEdgeSepSecondEdge'
p30950
((lp30951
S'int32'
p30952
ag34
a((S'taskHandle'
p30953
(lp30954
S'TaskHandle'
p30955
aNtp30956
(S'channel'
p30957
(lp30958
S'char'
p30959
a(lp30960
I-1
aaNtp30961
(S'data'
p30962
(lp30963
S'int32'
p30964
aNtp30965
tp30966
tp30967
sS'DAQmxSetup4339Cal'
p30968
((lp30969
S'int32'
p30970
ag34
a((S'calHandle'
p30971
(lp30972
S'CalHandle'
p30973
aNtp30974
(S'channelNames'
p30975
(lp30976
S'char'
p30977
a(lp30978
I-1
aaNtp30979
(S'calMode'
p30980
(lp30981
S'int32'
p30982
aNtp30983
(S'rangeMax'
p30984
(lp30985
S'float64'
p30986
aNtp30987
(S'rangeMin'
p30988
(lp30989
S'float64'
p30990
aNtp30991
(S'excitationVoltage'
p30992
(lp30993
S'float64'
p30994
aNtp30995
tp30996
tp30997
sS'DAQmxAdjust9264Cal'
p30998
((lp30999
S'int32'
p31000
ag34
a((S'calHandle'
p31001
(lp31002
S'CalHandle'
p31003
aNtp31004
(S'channelNames'
p31005
(lp31006
S'char'
p31007
a(lp31008
I-1
aaNtp31009
(S'value'
p31010
(lp31011
S'float64'
p31012
aNtp31013
tp31014
tp31015
sS'DAQmxSetAITorqueUnits'
p31016
((lp31017
S'int32'
p31018
ag34
a((S'taskHandle'
p31019
(lp31020
S'TaskHandle'
p31021
aNtp31022
(S'channel'
p31023
(lp31024
S'char'
p31025
a(lp31026
I-1
aaNtp31027
(S'data'
p31028
(lp31029
S'int32'
p31030
aNtp31031
tp31032
tp31033
sS'DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal'
p31034
((lp31035
S'int32'
p31036
ag34
a((S'taskHandle'
p31037
(lp31038
S'TaskHandle'
p31039
aNtp31040
(S'channel'
p31041
(lp31042
S'char'
p31043
a(lp31044
I-1
aaNtp31045
tp31046
tp31047
sS'DAQmxResetCIPulseTicksDigFltrMinPulseWidth'
p31048
((lp31049
S'int32'
p31050
ag34
a((S'taskHandle'
p31051
(lp31052
S'TaskHandle'
p31053
aNtp31054
(S'channel'
p31055
(lp31056
S'char'
p31057
a(lp31058
I-1
aaNtp31059
tp31060
tp31061
sS'DAQmxResetCOMemMapEnable'
p31062
((lp31063
S'int32'
p31064
ag34
a((S'taskHandle'
p31065
(lp31066
S'TaskHandle'
p31067
aNtp31068
(S'channel'
p31069
(lp31070
S'char'
p31071
a(lp31072
I-1
aaNtp31073
tp31074
tp31075
sS'DAQmxResetCICountEdgesCountResetEnable'
p31076
((lp31077
S'int32'
p31078
ag34
a((S'taskHandle'
p31079
(lp31080
S'TaskHandle'
p31081
aNtp31082
(S'channel'
p31083
(lp31084
S'char'
p31085
a(lp31086
I-1
aaNtp31087
tp31088
tp31089
sS'DAQmxGetAIChanCalTableScaledVals'
p31090
((lp31091
S'int32'
p31092
ag34
a((S'taskHandle'
p31093
(lp31094
S'TaskHandle'
p31095
aNtp31096
(S'channel'
p31097
(lp31098
S'char'
p31099
a(lp31100
I-1
aaNtp31101
(S'data'
p31102
(lp31103
S'float64'
p31104
ag42
aNtp31105
(S'arraySizeInElements'
p31106
(lp31107
S'uInt32'
p31108
aNtp31109
tp31110
tp31111
sS'DAQmxSetAIBridgeShuntCalSelect'
p31112
((lp31113
S'int32'
p31114
ag34
a((S'taskHandle'
p31115
(lp31116
S'TaskHandle'
p31117
aNtp31118
(S'channel'
p31119
(lp31120
S'char'
p31121
a(lp31122
I-1
aaNtp31123
(S'data'
p31124
(lp31125
S'int32'
p31126
aNtp31127
tp31128
tp31129
sS'DAQmxResetCIEncoderAInputLogicLvlBehavior'
p31130
((lp31131
S'int32'
p31132
ag34
a((S'taskHandle'
p31133
(lp31134
S'TaskHandle'
p31135
aNtp31136
(S'channel'
p31137
(lp31138
S'char'
p31139
a(lp31140
I-1
aaNtp31141
tp31142
tp31143
sS'DAQmxGet9264CalAdjustPoints'
p31144
((lp31145
S'int32'
p31146
ag34
a((S'calHandle'
p31147
(lp31148
S'CalHandle'
p31149
aNtp31150
(S'adjustmentPoints'
p31151
(lp31152
S'int32'
p31153
ag42
aNtp31154
(S'bufferSize'
p31155
(lp31156
S'uInt32'
p31157
aNtp31158
tp31159
tp31160
sS'DAQmxGetHshkTrigType'
p31161
((lp31162
S'int32'
p31163
ag34
a((S'taskHandle'
p31164
(lp31165
S'TaskHandle'
p31166
aNtp31167
(S'data'
p31168
(lp31169
S'int32'
p31170
ag42
aNtp31171
tp31172
tp31173
sS'DAQmxGetAIGain'
p31174
((lp31175
S'int32'
p31176
ag34
a((S'taskHandle'
p31177
(lp31178
S'TaskHandle'
p31179
aNtp31180
(S'channel'
p31181
(lp31182
S'char'
p31183
a(lp31184
I-1
aaNtp31185
(S'data'
p31186
(lp31187
S'float64'
p31188
ag42
aNtp31189
tp31190
tp31191
sS'DAQmxGetSampClkUnderflowBehavior'
p31192
((lp31193
S'int32'
p31194
ag34
a((S'taskHandle'
p31195
(lp31196
S'TaskHandle'
p31197
aNtp31198
(S'data'
p31199
(lp31200
S'int32'
p31201
ag42
aNtp31202
tp31203
tp31204
sS'DAQmxGetDevAIMaxMultiChanRate'
p31205
((lp31206
S'int32'
p31207
ag34
a((S'device'
p31208
(lp31209
S'char'
p31210
a(lp31211
I-1
aaNtp31212
(S'data'
p31213
(lp31214
S'float64'
p31215
ag42
aNtp31216
tp31217
tp31218
sS'DAQmxGetDevAICouplings'
p31219
((lp31220
S'int32'
p31221
ag34
a((S'device'
p31222
(lp31223
S'char'
p31224
a(lp31225
I-1
aaNtp31226
(S'data'
p31227
(lp31228
S'int32'
p31229
ag42
aNtp31230
tp31231
tp31232
sS'DAQmxResetCIPulseWidthTerm'
p31233
((lp31234
S'int32'
p31235
ag34
a((S'taskHandle'
p31236
(lp31237
S'TaskHandle'
p31238
aNtp31239
(S'channel'
p31240
(lp31241
S'char'
p31242
a(lp31243
I-1
aaNtp31244
tp31245
tp31246
sS'DAQmxSetAnlgWinPauseTrigSrc'
p31247
((lp31248
S'int32'
p31249
ag34
a((S'taskHandle'
p31250
(lp31251
S'TaskHandle'
p31252
aNtp31253
(S'data'
p31254
(lp31255
S'char'
p31256
ag42
aNtp31257
tp31258
tp31259
sS'DAQmxGetCICountEdgesCountDirDigFltrEnable'
p31260
((lp31261
S'int32'
p31262
ag34
a((S'taskHandle'
p31263
(lp31264
S'TaskHandle'
p31265
aNtp31266
(S'channel'
p31267
(lp31268
S'char'
p31269
a(lp31270
I-1
aaNtp31271
(S'data'
p31272
(lp31273
S'bool32'
p31274
ag42
aNtp31275
tp31276
tp31277
sS'DAQmxGetAIConvTimebaseDivEx'
p31278
((lp31279
S'int32'
p31280
ag34
a((S'taskHandle'
p31281
(lp31282
S'TaskHandle'
p31283
aNtp31284
(S'deviceNames'
p31285
(lp31286
S'char'
p31287
a(lp31288
I-1
aaNtp31289
(S'data'
p31290
(lp31291
S'uInt32'
p31292
ag42
aNtp31293
tp31294
tp31295
sS'DAQmxGetCIPulseFreqTermCfg'
p31296
((lp31297
S'int32'
p31298
ag34
a((S'taskHandle'
p31299
(lp31300
S'TaskHandle'
p31301
aNtp31302
(S'channel'
p31303
(lp31304
S'char'
p31305
a(lp31306
I-1
aaNtp31307
(S'data'
p31308
(lp31309
S'int32'
p31310
ag42
aNtp31311
tp31312
tp31313
sS'DAQmxResetCODataXferMech'
p31314
((lp31315
S'int32'
p31316
ag34
a((S'taskHandle'
p31317
(lp31318
S'TaskHandle'
p31319
aNtp31320
(S'channel'
p31321
(lp31322
S'char'
p31323
a(lp31324
I-1
aaNtp31325
tp31326
tp31327
sS'DAQmxGetCIPulseTimeDigFltrEnable'
p31328
((lp31329
S'int32'
p31330
ag34
a((S'taskHandle'
p31331
(lp31332
S'TaskHandle'
p31333
aNtp31334
(S'channel'
p31335
(lp31336
S'char'
p31337
a(lp31338
I-1
aaNtp31339
(S'data'
p31340
(lp31341
S'bool32'
p31342
ag42
aNtp31343
tp31344
tp31345
sS'DAQmxResetAIStrainGagePoissonRatio'
p31346
((lp31347
S'int32'
p31348
ag34
a((S'taskHandle'
p31349
(lp31350
S'TaskHandle'
p31351
aNtp31352
(S'channel'
p31353
(lp31354
S'char'
p31355
a(lp31356
I-1
aaNtp31357
tp31358
tp31359
sS'DAQmxGetAOTermCfg'
p31360
((lp31361
S'int32'
p31362
ag34
a((S'taskHandle'
p31363
(lp31364
S'TaskHandle'
p31365
aNtp31366
(S'channel'
p31367
(lp31368
S'char'
p31369
a(lp31370
I-1
aaNtp31371
(S'data'
p31372
(lp31373
S'int32'
p31374
ag42
aNtp31375
tp31376
tp31377
sS'DAQmxSetDigEdgeRefTrigDigFltrTimebaseRate'
p31378
((lp31379
S'int32'
p31380
ag34
a((S'taskHandle'
p31381
(lp31382
S'TaskHandle'
p31383
aNtp31384
(S'data'
p31385
(lp31386
S'float64'
p31387
aNtp31388
tp31389
tp31390
sS'DAQmxGetAIForceIEPESensorSensitivity'
p31391
((lp31392
S'int32'
p31393
ag34
a((S'taskHandle'
p31394
(lp31395
S'TaskHandle'
p31396
aNtp31397
(S'channel'
p31398
(lp31399
S'char'
p31400
a(lp31401
I-1
aaNtp31402
(S'data'
p31403
(lp31404
S'float64'
p31405
ag42
aNtp31406
tp31407
tp31408
sS'DAQmxResetAIFilterDelayUnits'
p31409
((lp31410
S'int32'
p31411
ag34
a((S'taskHandle'
p31412
(lp31413
S'TaskHandle'
p31414
aNtp31415
(S'channel'
p31416
(lp31417
S'char'
p31418
a(lp31419
I-1
aaNtp31420
tp31421
tp31422
sS'DAQmxGetAODACRefVal'
p31423
((lp31424
S'int32'
p31425
ag34
a((S'taskHandle'
p31426
(lp31427
S'TaskHandle'
p31428
aNtp31429
(S'channel'
p31430
(lp31431
S'char'
p31432
a(lp31433
I-1
aaNtp31434
(S'data'
p31435
(lp31436
S'float64'
p31437
ag42
aNtp31438
tp31439
tp31440
sS'DAQmxSetExportedHshkEventPulseWidth'
p31441
((lp31442
S'int32'
p31443
ag34
a((S'taskHandle'
p31444
(lp31445
S'TaskHandle'
p31446
aNtp31447
(S'data'
p31448
(lp31449
S'float64'
p31450
aNtp31451
tp31452
tp31453
sS'DAQmxResetAIBridgeShuntCalShuntCalBActualResistance'
p31454
((lp31455
S'int32'
p31456
ag34
a((S'taskHandle'
p31457
(lp31458
S'TaskHandle'
p31459
aNtp31460
(S'channel'
p31461
(lp31462
S'char'
p31463
a(lp31464
I-1
aaNtp31465
tp31466
tp31467
sS'DAQmxSetAIRosetteStrainGageRosetteMeasType'
p31468
((lp31469
S'int32'
p31470
ag34
a((S'taskHandle'
p31471
(lp31472
S'TaskHandle'
p31473
aNtp31474
(S'channel'
p31475
(lp31476
S'char'
p31477
a(lp31478
I-1
aaNtp31479
(S'data'
p31480
(lp31481
S'int32'
p31482
aNtp31483
tp31484
tp31485
sS'DAQmxGetCISemiPeriodDigFltrTimebaseSrc'
p31486
((lp31487
S'int32'
p31488
ag34
a((S'taskHandle'
p31489
(lp31490
S'TaskHandle'
p31491
aNtp31492
(S'channel'
p31493
(lp31494
S'char'
p31495
a(lp31496
I-1
aaNtp31497
(S'data'
p31498
(lp31499
S'char'
p31500
ag42
aNtp31501
(S'bufferSize'
p31502
(lp31503
S'uInt32'
p31504
aNtp31505
tp31506
tp31507
sS'DAQmxWriteDigitalU8'
p31508
((lp31509
S'int32'
p31510
ag34
a((S'taskHandle'
p31511
(lp31512
S'TaskHandle'
p31513
aNtp31514
(S'numSampsPerChan'
p31515
(lp31516
S'int32'
p31517
aNtp31518
(S'autoStart'
p31519
(lp31520
S'bool32'
p31521
aNtp31522
(S'timeout'
p31523
(lp31524
S'float64'
p31525
aNtp31526
(S'dataLayout'
p31527
(lp31528
S'bool32'
p31529
aNtp31530
(S'writeArray'
p31531
(lp31532
S'uInt8'
p31533
a(lp31534
I-1
aaNtp31535
(S'sampsPerChanWritten'
p31536
(lp31537
S'int32'
p31538
ag42
aNtp31539
(S'reserved'
p31540
(lp31541
S'bool32'
p31542
ag42
aNtp31543
tp31544
tp31545
sS'DAQmxGetDIMemMapEnable'
p31546
((lp31547
S'int32'
p31548
ag34
a((S'taskHandle'
p31549
(lp31550
S'TaskHandle'
p31551
aNtp31552
(S'channel'
p31553
(lp31554
S'char'
p31555
a(lp31556
I-1
aaNtp31557
(S'data'
p31558
(lp31559
S'bool32'
p31560
ag42
aNtp31561
tp31562
tp31563
sS'DAQmxGetDevCompactDAQSlotNum'
p31564
((lp31565
S'int32'
p31566
ag34
a((S'device'
p31567
(lp31568
S'char'
p31569
a(lp31570
I-1
aaNtp31571
(S'data'
p31572
(lp31573
S'uInt32'
p31574
ag42
aNtp31575
tp31576
tp31577
sS'DAQmxSetDigPatternRefTrigSrc'
p31578
((lp31579
S'int32'
p31580
ag34
a((S'taskHandle'
p31581
(lp31582
S'TaskHandle'
p31583
aNtp31584
(S'data'
p31585
(lp31586
S'char'
p31587
ag42
aNtp31588
tp31589
tp31590
sS'DAQmxWriteDigitalScalarU32'
p31591
((lp31592
S'int32'
p31593
ag34
a((S'taskHandle'
p31594
(lp31595
S'TaskHandle'
p31596
aNtp31597
(S'autoStart'
p31598
(lp31599
S'bool32'
p31600
aNtp31601
(S'timeout'
p31602
(lp31603
S'float64'
p31604
aNtp31605
(S'value'
p31606
(lp31607
S'uInt32'
p31608
aNtp31609
(S'reserved'
p31610
(lp31611
S'bool32'
p31612
ag42
aNtp31613
tp31614
tp31615
sS'DAQmxGetLoggingFilePath'
p31616
((lp31617
S'int32'
p31618
ag34
a((S'taskHandle'
p31619
(lp31620
S'TaskHandle'
p31621
aNtp31622
(S'data'
p31623
(lp31624
S'char'
p31625
ag42
aNtp31626
(S'bufferSize'
p31627
(lp31628
S'uInt32'
p31629
aNtp31630
tp31631
tp31632
sS'DAQmxGetDevDOMaxRate'
p31633
((lp31634
S'int32'
p31635
ag34
a((S'device'
p31636
(lp31637
S'char'
p31638
a(lp31639
I-1
aaNtp31640
(S'data'
p31641
(lp31642
S'float64'
p31643
ag42
aNtp31644
tp31645
tp31646
sS'DAQmxResetExportedPauseTrigOutputTerm'
p31647
((lp31648
S'int32'
p31649
ag34
a((S'taskHandle'
p31650
(lp31651
S'TaskHandle'
p31652
aNtp31653
tp31654
tp31655
sS'DAQmxGetExportedAdvCmpltEventDelay'
p31656
((lp31657
S'int32'
p31658
ag34
a((S'taskHandle'
p31659
(lp31660
S'TaskHandle'
p31661
aNtp31662
(S'data'
p31663
(lp31664
S'float64'
p31665
ag42
aNtp31666
tp31667
tp31668
sS'DAQmxGetAIFilterDelayAdjustment'
p31669
((lp31670
S'int32'
p31671
ag34
a((S'taskHandle'
p31672
(lp31673
S'TaskHandle'
p31674
aNtp31675
(S'channel'
p31676
(lp31677
S'char'
p31678
a(lp31679
I-1
aaNtp31680
(S'data'
p31681
(lp31682
S'float64'
p31683
ag42
aNtp31684
tp31685
tp31686
sS'DAQmxGetAIAutoZeroMode'
p31687
((lp31688
S'int32'
p31689
ag34
a((S'taskHandle'
p31690
(lp31691
S'TaskHandle'
p31692
aNtp31693
(S'channel'
p31694
(lp31695
S'char'
p31696
a(lp31697
I-1
aaNtp31698
(S'data'
p31699
(lp31700
S'int32'
p31701
ag42
aNtp31702
tp31703
tp31704
sS'DAQmxGetCIUsbXferReqCount'
p31705
((lp31706
S'int32'
p31707
ag34
a((S'taskHandle'
p31708
(lp31709
S'TaskHandle'
p31710
aNtp31711
(S'channel'
p31712
(lp31713
S'char'
p31714
a(lp31715
I-1
aaNtp31716
(S'data'
p31717
(lp31718
S'uInt32'
p31719
ag42
aNtp31720
tp31721
tp31722
sS'DAQmxResetAnlgWinPauseTrigWhen'
p31723
((lp31724
S'int32'
p31725
ag34
a((S'taskHandle'
p31726
(lp31727
S'TaskHandle'
p31728
aNtp31729
tp31730
tp31731
sS'DAQmxCreateAIThrmstrChanVex'
p31732
((lp31733
S'int32'
p31734
ag34
a((S'taskHandle'
p31735
(lp31736
S'TaskHandle'
p31737
aNtp31738
(S'physicalChannel'
p31739
(lp31740
S'char'
p31741
a(lp31742
I-1
aaNtp31743
(S'nameToAssignToChannel'
p31744
(lp31745
S'char'
p31746
a(lp31747
I-1
aaNtp31748
(S'minVal'
p31749
(lp31750
S'float64'
p31751
aNtp31752
(S'maxVal'
p31753
(lp31754
S'float64'
p31755
aNtp31756
(S'units'
p31757
(lp31758
S'int32'
p31759
aNtp31760
(S'resistanceConfig'
p31761
(lp31762
S'int32'
p31763
aNtp31764
(S'voltageExcitSource'
p31765
(lp31766
S'int32'
p31767
aNtp31768
(S'voltageExcitVal'
p31769
(lp31770
S'float64'
p31771
aNtp31772
(S'a'
p31773
(lp31774
S'float64'
p31775
aNtp31776
(S'b'
p31777
(lp31778
S'float64'
p31779
aNtp31780
(S'c'
p31781
(lp31782
S'float64'
p31783
aNtp31784
(S'r1'
p31785
(lp31786
S'float64'
p31787
aNtp31788
tp31789
tp31790
sS'DAQmxGetCIPulseTicksDigFltrMinPulseWidth'
p31791
((lp31792
S'int32'
p31793
ag34
a((S'taskHandle'
p31794
(lp31795
S'TaskHandle'
p31796
aNtp31797
(S'channel'
p31798
(lp31799
S'char'
p31800
a(lp31801
I-1
aaNtp31802
(S'data'
p31803
(lp31804
S'float64'
p31805
ag42
aNtp31806
tp31807
tp31808
sS'DAQmxResetSampTimingType'
p31809
((lp31810
S'int32'
p31811
ag34
a((S'taskHandle'
p31812
(lp31813
S'TaskHandle'
p31814
aNtp31815
tp31816
tp31817
sS'DAQmxSetCILinEncoderDistPerPulse'
p31818
((lp31819
S'int32'
p31820
ag34
a((S'taskHandle'
p31821
(lp31822
S'TaskHandle'
p31823
aNtp31824
(S'channel'
p31825
(lp31826
S'char'
p31827
a(lp31828
I-1
aaNtp31829
(S'data'
p31830
(lp31831
S'float64'
p31832
aNtp31833
tp31834
tp31835
sS'DAQmxResetCOCtrTimebaseRate'
p31836
((lp31837
S'int32'
p31838
ag34
a((S'taskHandle'
p31839
(lp31840
S'TaskHandle'
p31841
aNtp31842
(S'channel'
p31843
(lp31844
S'char'
p31845
a(lp31846
I-1
aaNtp31847
tp31848
tp31849
sS'DAQmxResetCIPulseFreqDigFltrMinPulseWidth'
p31850
((lp31851
S'int32'
p31852
ag34
a((S'taskHandle'
p31853
(lp31854
S'TaskHandle'
p31855
aNtp31856
(S'channel'
p31857
(lp31858
S'char'
p31859
a(lp31860
I-1
aaNtp31861
tp31862
tp31863
sS'DAQmxSetCIEncoderBInputTermCfg'
p31864
((lp31865
S'int32'
p31866
ag34
a((S'taskHandle'
p31867
(lp31868
S'TaskHandle'
p31869
aNtp31870
(S'channel'
p31871
(lp31872
S'char'
p31873
a(lp31874
I-1
aaNtp31875
(S'data'
p31876
(lp31877
S'int32'
p31878
aNtp31879
tp31880
tp31881
sS'DAQmxResetCODataXferReqCond'
p31882
((lp31883
S'int32'
p31884
ag34
a((S'taskHandle'
p31885
(lp31886
S'TaskHandle'
p31887
aNtp31888
(S'channel'
p31889
(lp31890
S'char'
p31891
a(lp31892
I-1
aaNtp31893
tp31894
tp31895
sS'DAQmxSetCIPeriodDigFltrMinPulseWidth'
p31896
((lp31897
S'int32'
p31898
ag34
a((S'taskHandle'
p31899
(lp31900
S'TaskHandle'
p31901
aNtp31902
(S'channel'
p31903
(lp31904
S'char'
p31905
a(lp31906
I-1
aaNtp31907
(S'data'
p31908
(lp31909
S'float64'
p31910
aNtp31911
tp31912
tp31913
sS'DAQmxResetTimingSyncPulseForce'
p31914
((lp31915
S'int32'
p31916
ag34
a((S'taskHandle'
p31917
(lp31918
S'TaskHandle'
p31919
aNtp31920
tp31921
tp31922
sS'DAQmxGetAIVoltageUnits'
p31923
((lp31924
S'int32'
p31925
ag34
a((S'taskHandle'
p31926
(lp31927
S'TaskHandle'
p31928
aNtp31929
(S'channel'
p31930
(lp31931
S'char'
p31932
a(lp31933
I-1
aaNtp31934
(S'data'
p31935
(lp31936
S'int32'
p31937
ag42
aNtp31938
tp31939
tp31940
sS'DAQmxReadAnalogF64'
p31941
((lp31942
S'int32'
p31943
ag34
a((S'taskHandle'
p31944
(lp31945
S'TaskHandle'
p31946
aNtp31947
(S'numSampsPerChan'
p31948
(lp31949
S'int32'
p31950
aNtp31951
(S'timeout'
p31952
(lp31953
S'float64'
p31954
aNtp31955
(S'fillMode'
p31956
(lp31957
S'bool32'
p31958
aNtp31959
(S'readArray'
p31960
(lp31961
S'float64'
p31962
a(lp31963
I-1
aaNtp31964
(S'arraySizeInSamps'
p31965
(lp31966
S'uInt32'
p31967
aNtp31968
(S'sampsPerChanRead'
p31969
(lp31970
S'int32'
p31971
ag42
aNtp31972
(S'reserved'
p31973
(lp31974
S'bool32'
p31975
ag42
aNtp31976
tp31977
tp31978
sS'DAQmxResetAIBridgeElectricalUnits'
p31979
((lp31980
S'int32'
p31981
ag34
a((S'taskHandle'
p31982
(lp31983
S'TaskHandle'
p31984
aNtp31985
(S'channel'
p31986
(lp31987
S'char'
p31988
a(lp31989
I-1
aaNtp31990
tp31991
tp31992
sS'DAQmxSetCIEncoderBInputDigSyncEnable'
p31993
((lp31994
S'int32'
p31995
ag34
a((S'taskHandle'
p31996
(lp31997
S'TaskHandle'
p31998
aNtp31999
(S'channel'
p32000
(lp32001
S'char'
p32002
a(lp32003
I-1
aaNtp32004
(S'data'
p32005
(lp32006
S'bool32'
p32007
aNtp32008
tp32009
tp32010
sS'DAQmxSetCICountEdgesDigFltrTimebaseRate'
p32011
((lp32012
S'int32'
p32013
ag34
a((S'taskHandle'
p32014
(lp32015
S'TaskHandle'
p32016
aNtp32017
(S'channel'
p32018
(lp32019
S'char'
p32020
a(lp32021
I-1
aaNtp32022
(S'data'
p32023
(lp32024
S'float64'
p32025
aNtp32026
tp32027
tp32028
sS'DAQmxSetCICtrTimebaseDigFltrMinPulseWidth'
p32029
((lp32030
S'int32'
p32031
ag34
a((S'taskHandle'
p32032
(lp32033
S'TaskHandle'
p32034
aNtp32035
(S'channel'
p32036
(lp32037
S'char'
p32038
a(lp32039
I-1
aaNtp32040
(S'data'
p32041
(lp32042
S'float64'
p32043
aNtp32044
tp32045
tp32046
sS'DAQmxGetDevCOSampClkSupported'
p32047
((lp32048
S'int32'
p32049
ag34
a((S'device'
p32050
(lp32051
S'char'
p32052
a(lp32053
I-1
aaNtp32054
(S'data'
p32055
(lp32056
S'bool32'
p32057
ag42
aNtp32058
tp32059
tp32060
sS'DAQmxGetDigLvlPauseTrigDigSyncEnable'
p32061
((lp32062
S'int32'
p32063
ag34
a((S'taskHandle'
p32064
(lp32065
S'TaskHandle'
p32066
aNtp32067
(S'data'
p32068
(lp32069
S'bool32'
p32070
ag42
aNtp32071
tp32072
tp32073
sS'DAQmxSetCIUsbXferReqCount'
p32074
((lp32075
S'int32'
p32076
ag34
a((S'taskHandle'
p32077
(lp32078
S'TaskHandle'
p32079
aNtp32080
(S'channel'
p32081
(lp32082
S'char'
p32083
a(lp32084
I-1
aaNtp32085
(S'data'
p32086
(lp32087
S'uInt32'
p32088
aNtp32089
tp32090
tp32091
sS'DAQmxSetAIDigFltrBandpassCenterFreq'
p32092
((lp32093
S'int32'
p32094
ag34
a((S'taskHandle'
p32095
(lp32096
S'TaskHandle'
p32097
aNtp32098
(S'channel'
p32099
(lp32100
S'char'
p32101
a(lp32102
I-1
aaNtp32103
(S'data'
p32104
(lp32105
S'float64'
p32106
aNtp32107
tp32108
tp32109
sS'DAQmxGetDOMemMapEnable'
p32110
((lp32111
S'int32'
p32112
ag34
a((S'taskHandle'
p32113
(lp32114
S'TaskHandle'
p32115
aNtp32116
(S'channel'
p32117
(lp32118
S'char'
p32119
a(lp32120
I-1
aaNtp32121
(S'data'
p32122
(lp32123
S'bool32'
p32124
ag42
aNtp32125
tp32126
tp32127
sS'DAQmxGetCIPulseTicksDigSyncEnable'
p32128
((lp32129
S'int32'
p32130
ag34
a((S'taskHandle'
p32131
(lp32132
S'TaskHandle'
p32133
aNtp32134
(S'channel'
p32135
(lp32136
S'char'
p32137
a(lp32138
I-1
aaNtp32139
(S'data'
p32140
(lp32141
S'bool32'
p32142
ag42
aNtp32143
tp32144
tp32145
sS'DAQmxAdjust9211Cal'
p32146
((lp32147
S'int32'
p32148
ag34
a((S'calHandle'
p32149
(lp32150
S'CalHandle'
p32151
aNtp32152
(S'channelNames'
p32153
(lp32154
S'char'
p32155
a(lp32156
I-1
aaNtp32157
(S'value'
p32158
(lp32159
S'float64'
p32160
aNtp32161
tp32162
tp32163
sS'DAQmxSetDigEdgeArmStartTrigSrc'
p32164
((lp32165
S'int32'
p32166
ag34
a((S'taskHandle'
p32167
(lp32168
S'TaskHandle'
p32169
aNtp32170
(S'data'
p32171
(lp32172
S'char'
p32173
ag42
aNtp32174
tp32175
tp32176
sS'DAQmxCreateAIPosEddyCurrProxProbeChan'
p32177
((lp32178
S'int32'
p32179
ag34
a((S'taskHandle'
p32180
(lp32181
S'TaskHandle'
p32182
aNtp32183
(S'physicalChannel'
p32184
(lp32185
S'char'
p32186
a(lp32187
I-1
aaNtp32188
(S'nameToAssignToChannel'
p32189
(lp32190
S'char'
p32191
a(lp32192
I-1
aaNtp32193
(S'minVal'
p32194
(lp32195
S'float64'
p32196
aNtp32197
(S'maxVal'
p32198
(lp32199
S'float64'
p32200
aNtp32201
(S'units'
p32202
(lp32203
S'int32'
p32204
aNtp32205
(S'sensitivity'
p32206
(lp32207
S'float64'
p32208
aNtp32209
(S'sensitivityUnits'
p32210
(lp32211
S'int32'
p32212
aNtp32213
(S'customScaleName'
p32214
(lp32215
S'char'
p32216
a(lp32217
I-1
aaNtp32218
tp32219
tp32220
sS'DAQmxGetAnlgWinStartTrigBtm'
p32221
((lp32222
S'int32'
p32223
ag34
a((S'taskHandle'
p32224
(lp32225
S'TaskHandle'
p32226
aNtp32227
(S'data'
p32228
(lp32229
S'float64'
p32230
ag42
aNtp32231
tp32232
tp32233
sS'DAQmxResetCIPulseTicksTermCfg'
p32234
((lp32235
S'int32'
p32236
ag34
a((S'taskHandle'
p32237
(lp32238
S'TaskHandle'
p32239
aNtp32240
(S'channel'
p32241
(lp32242
S'char'
p32243
a(lp32244
I-1
aaNtp32245
tp32246
tp32247
sS'DAQmxSetCILinEncoderUnits'
p32248
((lp32249
S'int32'
p32250
ag34
a((S'taskHandle'
p32251
(lp32252
S'TaskHandle'
p32253
aNtp32254
(S'channel'
p32255
(lp32256
S'char'
p32257
a(lp32258
I-1
aaNtp32259
(S'data'
p32260
(lp32261
S'int32'
p32262
aNtp32263
tp32264
tp32265
sS'DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal'
p32266
((lp32267
S'int32'
p32268
ag34
a((S'taskHandle'
p32269
(lp32270
S'TaskHandle'
p32271
aNtp32272
(S'channel'
p32273
(lp32274
S'char'
p32275
a(lp32276
I-1
aaNtp32277
(S'data'
p32278
(lp32279
S'float64'
p32280
ag42
aNtp32281
tp32282
tp32283
sS'DAQmxAdjust9213Cal'
p32284
((lp32285
S'int32'
p32286
ag34
a((S'calHandle'
p32287
(lp32288
S'CalHandle'
p32289
aNtp32290
(S'channelNames'
p32291
(lp32292
S'char'
p32293
a(lp32294
I-1
aaNtp32295
(S'rangeMin'
p32296
(lp32297
S'float64'
p32298
aNtp32299
(S'rangeMax'
p32300
(lp32301
S'float64'
p32302
aNtp32303
(S'value'
p32304
(lp32305
S'float64'
p32306
aNtp32307
tp32308
tp32309
sS'DAQmxResetAIBridgeUnits'
p32310
((lp32311
S'int32'
p32312
ag34
a((S'taskHandle'
p32313
(lp32314
S'TaskHandle'
p32315
aNtp32316
(S'channel'
p32317
(lp32318
S'char'
p32319
a(lp32320
I-1
aaNtp32321
tp32322
tp32323
sS'DAQmxResetAnlgLvlPauseTrigDigFltrEnable'
p32324
((lp32325
S'int32'
p32326
ag34
a((S'taskHandle'
p32327
(lp32328
S'TaskHandle'
p32329
aNtp32330
tp32331
tp32332
sS'DAQmxResetDigPatternPauseTrigSrc'
p32333
((lp32334
S'int32'
p32335
ag34
a((S'taskHandle'
p32336
(lp32337
S'TaskHandle'
p32338
aNtp32339
tp32340
tp32341
sS'DAQmxSetAnlgWinPauseTrigDigFltrEnable'
p32342
((lp32343
S'int32'
p32344
ag34
a((S'taskHandle'
p32345
(lp32346
S'TaskHandle'
p32347
aNtp32348
(S'data'
p32349
(lp32350
S'bool32'
p32351
aNtp32352
tp32353
tp32354
sS'DAQmxGet9216CalAdjustPoints'
p32355
((lp32356
S'int32'
p32357
ag34
a((S'calHandle'
p32358
(lp32359
S'CalHandle'
p32360
aNtp32361
(S'adjustmentPoints'
p32362
(lp32363
S'float64'
p32364
ag42
aNtp32365
(S'bufferSize'
p32366
(lp32367
S'uInt32'
p32368
aNtp32369
tp32370
tp32371
sS'DAQmxGetCIPeriodStartingEdge'
p32372
((lp32373
S'int32'
p32374
ag34
a((S'taskHandle'
p32375
(lp32376
S'TaskHandle'
p32377
aNtp32378
(S'channel'
p32379
(lp32380
S'char'
p32381
a(lp32382
I-1
aaNtp32383
(S'data'
p32384
(lp32385
S'int32'
p32386
ag42
aNtp32387
tp32388
tp32389
sS'DAQmxGetReadExcitFaultChans'
p32390
((lp32391
S'int32'
p32392
ag34
a((S'taskHandle'
p32393
(lp32394
S'TaskHandle'
p32395
aNtp32396
(S'data'
p32397
(lp32398
S'char'
p32399
ag42
aNtp32400
(S'bufferSize'
p32401
(lp32402
S'uInt32'
p32403
aNtp32404
tp32405
tp32406
sS'DAQmxGetDOUsbXferReqCount'
p32407
((lp32408
S'int32'
p32409
ag34
a((S'taskHandle'
p32410
(lp32411
S'TaskHandle'
p32412
aNtp32413
(S'channel'
p32414
(lp32415
S'char'
p32416
a(lp32417
I-1
aaNtp32418
(S'data'
p32419
(lp32420
S'uInt32'
p32421
ag42
aNtp32422
tp32423
tp32424
sS'DAQmxGetCIDutyCycleDigFltrEnable'
p32425
((lp32426
S'int32'
p32427
ag34
a((S'taskHandle'
p32428
(lp32429
S'TaskHandle'
p32430
aNtp32431
(S'channel'
p32432
(lp32433
S'char'
p32434
a(lp32435
I-1
aaNtp32436
(S'data'
p32437
(lp32438
S'bool32'
p32439
ag42
aNtp32440
tp32441
tp32442
sS'DAQmxSetAIBridgeShuntCalShuntCalBResistance'
p32443
((lp32444
S'int32'
p32445
ag34
a((S'taskHandle'
p32446
(lp32447
S'TaskHandle'
p32448
aNtp32449
(S'channel'
p32450
(lp32451
S'char'
p32452
a(lp32453
I-1
aaNtp32454
(S'data'
p32455
(lp32456
S'float64'
p32457
aNtp32458
tp32459
tp32460
sS'DAQmxGetCICtrTimebaseDigFltrEnable'
p32461
((lp32462
S'int32'
p32463
ag34
a((S'taskHandle'
p32464
(lp32465
S'TaskHandle'
p32466
aNtp32467
(S'channel'
p32468
(lp32469
S'char'
p32470
a(lp32471
I-1
aaNtp32472
(S'data'
p32473
(lp32474
S'bool32'
p32475
ag42
aNtp32476
tp32477
tp32478
sS'DAQmxReserveNetworkDevice'
p32479
((lp32480
S'int32'
p32481
ag34
a((S'deviceName'
p32482
(lp32483
S'char'
p32484
a(lp32485
I-1
aaNtp32486
(S'overrideReservation'
p32487
(lp32488
S'bool32'
p32489
aNtp32490
tp32491
tp32492
sS'DAQmxSetCOPulseTerm'
p32493
((lp32494
S'int32'
p32495
ag34
a((S'taskHandle'
p32496
(lp32497
S'TaskHandle'
p32498
aNtp32499
(S'channel'
p32500
(lp32501
S'char'
p32502
a(lp32503
I-1
aaNtp32504
(S'data'
p32505
(lp32506
S'char'
p32507
ag42
aNtp32508
tp32509
tp32510
sS'DAQmxSetup9263Cal'
p32511
((lp32512
S'int32'
p32513
ag34
a((S'calHandle'
p32514
(lp32515
S'CalHandle'
p32516
aNtp32517
(S'channelNames'
p32518
(lp32519
S'char'
p32520
a(lp32521
I-1
aaNtp32522
(S'value'
p32523
(lp32524
S'int32'
p32525
aNtp32526
tp32527
tp32528
sS'DAQmxGetAIThrmcplType'
p32529
((lp32530
S'int32'
p32531
ag34
a((S'taskHandle'
p32532
(lp32533
S'TaskHandle'
p32534
aNtp32535
(S'channel'
p32536
(lp32537
S'char'
p32538
a(lp32539
I-1
aaNtp32540
(S'data'
p32541
(lp32542
S'int32'
p32543
ag42
aNtp32544
tp32545
tp32546
sS'DAQmxGetSwitchDevAutoConnAnlgBus'
p32547
((lp32548
S'int32'
p32549
ag34
a((S'deviceName'
p32550
(lp32551
S'char'
p32552
a(lp32553
I-1
aaNtp32554
(S'data'
p32555
(lp32556
S'bool32'
p32557
ag42
aNtp32558
tp32559
tp32560
sS'DAQmxSetAOFuncGenAmplitude'
p32561
((lp32562
S'int32'
p32563
ag34
a((S'taskHandle'
p32564
(lp32565
S'TaskHandle'
p32566
aNtp32567
(S'channel'
p32568
(lp32569
S'char'
p32570
a(lp32571
I-1
aaNtp32572
(S'data'
p32573
(lp32574
S'float64'
p32575
aNtp32576
tp32577
tp32578
sS'DAQmxSetCOEnableInitialDelayOnRetrigger'
p32579
((lp32580
S'int32'
p32581
ag34
a((S'taskHandle'
p32582
(lp32583
S'TaskHandle'
p32584
aNtp32585
(S'channel'
p32586
(lp32587
S'char'
p32588
a(lp32589
I-1
aaNtp32590
(S'data'
p32591
(lp32592
S'bool32'
p32593
aNtp32594
tp32595
tp32596
sS'DAQmxGetAISoundPressureUnits'
p32597
((lp32598
S'int32'
p32599
ag34
a((S'taskHandle'
p32600
(lp32601
S'TaskHandle'
p32602
aNtp32603
(S'channel'
p32604
(lp32605
S'char'
p32606
a(lp32607
I-1
aaNtp32608
(S'data'
p32609
(lp32610
S'int32'
p32611
ag42
aNtp32612
tp32613
tp32614
sS'DAQmxGetCIEncoderBInputLogicLvlBehavior'
p32615
((lp32616
S'int32'
p32617
ag34
a((S'taskHandle'
p32618
(lp32619
S'TaskHandle'
p32620
aNtp32621
(S'channel'
p32622
(lp32623
S'char'
p32624
a(lp32625
I-1
aaNtp32626
(S'data'
p32627
(lp32628
S'int32'
p32629
ag42
aNtp32630
tp32631
tp32632
sS'DAQmxGetAIExcitUseForScaling'
p32633
((lp32634
S'int32'
p32635
ag34
a((S'taskHandle'
p32636
(lp32637
S'TaskHandle'
p32638
aNtp32639
(S'channel'
p32640
(lp32641
S'char'
p32642
a(lp32643
I-1
aaNtp32644
(S'data'
p32645
(lp32646
S'bool32'
p32647
ag42
aNtp32648
tp32649
tp32650
sS'DAQmxReadCounterU32'
p32651
((lp32652
S'int32'
p32653
ag34
a((S'taskHandle'
p32654
(lp32655
S'TaskHandle'
p32656
aNtp32657
(S'numSampsPerChan'
p32658
(lp32659
S'int32'
p32660
aNtp32661
(S'timeout'
p32662
(lp32663
S'float64'
p32664
aNtp32665
(S'readArray'
p32666
(lp32667
S'uInt32'
p32668
a(lp32669
I-1
aaNtp32670
(S'arraySizeInSamps'
p32671
(lp32672
S'uInt32'
p32673
aNtp32674
(S'sampsPerChanRead'
p32675
(lp32676
S'int32'
p32677
ag42
aNtp32678
(S'reserved'
p32679
(lp32680
S'bool32'
p32681
ag42
aNtp32682
tp32683
tp32684
sS'DAQmxSetHshkDelayAfterXfer'
p32685
((lp32686
S'int32'
p32687
ag34
a((S'taskHandle'
p32688
(lp32689
S'TaskHandle'
p32690
aNtp32691
(S'data'
p32692
(lp32693
S'float64'
p32694
aNtp32695
tp32696
tp32697
sS'DAQmxGetDigPatternRefTrigSrc'
p32698
((lp32699
S'int32'
p32700
ag34
a((S'taskHandle'
p32701
(lp32702
S'TaskHandle'
p32703
aNtp32704
(S'data'
p32705
(lp32706
S'char'
p32707
ag42
aNtp32708
(S'bufferSize'
p32709
(lp32710
S'uInt32'
p32711
aNtp32712
tp32713
tp32714
sS'DAQmxResetCIPeriodDigFltrEnable'
p32715
((lp32716
S'int32'
p32717
ag34
a((S'taskHandle'
p32718
(lp32719
S'TaskHandle'
p32720
aNtp32721
(S'channel'
p32722
(lp32723
S'char'
p32724
a(lp32725
I-1
aaNtp32726
tp32727
tp32728
sS'DAQmxAdjust9244Cal'
p32729
((lp32730
S'int32'
p32731
ag34
a((S'calHandle'
p32732
(lp32733
S'CalHandle'
p32734
aNtp32735
(S'channelNames'
p32736
(lp32737
S'char'
p32738
a(lp32739
I-1
aaNtp32740
(S'value'
p32741
(lp32742
S'float64'
p32743
aNtp32744
tp32745
tp32746
sS'DAQmxResetAIVoltageACRMSUnits'
p32747
((lp32748
S'int32'
p32749
ag34
a((S'taskHandle'
p32750
(lp32751
S'TaskHandle'
p32752
aNtp32753
(S'channel'
p32754
(lp32755
S'char'
p32756
a(lp32757
I-1
aaNtp32758
tp32759
tp32760
sS'DAQmxResetLoggingTDMSGroupName'
p32761
((lp32762
S'int32'
p32763
ag34
a((S'taskHandle'
p32764
(lp32765
S'TaskHandle'
p32766
aNtp32767
tp32768
tp32769
sS'DAQmxGetCIEncoderAInputDigFltrEnable'
p32770
((lp32771
S'int32'
p32772
ag34
a((S'taskHandle'
p32773
(lp32774
S'TaskHandle'
p32775
aNtp32776
(S'channel'
p32777
(lp32778
S'char'
p32779
a(lp32780
I-1
aaNtp32781
(S'data'
p32782
(lp32783
S'bool32'
p32784
ag42
aNtp32785
tp32786
tp32787
sS'DAQmxCfgSampClkTiming'
p32788
((lp32789
S'int32'
p32790
ag34
a((S'taskHandle'
p32791
(lp32792
S'TaskHandle'
p32793
aNtp32794
(S'source'
p32795
(lp32796
S'char'
p32797
a(lp32798
I-1
aaNtp32799
(S'rate'
p32800
(lp32801
S'float64'
p32802
aNtp32803
(S'activeEdge'
p32804
(lp32805
S'int32'
p32806
aNtp32807
(S'sampleMode'
p32808
(lp32809
S'int32'
p32810
aNtp32811
(S'sampsPerChan'
p32812
(lp32813
S'uInt64'
p32814
aNtp32815
tp32816
tp32817
sS'DAQmxReadDigitalU8'
p32818
((lp32819
S'int32'
p32820
ag34
a((S'taskHandle'
p32821
(lp32822
S'TaskHandle'
p32823
aNtp32824
(S'numSampsPerChan'
p32825
(lp32826
S'int32'
p32827
aNtp32828
(S'timeout'
p32829
(lp32830
S'float64'
p32831
aNtp32832
(S'fillMode'
p32833
(lp32834
S'bool32'
p32835
aNtp32836
(S'readArray'
p32837
(lp32838
S'uInt8'
p32839
a(lp32840
I-1
aaNtp32841
(S'arraySizeInSamps'
p32842
(lp32843
S'uInt32'
p32844
aNtp32845
(S'sampsPerChanRead'
p32846
(lp32847
S'int32'
p32848
ag42
aNtp32849
(S'reserved'
p32850
(lp32851
S'bool32'
p32852
ag42
aNtp32853
tp32854
tp32855
sS'DAQmxSetAnlgWinRefTrigDigFltrTimebaseRate'
p32856
((lp32857
S'int32'
p32858
ag34
a((S'taskHandle'
p32859
(lp32860
S'TaskHandle'
p32861
aNtp32862
(S'data'
p32863
(lp32864
S'float64'
p32865
aNtp32866
tp32867
tp32868
sS'DAQmxGetAIConvRate'
p32869
((lp32870
S'int32'
p32871
ag34
a((S'taskHandle'
p32872
(lp32873
S'TaskHandle'
p32874
aNtp32875
(S'data'
p32876
(lp32877
S'float64'
p32878
ag42
aNtp32879
tp32880
tp32881
sS'DAQmxSetDIDataXferMech'
p32882
((lp32883
S'int32'
p32884
ag34
a((S'taskHandle'
p32885
(lp32886
S'TaskHandle'
p32887
aNtp32888
(S'channel'
p32889
(lp32890
S'char'
p32891
a(lp32892
I-1
aaNtp32893
(S'data'
p32894
(lp32895
S'int32'
p32896
aNtp32897
tp32898
tp32899
sS'DAQmxSetExportedDividedSampClkTimebaseOutputTerm'
p32900
((lp32901
S'int32'
p32902
ag34
a((S'taskHandle'
p32903
(lp32904
S'TaskHandle'
p32905
aNtp32906
(S'data'
p32907
(lp32908
S'char'
p32909
ag42
aNtp32910
tp32911
tp32912
sS'DAQmxResetCIFreqMeasMeth'
p32913
((lp32914
S'int32'
p32915
ag34
a((S'taskHandle'
p32916
(lp32917
S'TaskHandle'
p32918
aNtp32919
(S'channel'
p32920
(lp32921
S'char'
p32922
a(lp32923
I-1
aaNtp32924
tp32925
tp32926
sS'DAQmxResetSampClkTimingResponseMode'
p32927
((lp32928
S'int32'
p32929
ag34
a((S'taskHandle'
p32930
(lp32931
S'TaskHandle'
p32932
aNtp32933
tp32934
tp32935
sS'DAQmxGetCIPulseFreqDigFltrTimebaseSrc'
p32936
((lp32937
S'int32'
p32938
ag34
a((S'taskHandle'
p32939
(lp32940
S'TaskHandle'
p32941
aNtp32942
(S'channel'
p32943
(lp32944
S'char'
p32945
a(lp32946
I-1
aaNtp32947
(S'data'
p32948
(lp32949
S'char'
p32950
ag42
aNtp32951
(S'bufferSize'
p32952
(lp32953
S'uInt32'
p32954
aNtp32955
tp32956
tp32957
sS'DAQmxDisableStartTrig'
p32958
((lp32959
S'int32'
p32960
ag34
a((S'taskHandle'
p32961
(lp32962
S'TaskHandle'
p32963
aNtp32964
tp32965
tp32966
sS'DAQmxResetCIEncoderBInputTerm'
p32967
((lp32968
S'int32'
p32969
ag34
a((S'taskHandle'
p32970
(lp32971
S'TaskHandle'
p32972
aNtp32973
(S'channel'
p32974
(lp32975
S'char'
p32976
a(lp32977
I-1
aaNtp32978
tp32979
tp32980
sS'DAQmxAdjustDSAAICalEx'
p32981
((lp32982
S'int32'
p32983
ag34
a((S'calHandle'
p32984
(lp32985
S'CalHandle'
p32986
aNtp32987
(S'referenceVoltage'
p32988
(lp32989
S'float64'
p32990
aNtp32991
(S'inputsShorted'
p32992
(lp32993
S'bool32'
p32994
aNtp32995
tp32996
tp32997
sS'DAQmxResetCIDutyCycleStartingEdge'
p32998
((lp32999
S'int32'
p33000
ag34
a((S'taskHandle'
p33001
(lp33002
S'TaskHandle'
p33003
aNtp33004
(S'channel'
p33005
(lp33006
S'char'
p33007
a(lp33008
I-1
aaNtp33009
tp33010
tp33011
sS'DAQmxSetup9219Cal'
p33012
((lp33013
S'int32'
p33014
ag34
a((S'calHandle'
p33015
(lp33016
S'CalHandle'
p33017
aNtp33018
(S'channelNames'
p33019
(lp33020
S'char'
p33021
a(lp33022
I-1
aaNtp33023
(S'rangeMin'
p33024
(lp33025
S'float64'
p33026
aNtp33027
(S'rangeMax'
p33028
(lp33029
S'float64'
p33030
aNtp33031
(S'measType'
p33032
(lp33033
S'int32'
p33034
aNtp33035
(S'bridgeConfig'
p33036
(lp33037
S'int32'
p33038
aNtp33039
tp33040
tp33041
sS'DAQmxCreateTEDSAIForceBridgeChan'
p33042
((lp33043
S'int32'
p33044
ag34
a((S'taskHandle'
p33045
(lp33046
S'TaskHandle'
p33047
aNtp33048
(S'physicalChannel'
p33049
(lp33050
S'char'
p33051
a(lp33052
I-1
aaNtp33053
(S'nameToAssignToChannel'
p33054
(lp33055
S'char'
p33056
a(lp33057
I-1
aaNtp33058
(S'minVal'
p33059
(lp33060
S'float64'
p33061
aNtp33062
(S'maxVal'
p33063
(lp33064
S'float64'
p33065
aNtp33066
(S'units'
p33067
(lp33068
S'int32'
p33069
aNtp33070
(S'voltageExcitSource'
p33071
(lp33072
S'int32'
p33073
aNtp33074
(S'voltageExcitVal'
p33075
(lp33076
S'float64'
p33077
aNtp33078
(S'customScaleName'
p33079
(lp33080
S'char'
p33081
a(lp33082
I-1
aaNtp33083
tp33084
tp33085
sS'DAQmxSetCIEncoderZInputDigFltrMinPulseWidth'
p33086
((lp33087
S'int32'
p33088
ag34
a((S'taskHandle'
p33089
(lp33090
S'TaskHandle'
p33091
aNtp33092
(S'channel'
p33093
(lp33094
S'char'
p33095
a(lp33096
I-1
aaNtp33097
(S'data'
p33098
(lp33099
S'float64'
p33100
aNtp33101
tp33102
tp33103
sS'DAQmxGetSwitchDevTemperature'
p33104
((lp33105
S'int32'
p33106
ag34
a((S'deviceName'
p33107
(lp33108
S'char'
p33109
a(lp33110
I-1
aaNtp33111
(S'data'
p33112
(lp33113
S'float64'
p33114
ag42
aNtp33115
tp33116
tp33117
sS'DAQmxGetReadOverWrite'
p33118
((lp33119
S'int32'
p33120
ag34
a((S'taskHandle'
p33121
(lp33122
S'TaskHandle'
p33123
aNtp33124
(S'data'
p33125
(lp33126
S'int32'
p33127
ag42
aNtp33128
tp33129
tp33130
sS'DAQmxGetCIPeriodTermCfg'
p33131
((lp33132
S'int32'
p33133
ag34
a((S'taskHandle'
p33134
(lp33135
S'TaskHandle'
p33136
aNtp33137
(S'channel'
p33138
(lp33139
S'char'
p33140
a(lp33141
I-1
aaNtp33142
(S'data'
p33143
(lp33144
S'int32'
p33145
ag42
aNtp33146
tp33147
tp33148
sS'DAQmxGetCILinEncoderInitialPos'
p33149
((lp33150
S'int32'
p33151
ag34
a((S'taskHandle'
p33152
(lp33153
S'TaskHandle'
p33154
aNtp33155
(S'channel'
p33156
(lp33157
S'char'
p33158
a(lp33159
I-1
aaNtp33160
(S'data'
p33161
(lp33162
S'float64'
p33163
ag42
aNtp33164
tp33165
tp33166
sS'DAQmxGetAIRngHigh'
p33167
((lp33168
S'int32'
p33169
ag34
a((S'taskHandle'
p33170
(lp33171
S'TaskHandle'
p33172
aNtp33173
(S'channel'
p33174
(lp33175
S'char'
p33176
a(lp33177
I-1
aaNtp33178
(S'data'
p33179
(lp33180
S'float64'
p33181
ag42
aNtp33182
tp33183
tp33184
sS'DAQmxGetSyncPulseResetTime'
p33185
((lp33186
S'int32'
p33187
ag34
a((S'taskHandle'
p33188
(lp33189
S'TaskHandle'
p33190
aNtp33191
(S'data'
p33192
(lp33193
S'float64'
p33194
ag42
aNtp33195
tp33196
tp33197
sS'DAQmxResetCICtrTimebaseDigFltrTimebaseRate'
p33198
((lp33199
S'int32'
p33200
ag34
a((S'taskHandle'
p33201
(lp33202
S'TaskHandle'
p33203
aNtp33204
(S'channel'
p33205
(lp33206
S'char'
p33207
a(lp33208
I-1
aaNtp33209
tp33210
tp33211
sS'DAQmxGetCICountEdgesLogicLvlBehavior'
p33212
((lp33213
S'int32'
p33214
ag34
a((S'taskHandle'
p33215
(lp33216
S'TaskHandle'
p33217
aNtp33218
(S'channel'
p33219
(lp33220
S'char'
p33221
a(lp33222
I-1
aaNtp33223
(S'data'
p33224
(lp33225
S'int32'
p33226
ag42
aNtp33227
tp33228
tp33229
sS'DAQmxGetCOPulseTerm'
p33230
((lp33231
S'int32'
p33232
ag34
a((S'taskHandle'
p33233
(lp33234
S'TaskHandle'
p33235
aNtp33236
(S'channel'
p33237
(lp33238
S'char'
p33239
a(lp33240
I-1
aaNtp33241
(S'data'
p33242
(lp33243
S'char'
p33244
ag42
aNtp33245
(S'bufferSize'
p33246
(lp33247
S'uInt32'
p33248
aNtp33249
tp33250
tp33251
sS'DAQmxSetExportedHshkEventOutputBehavior'
p33252
((lp33253
S'int32'
p33254
ag34
a((S'taskHandle'
p33255
(lp33256
S'TaskHandle'
p33257
aNtp33258
(S'data'
p33259
(lp33260
S'int32'
p33261
aNtp33262
tp33263
tp33264
sS'DAQmxGetDevPXISlotNum'
p33265
((lp33266
S'int32'
p33267
ag34
a((S'device'
p33268
(lp33269
S'char'
p33270
a(lp33271
I-1
aaNtp33272
(S'data'
p33273
(lp33274
S'uInt32'
p33275
ag42
aNtp33276
tp33277
tp33278
sS'DAQmxGetAIFreqHyst'
p33279
((lp33280
S'int32'
p33281
ag34
a((S'taskHandle'
p33282
(lp33283
S'TaskHandle'
p33284
aNtp33285
(S'channel'
p33286
(lp33287
S'char'
p33288
a(lp33289
I-1
aaNtp33290
(S'data'
p33291
(lp33292
S'float64'
p33293
ag42
aNtp33294
tp33295
tp33296
sS'DAQmxGetWatchdogAOOutputType'
p33297
((lp33298
S'int32'
p33299
ag34
a((S'taskHandle'
p33300
(lp33301
S'TaskHandle'
p33302
aNtp33303
(S'lines'
p33304
(lp33305
S'char'
p33306
a(lp33307
I-1
aaNtp33308
(S'data'
p33309
(lp33310
S'int32'
p33311
ag42
aNtp33312
tp33313
tp33314
sS'DAQmxResetExportedWatchdogExpiredEventOutputTerm'
p33315
((lp33316
S'int32'
p33317
ag34
a((S'taskHandle'
p33318
(lp33319
S'TaskHandle'
p33320
aNtp33321
tp33322
tp33323
sS'DAQmxResetCIEncoderZInputDigFltrTimebaseRate'
p33324
((lp33325
S'int32'
p33326
ag34
a((S'taskHandle'
p33327
(lp33328
S'TaskHandle'
p33329
aNtp33330
(S'channel'
p33331
(lp33332
S'char'
p33333
a(lp33334
I-1
aaNtp33335
tp33336
tp33337
sS'DAQmxAdjust1141Cal'
p33338
((lp33339
S'int32'
p33340
ag34
a((S'calHandle'
p33341
(lp33342
S'CalHandle'
p33343
aNtp33344
(S'refVoltage'
p33345
(lp33346
S'float64'
p33347
aNtp33348
(S'measOutput'
p33349
(lp33350
S'float64'
p33351
aNtp33352
tp33353
tp33354
sS'DAQmxSetCICountEdgesCountResetLogicLvlBehavior'
p33355
((lp33356
S'int32'
p33357
ag34
a((S'taskHandle'
p33358
(lp33359
S'TaskHandle'
p33360
aNtp33361
(S'channel'
p33362
(lp33363
S'char'
p33364
a(lp33365
I-1
aaNtp33366
(S'data'
p33367
(lp33368
S'int32'
p33369
aNtp33370
tp33371
tp33372
sS'DAQmxResetSampClkDigFltrEnable'
p33373
((lp33374
S'int32'
p33375
ag34
a((S'taskHandle'
p33376
(lp33377
S'TaskHandle'
p33378
aNtp33379
tp33380
tp33381
sS'DAQmxGetDevAIVoltageIntExcitDiscreteVals'
p33382
((lp33383
S'int32'
p33384
ag34
a((S'device'
p33385
(lp33386
S'char'
p33387
a(lp33388
I-1
aaNtp33389
(S'data'
p33390
(lp33391
S'float64'
p33392
ag42
aNtp33393
(S'arraySizeInElements'
p33394
(lp33395
S'uInt32'
p33396
aNtp33397
tp33398
tp33399
sS'DAQmxGetWriteRegenMode'
p33400
((lp33401
S'int32'
p33402
ag34
a((S'taskHandle'
p33403
(lp33404
S'TaskHandle'
p33405
aNtp33406
(S'data'
p33407
(lp33408
S'int32'
p33409
ag42
aNtp33410
tp33411
tp33412
sS'DAQmxResetDOTristate'
p33413
((lp33414
S'int32'
p33415
ag34
a((S'taskHandle'
p33416
(lp33417
S'TaskHandle'
p33418
aNtp33419
(S'channel'
p33420
(lp33421
S'char'
p33422
a(lp33423
I-1
aaNtp33424
tp33425
tp33426
sS'DAQmxResetCIPulseWidthStartingEdge'
p33427
((lp33428
S'int32'
p33429
ag34
a((S'taskHandle'
p33430
(lp33431
S'TaskHandle'
p33432
aNtp33433
(S'channel'
p33434
(lp33435
S'char'
p33436
a(lp33437
I-1
aaNtp33438
tp33439
tp33440
sS'DAQmxResetCIPulseWidthTermCfg'
p33441
((lp33442
S'int32'
p33443
ag34
a((S'taskHandle'
p33444
(lp33445
S'TaskHandle'
p33446
aNtp33447
(S'channel'
p33448
(lp33449
S'char'
p33450
a(lp33451
I-1
aaNtp33452
tp33453
tp33454
sS'DAQmxSetSwitchDevSettlingTime'
p33455
((lp33456
S'int32'
p33457
ag34
a((S'deviceName'
p33458
(lp33459
S'char'
p33460
a(lp33461
I-1
aaNtp33462
(S'data'
p33463
(lp33464
S'float64'
p33465
aNtp33466
tp33467
tp33468
sS'DAQmxGetAIBridgeTablePhysicalVals'
p33469
((lp33470
S'int32'
p33471
ag34
a((S'taskHandle'
p33472
(lp33473
S'TaskHandle'
p33474
aNtp33475
(S'channel'
p33476
(lp33477
S'char'
p33478
a(lp33479
I-1
aaNtp33480
(S'data'
p33481
(lp33482
S'float64'
p33483
ag42
aNtp33484
(S'arraySizeInElements'
p33485
(lp33486
S'uInt32'
p33487
aNtp33488
tp33489
tp33490
sS'DAQmxResetAnlgEdgeRefTrigCoupling'
p33491
((lp33492
S'int32'
p33493
ag34
a((S'taskHandle'
p33494
(lp33495
S'TaskHandle'
p33496
aNtp33497
tp33498
tp33499
sS'DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate'
p33500
((lp33501
S'int32'
p33502
ag34
a((S'taskHandle'
p33503
(lp33504
S'TaskHandle'
p33505
aNtp33506
(S'data'
p33507
(lp33508
S'float64'
p33509
ag42
aNtp33510
tp33511
tp33512
sS'DAQmxGetDIDigSyncEnable'
p33513
((lp33514
S'int32'
p33515
ag34
a((S'taskHandle'
p33516
(lp33517
S'TaskHandle'
p33518
aNtp33519
(S'channel'
p33520
(lp33521
S'char'
p33522
a(lp33523
I-1
aaNtp33524
(S'data'
p33525
(lp33526
S'bool32'
p33527
ag42
aNtp33528
tp33529
tp33530
sS'DAQmxSetCISemiPeriodDigSyncEnable'
p33531
((lp33532
S'int32'
p33533
ag34
a((S'taskHandle'
p33534
(lp33535
S'TaskHandle'
p33536
aNtp33537
(S'channel'
p33538
(lp33539
S'char'
p33540
a(lp33541
I-1
aaNtp33542
(S'data'
p33543
(lp33544
S'bool32'
p33545
aNtp33546
tp33547
tp33548
sS'DAQmxGetExportedCtrOutEventToggleIdleState'
p33549
((lp33550
S'int32'
p33551
ag34
a((S'taskHandle'
p33552
(lp33553
S'TaskHandle'
p33554
aNtp33555
(S'data'
p33556
(lp33557
S'int32'
p33558
ag42
aNtp33559
tp33560
tp33561
sS'DAQmxAdjust1112Cal'
p33562
((lp33563
S'int32'
p33564
ag34
a((S'calHandle'
p33565
(lp33566
S'CalHandle'
p33567
aNtp33568
(S'refVoltage'
p33569
(lp33570
S'float64'
p33571
aNtp33572
(S'measOutput'
p33573
(lp33574
S'float64'
p33575
aNtp33576
tp33577
tp33578
sS'DAQmxSetAnlgEdgeStartTrigDigFltrMinPulseWidth'
p33579
((lp33580
S'int32'
p33581
ag34
a((S'taskHandle'
p33582
(lp33583
S'TaskHandle'
p33584
aNtp33585
(S'data'
p33586
(lp33587
S'float64'
p33588
aNtp33589
tp33590
tp33591
sS'DAQmxSetCIFreqEnableAveraging'
p33592
((lp33593
S'int32'
p33594
ag34
a((S'taskHandle'
p33595
(lp33596
S'TaskHandle'
p33597
aNtp33598
(S'channel'
p33599
(lp33600
S'char'
p33601
a(lp33602
I-1
aaNtp33603
(S'data'
p33604
(lp33605
S'bool32'
p33606
aNtp33607
tp33608
tp33609
sS'DAQmxReadCounterF64'
p33610
((lp33611
S'int32'
p33612
ag34
a((S'taskHandle'
p33613
(lp33614
S'TaskHandle'
p33615
aNtp33616
(S'numSampsPerChan'
p33617
(lp33618
S'int32'
p33619
aNtp33620
(S'timeout'
p33621
(lp33622
S'float64'
p33623
aNtp33624
(S'readArray'
p33625
(lp33626
S'float64'
p33627
a(lp33628
I-1
aaNtp33629
(S'arraySizeInSamps'
p33630
(lp33631
S'uInt32'
p33632
aNtp33633
(S'sampsPerChanRead'
p33634
(lp33635
S'int32'
p33636
ag42
aNtp33637
(S'reserved'
p33638
(lp33639
S'bool32'
p33640
ag42
aNtp33641
tp33642
tp33643
sS'DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc'
p33644
((lp33645
S'int32'
p33646
ag34
a((S'taskHandle'
p33647
(lp33648
S'TaskHandle'
p33649
aNtp33650
tp33651
tp33652
sS'DAQmxSetCICtrTimebaseActiveEdge'
p33653
((lp33654
S'int32'
p33655
ag34
a((S'taskHandle'
p33656
(lp33657
S'TaskHandle'
p33658
aNtp33659
(S'channel'
p33660
(lp33661
S'char'
p33662
a(lp33663
I-1
aaNtp33664
(S'data'
p33665
(lp33666
S'int32'
p33667
aNtp33668
tp33669
tp33670
sS'DAQmxSetDigEdgeArmStartTrigDigFltrEnable'
p33671
((lp33672
S'int32'
p33673
ag34
a((S'taskHandle'
p33674
(lp33675
S'TaskHandle'
p33676
aNtp33677
(S'data'
p33678
(lp33679
S'bool32'
p33680
aNtp33681
tp33682
tp33683
sS'DAQmxSCBaseboardCalAdjust'
p33684
((lp33685
S'int32'
p33686
ag34
a((S'calHandle'
p33687
(lp33688
S'CalHandle'
p33689
aNtp33690
(S'referenceVoltage'
p33691
(lp33692
S'float64'
p33693
aNtp33694
tp33695
tp33696
sS'DAQmxResetAIBridgePhysicalUnits'
p33697
((lp33698
S'int32'
p33699
ag34
a((S'taskHandle'
p33700
(lp33701
S'TaskHandle'
p33702
aNtp33703
(S'channel'
p33704
(lp33705
S'char'
p33706
a(lp33707
I-1
aaNtp33708
tp33709
tp33710
sS'DAQmxResetCIPulseTicksDigFltrEnable'
p33711
((lp33712
S'int32'
p33713
ag34
a((S'taskHandle'
p33714
(lp33715
S'TaskHandle'
p33716
aNtp33717
(S'channel'
p33718
(lp33719
S'char'
p33720
a(lp33721
I-1
aaNtp33722
tp33723
tp33724
sS'DAQmxResetCICountEdgesActiveEdge'
p33725
((lp33726
S'int32'
p33727
ag34
a((S'taskHandle'
p33728
(lp33729
S'TaskHandle'
p33730
aNtp33731
(S'channel'
p33732
(lp33733
S'char'
p33734
a(lp33735
I-1
aaNtp33736
tp33737
tp33738
sS'DAQmxGetHshkDelayAfterXfer'
p33739
((lp33740
S'int32'
p33741
ag34
a((S'taskHandle'
p33742
(lp33743
S'TaskHandle'
p33744
aNtp33745
(S'data'
p33746
(lp33747
S'float64'
p33748
ag42
aNtp33749
tp33750
tp33751
sS'DAQmxSetAODACOffsetExtSrc'
p33752
((lp33753
S'int32'
p33754
ag34
a((S'taskHandle'
p33755
(lp33756
S'TaskHandle'
p33757
aNtp33758
(S'channel'
p33759
(lp33760
S'char'
p33761
a(lp33762
I-1
aaNtp33763
(S'data'
p33764
(lp33765
S'char'
p33766
ag42
aNtp33767
tp33768
tp33769
sS'DAQmxSetExportedAdvTrigPulseWidth'
p33770
((lp33771
S'int32'
p33772
ag34
a((S'taskHandle'
p33773
(lp33774
S'TaskHandle'
p33775
aNtp33776
(S'data'
p33777
(lp33778
S'float64'
p33779
aNtp33780
tp33781
tp33782
sS'DAQmxGetReadCurrReadPos'
p33783
((lp33784
S'int32'
p33785
ag34
a((S'taskHandle'
p33786
(lp33787
S'TaskHandle'
p33788
aNtp33789
(S'data'
p33790
(lp33791
S'uInt64'
p33792
ag42
aNtp33793
tp33794
tp33795
sS'DAQmxResetExportedRdyForStartEventLvlActiveLvl'
p33796
((lp33797
S'int32'
p33798
ag34
a((S'taskHandle'
p33799
(lp33800
S'TaskHandle'
p33801
aNtp33802
tp33803
tp33804
sS'DAQmxGetReadAccessoryInsertionOrRemovalDetected'
p33805
((lp33806
S'int32'
p33807
ag34
a((S'taskHandle'
p33808
(lp33809
S'TaskHandle'
p33810
aNtp33811
(S'data'
p33812
(lp33813
S'bool32'
p33814
ag42
aNtp33815
tp33816
tp33817
sS'DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc'
p33818
((lp33819
S'int32'
p33820
ag34
a((S'taskHandle'
p33821
(lp33822
S'TaskHandle'
p33823
aNtp33824
(S'data'
p33825
(lp33826
S'char'
p33827
ag42
aNtp33828
tp33829
tp33830
sS'DAQmxGetCIFreqLogicLvlBehavior'
p33831
((lp33832
S'int32'
p33833
ag34
a((S'taskHandle'
p33834
(lp33835
S'TaskHandle'
p33836
aNtp33837
(S'channel'
p33838
(lp33839
S'char'
p33840
a(lp33841
I-1
aaNtp33842
(S'data'
p33843
(lp33844
S'int32'
p33845
ag42
aNtp33846
tp33847
tp33848
sS'DAQmxGetAIThrmcplCJCSrc'
p33849
((lp33850
S'int32'
p33851
ag34
a((S'taskHandle'
p33852
(lp33853
S'TaskHandle'
p33854
aNtp33855
(S'channel'
p33856
(lp33857
S'char'
p33858
a(lp33859
I-1
aaNtp33860
(S'data'
p33861
(lp33862
S'int32'
p33863
ag42
aNtp33864
tp33865
tp33866
sS'DAQmxGetCIGPSSyncMethod'
p33867
((lp33868
S'int32'
p33869
ag34
a((S'taskHandle'
p33870
(lp33871
S'TaskHandle'
p33872
aNtp33873
(S'channel'
p33874
(lp33875
S'char'
p33876
a(lp33877
I-1
aaNtp33878
(S'data'
p33879
(lp33880
S'int32'
p33881
ag42
aNtp33882
tp33883
tp33884
sS'DAQmxGetStartTrigDelayUnits'
p33885
((lp33886
S'int32'
p33887
ag34
a((S'taskHandle'
p33888
(lp33889
S'TaskHandle'
p33890
aNtp33891
(S'data'
p33892
(lp33893
S'int32'
p33894
ag42
aNtp33895
tp33896
tp33897
sS'DAQmxResetDIMemMapEnable'
p33898
((lp33899
S'int32'
p33900
ag34
a((S'taskHandle'
p33901
(lp33902
S'TaskHandle'
p33903
aNtp33904
(S'channel'
p33905
(lp33906
S'char'
p33907
a(lp33908
I-1
aaNtp33909
tp33910
tp33911
sS'DAQmxResetAnlgWinStartTrigCoupling'
p33912
((lp33913
S'int32'
p33914
ag34
a((S'taskHandle'
p33915
(lp33916
S'TaskHandle'
p33917
aNtp33918
tp33919
tp33920
sS'DAQmxGetDigLvlPauseTrigDigFltrEnable'
p33921
((lp33922
S'int32'
p33923
ag34
a((S'taskHandle'
p33924
(lp33925
S'TaskHandle'
p33926
aNtp33927
(S'data'
p33928
(lp33929
S'bool32'
p33930
ag42
aNtp33931
tp33932
tp33933
sS'DAQmxGetReadOvercurrentChans'
p33934
((lp33935
S'int32'
p33936
ag34
a((S'taskHandle'
p33937
(lp33938
S'TaskHandle'
p33939
aNtp33940
(S'data'
p33941
(lp33942
S'char'
p33943
ag42
aNtp33944
(S'bufferSize'
p33945
(lp33946
S'uInt32'
p33947
aNtp33948
tp33949
tp33950
sS'DAQmxWriteCtrTime'
p33951
((lp33952
S'int32'
p33953
ag34
a((S'taskHandle'
p33954
(lp33955
S'TaskHandle'
p33956
aNtp33957
(S'numSampsPerChan'
p33958
(lp33959
S'int32'
p33960
aNtp33961
(S'autoStart'
p33962
(lp33963
S'bool32'
p33964
aNtp33965
(S'timeout'
p33966
(lp33967
S'float64'
p33968
aNtp33969
(S'dataLayout'
p33970
(lp33971
S'bool32'
p33972
aNtp33973
(S'highTime'
p33974
(lp33975
S'float64'
p33976
a(lp33977
I-1
aaNtp33978
(S'lowTime'
p33979
(lp33980
S'float64'
p33981
a(lp33982
I-1
aaNtp33983
(S'numSampsPerChanWritten'
p33984
(lp33985
S'int32'
p33986
ag42
aNtp33987
(S'reserved'
p33988
(lp33989
S'bool32'
p33990
ag42
aNtp33991
tp33992
tp33993
sS'DAQmxResetCOPulseLowTicks'
p33994
((lp33995
S'int32'
p33996
ag34
a((S'taskHandle'
p33997
(lp33998
S'TaskHandle'
p33999
aNtp34000
(S'channel'
p34001
(lp34002
S'char'
p34003
a(lp34004
I-1
aaNtp34005
tp34006
tp34007
sS'DAQmxResetCITwoEdgeSepFirstDigSyncEnable'
p34008
((lp34009
S'int32'
p34010
ag34
a((S'taskHandle'
p34011
(lp34012
S'TaskHandle'
p34013
aNtp34014
(S'channel'
p34015
(lp34016
S'char'
p34017
a(lp34018
I-1
aaNtp34019
tp34020
tp34021
sS'DAQmxSetCOPulseLowTicks'
p34022
((lp34023
S'int32'
p34024
ag34
a((S'taskHandle'
p34025
(lp34026
S'TaskHandle'
p34027
aNtp34028
(S'channel'
p34029
(lp34030
S'char'
p34031
a(lp34032
I-1
aaNtp34033
(S'data'
p34034
(lp34035
S'uInt32'
p34036
aNtp34037
tp34038
tp34039
sS'DAQmxGetReadAvailSampPerChan'
p34040
((lp34041
S'int32'
p34042
ag34
a((S'taskHandle'
p34043
(lp34044
S'TaskHandle'
p34045
aNtp34046
(S'data'
p34047
(lp34048
S'uInt32'
p34049
ag42
aNtp34050
tp34051
tp34052
sS'DAQmxSetAnlgEdgeRefTrigDigFltrEnable'
p34053
((lp34054
S'int32'
p34055
ag34
a((S'taskHandle'
p34056
(lp34057
S'TaskHandle'
p34058
aNtp34059
(S'data'
p34060
(lp34061
S'bool32'
p34062
aNtp34063
tp34064
tp34065
sS'DAQmxSetExportedStartTrigOutputTerm'
p34066
((lp34067
S'int32'
p34068
ag34
a((S'taskHandle'
p34069
(lp34070
S'TaskHandle'
p34071
aNtp34072
(S'data'
p34073
(lp34074
S'char'
p34075
ag42
aNtp34076
tp34077
tp34078
sS'DAQmxSetSampClkTimebaseMasterTimebaseDiv'
p34079
((lp34080
S'int32'
p34081
ag34
a((S'taskHandle'
p34082
(lp34083
S'TaskHandle'
p34084
aNtp34085
(S'data'
p34086
(lp34087
S'uInt32'
p34088
aNtp34089
tp34090
tp34091
sS'DAQmxGetWriteWaitMode'
p34092
((lp34093
S'int32'
p34094
ag34
a((S'taskHandle'
p34095
(lp34096
S'TaskHandle'
p34097
aNtp34098
(S'data'
p34099
(lp34100
S'int32'
p34101
ag42
aNtp34102
tp34103
tp34104
sS'DAQmxResetCIFreqDigFltrEnable'
p34105
((lp34106
S'int32'
p34107
ag34
a((S'taskHandle'
p34108
(lp34109
S'TaskHandle'
p34110
aNtp34111
(S'channel'
p34112
(lp34113
S'char'
p34114
a(lp34115
I-1
aaNtp34116
tp34117
tp34118
sS'DAQmxResetCICountEdgesCountResetResetCount'
p34119
((lp34120
S'int32'
p34121
ag34
a((S'taskHandle'
p34122
(lp34123
S'TaskHandle'
p34124
aNtp34125
(S'channel'
p34126
(lp34127
S'char'
p34128
a(lp34129
I-1
aaNtp34130
tp34131
tp34132
sS'DAQmxGetExportedRdyForXferEventOutputTerm'
p34133
((lp34134
S'int32'
p34135
ag34
a((S'taskHandle'
p34136
(lp34137
S'TaskHandle'
p34138
aNtp34139
(S'data'
p34140
(lp34141
S'char'
p34142
ag42
aNtp34143
(S'bufferSize'
p34144
(lp34145
S'uInt32'
p34146
aNtp34147
tp34148
tp34149
sS'DAQmxGetCITwoEdgeSepSecondTerm'
p34150
((lp34151
S'int32'
p34152
ag34
a((S'taskHandle'
p34153
(lp34154
S'TaskHandle'
p34155
aNtp34156
(S'channel'
p34157
(lp34158
S'char'
p34159
a(lp34160
I-1
aaNtp34161
(S'data'
p34162
(lp34163
S'char'
p34164
ag42
aNtp34165
(S'bufferSize'
p34166
(lp34167
S'uInt32'
p34168
aNtp34169
tp34170
tp34171
sS'DAQmxGetSwitchDevTopology'
p34172
((lp34173
S'int32'
p34174
ag34
a((S'deviceName'
p34175
(lp34176
S'char'
p34177
a(lp34178
I-1
aaNtp34179
(S'data'
p34180
(lp34181
S'char'
p34182
ag42
aNtp34183
(S'bufferSize'
p34184
(lp34185
S'uInt32'
p34186
aNtp34187
tp34188
tp34189
sS'DAQmxGetAOMemMapEnable'
p34190
((lp34191
S'int32'
p34192
ag34
a((S'taskHandle'
p34193
(lp34194
S'TaskHandle'
p34195
aNtp34196
(S'channel'
p34197
(lp34198
S'char'
p34199
a(lp34200
I-1
aaNtp34201
(S'data'
p34202
(lp34203
S'bool32'
p34204
ag42
aNtp34205
tp34206
tp34207
sS'DAQmxSetMasterTimebaseRate'
p34208
((lp34209
S'int32'
p34210
ag34
a((S'taskHandle'
p34211
(lp34212
S'TaskHandle'
p34213
aNtp34214
(S'data'
p34215
(lp34216
S'float64'
p34217
aNtp34218
tp34219
tp34220
sS'DAQmxCreateCIDutyCycleChan'
p34221
((lp34222
S'int32'
p34223
ag34
a((S'taskHandle'
p34224
(lp34225
S'TaskHandle'
p34226
aNtp34227
(S'counter'
p34228
(lp34229
S'char'
p34230
a(lp34231
I-1
aaNtp34232
(S'nameToAssignToChannel'
p34233
(lp34234
S'char'
p34235
a(lp34236
I-1
aaNtp34237
(S'minFreq'
p34238
(lp34239
S'float64'
p34240
aNtp34241
(S'maxFreq'
p34242
(lp34243
S'float64'
p34244
aNtp34245
(S'edge'
p34246
(lp34247
S'int32'
p34248
aNtp34249
(S'customScaleName'
p34250
(lp34251
S'char'
p34252
a(lp34253
I-1
aaNtp34254
tp34255
tp34256
sS'DAQmxResetExportedHshkEventDelay'
p34257
((lp34258
S'int32'
p34259
ag34
a((S'taskHandle'
p34260
(lp34261
S'TaskHandle'
p34262
aNtp34263
tp34264
tp34265
sS'DAQmxGetCIFreqDigFltrTimebaseRate'
p34266
((lp34267
S'int32'
p34268
ag34
a((S'taskHandle'
p34269
(lp34270
S'TaskHandle'
p34271
aNtp34272
(S'channel'
p34273
(lp34274
S'char'
p34275
a(lp34276
I-1
aaNtp34277
(S'data'
p34278
(lp34279
S'float64'
p34280
ag42
aNtp34281
tp34282
tp34283
sS'DAQmxGetWriteOffset'
p34284
((lp34285
S'int32'
p34286
ag34
a((S'taskHandle'
p34287
(lp34288
S'TaskHandle'
p34289
aNtp34290
(S'data'
p34291
(lp34292
S'int32'
p34293
ag42
aNtp34294
tp34295
tp34296
sS'DAQmxGetDevAOCurrentRngs'
p34297
((lp34298
S'int32'
p34299
ag34
a((S'device'
p34300
(lp34301
S'char'
p34302
a(lp34303
I-1
aaNtp34304
(S'data'
p34305
(lp34306
S'float64'
p34307
ag42
aNtp34308
(S'arraySizeInElements'
p34309
(lp34310
S'uInt32'
p34311
aNtp34312
tp34313
tp34314
sS'DAQmxResetWatchdogExpirTrigType'
p34315
((lp34316
S'int32'
p34317
ag34
a((S'taskHandle'
p34318
(lp34319
S'TaskHandle'
p34320
aNtp34321
tp34322
tp34323
sS'DAQmxGetCIPeriodUnits'
p34324
((lp34325
S'int32'
p34326
ag34
a((S'taskHandle'
p34327
(lp34328
S'TaskHandle'
p34329
aNtp34330
(S'channel'
p34331
(lp34332
S'char'
p34333
a(lp34334
I-1
aaNtp34335
(S'data'
p34336
(lp34337
S'int32'
p34338
ag42
aNtp34339
tp34340
tp34341
sS'DAQmxSetExportedDataActiveEventOutputTerm'
p34342
((lp34343
S'int32'
p34344
ag34
a((S'taskHandle'
p34345
(lp34346
S'TaskHandle'
p34347
aNtp34348
(S'data'
p34349
(lp34350
S'char'
p34351
ag42
aNtp34352
tp34353
tp34354
sS'DAQmxGetExportedAdvCmpltEventPulsePolarity'
p34355
((lp34356
S'int32'
p34357
ag34
a((S'taskHandle'
p34358
(lp34359
S'TaskHandle'
p34360
aNtp34361
(S'data'
p34362
(lp34363
S'int32'
p34364
ag42
aNtp34365
tp34366
tp34367
sS'DAQmxGetCIPulseFreqDigSyncEnable'
p34368
((lp34369
S'int32'
p34370
ag34
a((S'taskHandle'
p34371
(lp34372
S'TaskHandle'
p34373
aNtp34374
(S'channel'
p34375
(lp34376
S'char'
p34377
a(lp34378
I-1
aaNtp34379
(S'data'
p34380
(lp34381
S'bool32'
p34382
ag42
aNtp34383
tp34384
tp34385
sS'DAQmxResetCIPulseFreqLogicLvlBehavior'
p34386
((lp34387
S'int32'
p34388
ag34
a((S'taskHandle'
p34389
(lp34390
S'TaskHandle'
p34391
aNtp34392
(S'channel'
p34393
(lp34394
S'char'
p34395
a(lp34396
I-1
aaNtp34397
tp34398
tp34399
sS'DAQmxSetAnlgWinPauseTrigDigFltrTimebaseRate'
p34400
((lp34401
S'int32'
p34402
ag34
a((S'taskHandle'
p34403
(lp34404
S'TaskHandle'
p34405
aNtp34406
(S'data'
p34407
(lp34408
S'float64'
p34409
aNtp34410
tp34411
tp34412
sS'DAQmxResetExportedAdvTrigPulseWidth'
p34413
((lp34414
S'int32'
p34415
ag34
a((S'taskHandle'
p34416
(lp34417
S'TaskHandle'
p34418
aNtp34419
tp34420
tp34421
sS'DAQmxGetAIEddyCurrentProxProbeSensitivity'
p34422
((lp34423
S'int32'
p34424
ag34
a((S'taskHandle'
p34425
(lp34426
S'TaskHandle'
p34427
aNtp34428
(S'channel'
p34429
(lp34430
S'char'
p34431
a(lp34432
I-1
aaNtp34433
(S'data'
p34434
(lp34435
S'float64'
p34436
ag42
aNtp34437
tp34438
tp34439
sS'DAQmxGetPhysicalChanDIPortWidth'
p34440
((lp34441
S'int32'
p34442
ag34
a((S'physicalChannel'
p34443
(lp34444
S'char'
p34445
a(lp34446
I-1
aaNtp34447
(S'data'
p34448
(lp34449
S'uInt32'
p34450
ag42
aNtp34451
tp34452
tp34453
sS'DAQmxSetLoggingPause'
p34454
((lp34455
S'int32'
p34456
ag34
a((S'taskHandle'
p34457
(lp34458
S'TaskHandle'
p34459
aNtp34460
(S'data'
p34461
(lp34462
S'bool32'
p34463
aNtp34464
tp34465
tp34466
sS'DAQmxSetRealTimeReportMissedSamp'
p34467
((lp34468
S'int32'
p34469
ag34
a((S'taskHandle'
p34470
(lp34471
S'TaskHandle'
p34472
aNtp34473
(S'data'
p34474
(lp34475
S'bool32'
p34476
aNtp34477
tp34478
tp34479
sS'DAQmxSetPhysicalChanName'
p34480
((lp34481
S'int32'
p34482
ag34
a((S'taskHandle'
p34483
(lp34484
S'TaskHandle'
p34485
aNtp34486
(S'channel'
p34487
(lp34488
S'char'
p34489
a(lp34490
I-1
aaNtp34491
(S'data'
p34492
(lp34493
S'char'
p34494
ag42
aNtp34495
tp34496
tp34497
sS'DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth'
p34498
((lp34499
S'int32'
p34500
ag34
a((S'taskHandle'
p34501
(lp34502
S'TaskHandle'
p34503
aNtp34504
(S'data'
p34505
(lp34506
S'float64'
p34507
aNtp34508
tp34509
tp34510
sS'DAQmxSetAnlgEdgeRefTrigCoupling'
p34511
((lp34512
S'int32'
p34513
ag34
a((S'taskHandle'
p34514
(lp34515
S'TaskHandle'
p34516
aNtp34517
(S'data'
p34518
(lp34519
S'int32'
p34520
aNtp34521
tp34522
tp34523
sS'DAQmxGetDevAISimultaneousSamplingSupported'
p34524
((lp34525
S'int32'
p34526
ag34
a((S'device'
p34527
(lp34528
S'char'
p34529
a(lp34530
I-1
aaNtp34531
(S'data'
p34532
(lp34533
S'bool32'
p34534
ag42
aNtp34535
tp34536
tp34537
sS'DAQmxCreateTEDSAIThrmstrChanVex'
p34538
((lp34539
S'int32'
p34540
ag34
a((S'taskHandle'
p34541
(lp34542
S'TaskHandle'
p34543
aNtp34544
(S'physicalChannel'
p34545
(lp34546
S'char'
p34547
a(lp34548
I-1
aaNtp34549
(S'nameToAssignToChannel'
p34550
(lp34551
S'char'
p34552
a(lp34553
I-1
aaNtp34554
(S'minVal'
p34555
(lp34556
S'float64'
p34557
aNtp34558
(S'maxVal'
p34559
(lp34560
S'float64'
p34561
aNtp34562
(S'units'
p34563
(lp34564
S'int32'
p34565
aNtp34566
(S'resistanceConfig'
p34567
(lp34568
S'int32'
p34569
aNtp34570
(S'voltageExcitSource'
p34571
(lp34572
S'int32'
p34573
aNtp34574
(S'voltageExcitVal'
p34575
(lp34576
S'float64'
p34577
aNtp34578
(S'r1'
p34579
(lp34580
S'float64'
p34581
aNtp34582
tp34583
tp34584
sS'DAQmxSetAIConvTimebaseDiv'
p34585
((lp34586
S'int32'
p34587
ag34
a((S'taskHandle'
p34588
(lp34589
S'TaskHandle'
p34590
aNtp34591
(S'data'
p34592
(lp34593
S'uInt32'
p34594
aNtp34595
tp34596
tp34597
sS'DAQmxSetAIRngHigh'
p34598
((lp34599
S'int32'
p34600
ag34
a((S'taskHandle'
p34601
(lp34602
S'TaskHandle'
p34603
aNtp34604
(S'channel'
p34605
(lp34606
S'char'
p34607
a(lp34608
I-1
aaNtp34609
(S'data'
p34610
(lp34611
S'float64'
p34612
aNtp34613
tp34614
tp34615
sS'DAQmxSetDigEdgeAdvTrigSrc'
p34616
((lp34617
S'int32'
p34618
ag34
a((S'taskHandle'
p34619
(lp34620
S'TaskHandle'
p34621
aNtp34622
(S'data'
p34623
(lp34624
S'char'
p34625
ag42
aNtp34626
tp34627
tp34628
sS'DAQmxGetCIPulseTicksTermCfg'
p34629
((lp34630
S'int32'
p34631
ag34
a((S'taskHandle'
p34632
(lp34633
S'TaskHandle'
p34634
aNtp34635
(S'channel'
p34636
(lp34637
S'char'
p34638
a(lp34639
I-1
aaNtp34640
(S'data'
p34641
(lp34642
S'int32'
p34643
ag42
aNtp34644
tp34645
tp34646
sS'DAQmxResetLoggingMode'
p34647
((lp34648
S'int32'
p34649
ag34
a((S'taskHandle'
p34650
(lp34651
S'TaskHandle'
p34652
aNtp34653
tp34654
tp34655
sS'DAQmxGetCICtrTimebaseDigSyncEnable'
p34656
((lp34657
S'int32'
p34658
ag34
a((S'taskHandle'
p34659
(lp34660
S'TaskHandle'
p34661
aNtp34662
(S'channel'
p34663
(lp34664
S'char'
p34665
a(lp34666
I-1
aaNtp34667
(S'data'
p34668
(lp34669
S'bool32'
p34670
ag42
aNtp34671
tp34672
tp34673
sS'DAQmxResetExportedAdvCmpltEventDelay'
p34674
((lp34675
S'int32'
p34676
ag34
a((S'taskHandle'
p34677
(lp34678
S'TaskHandle'
p34679
aNtp34680
tp34681
tp34682
sS'DAQmxResetExportedHshkEventOutputBehavior'
p34683
((lp34684
S'int32'
p34685
ag34
a((S'taskHandle'
p34686
(lp34687
S'TaskHandle'
p34688
aNtp34689
tp34690
tp34691
sS'DAQmxResetAIFreqUnits'
p34692
((lp34693
S'int32'
p34694
ag34
a((S'taskHandle'
p34695
(lp34696
S'TaskHandle'
p34697
aNtp34698
(S'channel'
p34699
(lp34700
S'char'
p34701
a(lp34702
I-1
aaNtp34703
tp34704
tp34705
sS'DAQmxResetCISampClkOverrunSentinelVal'
p34706
((lp34707
S'int32'
p34708
ag34
a((S'taskHandle'
p34709
(lp34710
S'TaskHandle'
p34711
aNtp34712
(S'channel'
p34713
(lp34714
S'char'
p34715
a(lp34716
I-1
aaNtp34717
tp34718
tp34719
sS'DAQmxCfgDigEdgeStartTrig'
p34720
((lp34721
S'int32'
p34722
ag34
a((S'taskHandle'
p34723
(lp34724
S'TaskHandle'
p34725
aNtp34726
(S'triggerSource'
p34727
(lp34728
S'char'
p34729
a(lp34730
I-1
aaNtp34731
(S'triggerEdge'
p34732
(lp34733
S'int32'
p34734
aNtp34735
tp34736
tp34737
sS'DAQmxGetPhysicalChanCISupportedMeasTypes'
p34738
((lp34739
S'int32'
p34740
ag34
a((S'physicalChannel'
p34741
(lp34742
S'char'
p34743
a(lp34744
I-1
aaNtp34745
(S'data'
p34746
(lp34747
S'int32'
p34748
ag42
aNtp34749
(S'arraySizeInElements'
p34750
(lp34751
S'uInt32'
p34752
aNtp34753
tp34754
tp34755
sS'DAQmxSetAISoundPressureUnits'
p34756
((lp34757
S'int32'
p34758
ag34
a((S'taskHandle'
p34759
(lp34760
S'TaskHandle'
p34761
aNtp34762
(S'channel'
p34763
(lp34764
S'char'
p34765
a(lp34766
I-1
aaNtp34767
(S'data'
p34768
(lp34769
S'int32'
p34770
aNtp34771
tp34772
tp34773
sS'DAQmxResetAnlgWinStartTrigDigFltrTimebaseSrc'
p34774
((lp34775
S'int32'
p34776
ag34
a((S'taskHandle'
p34777
(lp34778
S'TaskHandle'
p34779
aNtp34780
tp34781
tp34782
sS'DAQmxControlWatchdogTask'
p34783
((lp34784
S'int32'
p34785
ag34
a((S'taskHandle'
p34786
(lp34787
S'TaskHandle'
p34788
aNtp34789
(S'action'
p34790
(lp34791
S'int32'
p34792
aNtp34793
tp34794
tp34795
sS'DAQmxSetAIDigFltrLowpassCutoffFreq'
p34796
((lp34797
S'int32'
p34798
ag34
a((S'taskHandle'
p34799
(lp34800
S'TaskHandle'
p34801
aNtp34802
(S'channel'
p34803
(lp34804
S'char'
p34805
a(lp34806
I-1
aaNtp34807
(S'data'
p34808
(lp34809
S'float64'
p34810
aNtp34811
tp34812
tp34813
sS'DAQmxSetCIPulseTicksDigFltrEnable'
p34814
((lp34815
S'int32'
p34816
ag34
a((S'taskHandle'
p34817
(lp34818
S'TaskHandle'
p34819
aNtp34820
(S'channel'
p34821
(lp34822
S'char'
p34823
a(lp34824
I-1
aaNtp34825
(S'data'
p34826
(lp34827
S'bool32'
p34828
aNtp34829
tp34830
tp34831
sS'DAQmxResetCIPulseFreqDigFltrTimebaseSrc'
p34832
((lp34833
S'int32'
p34834
ag34
a((S'taskHandle'
p34835
(lp34836
S'TaskHandle'
p34837
aNtp34838
(S'channel'
p34839
(lp34840
S'char'
p34841
a(lp34842
I-1
aaNtp34843
tp34844
tp34845
sS'DAQmxGetCICount'
p34846
((lp34847
S'int32'
p34848
ag34
a((S'taskHandle'
p34849
(lp34850
S'TaskHandle'
p34851
aNtp34852
(S'channel'
p34853
(lp34854
S'char'
p34855
a(lp34856
I-1
aaNtp34857
(S'data'
p34858
(lp34859
S'uInt32'
p34860
ag42
aNtp34861
tp34862
tp34863
sS'DAQmxResetCICountEdgesDigFltrMinPulseWidth'
p34864
((lp34865
S'int32'
p34866
ag34
a((S'taskHandle'
p34867
(lp34868
S'TaskHandle'
p34869
aNtp34870
(S'channel'
p34871
(lp34872
S'char'
p34873
a(lp34874
I-1
aaNtp34875
tp34876
tp34877
sS'DAQmxResetAIConvDigFltrEnable'
p34878
((lp34879
S'int32'
p34880
ag34
a((S'taskHandle'
p34881
(lp34882
S'TaskHandle'
p34883
aNtp34884
tp34885
tp34886
sS'DAQmxResetExportedHshkEventPulseWidth'
p34887
((lp34888
S'int32'
p34889
ag34
a((S'taskHandle'
p34890
(lp34891
S'TaskHandle'
p34892
aNtp34893
tp34894
tp34895
sS'DAQmxAdjust9234GainCal'
p34896
((lp34897
S'int32'
p34898
ag34
a((S'calHandle'
p34899
(lp34900
S'CalHandle'
p34901
aNtp34902
(S'channelNames'
p34903
(lp34904
S'char'
p34905
a(lp34906
I-1
aaNtp34907
(S'value'
p34908
(lp34909
S'float64'
p34910
aNtp34911
tp34912
tp34913
sS'DAQmxRegisterSignalEvent'
p34914
((lp34915
S'int32'
p34916
ag34
a((S'task'
p34917
(lp34918
S'TaskHandle'
p34919
aNtp34920
(S'signalID'
p34921
(lp34922
S'int32'
p34923
aNtp34924
(S'options'
p34925
(lp34926
S'uInt32'
p34927
aNtp34928
(S'callbackFunction'
p34929
(lp34930
S'DAQmxSignalEventCallbackPtr'
p34931
aNtp34932
(S'callbackData'
p34933
(lp34934
S'void'
p34935
ag42
aNtp34936
tp34937
tp34938
sS'DAQmxSetRealTimeWaitForNextSampClkWaitMode'
p34939
((lp34940
S'int32'
p34941
ag34
a((S'taskHandle'
p34942
(lp34943
S'TaskHandle'
p34944
aNtp34945
(S'data'
p34946
(lp34947
S'int32'
p34948
aNtp34949
tp34950
tp34951
sS'DAQmxCreateCICountEdgesChan'
p34952
((lp34953
S'int32'
p34954
ag34
a((S'taskHandle'
p34955
(lp34956
S'TaskHandle'
p34957
aNtp34958
(S'counter'
p34959
(lp34960
S'char'
p34961
a(lp34962
I-1
aaNtp34963
(S'nameToAssignToChannel'
p34964
(lp34965
S'char'
p34966
a(lp34967
I-1
aaNtp34968
(S'edge'
p34969
(lp34970
S'int32'
p34971
aNtp34972
(S'initialCount'
p34973
(lp34974
S'uInt32'
p34975
aNtp34976
(S'countDirection'
p34977
(lp34978
S'int32'
p34979
aNtp34980
tp34981
tp34982
sS'DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling'
p34983
((lp34984
S'int32'
p34985
ag34
a((S'deviceName'
p34986
(lp34987
S'char'
p34988
a(lp34989
I-1
aaNtp34990
(S'data'
p34991
(lp34992
S'bool32'
p34993
ag42
aNtp34994
tp34995
tp34996
sS'DAQmxSetAIADCTimingMode'
p34997
((lp34998
S'int32'
p34999
ag34
a((S'taskHandle'
p35000
(lp35001
S'TaskHandle'
p35002
aNtp35003
(S'channel'
p35004
(lp35005
S'char'
p35006
a(lp35007
I-1
aaNtp35008
(S'data'
p35009
(lp35010
S'int32'
p35011
aNtp35012
tp35013
tp35014
sS'DAQmxGetSampClkDigFltrTimebaseSrc'
p35015
((lp35016
S'int32'
p35017
ag34
a((S'taskHandle'
p35018
(lp35019
S'TaskHandle'
p35020
aNtp35021
(S'data'
p35022
(lp35023
S'char'
p35024
ag42
aNtp35025
(S'bufferSize'
p35026
(lp35027
S'uInt32'
p35028
aNtp35029
tp35030
tp35031
sS'DAQmxGetReadOverloadedChans'
p35032
((lp35033
S'int32'
p35034
ag34
a((S'taskHandle'
p35035
(lp35036
S'TaskHandle'
p35037
aNtp35038
(S'data'
p35039
(lp35040
S'char'
p35041
ag42
aNtp35042
(S'bufferSize'
p35043
(lp35044
S'uInt32'
p35045
aNtp35046
tp35047
tp35048
sS'DAQmxGetDOOvercurrentAutoReenable'
p35049
((lp35050
S'int32'
p35051
ag34
a((S'taskHandle'
p35052
(lp35053
S'TaskHandle'
p35054
aNtp35055
(S'channel'
p35056
(lp35057
S'char'
p35058
a(lp35059
I-1
aaNtp35060
(S'data'
p35061
(lp35062
S'bool32'
p35063
ag42
aNtp35064
tp35065
tp35066
sS'DAQmxResetAnlgLvlPauseTrigHyst'
p35067
((lp35068
S'int32'
p35069
ag34
a((S'taskHandle'
p35070
(lp35071
S'TaskHandle'
p35072
aNtp35073
tp35074
tp35075
sS'DAQmxAdjust9223Cal'
p35076
((lp35077
S'int32'
p35078
ag34
a((S'calHandle'
p35079
(lp35080
S'CalHandle'
p35081
aNtp35082
(S'channelNames'
p35083
(lp35084
S'char'
p35085
a(lp35086
I-1
aaNtp35087
(S'value'
p35088
(lp35089
S'float64'
p35090
aNtp35091
tp35092
tp35093
sS'DAQmxSetAODACRefVal'
p35094
((lp35095
S'int32'
p35096
ag34
a((S'taskHandle'
p35097
(lp35098
S'TaskHandle'
p35099
aNtp35100
(S'channel'
p35101
(lp35102
S'char'
p35103
a(lp35104
I-1
aaNtp35105
(S'data'
p35106
(lp35107
S'float64'
p35108
aNtp35109
tp35110
tp35111
sS'DAQmxSetExportedPauseTrigLvlActiveLvl'
p35112
((lp35113
S'int32'
p35114
ag34
a((S'taskHandle'
p35115
(lp35116
S'TaskHandle'
p35117
aNtp35118
(S'data'
p35119
(lp35120
S'int32'
p35121
aNtp35122
tp35123
tp35124
sS'DAQmxReadDigitalLines'
p35125
((lp35126
S'int32'
p35127
ag34
a((S'taskHandle'
p35128
(lp35129
S'TaskHandle'
p35130
aNtp35131
(S'numSampsPerChan'
p35132
(lp35133
S'int32'
p35134
aNtp35135
(S'timeout'
p35136
(lp35137
S'float64'
p35138
aNtp35139
(S'fillMode'
p35140
(lp35141
S'bool32'
p35142
aNtp35143
(S'readArray'
p35144
(lp35145
S'uInt8'
p35146
a(lp35147
I-1
aaNtp35148
(S'arraySizeInBytes'
p35149
(lp35150
S'uInt32'
p35151
aNtp35152
(S'sampsPerChanRead'
p35153
(lp35154
S'int32'
p35155
ag42
aNtp35156
(S'numBytesPerSamp'
p35157
(lp35158
S'int32'
p35159
ag42
aNtp35160
(S'reserved'
p35161
(lp35162
S'bool32'
p35163
ag42
aNtp35164
tp35165
tp35166
sS'DAQmxGetChangeDetectDITristate'
p35167
((lp35168
S'int32'
p35169
ag34
a((S'taskHandle'
p35170
(lp35171
S'TaskHandle'
p35172
aNtp35173
(S'data'
p35174
(lp35175
S'bool32'
p35176
ag42
aNtp35177
tp35178
tp35179
sS'DAQmxResetAIImpedance'
p35180
((lp35181
S'int32'
p35182
ag34
a((S'taskHandle'
p35183
(lp35184
S'TaskHandle'
p35185
aNtp35186
(S'channel'
p35187
(lp35188
S'char'
p35189
a(lp35190
I-1
aaNtp35191
tp35192
tp35193
sS'DAQmxGetRefTrigTerm'
p35194
((lp35195
S'int32'
p35196
ag34
a((S'taskHandle'
p35197
(lp35198
S'TaskHandle'
p35199
aNtp35200
(S'data'
p35201
(lp35202
S'char'
p35203
ag42
aNtp35204
(S'bufferSize'
p35205
(lp35206
S'uInt32'
p35207
aNtp35208
tp35209
tp35210
sS'DAQmxResetCITwoEdgeSepFirstTerm'
p35211
((lp35212
S'int32'
p35213
ag34
a((S'taskHandle'
p35214
(lp35215
S'TaskHandle'
p35216
aNtp35217
(S'channel'
p35218
(lp35219
S'char'
p35220
a(lp35221
I-1
aaNtp35222
tp35223
tp35224
sS'DAQmxCreateTEDSAICurrentChan'
p35225
((lp35226
S'int32'
p35227
ag34
a((S'taskHandle'
p35228
(lp35229
S'TaskHandle'
p35230
aNtp35231
(S'physicalChannel'
p35232
(lp35233
S'char'
p35234
a(lp35235
I-1
aaNtp35236
(S'nameToAssignToChannel'
p35237
(lp35238
S'char'
p35239
a(lp35240
I-1
aaNtp35241
(S'terminalConfig'
p35242
(lp35243
S'int32'
p35244
aNtp35245
(S'minVal'
p35246
(lp35247
S'float64'
p35248
aNtp35249
(S'maxVal'
p35250
(lp35251
S'float64'
p35252
aNtp35253
(S'units'
p35254
(lp35255
S'int32'
p35256
aNtp35257
(S'shuntResistorLoc'
p35258
(lp35259
S'int32'
p35260
aNtp35261
(S'extShuntResistorVal'
p35262
(lp35263
S'float64'
p35264
aNtp35265
(S'customScaleName'
p35266
(lp35267
S'char'
p35268
a(lp35269
I-1
aaNtp35270
tp35271
tp35272
sS'DAQmxGetExported10MHzRefClkOutputTerm'
p35273
((lp35274
S'int32'
p35275
ag34
a((S'taskHandle'
p35276
(lp35277
S'TaskHandle'
p35278
aNtp35279
(S'data'
p35280
(lp35281
S'char'
p35282
ag42
aNtp35283
(S'bufferSize'
p35284
(lp35285
S'uInt32'
p35286
aNtp35287
tp35288
tp35289
sS'DAQmxSetAODACOffsetVal'
p35290
((lp35291
S'int32'
p35292
ag34
a((S'taskHandle'
p35293
(lp35294
S'TaskHandle'
p35295
aNtp35296
(S'channel'
p35297
(lp35298
S'char'
p35299
a(lp35300
I-1
aaNtp35301
(S'data'
p35302
(lp35303
S'float64'
p35304
aNtp35305
tp35306
tp35307
sS'DAQmxReadCtrFreq'
p35308
((lp35309
S'int32'
p35310
ag34
a((S'taskHandle'
p35311
(lp35312
S'TaskHandle'
p35313
aNtp35314
(S'numSampsPerChan'
p35315
(lp35316
S'int32'
p35317
aNtp35318
(S'timeout'
p35319
(lp35320
S'float64'
p35321
aNtp35322
(S'interleaved'
p35323
(lp35324
S'bool32'
p35325
aNtp35326
(S'readArrayFrequency'
p35327
(lp35328
S'float64'
p35329
a(lp35330
I-1
aaNtp35331
(S'readArrayDutyCycle'
p35332
(lp35333
S'float64'
p35334
a(lp35335
I-1
aaNtp35336
(S'arraySizeInSamps'
p35337
(lp35338
S'uInt32'
p35339
aNtp35340
(S'sampsPerChanRead'
p35341
(lp35342
S'int32'
p35343
ag42
aNtp35344
(S'reserved'
p35345
(lp35346
S'bool32'
p35347
ag42
aNtp35348
tp35349
tp35350
sS'DAQmxSetCIEncoderBInputDigFltrTimebaseSrc'
p35351
((lp35352
S'int32'
p35353
ag34
a((S'taskHandle'
p35354
(lp35355
S'TaskHandle'
p35356
aNtp35357
(S'channel'
p35358
(lp35359
S'char'
p35360
a(lp35361
I-1
aaNtp35362
(S'data'
p35363
(lp35364
S'char'
p35365
ag42
aNtp35366
tp35367
tp35368
sS'DAQmxGetReadChangeDetectHasOverflowed'
p35369
((lp35370
S'int32'
p35371
ag34
a((S'taskHandle'
p35372
(lp35373
S'TaskHandle'
p35374
aNtp35375
(S'data'
p35376
(lp35377
S'bool32'
p35378
ag42
aNtp35379
tp35380
tp35381
sS'DAQmxSetScaleMapScaledMax'
p35382
((lp35383
S'int32'
p35384
ag34
a((S'scaleName'
p35385
(lp35386
S'char'
p35387
a(lp35388
I-1
aaNtp35389
(S'data'
p35390
(lp35391
S'float64'
p35392
aNtp35393
tp35394
tp35395
sS'DAQmxResetCILinEncoderDistPerPulse'
p35396
((lp35397
S'int32'
p35398
ag34
a((S'taskHandle'
p35399
(lp35400
S'TaskHandle'
p35401
aNtp35402
(S'channel'
p35403
(lp35404
S'char'
p35405
a(lp35406
I-1
aaNtp35407
tp35408
tp35409
sS'DAQmxResetAnlgEdgeRefTrigLvl'
p35410
((lp35411
S'int32'
p35412
ag34
a((S'taskHandle'
p35413
(lp35414
S'TaskHandle'
p35415
aNtp35416
tp35417
tp35418
sS'DAQmxSetAIChanCalPolyReverseCoeff'
p35419
((lp35420
S'int32'
p35421
ag34
a((S'taskHandle'
p35422
(lp35423
S'TaskHandle'
p35424
aNtp35425
(S'channel'
p35426
(lp35427
S'char'
p35428
a(lp35429
I-1
aaNtp35430
(S'data'
p35431
(lp35432
S'float64'
p35433
ag42
aNtp35434
(S'arraySizeInElements'
p35435
(lp35436
S'uInt32'
p35437
aNtp35438
tp35439
tp35440
sS'DAQmxResetAIDigFltrType'
p35441
((lp35442
S'int32'
p35443
ag34
a((S'taskHandle'
p35444
(lp35445
S'TaskHandle'
p35446
aNtp35447
(S'channel'
p35448
(lp35449
S'char'
p35450
a(lp35451
I-1
aaNtp35452
tp35453
tp35454
sS'DAQmxGetReadOffset'
p35455
((lp35456
S'int32'
p35457
ag34
a((S'taskHandle'
p35458
(lp35459
S'TaskHandle'
p35460
aNtp35461
(S'data'
p35462
(lp35463
S'int32'
p35464
ag42
aNtp35465
tp35466
tp35467
sS'DAQmxResetCIEncoderZInputTerm'
p35468
((lp35469
S'int32'
p35470
ag34
a((S'taskHandle'
p35471
(lp35472
S'TaskHandle'
p35473
aNtp35474
(S'channel'
p35475
(lp35476
S'char'
p35477
a(lp35478
I-1
aaNtp35479
tp35480
tp35481
sS'DAQmxGetCICtrTimebaseMasterTimebaseDiv'
p35482
((lp35483
S'int32'
p35484
ag34
a((S'taskHandle'
p35485
(lp35486
S'TaskHandle'
p35487
aNtp35488
(S'channel'
p35489
(lp35490
S'char'
p35491
a(lp35492
I-1
aaNtp35493
(S'data'
p35494
(lp35495
S'uInt32'
p35496
ag42
aNtp35497
tp35498
tp35499
sS'DAQmxResetCIPrescaler'
p35500
((lp35501
S'int32'
p35502
ag34
a((S'taskHandle'
p35503
(lp35504
S'TaskHandle'
p35505
aNtp35506
(S'channel'
p35507
(lp35508
S'char'
p35509
a(lp35510
I-1
aaNtp35511
tp35512
tp35513
sS'DAQmxDeleteSavedTask'
p35514
((lp35515
S'int32'
p35516
ag34
a((S'taskName'
p35517
(lp35518
S'char'
p35519
a(lp35520
I-1
aaNtp35521
tp35522
tp35523
sS'DAQmxGetAnlgLvlPauseTrigHyst'
p35524
((lp35525
S'int32'
p35526
ag34
a((S'taskHandle'
p35527
(lp35528
S'TaskHandle'
p35529
aNtp35530
(S'data'
p35531
(lp35532
S'float64'
p35533
ag42
aNtp35534
tp35535
tp35536
sS'DAQmxResetExportedSignalAttribute'
p35537
((lp35538
S'int32'
p35539
ag34
a((S'taskHandle'
p35540
(lp35541
S'TaskHandle'
p35542
aNtp35543
(S'attribute'
p35544
(lp35545
S'int32'
p35546
aNtp35547
tp35548
tp35549
sS'DAQmxGetRealTimeWriteRecoveryMode'
p35550
((lp35551
S'int32'
p35552
ag34
a((S'taskHandle'
p35553
(lp35554
S'TaskHandle'
p35555
aNtp35556
(S'data'
p35557
(lp35558
S'int32'
p35559
ag42
aNtp35560
tp35561
tp35562
sS'DAQmxCreateTableScale'
p35563
((lp35564
S'int32'
p35565
ag34
a((S'name'
p35566
(lp35567
S'char'
p35568
a(lp35569
I-1
aaNtp35570
(S'prescaledVals'
p35571
(lp35572
S'float64'
p35573
a(lp35574
I-1
aaNtp35575
(S'numPrescaledValsIn'
p35576
(lp35577
S'uInt32'
p35578
aNtp35579
(S'scaledVals'
p35580
(lp35581
S'float64'
p35582
a(lp35583
I-1
aaNtp35584
(S'numScaledValsIn'
p35585
(lp35586
S'uInt32'
p35587
aNtp35588
(S'preScaledUnits'
p35589
(lp35590
S'int32'
p35591
aNtp35592
(S'scaledUnits'
p35593
(lp35594
S'char'
p35595
a(lp35596
I-1
aaNtp35597
tp35598
tp35599
sS'DAQmxResetAIStrainGageForceReadFromChan'
p35600
((lp35601
S'int32'
p35602
ag34
a((S'taskHandle'
p35603
(lp35604
S'TaskHandle'
p35605
aNtp35606
(S'channel'
p35607
(lp35608
S'char'
p35609
a(lp35610
I-1
aaNtp35611
tp35612
tp35613
sS'DAQmxGetCICountEdgesCountDirDigSyncEnable'
p35614
((lp35615
S'int32'
p35616
ag34
a((S'taskHandle'
p35617
(lp35618
S'TaskHandle'
p35619
aNtp35620
(S'channel'
p35621
(lp35622
S'char'
p35623
a(lp35624
I-1
aaNtp35625
(S'data'
p35626
(lp35627
S'bool32'
p35628
ag42
aNtp35629
tp35630
tp35631
sS'DAQmxResetDOUsbXferReqCount'
p35632
((lp35633
S'int32'
p35634
ag34
a((S'taskHandle'
p35635
(lp35636
S'TaskHandle'
p35637
aNtp35638
(S'channel'
p35639
(lp35640
S'char'
p35641
a(lp35642
I-1
aaNtp35643
tp35644
tp35645
sS'DAQmxResetAIGain'
p35646
((lp35647
S'int32'
p35648
ag34
a((S'taskHandle'
p35649
(lp35650
S'TaskHandle'
p35651
aNtp35652
(S'channel'
p35653
(lp35654
S'char'
p35655
a(lp35656
I-1
aaNtp35657
tp35658
tp35659
sS'DAQmxGetAOFuncGenModulationType'
p35660
((lp35661
S'int32'
p35662
ag34
a((S'taskHandle'
p35663
(lp35664
S'TaskHandle'
p35665
aNtp35666
(S'channel'
p35667
(lp35668
S'char'
p35669
a(lp35670
I-1
aaNtp35671
(S'data'
p35672
(lp35673
S'int32'
p35674
ag42
aNtp35675
tp35676
tp35677
sS'DAQmxAdjust4204Cal'
p35678
((lp35679
S'int32'
p35680
ag34
a((S'calHandle'
p35681
(lp35682
S'CalHandle'
p35683
aNtp35684
(S'channelNames'
p35685
(lp35686
S'char'
p35687
a(lp35688
I-1
aaNtp35689
(S'lowPassFreq'
p35690
(lp35691
S'float64'
p35692
aNtp35693
(S'trackHoldEnabled'
p35694
(lp35695
S'bool32'
p35696
aNtp35697
(S'inputVal'
p35698
(lp35699
S'float64'
p35700
aNtp35701
tp35702
tp35703
sS'DAQmxSetRefClkSrc'
p35704
((lp35705
S'int32'
p35706
ag34
a((S'taskHandle'
p35707
(lp35708
S'TaskHandle'
p35709
aNtp35710
(S'data'
p35711
(lp35712
S'char'
p35713
ag42
aNtp35714
tp35715
tp35716
sS'DAQmxSetCOPulseFreqUnits'
p35717
((lp35718
S'int32'
p35719
ag34
a((S'taskHandle'
p35720
(lp35721
S'TaskHandle'
p35722
aNtp35723
(S'channel'
p35724
(lp35725
S'char'
p35726
a(lp35727
I-1
aaNtp35728
(S'data'
p35729
(lp35730
S'int32'
p35731
aNtp35732
tp35733
tp35734
sS'DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate'
p35735
((lp35736
S'int32'
p35737
ag34
a((S'taskHandle'
p35738
(lp35739
S'TaskHandle'
p35740
aNtp35741
tp35742
tp35743
sS'DAQmxGetCICtrTimebaseDigFltrTimebaseSrc'
p35744
((lp35745
S'int32'
p35746
ag34
a((S'taskHandle'
p35747
(lp35748
S'TaskHandle'
p35749
aNtp35750
(S'channel'
p35751
(lp35752
S'char'
p35753
a(lp35754
I-1
aaNtp35755
(S'data'
p35756
(lp35757
S'char'
p35758
ag42
aNtp35759
(S'bufferSize'
p35760
(lp35761
S'uInt32'
p35762
aNtp35763
tp35764
tp35765
sS'DAQmxGetRealTimeNumOfWarmupIters'
p35766
((lp35767
S'int32'
p35768
ag34
a((S'taskHandle'
p35769
(lp35770
S'TaskHandle'
p35771
aNtp35772
(S'data'
p35773
(lp35774
S'uInt32'
p35775
ag42
aNtp35776
tp35777
tp35778
sS'DAQmxGetDIInvertLines'
p35779
((lp35780
S'int32'
p35781
ag34
a((S'taskHandle'
p35782
(lp35783
S'TaskHandle'
p35784
aNtp35785
(S'channel'
p35786
(lp35787
S'char'
p35788
a(lp35789
I-1
aaNtp35790
(S'data'
p35791
(lp35792
S'bool32'
p35793
ag42
aNtp35794
tp35795
tp35796
sS'DAQmxResetCOUseOnlyOnBrdMem'
p35797
((lp35798
S'int32'
p35799
ag34
a((S'taskHandle'
p35800
(lp35801
S'TaskHandle'
p35802
aNtp35803
(S'channel'
p35804
(lp35805
S'char'
p35806
a(lp35807
I-1
aaNtp35808
tp35809
tp35810
sS'DAQmxGetAIForceIEPESensorSensitivityUnits'
p35811
((lp35812
S'int32'
p35813
ag34
a((S'taskHandle'
p35814
(lp35815
S'TaskHandle'
p35816
aNtp35817
(S'channel'
p35818
(lp35819
S'char'
p35820
a(lp35821
I-1
aaNtp35822
(S'data'
p35823
(lp35824
S'int32'
p35825
ag42
aNtp35826
tp35827
tp35828
sS'DAQmxResetAIBridgePolyForwardCoeff'
p35829
((lp35830
S'int32'
p35831
ag34
a((S'taskHandle'
p35832
(lp35833
S'TaskHandle'
p35834
aNtp35835
(S'channel'
p35836
(lp35837
S'char'
p35838
a(lp35839
I-1
aaNtp35840
tp35841
tp35842
sS'DAQmxGetDigEdgeRefTrigDigSyncEnable'
p35843
((lp35844
S'int32'
p35845
ag34
a((S'taskHandle'
p35846
(lp35847
S'TaskHandle'
p35848
aNtp35849
(S'data'
p35850
(lp35851
S'bool32'
p35852
ag42
aNtp35853
tp35854
tp35855
sS'DAQmxGetWriteSleepTime'
p35856
((lp35857
S'int32'
p35858
ag34
a((S'taskHandle'
p35859
(lp35860
S'TaskHandle'
p35861
aNtp35862
(S'data'
p35863
(lp35864
S'float64'
p35865
ag42
aNtp35866
tp35867
tp35868
sS'DAQmxGetCOPulseHighTime'
p35869
((lp35870
S'int32'
p35871
ag34
a((S'taskHandle'
p35872
(lp35873
S'TaskHandle'
p35874
aNtp35875
(S'channel'
p35876
(lp35877
S'char'
p35878
a(lp35879
I-1
aaNtp35880
(S'data'
p35881
(lp35882
S'float64'
p35883
ag42
aNtp35884
tp35885
tp35886
sS'DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling'
p35887
((lp35888
S'int32'
p35889
ag34
a((S'deviceName'
p35890
(lp35891
S'char'
p35892
a(lp35893
I-1
aaNtp35894
(S'data'
p35895
(lp35896
S'bool32'
p35897
aNtp35898
tp35899
tp35900
sS'DAQmxSetAIBridgeCfg'
p35901
((lp35902
S'int32'
p35903
ag34
a((S'taskHandle'
p35904
(lp35905
S'TaskHandle'
p35906
aNtp35907
(S'channel'
p35908
(lp35909
S'char'
p35910
a(lp35911
I-1
aaNtp35912
(S'data'
p35913
(lp35914
S'int32'
p35915
aNtp35916
tp35917
tp35918
sS'DAQmxResetCISemiPeriodTermCfg'
p35919
((lp35920
S'int32'
p35921
ag34
a((S'taskHandle'
p35922
(lp35923
S'TaskHandle'
p35924
aNtp35925
(S'channel'
p35926
(lp35927
S'char'
p35928
a(lp35929
I-1
aaNtp35930
tp35931
tp35932
sS'DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc'
p35933
((lp35934
S'int32'
p35935
ag34
a((S'taskHandle'
p35936
(lp35937
S'TaskHandle'
p35938
aNtp35939
(S'data'
p35940
(lp35941
S'char'
p35942
ag42
aNtp35943
(S'bufferSize'
p35944
(lp35945
S'uInt32'
p35946
aNtp35947
tp35948
tp35949
sS'DAQmxSetExportedAdvCmpltEventPulseWidth'
p35950
((lp35951
S'int32'
p35952
ag34
a((S'taskHandle'
p35953
(lp35954
S'TaskHandle'
p35955
aNtp35956
(S'data'
p35957
(lp35958
S'float64'
p35959
aNtp35960
tp35961
tp35962
sS'DAQmxSetChangeDetectDIRisingEdgePhysicalChans'
p35963
((lp35964
S'int32'
p35965
ag34
a((S'taskHandle'
p35966
(lp35967
S'TaskHandle'
p35968
aNtp35969
(S'data'
p35970
(lp35971
S'char'
p35972
ag42
aNtp35973
tp35974
tp35975
sS'DAQmxSetDigLvlPauseTrigWhen'
p35976
((lp35977
S'int32'
p35978
ag34
a((S'taskHandle'
p35979
(lp35980
S'TaskHandle'
p35981
aNtp35982
(S'data'
p35983
(lp35984
S'int32'
p35985
aNtp35986
tp35987
tp35988
sS'DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth'
p35989
((lp35990
S'int32'
p35991
ag34
a((S'taskHandle'
p35992
(lp35993
S'TaskHandle'
p35994
aNtp35995
(S'channel'
p35996
(lp35997
S'char'
p35998
a(lp35999
I-1
aaNtp36000
tp36001
tp36002
sS'DAQmxSetCICountEdgesCountResetEnable'
p36003
((lp36004
S'int32'
p36005
ag34
a((S'taskHandle'
p36006
(lp36007
S'TaskHandle'
p36008
aNtp36009
(S'channel'
p36010
(lp36011
S'char'
p36012
a(lp36013
I-1
aaNtp36014
(S'data'
p36015
(lp36016
S'bool32'
p36017
aNtp36018
tp36019
tp36020
sS'DAQmxGetAODACOffsetVal'
p36021
((lp36022
S'int32'
p36023
ag34
a((S'taskHandle'
p36024
(lp36025
S'TaskHandle'
p36026
aNtp36027
(S'channel'
p36028
(lp36029
S'char'
p36030
a(lp36031
I-1
aaNtp36032
(S'data'
p36033
(lp36034
S'float64'
p36035
ag42
aNtp36036
tp36037
tp36038
sS'DAQmxSetAnlgLvlPauseTrigLvl'
p36039
((lp36040
S'int32'
p36041
ag34
a((S'taskHandle'
p36042
(lp36043
S'TaskHandle'
p36044
aNtp36045
(S'data'
p36046
(lp36047
S'float64'
p36048
aNtp36049
tp36050
tp36051
sS'DAQmxResetAICurrentACRMSUnits'
p36052
((lp36053
S'int32'
p36054
ag34
a((S'taskHandle'
p36055
(lp36056
S'TaskHandle'
p36057
aNtp36058
(S'channel'
p36059
(lp36060
S'char'
p36061
a(lp36062
I-1
aaNtp36063
tp36064
tp36065
sS'DAQmxGetAOFilterDelayUnits'
p36066
((lp36067
S'int32'
p36068
ag34
a((S'taskHandle'
p36069
(lp36070
S'TaskHandle'
p36071
aNtp36072
(S'channel'
p36073
(lp36074
S'char'
p36075
a(lp36076
I-1
aaNtp36077
(S'data'
p36078
(lp36079
S'int32'
p36080
ag42
aNtp36081
tp36082
tp36083
sS'DAQmxResetLoggingFilePreallocationSize'
p36084
((lp36085
S'int32'
p36086
ag34
a((S'taskHandle'
p36087
(lp36088
S'TaskHandle'
p36089
aNtp36090
tp36091
tp36092
sS'DAQmxGetDIUsbXferReqCount'
p36093
((lp36094
S'int32'
p36095
ag34
a((S'taskHandle'
p36096
(lp36097
S'TaskHandle'
p36098
aNtp36099
(S'channel'
p36100
(lp36101
S'char'
p36102
a(lp36103
I-1
aaNtp36104
(S'data'
p36105
(lp36106
S'uInt32'
p36107
ag42
aNtp36108
tp36109
tp36110
sS'DAQmxSetWatchdogAOExpirState'
p36111
((lp36112
S'int32'
p36113
ag34
a((S'taskHandle'
p36114
(lp36115
S'TaskHandle'
p36116
aNtp36117
(S'lines'
p36118
(lp36119
S'char'
p36120
a(lp36121
I-1
aaNtp36122
(S'data'
p36123
(lp36124
S'float64'
p36125
aNtp36126
tp36127
tp36128
sS'DAQmxGetAIBridgeTableElectricalVals'
p36129
((lp36130
S'int32'
p36131
ag34
a((S'taskHandle'
p36132
(lp36133
S'TaskHandle'
p36134
aNtp36135
(S'channel'
p36136
(lp36137
S'char'
p36138
a(lp36139
I-1
aaNtp36140
(S'data'
p36141
(lp36142
S'float64'
p36143
ag42
aNtp36144
(S'arraySizeInElements'
p36145
(lp36146
S'uInt32'
p36147
aNtp36148
tp36149
tp36150
sS'DAQmxCfgPipelinedSampClkTiming'
p36151
((lp36152
S'int32'
p36153
ag34
a((S'taskHandle'
p36154
(lp36155
S'TaskHandle'
p36156
aNtp36157
(S'source'
p36158
(lp36159
S'char'
p36160
a(lp36161
I-1
aaNtp36162
(S'rate'
p36163
(lp36164
S'float64'
p36165
aNtp36166
(S'activeEdge'
p36167
(lp36168
S'int32'
p36169
aNtp36170
(S'sampleMode'
p36171
(lp36172
S'int32'
p36173
aNtp36174
(S'sampsPerChan'
p36175
(lp36176
S'uInt64'
p36177
aNtp36178
tp36179
tp36180
sS'DAQmxSetAnlgWinStartTrigTop'
p36181
((lp36182
S'int32'
p36183
ag34
a((S'taskHandle'
p36184
(lp36185
S'TaskHandle'
p36186
aNtp36187
(S'data'
p36188
(lp36189
S'float64'
p36190
aNtp36191
tp36192
tp36193
sS'DAQmxSetSampClkDigSyncEnable'
p36194
((lp36195
S'int32'
p36196
ag34
a((S'taskHandle'
p36197
(lp36198
S'TaskHandle'
p36199
aNtp36200
(S'data'
p36201
(lp36202
S'bool32'
p36203
aNtp36204
tp36205
tp36206
sS'DAQmxResetDigEdgeStartTrigEdge'
p36207
((lp36208
S'int32'
p36209
ag34
a((S'taskHandle'
p36210
(lp36211
S'TaskHandle'
p36212
aNtp36213
tp36214
tp36215
sS'DAQmxResetExportedHshkEventInterlockedDeassertDelay'
p36216
((lp36217
S'int32'
p36218
ag34
a((S'taskHandle'
p36219
(lp36220
S'TaskHandle'
p36221
aNtp36222
tp36223
tp36224
sS'DAQmxSetScaleMapPreScaledMin'
p36225
((lp36226
S'int32'
p36227
ag34
a((S'scaleName'
p36228
(lp36229
S'char'
p36230
a(lp36231
I-1
aaNtp36232
(S'data'
p36233
(lp36234
S'float64'
p36235
aNtp36236
tp36237
tp36238
sS'DAQmxResetCIPulseFreqDigSyncEnable'
p36239
((lp36240
S'int32'
p36241
ag34
a((S'taskHandle'
p36242
(lp36243
S'TaskHandle'
p36244
aNtp36245
(S'channel'
p36246
(lp36247
S'char'
p36248
a(lp36249
I-1
aaNtp36250
tp36251
tp36252
sS'DAQmxSetCICountEdgesCountResetActiveEdge'
p36253
((lp36254
S'int32'
p36255
ag34
a((S'taskHandle'
p36256
(lp36257
S'TaskHandle'
p36258
aNtp36259
(S'channel'
p36260
(lp36261
S'char'
p36262
a(lp36263
I-1
aaNtp36264
(S'data'
p36265
(lp36266
S'int32'
p36267
aNtp36268
tp36269
tp36270
sS'DAQmxSetDIDigFltrMinPulseWidth'
p36271
((lp36272
S'int32'
p36273
ag34
a((S'taskHandle'
p36274
(lp36275
S'TaskHandle'
p36276
aNtp36277
(S'channel'
p36278
(lp36279
S'char'
p36280
a(lp36281
I-1
aaNtp36282
(S'data'
p36283
(lp36284
S'float64'
p36285
aNtp36286
tp36287
tp36288
sS'DAQmxSetCIEncoderBInputDigFltrTimebaseRate'
p36289
((lp36290
S'int32'
p36291
ag34
a((S'taskHandle'
p36292
(lp36293
S'TaskHandle'
p36294
aNtp36295
(S'channel'
p36296
(lp36297
S'char'
p36298
a(lp36299
I-1
aaNtp36300
(S'data'
p36301
(lp36302
S'float64'
p36303
aNtp36304
tp36305
tp36306
sS'DAQmxResetAIExcitUseMultiplexed'
p36307
((lp36308
S'int32'
p36309
ag34
a((S'taskHandle'
p36310
(lp36311
S'TaskHandle'
p36312
aNtp36313
(S'channel'
p36314
(lp36315
S'char'
p36316
a(lp36317
I-1
aaNtp36318
tp36319
tp36320
sS'DAQmxGetCISemiPeriodTerm'
p36321
((lp36322
S'int32'
p36323
ag34
a((S'taskHandle'
p36324
(lp36325
S'TaskHandle'
p36326
aNtp36327
(S'channel'
p36328
(lp36329
S'char'
p36330
a(lp36331
I-1
aaNtp36332
(S'data'
p36333
(lp36334
S'char'
p36335
ag42
aNtp36336
(S'bufferSize'
p36337
(lp36338
S'uInt32'
p36339
aNtp36340
tp36341
tp36342
sS'DAQmxGetDevAIGains'
p36343
((lp36344
S'int32'
p36345
ag34
a((S'device'
p36346
(lp36347
S'char'
p36348
a(lp36349
I-1
aaNtp36350
(S'data'
p36351
(lp36352
S'float64'
p36353
ag42
aNtp36354
(S'arraySizeInElements'
p36355
(lp36356
S'uInt32'
p36357
aNtp36358
tp36359
tp36360
sS'DAQmxSetAOCurrentUnits'
p36361
((lp36362
S'int32'
p36363
ag34
a((S'taskHandle'
p36364
(lp36365
S'TaskHandle'
p36366
aNtp36367
(S'channel'
p36368
(lp36369
S'char'
p36370
a(lp36371
I-1
aaNtp36372
(S'data'
p36373
(lp36374
S'int32'
p36375
aNtp36376
tp36377
tp36378
sS'DAQmxSetCITimestampUnits'
p36379
((lp36380
S'int32'
p36381
ag34
a((S'taskHandle'
p36382
(lp36383
S'TaskHandle'
p36384
aNtp36385
(S'channel'
p36386
(lp36387
S'char'
p36388
a(lp36389
I-1
aaNtp36390
(S'data'
p36391
(lp36392
S'int32'
p36393
aNtp36394
tp36395
tp36396
sS'DAQmxSetSampClkTimebaseDiv'
p36397
((lp36398
S'int32'
p36399
ag34
a((S'taskHandle'
p36400
(lp36401
S'TaskHandle'
p36402
aNtp36403
(S'data'
p36404
(lp36405
S'uInt32'
p36406
aNtp36407
tp36408
tp36409
sS'DAQmxClearTask'
p36410
((lp36411
S'int32'
p36412
ag34
a((S'taskHandle'
p36413
(lp36414
S'TaskHandle'
p36415
aNtp36416
tp36417
tp36418
sS'DAQmxResetDelayFromSampClkDelayUnitsEx'
p36419
((lp36420
S'int32'
p36421
ag34
a((S'taskHandle'
p36422
(lp36423
S'TaskHandle'
p36424
aNtp36425
(S'deviceNames'
p36426
(lp36427
S'char'
p36428
a(lp36429
I-1
aaNtp36430
tp36431
tp36432
sS'DAQmxGetDevDOTrigUsage'
p36433
((lp36434
S'int32'
p36435
ag34
a((S'device'
p36436
(lp36437
S'char'
p36438
a(lp36439
I-1
aaNtp36440
(S'data'
p36441
(lp36442
S'int32'
p36443
ag42
aNtp36444
tp36445
tp36446
sS'DAQmxResetExportedCtrOutEventPulsePolarity'
p36447
((lp36448
S'int32'
p36449
ag34
a((S'taskHandle'
p36450
(lp36451
S'TaskHandle'
p36452
aNtp36453
tp36454
tp36455
sS'DAQmxGetPhysicalChanName'
p36456
((lp36457
S'int32'
p36458
ag34
a((S'taskHandle'
p36459
(lp36460
S'TaskHandle'
p36461
aNtp36462
(S'channel'
p36463
(lp36464
S'char'
p36465
a(lp36466
I-1
aaNtp36467
(S'data'
p36468
(lp36469
S'char'
p36470
ag42
aNtp36471
(S'bufferSize'
p36472
(lp36473
S'uInt32'
p36474
aNtp36475
tp36476
tp36477
sS'DAQmxResetAIEddyCurrentProxProbeSensitivity'
p36478
((lp36479
S'int32'
p36480
ag34
a((S'taskHandle'
p36481
(lp36482
S'TaskHandle'
p36483
aNtp36484
(S'channel'
p36485
(lp36486
S'char'
p36487
a(lp36488
I-1
aaNtp36489
tp36490
tp36491
sS'DAQmxGetAIConvDigFltrMinPulseWidth'
p36492
((lp36493
S'int32'
p36494
ag34
a((S'taskHandle'
p36495
(lp36496
S'TaskHandle'
p36497
aNtp36498
(S'data'
p36499
(lp36500
S'float64'
p36501
ag42
aNtp36502
tp36503
tp36504
sS'DAQmxResetAIThrmcplCJCVal'
p36505
((lp36506
S'int32'
p36507
ag34
a((S'taskHandle'
p36508
(lp36509
S'TaskHandle'
p36510
aNtp36511
(S'channel'
p36512
(lp36513
S'char'
p36514
a(lp36515
I-1
aaNtp36516
tp36517
tp36518
sS'DAQmxWriteCtrTimeScalar'
p36519
((lp36520
S'int32'
p36521
ag34
a((S'taskHandle'
p36522
(lp36523
S'TaskHandle'
p36524
aNtp36525
(S'autoStart'
p36526
(lp36527
S'bool32'
p36528
aNtp36529
(S'timeout'
p36530
(lp36531
S'float64'
p36532
aNtp36533
(S'highTime'
p36534
(lp36535
S'float64'
p36536
aNtp36537
(S'lowTime'
p36538
(lp36539
S'float64'
p36540
aNtp36541
(S'reserved'
p36542
(lp36543
S'bool32'
p36544
ag42
aNtp36545
tp36546
tp36547
sS'DAQmxResetCIEncoderAInputDigFltrMinPulseWidth'
p36548
((lp36549
S'int32'
p36550
ag34
a((S'taskHandle'
p36551
(lp36552
S'TaskHandle'
p36553
aNtp36554
(S'channel'
p36555
(lp36556
S'char'
p36557
a(lp36558
I-1
aaNtp36559
tp36560
tp36561
sS'DAQmxSetCICountEdgesCountResetResetCount'
p36562
((lp36563
S'int32'
p36564
ag34
a((S'taskHandle'
p36565
(lp36566
S'TaskHandle'
p36567
aNtp36568
(S'channel'
p36569
(lp36570
S'char'
p36571
a(lp36572
I-1
aaNtp36573
(S'data'
p36574
(lp36575
S'uInt32'
p36576
aNtp36577
tp36578
tp36579
sS'DAQmxSetDOTristate'
p36580
((lp36581
S'int32'
p36582
ag34
a((S'taskHandle'
p36583
(lp36584
S'TaskHandle'
p36585
aNtp36586
(S'channel'
p36587
(lp36588
S'char'
p36589
a(lp36590
I-1
aaNtp36591
(S'data'
p36592
(lp36593
S'bool32'
p36594
aNtp36595
tp36596
tp36597
sS'DAQmxSetSampQuantSampPerChan'
p36598
((lp36599
S'int32'
p36600
ag34
a((S'taskHandle'
p36601
(lp36602
S'TaskHandle'
p36603
aNtp36604
(S'data'
p36605
(lp36606
S'uInt64'
p36607
aNtp36608
tp36609
tp36610
sS'DAQmxSetAIFilterDelayAdjustment'
p36611
((lp36612
S'int32'
p36613
ag34
a((S'taskHandle'
p36614
(lp36615
S'TaskHandle'
p36616
aNtp36617
(S'channel'
p36618
(lp36619
S'char'
p36620
a(lp36621
I-1
aaNtp36622
(S'data'
p36623
(lp36624
S'float64'
p36625
aNtp36626
tp36627
tp36628
sS'DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p36629
((lp36630
S'int32'
p36631
ag34
a((S'taskHandle'
p36632
(lp36633
S'TaskHandle'
p36634
aNtp36635
(S'channel'
p36636
(lp36637
S'char'
p36638
a(lp36639
I-1
aaNtp36640
(S'data'
p36641
(lp36642
S'float64'
p36643
ag42
aNtp36644
tp36645
tp36646
sS'DAQmxGetCIPulseTimeDigFltrTimebaseRate'
p36647
((lp36648
S'int32'
p36649
ag34
a((S'taskHandle'
p36650
(lp36651
S'TaskHandle'
p36652
aNtp36653
(S'channel'
p36654
(lp36655
S'char'
p36656
a(lp36657
I-1
aaNtp36658
(S'data'
p36659
(lp36660
S'float64'
p36661
ag42
aNtp36662
tp36663
tp36664
sS'DAQmxResetAITermCfg'
p36665
((lp36666
S'int32'
p36667
ag34
a((S'taskHandle'
p36668
(lp36669
S'TaskHandle'
p36670
aNtp36671
(S'channel'
p36672
(lp36673
S'char'
p36674
a(lp36675
I-1
aaNtp36676
tp36677
tp36678
sS'DAQmxGetDigitalLogicFamilyPowerUpState'
p36679
((lp36680
S'int32'
p36681
ag34
a((S'deviceName'
p36682
(lp36683
S'char'
p36684
a(lp36685
I-1
aaNtp36686
(S'logicFamily'
p36687
(lp36688
S'int32'
p36689
ag42
aNtp36690
tp36691
tp36692
sS'DAQmxGetCITwoEdgeSepSecondTermCfg'
p36693
((lp36694
S'int32'
p36695
ag34
a((S'taskHandle'
p36696
(lp36697
S'TaskHandle'
p36698
aNtp36699
(S'channel'
p36700
(lp36701
S'char'
p36702
a(lp36703
I-1
aaNtp36704
(S'data'
p36705
(lp36706
S'int32'
p36707
ag42
aNtp36708
tp36709
tp36710
sS'DAQmxGetReadOpenCurrentLoopChans'
p36711
((lp36712
S'int32'
p36713
ag34
a((S'taskHandle'
p36714
(lp36715
S'TaskHandle'
p36716
aNtp36717
(S'data'
p36718
(lp36719
S'char'
p36720
ag42
aNtp36721
(S'bufferSize'
p36722
(lp36723
S'uInt32'
p36724
aNtp36725
tp36726
tp36727
sS'DAQmxCreateAOCurrentChan'
p36728
((lp36729
S'int32'
p36730
ag34
a((S'taskHandle'
p36731
(lp36732
S'TaskHandle'
p36733
aNtp36734
(S'physicalChannel'
p36735
(lp36736
S'char'
p36737
a(lp36738
I-1
aaNtp36739
(S'nameToAssignToChannel'
p36740
(lp36741
S'char'
p36742
a(lp36743
I-1
aaNtp36744
(S'minVal'
p36745
(lp36746
S'float64'
p36747
aNtp36748
(S'maxVal'
p36749
(lp36750
S'float64'
p36751
aNtp36752
(S'units'
p36753
(lp36754
S'int32'
p36755
aNtp36756
(S'customScaleName'
p36757
(lp36758
S'char'
p36759
a(lp36760
I-1
aaNtp36761
tp36762
tp36763
sS'DAQmxSetAIConvActiveEdge'
p36764
((lp36765
S'int32'
p36766
ag34
a((S'taskHandle'
p36767
(lp36768
S'TaskHandle'
p36769
aNtp36770
(S'data'
p36771
(lp36772
S'int32'
p36773
aNtp36774
tp36775
tp36776
sS'DAQmxGetAIProbeAtten'
p36777
((lp36778
S'int32'
p36779
ag34
a((S'taskHandle'
p36780
(lp36781
S'TaskHandle'
p36782
aNtp36783
(S'channel'
p36784
(lp36785
S'char'
p36786
a(lp36787
I-1
aaNtp36788
(S'data'
p36789
(lp36790
S'float64'
p36791
ag42
aNtp36792
tp36793
tp36794
sS'DAQmxResetExportedSampClkOutputTerm'
p36795
((lp36796
S'int32'
p36797
ag34
a((S'taskHandle'
p36798
(lp36799
S'TaskHandle'
p36800
aNtp36801
tp36802
tp36803
sS'DAQmxSetAnlgWinRefTrigDigSyncEnable'
p36804
((lp36805
S'int32'
p36806
ag34
a((S'taskHandle'
p36807
(lp36808
S'TaskHandle'
p36809
aNtp36810
(S'data'
p36811
(lp36812
S'bool32'
p36813
aNtp36814
tp36815
tp36816
sS'DAQmxWriteCtrFreq'
p36817
((lp36818
S'int32'
p36819
ag34
a((S'taskHandle'
p36820
(lp36821
S'TaskHandle'
p36822
aNtp36823
(S'numSampsPerChan'
p36824
(lp36825
S'int32'
p36826
aNtp36827
(S'autoStart'
p36828
(lp36829
S'bool32'
p36830
aNtp36831
(S'timeout'
p36832
(lp36833
S'float64'
p36834
aNtp36835
(S'dataLayout'
p36836
(lp36837
S'bool32'
p36838
aNtp36839
(S'frequency'
p36840
(lp36841
S'float64'
p36842
a(lp36843
I-1
aaNtp36844
(S'dutyCycle'
p36845
(lp36846
S'float64'
p36847
a(lp36848
I-1
aaNtp36849
(S'numSampsPerChanWritten'
p36850
(lp36851
S'int32'
p36852
ag42
aNtp36853
(S'reserved'
p36854
(lp36855
S'bool32'
p36856
ag42
aNtp36857
tp36858
tp36859
sS'DAQmxGetAILossyLSBRemovalCompressedSampSize'
p36860
((lp36861
S'int32'
p36862
ag34
a((S'taskHandle'
p36863
(lp36864
S'TaskHandle'
p36865
aNtp36866
(S'channel'
p36867
(lp36868
S'char'
p36869
a(lp36870
I-1
aaNtp36871
(S'data'
p36872
(lp36873
S'uInt32'
p36874
ag42
aNtp36875
tp36876
tp36877
sS'DAQmxSetCIPulseTicksDigSyncEnable'
p36878
((lp36879
S'int32'
p36880
ag34
a((S'taskHandle'
p36881
(lp36882
S'TaskHandle'
p36883
aNtp36884
(S'channel'
p36885
(lp36886
S'char'
p36887
a(lp36888
I-1
aaNtp36889
(S'data'
p36890
(lp36891
S'bool32'
p36892
aNtp36893
tp36894
tp36895
sS'DAQmxCreateCISemiPeriodChan'
p36896
((lp36897
S'int32'
p36898
ag34
a((S'taskHandle'
p36899
(lp36900
S'TaskHandle'
p36901
aNtp36902
(S'counter'
p36903
(lp36904
S'char'
p36905
a(lp36906
I-1
aaNtp36907
(S'nameToAssignToChannel'
p36908
(lp36909
S'char'
p36910
a(lp36911
I-1
aaNtp36912
(S'minVal'
p36913
(lp36914
S'float64'
p36915
aNtp36916
(S'maxVal'
p36917
(lp36918
S'float64'
p36919
aNtp36920
(S'units'
p36921
(lp36922
S'int32'
p36923
aNtp36924
(S'customScaleName'
p36925
(lp36926
S'char'
p36927
a(lp36928
I-1
aaNtp36929
tp36930
tp36931
sS'DAQmxGetAIFreqThreshVoltage'
p36932
((lp36933
S'int32'
p36934
ag34
a((S'taskHandle'
p36935
(lp36936
S'TaskHandle'
p36937
aNtp36938
(S'channel'
p36939
(lp36940
S'char'
p36941
a(lp36942
I-1
aaNtp36943
(S'data'
p36944
(lp36945
S'float64'
p36946
ag42
aNtp36947
tp36948
tp36949
sS'DAQmxGetSwitchDevSwitchChanList'
p36950
((lp36951
S'int32'
p36952
ag34
a((S'deviceName'
p36953
(lp36954
S'char'
p36955
a(lp36956
I-1
aaNtp36957
(S'data'
p36958
(lp36959
S'char'
p36960
ag42
aNtp36961
(S'bufferSize'
p36962
(lp36963
S'uInt32'
p36964
aNtp36965
tp36966
tp36967
sS'DAQmxSetAnlgEdgeRefTrigSlope'
p36968
((lp36969
S'int32'
p36970
ag34
a((S'taskHandle'
p36971
(lp36972
S'TaskHandle'
p36973
aNtp36974
(S'data'
p36975
(lp36976
S'int32'
p36977
aNtp36978
tp36979
tp36980
sS'DAQmxSetCIEncoderDecodingType'
p36981
((lp36982
S'int32'
p36983
ag34
a((S'taskHandle'
p36984
(lp36985
S'TaskHandle'
p36986
aNtp36987
(S'channel'
p36988
(lp36989
S'char'
p36990
a(lp36991
I-1
aaNtp36992
(S'data'
p36993
(lp36994
S'int32'
p36995
aNtp36996
tp36997
tp36998
sS'DAQmxResetWriteOffset'
p36999
((lp37000
S'int32'
p37001
ag34
a((S'taskHandle'
p37002
(lp37003
S'TaskHandle'
p37004
aNtp37005
tp37006
tp37007
sS'DAQmxSetCICountEdgesTermCfg'
p37008
((lp37009
S'int32'
p37010
ag34
a((S'taskHandle'
p37011
(lp37012
S'TaskHandle'
p37013
aNtp37014
(S'channel'
p37015
(lp37016
S'char'
p37017
a(lp37018
I-1
aaNtp37019
(S'data'
p37020
(lp37021
S'int32'
p37022
aNtp37023
tp37024
tp37025
sS'DAQmxResetSyncPulseSrc'
p37026
((lp37027
S'int32'
p37028
ag34
a((S'taskHandle'
p37029
(lp37030
S'TaskHandle'
p37031
aNtp37032
tp37033
tp37034
sS'DAQmxGetSysScales'
p37035
((lp37036
S'int32'
p37037
ag34
a((S'data'
p37038
(lp37039
S'char'
p37040
ag42
aNtp37041
(S'bufferSize'
p37042
(lp37043
S'uInt32'
p37044
aNtp37045
tp37046
tp37047
sS'DAQmxSetAIDigFltrNotchWidth'
p37048
((lp37049
S'int32'
p37050
ag34
a((S'taskHandle'
p37051
(lp37052
S'TaskHandle'
p37053
aNtp37054
(S'channel'
p37055
(lp37056
S'char'
p37057
a(lp37058
I-1
aaNtp37059
(S'data'
p37060
(lp37061
S'float64'
p37062
aNtp37063
tp37064
tp37065
sS'DAQmxGetAIConvTimebaseSrcEx'
p37066
((lp37067
S'int32'
p37068
ag34
a((S'taskHandle'
p37069
(lp37070
S'TaskHandle'
p37071
aNtp37072
(S'deviceNames'
p37073
(lp37074
S'char'
p37075
a(lp37076
I-1
aaNtp37077
(S'data'
p37078
(lp37079
S'int32'
p37080
ag42
aNtp37081
tp37082
tp37083
sS'DAQmxSetup1503Cal'
p37084
((lp37085
S'int32'
p37086
ag34
a((S'calHandle'
p37087
(lp37088
S'CalHandle'
p37089
aNtp37090
(S'channelName'
p37091
(lp37092
S'char'
p37093
a(lp37094
I-1
aaNtp37095
(S'gain'
p37096
(lp37097
S'float64'
p37098
aNtp37099
tp37100
tp37101
sS'DAQmxReadAnalogScalarF64'
p37102
((lp37103
S'int32'
p37104
ag34
a((S'taskHandle'
p37105
(lp37106
S'TaskHandle'
p37107
aNtp37108
(S'timeout'
p37109
(lp37110
S'float64'
p37111
aNtp37112
(S'value'
p37113
(lp37114
S'float64'
p37115
ag42
aNtp37116
(S'reserved'
p37117
(lp37118
S'bool32'
p37119
ag42
aNtp37120
tp37121
tp37122
sS'DAQmxGetCIEncoderZInputDigFltrEnable'
p37123
((lp37124
S'int32'
p37125
ag34
a((S'taskHandle'
p37126
(lp37127
S'TaskHandle'
p37128
aNtp37129
(S'channel'
p37130
(lp37131
S'char'
p37132
a(lp37133
I-1
aaNtp37134
(S'data'
p37135
(lp37136
S'bool32'
p37137
ag42
aNtp37138
tp37139
tp37140
sS'DAQmxResetAICoupling'
p37141
((lp37142
S'int32'
p37143
ag34
a((S'taskHandle'
p37144
(lp37145
S'TaskHandle'
p37146
aNtp37147
(S'channel'
p37148
(lp37149
S'char'
p37150
a(lp37151
I-1
aaNtp37152
tp37153
tp37154
sS'DAQmxResetCIEncoderBInputDigFltrMinPulseWidth'
p37155
((lp37156
S'int32'
p37157
ag34
a((S'taskHandle'
p37158
(lp37159
S'TaskHandle'
p37160
aNtp37161
(S'channel'
p37162
(lp37163
S'char'
p37164
a(lp37165
I-1
aaNtp37166
tp37167
tp37168
sS'DAQmxGetDevDigTrigSupported'
p37169
((lp37170
S'int32'
p37171
ag34
a((S'device'
p37172
(lp37173
S'char'
p37174
a(lp37175
I-1
aaNtp37176
(S'data'
p37177
(lp37178
S'bool32'
p37179
ag42
aNtp37180
tp37181
tp37182
sS'DAQmxSetAODataXferMech'
p37183
((lp37184
S'int32'
p37185
ag34
a((S'taskHandle'
p37186
(lp37187
S'TaskHandle'
p37188
aNtp37189
(S'channel'
p37190
(lp37191
S'char'
p37192
a(lp37193
I-1
aaNtp37194
(S'data'
p37195
(lp37196
S'int32'
p37197
aNtp37198
tp37199
tp37200
sS'DAQmxGetScalePolyForwardCoeff'
p37201
((lp37202
S'int32'
p37203
ag34
a((S'scaleName'
p37204
(lp37205
S'char'
p37206
a(lp37207
I-1
aaNtp37208
(S'data'
p37209
(lp37210
S'float64'
p37211
ag42
aNtp37212
(S'arraySizeInElements'
p37213
(lp37214
S'uInt32'
p37215
aNtp37216
tp37217
tp37218
sS'DAQmxResetAIChanCalTableScaledVals'
p37219
((lp37220
S'int32'
p37221
ag34
a((S'taskHandle'
p37222
(lp37223
S'TaskHandle'
p37224
aNtp37225
(S'channel'
p37226
(lp37227
S'char'
p37228
a(lp37229
I-1
aaNtp37230
tp37231
tp37232
sS'DAQmxSetBufInputBufSize'
p37233
((lp37234
S'int32'
p37235
ag34
a((S'taskHandle'
p37236
(lp37237
S'TaskHandle'
p37238
aNtp37239
(S'data'
p37240
(lp37241
S'uInt32'
p37242
aNtp37243
tp37244
tp37245
sS'DAQmxGetReadChannelsToRead'
p37246
((lp37247
S'int32'
p37248
ag34
a((S'taskHandle'
p37249
(lp37250
S'TaskHandle'
p37251
aNtp37252
(S'data'
p37253
(lp37254
S'char'
p37255
ag42
aNtp37256
(S'bufferSize'
p37257
(lp37258
S'uInt32'
p37259
aNtp37260
tp37261
tp37262
sS'DAQmxSetCIEncoderAInputLogicLvlBehavior'
p37263
((lp37264
S'int32'
p37265
ag34
a((S'taskHandle'
p37266
(lp37267
S'TaskHandle'
p37268
aNtp37269
(S'channel'
p37270
(lp37271
S'char'
p37272
a(lp37273
I-1
aaNtp37274
(S'data'
p37275
(lp37276
S'int32'
p37277
aNtp37278
tp37279
tp37280
sS'DAQmxGetCIMin'
p37281
((lp37282
S'int32'
p37283
ag34
a((S'taskHandle'
p37284
(lp37285
S'TaskHandle'
p37286
aNtp37287
(S'channel'
p37288
(lp37289
S'char'
p37290
a(lp37291
I-1
aaNtp37292
(S'data'
p37293
(lp37294
S'float64'
p37295
ag42
aNtp37296
tp37297
tp37298
sS'DAQmxGetErrorString'
p37299
((lp37300
S'int32'
p37301
ag34
a((S'errorCode'
p37302
(lp37303
S'int32'
p37304
aNtp37305
(S'errorString'
p37306
(lp37307
S'char'
p37308
a(lp37309
I-1
aaNtp37310
(S'bufferSize'
p37311
(lp37312
S'uInt32'
p37313
aNtp37314
tp37315
tp37316
sS'DAQmxResetAnlgWinPauseTrigSrc'
p37317
((lp37318
S'int32'
p37319
ag34
a((S'taskHandle'
p37320
(lp37321
S'TaskHandle'
p37322
aNtp37323
tp37324
tp37325
sS'DAQmxCreateAIBridgeChan'
p37326
((lp37327
S'int32'
p37328
ag34
a((S'taskHandle'
p37329
(lp37330
S'TaskHandle'
p37331
aNtp37332
(S'physicalChannel'
p37333
(lp37334
S'char'
p37335
a(lp37336
I-1
aaNtp37337
(S'nameToAssignToChannel'
p37338
(lp37339
S'char'
p37340
a(lp37341
I-1
aaNtp37342
(S'minVal'
p37343
(lp37344
S'float64'
p37345
aNtp37346
(S'maxVal'
p37347
(lp37348
S'float64'
p37349
aNtp37350
(S'units'
p37351
(lp37352
S'int32'
p37353
aNtp37354
(S'bridgeConfig'
p37355
(lp37356
S'int32'
p37357
aNtp37358
(S'voltageExcitSource'
p37359
(lp37360
S'int32'
p37361
aNtp37362
(S'voltageExcitVal'
p37363
(lp37364
S'float64'
p37365
aNtp37366
(S'nominalBridgeResistance'
p37367
(lp37368
S'float64'
p37369
aNtp37370
(S'customScaleName'
p37371
(lp37372
S'char'
p37373
a(lp37374
I-1
aaNtp37375
tp37376
tp37377
sS'DAQmxResetCITimestampUnits'
p37378
((lp37379
S'int32'
p37380
ag34
a((S'taskHandle'
p37381
(lp37382
S'TaskHandle'
p37383
aNtp37384
(S'channel'
p37385
(lp37386
S'char'
p37387
a(lp37388
I-1
aaNtp37389
tp37390
tp37391
sS'DAQmxSetAIBridgeTwoPointLinSecondElectricalVal'
p37392
((lp37393
S'int32'
p37394
ag34
a((S'taskHandle'
p37395
(lp37396
S'TaskHandle'
p37397
aNtp37398
(S'channel'
p37399
(lp37400
S'char'
p37401
a(lp37402
I-1
aaNtp37403
(S'data'
p37404
(lp37405
S'float64'
p37406
aNtp37407
tp37408
tp37409
sS'DAQmxResetAIExcitVoltageOrCurrent'
p37410
((lp37411
S'int32'
p37412
ag34
a((S'taskHandle'
p37413
(lp37414
S'TaskHandle'
p37415
aNtp37416
(S'channel'
p37417
(lp37418
S'char'
p37419
a(lp37420
I-1
aaNtp37421
tp37422
tp37423
sS'DAQmxGetCIFreqTermCfg'
p37424
((lp37425
S'int32'
p37426
ag34
a((S'taskHandle'
p37427
(lp37428
S'TaskHandle'
p37429
aNtp37430
(S'channel'
p37431
(lp37432
S'char'
p37433
a(lp37434
I-1
aaNtp37435
(S'data'
p37436
(lp37437
S'int32'
p37438
ag42
aNtp37439
tp37440
tp37441
sS'DAQmxResetCICtrTimebaseDigSyncEnable'
p37442
((lp37443
S'int32'
p37444
ag34
a((S'taskHandle'
p37445
(lp37446
S'TaskHandle'
p37447
aNtp37448
(S'channel'
p37449
(lp37450
S'char'
p37451
a(lp37452
I-1
aaNtp37453
tp37454
tp37455
sS'DAQmxGetCODataXferMech'
p37456
((lp37457
S'int32'
p37458
ag34
a((S'taskHandle'
p37459
(lp37460
S'TaskHandle'
p37461
aNtp37462
(S'channel'
p37463
(lp37464
S'char'
p37465
a(lp37466
I-1
aaNtp37467
(S'data'
p37468
(lp37469
S'int32'
p37470
ag42
aNtp37471
tp37472
tp37473
sS'DAQmxResetDelayFromSampClkDelay'
p37474
((lp37475
S'int32'
p37476
ag34
a((S'taskHandle'
p37477
(lp37478
S'TaskHandle'
p37479
aNtp37480
tp37481
tp37482
sS'DAQmxResetAIChanCalPolyForwardCoeff'
p37483
((lp37484
S'int32'
p37485
ag34
a((S'taskHandle'
p37486
(lp37487
S'TaskHandle'
p37488
aNtp37489
(S'channel'
p37490
(lp37491
S'char'
p37492
a(lp37493
I-1
aaNtp37494
tp37495
tp37496
sS'DAQmxResetSyncPulseResetDelay'
p37497
((lp37498
S'int32'
p37499
ag34
a((S'taskHandle'
p37500
(lp37501
S'TaskHandle'
p37502
aNtp37503
tp37504
tp37505
sS'DAQmxGetCIEncoderZInputLogicLvlBehavior'
p37506
((lp37507
S'int32'
p37508
ag34
a((S'taskHandle'
p37509
(lp37510
S'TaskHandle'
p37511
aNtp37512
(S'channel'
p37513
(lp37514
S'char'
p37515
a(lp37516
I-1
aaNtp37517
(S'data'
p37518
(lp37519
S'int32'
p37520
ag42
aNtp37521
tp37522
tp37523
sS'DAQmxResetAIBridgeShuntCalSelect'
p37524
((lp37525
S'int32'
p37526
ag34
a((S'taskHandle'
p37527
(lp37528
S'TaskHandle'
p37529
aNtp37530
(S'channel'
p37531
(lp37532
S'char'
p37533
a(lp37534
I-1
aaNtp37535
tp37536
tp37537
sS'DAQmxGetSwitchDevNumSwitchChans'
p37538
((lp37539
S'int32'
p37540
ag34
a((S'deviceName'
p37541
(lp37542
S'char'
p37543
a(lp37544
I-1
aaNtp37545
(S'data'
p37546
(lp37547
S'uInt32'
p37548
ag42
aNtp37549
tp37550
tp37551
sS'DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth'
p37552
((lp37553
S'int32'
p37554
ag34
a((S'taskHandle'
p37555
(lp37556
S'TaskHandle'
p37557
aNtp37558
(S'data'
p37559
(lp37560
S'float64'
p37561
ag42
aNtp37562
tp37563
tp37564
sS'DAQmxSetAIBridgeShuntCalEnable'
p37565
((lp37566
S'int32'
p37567
ag34
a((S'taskHandle'
p37568
(lp37569
S'TaskHandle'
p37570
aNtp37571
(S'channel'
p37572
(lp37573
S'char'
p37574
a(lp37575
I-1
aaNtp37576
(S'data'
p37577
(lp37578
S'bool32'
p37579
aNtp37580
tp37581
tp37582
sS'DAQmxGetDevAccessorySerialNums'
p37583
((lp37584
S'int32'
p37585
ag34
a((S'device'
p37586
(lp37587
S'char'
p37588
a(lp37589
I-1
aaNtp37590
(S'data'
p37591
(lp37592
S'uInt32'
p37593
ag42
aNtp37594
(S'arraySizeInElements'
p37595
(lp37596
S'uInt32'
p37597
aNtp37598
tp37599
tp37600
sS'DAQmxGetAnlgEdgeRefTrigSrc'
p37601
((lp37602
S'int32'
p37603
ag34
a((S'taskHandle'
p37604
(lp37605
S'TaskHandle'
p37606
aNtp37607
(S'data'
p37608
(lp37609
S'char'
p37610
ag42
aNtp37611
(S'bufferSize'
p37612
(lp37613
S'uInt32'
p37614
aNtp37615
tp37616
tp37617
sS'DAQmxResetAOFuncGenType'
p37618
((lp37619
S'int32'
p37620
ag34
a((S'taskHandle'
p37621
(lp37622
S'TaskHandle'
p37623
aNtp37624
(S'channel'
p37625
(lp37626
S'char'
p37627
a(lp37628
I-1
aaNtp37629
tp37630
tp37631
sS'DAQmxSetAnlgLvlPauseTrigWhen'
p37632
((lp37633
S'int32'
p37634
ag34
a((S'taskHandle'
p37635
(lp37636
S'TaskHandle'
p37637
aNtp37638
(S'data'
p37639
(lp37640
S'int32'
p37641
aNtp37642
tp37643
tp37644
sS'DAQmxGetWriteRawDataWidth'
p37645
((lp37646
S'int32'
p37647
ag34
a((S'taskHandle'
p37648
(lp37649
S'TaskHandle'
p37650
aNtp37651
(S'data'
p37652
(lp37653
S'uInt32'
p37654
ag42
aNtp37655
tp37656
tp37657
sS'DAQmxGet9209CalAdjustPoints'
p37658
((lp37659
S'int32'
p37660
ag34
a((S'calHandle'
p37661
(lp37662
S'CalHandle'
p37663
aNtp37664
(S'adjustmentPoints'
p37665
(lp37666
S'float64'
p37667
ag42
aNtp37668
(S'bufferSize'
p37669
(lp37670
S'uInt32'
p37671
aNtp37672
tp37673
tp37674
sS'DAQmxGetWriteOpenCurrentLoopChans'
p37675
((lp37676
S'int32'
p37677
ag34
a((S'taskHandle'
p37678
(lp37679
S'TaskHandle'
p37680
aNtp37681
(S'data'
p37682
(lp37683
S'char'
p37684
ag42
aNtp37685
(S'bufferSize'
p37686
(lp37687
S'uInt32'
p37688
aNtp37689
tp37690
tp37691
sS'DAQmxResetAdvTrigType'
p37692
((lp37693
S'int32'
p37694
ag34
a((S'taskHandle'
p37695
(lp37696
S'TaskHandle'
p37697
aNtp37698
tp37699
tp37700
sS'DAQmxReadBinaryU16'
p37701
((lp37702
S'int32'
p37703
ag34
a((S'taskHandle'
p37704
(lp37705
S'TaskHandle'
p37706
aNtp37707
(S'numSampsPerChan'
p37708
(lp37709
S'int32'
p37710
aNtp37711
(S'timeout'
p37712
(lp37713
S'float64'
p37714
aNtp37715
(S'fillMode'
p37716
(lp37717
S'bool32'
p37718
aNtp37719
(S'readArray'
p37720
(lp37721
S'uInt16'
p37722
a(lp37723
I-1
aaNtp37724
(S'arraySizeInSamps'
p37725
(lp37726
S'uInt32'
p37727
aNtp37728
(S'sampsPerChanRead'
p37729
(lp37730
S'int32'
p37731
ag42
aNtp37732
(S'reserved'
p37733
(lp37734
S'bool32'
p37735
ag42
aNtp37736
tp37737
tp37738
sS'DAQmxGetReadOvercurrentChansExist'
p37739
((lp37740
S'int32'
p37741
ag34
a((S'taskHandle'
p37742
(lp37743
S'TaskHandle'
p37744
aNtp37745
(S'data'
p37746
(lp37747
S'bool32'
p37748
ag42
aNtp37749
tp37750
tp37751
sS'DAQmxGetDevCITrigUsage'
p37752
((lp37753
S'int32'
p37754
ag34
a((S'device'
p37755
(lp37756
S'char'
p37757
a(lp37758
I-1
aaNtp37759
(S'data'
p37760
(lp37761
S'int32'
p37762
ag42
aNtp37763
tp37764
tp37765
sS'DAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth'
p37766
((lp37767
S'int32'
p37768
ag34
a((S'taskHandle'
p37769
(lp37770
S'TaskHandle'
p37771
aNtp37772
(S'data'
p37773
(lp37774
S'float64'
p37775
ag42
aNtp37776
tp37777
tp37778
sS'DAQmxAdjust153xCal'
p37779
((lp37780
S'int32'
p37781
ag34
a((S'calHandle'
p37782
(lp37783
S'CalHandle'
p37784
aNtp37785
(S'refVoltage'
p37786
(lp37787
S'float64'
p37788
aNtp37789
(S'measOutput'
p37790
(lp37791
S'float64'
p37792
aNtp37793
tp37794
tp37795
sS'DAQmxResetExportedCtrOutEventOutputTerm'
p37796
((lp37797
S'int32'
p37798
ag34
a((S'taskHandle'
p37799
(lp37800
S'TaskHandle'
p37801
aNtp37802
tp37803
tp37804
sS'DAQmxGetCOPulseFreq'
p37805
((lp37806
S'int32'
p37807
ag34
a((S'taskHandle'
p37808
(lp37809
S'TaskHandle'
p37810
aNtp37811
(S'channel'
p37812
(lp37813
S'char'
p37814
a(lp37815
I-1
aaNtp37816
(S'data'
p37817
(lp37818
S'float64'
p37819
ag42
aNtp37820
tp37821
tp37822
sS'DAQmxSetLoggingFilePath'
p37823
((lp37824
S'int32'
p37825
ag34
a((S'taskHandle'
p37826
(lp37827
S'TaskHandle'
p37828
aNtp37829
(S'data'
p37830
(lp37831
S'char'
p37832
ag42
aNtp37833
tp37834
tp37835
sS'DAQmxSetAIBridgeScaleType'
p37836
((lp37837
S'int32'
p37838
ag34
a((S'taskHandle'
p37839
(lp37840
S'TaskHandle'
p37841
aNtp37842
(S'channel'
p37843
(lp37844
S'char'
p37845
a(lp37846
I-1
aaNtp37847
(S'data'
p37848
(lp37849
S'int32'
p37850
aNtp37851
tp37852
tp37853
sS'DAQmxSetCICountEdgesInitialCnt'
p37854
((lp37855
S'int32'
p37856
ag34
a((S'taskHandle'
p37857
(lp37858
S'TaskHandle'
p37859
aNtp37860
(S'channel'
p37861
(lp37862
S'char'
p37863
a(lp37864
I-1
aaNtp37865
(S'data'
p37866
(lp37867
S'uInt32'
p37868
aNtp37869
tp37870
tp37871
sS'DAQmxInitExtCal'
p37872
((lp37873
S'int32'
p37874
ag34
a((S'deviceName'
p37875
(lp37876
S'char'
p37877
a(lp37878
I-1
aaNtp37879
(S'password'
p37880
(lp37881
S'char'
p37882
a(lp37883
I-1
aaNtp37884
(S'calHandle'
p37885
(lp37886
S'CalHandle'
p37887
ag42
aNtp37888
tp37889
tp37890
sS'DAQmxGetSyncPulseMinDelayToStart'
p37891
((lp37892
S'int32'
p37893
ag34
a((S'taskHandle'
p37894
(lp37895
S'TaskHandle'
p37896
aNtp37897
(S'data'
p37898
(lp37899
S'float64'
p37900
ag42
aNtp37901
tp37902
tp37903
sS'DAQmxSetAnlgWinStartTrigDigFltrTimebaseRate'
p37904
((lp37905
S'int32'
p37906
ag34
a((S'taskHandle'
p37907
(lp37908
S'TaskHandle'
p37909
aNtp37910
(S'data'
p37911
(lp37912
S'float64'
p37913
aNtp37914
tp37915
tp37916
sS'DAQmxSetExportedAdvCmpltEventDelay'
p37917
((lp37918
S'int32'
p37919
ag34
a((S'taskHandle'
p37920
(lp37921
S'TaskHandle'
p37922
aNtp37923
(S'data'
p37924
(lp37925
S'float64'
p37926
aNtp37927
tp37928
tp37929
sS'DAQmxGetCIPulseFreqDigFltrEnable'
p37930
((lp37931
S'int32'
p37932
ag34
a((S'taskHandle'
p37933
(lp37934
S'TaskHandle'
p37935
aNtp37936
(S'channel'
p37937
(lp37938
S'char'
p37939
a(lp37940
I-1
aaNtp37941
(S'data'
p37942
(lp37943
S'bool32'
p37944
ag42
aNtp37945
tp37946
tp37947
sS'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate'
p37948
((lp37949
S'int32'
p37950
ag34
a((S'taskHandle'
p37951
(lp37952
S'TaskHandle'
p37953
aNtp37954
(S'channel'
p37955
(lp37956
S'char'
p37957
a(lp37958
I-1
aaNtp37959
(S'data'
p37960
(lp37961
S'float64'
p37962
ag42
aNtp37963
tp37964
tp37965
sS'DAQmxGetAOPowerAmpChannelEnable'
p37966
((lp37967
S'int32'
p37968
ag34
a((S'physicalChannel'
p37969
(lp37970
S'char'
p37971
a(lp37972
I-1
aaNtp37973
(S'data'
p37974
(lp37975
S'bool32'
p37976
ag42
aNtp37977
tp37978
tp37979
sS'DAQmxConfigureTEDS'
p37980
((lp37981
S'int32'
p37982
ag34
a((S'physicalChannel'
p37983
(lp37984
S'char'
p37985
a(lp37986
I-1
aaNtp37987
(S'filePath'
p37988
(lp37989
S'char'
p37990
a(lp37991
I-1
aaNtp37992
tp37993
tp37994
sS'DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc'
p37995
((lp37996
S'int32'
p37997
ag34
a((S'taskHandle'
p37998
(lp37999
S'TaskHandle'
p38000
aNtp38001
(S'data'
p38002
(lp38003
S'char'
p38004
ag42
aNtp38005
(S'bufferSize'
p38006
(lp38007
S'uInt32'
p38008
aNtp38009
tp38010
tp38011
sS'DAQmxResetSampTimingEngine'
p38012
((lp38013
S'int32'
p38014
ag34
a((S'taskHandle'
p38015
(lp38016
S'TaskHandle'
p38017
aNtp38018
tp38019
tp38020
sS'DAQmxGet9225CalAdjustPoints'
p38021
((lp38022
S'int32'
p38023
ag34
a((S'calHandle'
p38024
(lp38025
S'CalHandle'
p38026
aNtp38027
(S'adjustmentPoints'
p38028
(lp38029
S'float64'
p38030
ag42
aNtp38031
(S'bufferSize'
p38032
(lp38033
S'uInt32'
p38034
aNtp38035
tp38036
tp38037
sS'DAQmxGetAIDigFltrLowpassCutoffFreq'
p38038
((lp38039
S'int32'
p38040
ag34
a((S'taskHandle'
p38041
(lp38042
S'TaskHandle'
p38043
aNtp38044
(S'channel'
p38045
(lp38046
S'char'
p38047
a(lp38048
I-1
aaNtp38049
(S'data'
p38050
(lp38051
S'float64'
p38052
ag42
aNtp38053
tp38054
tp38055
sS'DAQmxSetSampClkTimebaseActiveEdge'
p38056
((lp38057
S'int32'
p38058
ag34
a((S'taskHandle'
p38059
(lp38060
S'TaskHandle'
p38061
aNtp38062
(S'data'
p38063
(lp38064
S'int32'
p38065
aNtp38066
tp38067
tp38068
sS'DAQmxSetAOUsbXferReqCount'
p38069
((lp38070
S'int32'
p38071
ag34
a((S'taskHandle'
p38072
(lp38073
S'TaskHandle'
p38074
aNtp38075
(S'channel'
p38076
(lp38077
S'char'
p38078
a(lp38079
I-1
aaNtp38080
(S'data'
p38081
(lp38082
S'uInt32'
p38083
aNtp38084
tp38085
tp38086
sS'DAQmxResetDigEdgeRefTrigEdge'
p38087
((lp38088
S'int32'
p38089
ag34
a((S'taskHandle'
p38090
(lp38091
S'TaskHandle'
p38092
aNtp38093
tp38094
tp38095
sS'DAQmxResetAnlgWinRefTrigCoupling'
p38096
((lp38097
S'int32'
p38098
ag34
a((S'taskHandle'
p38099
(lp38100
S'TaskHandle'
p38101
aNtp38102
tp38103
tp38104
sS'DAQmxRegisterDoneEvent'
p38105
((lp38106
S'int32'
p38107
ag34
a((S'task'
p38108
(lp38109
S'TaskHandle'
p38110
aNtp38111
(S'options'
p38112
(lp38113
S'uInt32'
p38114
aNtp38115
(S'callbackFunction'
p38116
(lp38117
S'DAQmxDoneEventCallbackPtr'
p38118
aNtp38119
(S'callbackData'
p38120
(lp38121
S'void'
p38122
ag42
aNtp38123
tp38124
tp38125
sS'DAQmxGetExportedHshkEventPulsePolarity'
p38126
((lp38127
S'int32'
p38128
ag34
a((S'taskHandle'
p38129
(lp38130
S'TaskHandle'
p38131
aNtp38132
(S'data'
p38133
(lp38134
S'int32'
p38135
ag42
aNtp38136
tp38137
tp38138
sS'DAQmxGetSwitchScanWaitingForAdv'
p38139
((lp38140
S'int32'
p38141
ag34
a((S'taskHandle'
p38142
(lp38143
S'TaskHandle'
p38144
aNtp38145
(S'data'
p38146
(lp38147
S'bool32'
p38148
ag42
aNtp38149
tp38150
tp38151
sS'DAQmxCreateTEDSAIStrainGageChan'
p38152
((lp38153
S'int32'
p38154
ag34
a((S'taskHandle'
p38155
(lp38156
S'TaskHandle'
p38157
aNtp38158
(S'physicalChannel'
p38159
(lp38160
S'char'
p38161
a(lp38162
I-1
aaNtp38163
(S'nameToAssignToChannel'
p38164
(lp38165
S'char'
p38166
a(lp38167
I-1
aaNtp38168
(S'minVal'
p38169
(lp38170
S'float64'
p38171
aNtp38172
(S'maxVal'
p38173
(lp38174
S'float64'
p38175
aNtp38176
(S'units'
p38177
(lp38178
S'int32'
p38179
aNtp38180
(S'voltageExcitSource'
p38181
(lp38182
S'int32'
p38183
aNtp38184
(S'voltageExcitVal'
p38185
(lp38186
S'float64'
p38187
aNtp38188
(S'initialBridgeVoltage'
p38189
(lp38190
S'float64'
p38191
aNtp38192
(S'leadWireResistance'
p38193
(lp38194
S'float64'
p38195
aNtp38196
(S'customScaleName'
p38197
(lp38198
S'char'
p38199
a(lp38200
I-1
aaNtp38201
tp38202
tp38203
sS'DAQmxResetAIRosetteStrainGageRosetteMeasType'
p38204
((lp38205
S'int32'
p38206
ag34
a((S'taskHandle'
p38207
(lp38208
S'TaskHandle'
p38209
aNtp38210
(S'channel'
p38211
(lp38212
S'char'
p38213
a(lp38214
I-1
aaNtp38215
tp38216
tp38217
sS'DAQmxCreateCIPulseChanFreq'
p38218
((lp38219
S'int32'
p38220
ag34
a((S'taskHandle'
p38221
(lp38222
S'TaskHandle'
p38223
aNtp38224
(S'counter'
p38225
(lp38226
S'char'
p38227
a(lp38228
I-1
aaNtp38229
(S'nameToAssignToChannel'
p38230
(lp38231
S'char'
p38232
a(lp38233
I-1
aaNtp38234
(S'minVal'
p38235
(lp38236
S'float64'
p38237
aNtp38238
(S'maxVal'
p38239
(lp38240
S'float64'
p38241
aNtp38242
(S'units'
p38243
(lp38244
S'int32'
p38245
aNtp38246
tp38247
tp38248
sS'DAQmxSetCOCtrTimebaseDigFltrEnable'
p38249
((lp38250
S'int32'
p38251
ag34
a((S'taskHandle'
p38252
(lp38253
S'TaskHandle'
p38254
aNtp38255
(S'channel'
p38256
(lp38257
S'char'
p38258
a(lp38259
I-1
aaNtp38260
(S'data'
p38261
(lp38262
S'bool32'
p38263
aNtp38264
tp38265
tp38266
sS'DAQmxSaveScale'
p38267
((lp38268
S'int32'
p38269
ag34
a((S'scaleName'
p38270
(lp38271
S'char'
p38272
a(lp38273
I-1
aaNtp38274
(S'saveAs'
p38275
(lp38276
S'char'
p38277
a(lp38278
I-1
aaNtp38279
(S'author'
p38280
(lp38281
S'char'
p38282
a(lp38283
I-1
aaNtp38284
(S'options'
p38285
(lp38286
S'uInt32'
p38287
aNtp38288
tp38289
tp38290
sS'DAQmxSetExportedRefTrigOutputTerm'
p38291
((lp38292
S'int32'
p38293
ag34
a((S'taskHandle'
p38294
(lp38295
S'TaskHandle'
p38296
aNtp38297
(S'data'
p38298
(lp38299
S'char'
p38300
ag42
aNtp38301
tp38302
tp38303
sS'DAQmxPerformThrmcplLeadOffsetNullingCal'
p38304
((lp38305
S'int32'
p38306
ag34
a((S'taskHandle'
p38307
(lp38308
S'TaskHandle'
p38309
aNtp38310
(S'channel'
p38311
(lp38312
S'char'
p38313
a(lp38314
I-1
aaNtp38315
(S'skipUnsupportedChannels'
p38316
(lp38317
S'bool32'
p38318
aNtp38319
tp38320
tp38321
sS'DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior'
p38322
((lp38323
S'int32'
p38324
ag34
a((S'taskHandle'
p38325
(lp38326
S'TaskHandle'
p38327
aNtp38328
(S'channel'
p38329
(lp38330
S'char'
p38331
a(lp38332
I-1
aaNtp38333
tp38334
tp38335
sS'DAQmxResetAOVoltageUnits'
p38336
((lp38337
S'int32'
p38338
ag34
a((S'taskHandle'
p38339
(lp38340
S'TaskHandle'
p38341
aNtp38342
(S'channel'
p38343
(lp38344
S'char'
p38345
a(lp38346
I-1
aaNtp38347
tp38348
tp38349
sS'DAQmxSetRefTrigType'
p38350
((lp38351
S'int32'
p38352
ag34
a((S'taskHandle'
p38353
(lp38354
S'TaskHandle'
p38355
aNtp38356
(S'data'
p38357
(lp38358
S'int32'
p38359
aNtp38360
tp38361
tp38362
sS'DAQmxResetAODACOffsetVal'
p38363
((lp38364
S'int32'
p38365
ag34
a((S'taskHandle'
p38366
(lp38367
S'TaskHandle'
p38368
aNtp38369
(S'channel'
p38370
(lp38371
S'char'
p38372
a(lp38373
I-1
aaNtp38374
tp38375
tp38376
sS'DAQmxGetSwitchChanMaxACSwitchCurrent'
p38377
((lp38378
S'int32'
p38379
ag34
a((S'switchChannelName'
p38380
(lp38381
S'char'
p38382
a(lp38383
I-1
aaNtp38384
(S'data'
p38385
(lp38386
S'float64'
p38387
ag42
aNtp38388
tp38389
tp38390
sS'DAQmxAdjust9227Cal'
p38391
((lp38392
S'int32'
p38393
ag34
a((S'calHandle'
p38394
(lp38395
S'CalHandle'
p38396
aNtp38397
(S'channelNames'
p38398
(lp38399
S'char'
p38400
a(lp38401
I-1
aaNtp38402
(S'value'
p38403
(lp38404
S'float64'
p38405
aNtp38406
tp38407
tp38408
sS'DAQmxSetAnlgWinPauseTrigWhen'
p38409
((lp38410
S'int32'
p38411
ag34
a((S'taskHandle'
p38412
(lp38413
S'TaskHandle'
p38414
aNtp38415
(S'data'
p38416
(lp38417
S'int32'
p38418
aNtp38419
tp38420
tp38421
sS'DAQmxGetWritePowerSupplyFaultChans'
p38422
((lp38423
S'int32'
p38424
ag34
a((S'taskHandle'
p38425
(lp38426
S'TaskHandle'
p38427
aNtp38428
(S'data'
p38429
(lp38430
S'char'
p38431
ag42
aNtp38432
(S'bufferSize'
p38433
(lp38434
S'uInt32'
p38435
aNtp38436
tp38437
tp38438
sS'DAQmxResetDigLvlPauseTrigWhen'
p38439
((lp38440
S'int32'
p38441
ag34
a((S'taskHandle'
p38442
(lp38443
S'TaskHandle'
p38444
aNtp38445
tp38446
tp38447
sS'DAQmxCreateTEDSAIThrmstrChanIex'
p38448
((lp38449
S'int32'
p38450
ag34
a((S'taskHandle'
p38451
(lp38452
S'TaskHandle'
p38453
aNtp38454
(S'physicalChannel'
p38455
(lp38456
S'char'
p38457
a(lp38458
I-1
aaNtp38459
(S'nameToAssignToChannel'
p38460
(lp38461
S'char'
p38462
a(lp38463
I-1
aaNtp38464
(S'minVal'
p38465
(lp38466
S'float64'
p38467
aNtp38468
(S'maxVal'
p38469
(lp38470
S'float64'
p38471
aNtp38472
(S'units'
p38473
(lp38474
S'int32'
p38475
aNtp38476
(S'resistanceConfig'
p38477
(lp38478
S'int32'
p38479
aNtp38480
(S'currentExcitSource'
p38481
(lp38482
S'int32'
p38483
aNtp38484
(S'currentExcitVal'
p38485
(lp38486
S'float64'
p38487
aNtp38488
tp38489
tp38490
sS'DAQmxGetReadOvertemperatureChansExist'
p38491
((lp38492
S'int32'
p38493
ag34
a((S'taskHandle'
p38494
(lp38495
S'TaskHandle'
p38496
aNtp38497
(S'data'
p38498
(lp38499
S'bool32'
p38500
ag42
aNtp38501
tp38502
tp38503
sS'DAQmxGetAnlgWinPauseTrigDigFltrEnable'
p38504
((lp38505
S'int32'
p38506
ag34
a((S'taskHandle'
p38507
(lp38508
S'TaskHandle'
p38509
aNtp38510
(S'data'
p38511
(lp38512
S'bool32'
p38513
ag42
aNtp38514
tp38515
tp38516
sS'DAQmxGetAIChanCalEnableCal'
p38517
((lp38518
S'int32'
p38519
ag34
a((S'taskHandle'
p38520
(lp38521
S'TaskHandle'
p38522
aNtp38523
(S'channel'
p38524
(lp38525
S'char'
p38526
a(lp38527
I-1
aaNtp38528
(S'data'
p38529
(lp38530
S'bool32'
p38531
ag42
aNtp38532
tp38533
tp38534
sS'DAQmxGetAOEnhancedImageRejectionEnable'
p38535
((lp38536
S'int32'
p38537
ag34
a((S'taskHandle'
p38538
(lp38539
S'TaskHandle'
p38540
aNtp38541
(S'channel'
p38542
(lp38543
S'char'
p38544
a(lp38545
I-1
aaNtp38546
(S'data'
p38547
(lp38548
S'bool32'
p38549
ag42
aNtp38550
tp38551
tp38552
sS'DAQmxResetCIFreqStartingEdge'
p38553
((lp38554
S'int32'
p38555
ag34
a((S'taskHandle'
p38556
(lp38557
S'TaskHandle'
p38558
aNtp38559
(S'channel'
p38560
(lp38561
S'char'
p38562
a(lp38563
I-1
aaNtp38564
tp38565
tp38566
sS'DAQmxGetCOPulseTimeUnits'
p38567
((lp38568
S'int32'
p38569
ag34
a((S'taskHandle'
p38570
(lp38571
S'TaskHandle'
p38572
aNtp38573
(S'channel'
p38574
(lp38575
S'char'
p38576
a(lp38577
I-1
aaNtp38578
(S'data'
p38579
(lp38580
S'int32'
p38581
ag42
aNtp38582
tp38583
tp38584
sS'DAQmxSetAnlgLvlPauseTrigDigSyncEnable'
p38585
((lp38586
S'int32'
p38587
ag34
a((S'taskHandle'
p38588
(lp38589
S'TaskHandle'
p38590
aNtp38591
(S'data'
p38592
(lp38593
S'bool32'
p38594
aNtp38595
tp38596
tp38597
sS'DAQmxSetAnlgLvlPauseTrigDigFltrMinPulseWidth'
p38598
((lp38599
S'int32'
p38600
ag34
a((S'taskHandle'
p38601
(lp38602
S'TaskHandle'
p38603
aNtp38604
(S'data'
p38605
(lp38606
S'float64'
p38607
aNtp38608
tp38609
tp38610
sS'DAQmxSetAIBridgeShuntCalShuntCalASrc'
p38611
((lp38612
S'int32'
p38613
ag34
a((S'taskHandle'
p38614
(lp38615
S'TaskHandle'
p38616
aNtp38617
(S'channel'
p38618
(lp38619
S'char'
p38620
a(lp38621
I-1
aaNtp38622
(S'data'
p38623
(lp38624
S'int32'
p38625
aNtp38626
tp38627
tp38628
sS'DAQmxSetExportedHshkEventInterlockedAssertedLvl'
p38629
((lp38630
S'int32'
p38631
ag34
a((S'taskHandle'
p38632
(lp38633
S'TaskHandle'
p38634
aNtp38635
(S'data'
p38636
(lp38637
S'int32'
p38638
aNtp38639
tp38640
tp38641
sS'DAQmxResetAIChanCalApplyCalIfExp'
p38642
((lp38643
S'int32'
p38644
ag34
a((S'taskHandle'
p38645
(lp38646
S'TaskHandle'
p38647
aNtp38648
(S'channel'
p38649
(lp38650
S'char'
p38651
a(lp38652
I-1
aaNtp38653
tp38654
tp38655
sS'DAQmxSetup9218Cal'
p38656
((lp38657
S'int32'
p38658
ag34
a((S'calHandle'
p38659
(lp38660
S'CalHandle'
p38661
aNtp38662
(S'channelNames'
p38663
(lp38664
S'char'
p38665
a(lp38666
I-1
aaNtp38667
(S'rangeMin'
p38668
(lp38669
S'float64'
p38670
aNtp38671
(S'rangeMax'
p38672
(lp38673
S'float64'
p38674
aNtp38675
(S'measType'
p38676
(lp38677
S'int32'
p38678
aNtp38679
tp38680
tp38681
sS'DAQmxGetCarrierSerialNum'
p38682
((lp38683
S'int32'
p38684
ag34
a((S'device'
p38685
(lp38686
S'char'
p38687
a(lp38688
I-1
aaNtp38689
(S'data'
p38690
(lp38691
S'uInt32'
p38692
ag42
aNtp38693
tp38694
tp38695
sS'DAQmxGetCIDutyCycleDigFltrTimebaseSrc'
p38696
((lp38697
S'int32'
p38698
ag34
a((S'taskHandle'
p38699
(lp38700
S'TaskHandle'
p38701
aNtp38702
(S'channel'
p38703
(lp38704
S'char'
p38705
a(lp38706
I-1
aaNtp38707
(S'data'
p38708
(lp38709
S'char'
p38710
ag42
aNtp38711
(S'bufferSize'
p38712
(lp38713
S'uInt32'
p38714
aNtp38715
tp38716
tp38717
sS'DAQmxSetAOUseOnlyOnBrdMem'
p38718
((lp38719
S'int32'
p38720
ag34
a((S'taskHandle'
p38721
(lp38722
S'TaskHandle'
p38723
aNtp38724
(S'channel'
p38725
(lp38726
S'char'
p38727
a(lp38728
I-1
aaNtp38729
(S'data'
p38730
(lp38731
S'bool32'
p38732
aNtp38733
tp38734
tp38735
sS'DAQmxSetWatchdogCOExpirState'
p38736
((lp38737
S'int32'
p38738
ag34
a((S'taskHandle'
p38739
(lp38740
S'TaskHandle'
p38741
aNtp38742
(S'lines'
p38743
(lp38744
S'char'
p38745
a(lp38746
I-1
aaNtp38747
(S'data'
p38748
(lp38749
S'int32'
p38750
aNtp38751
tp38752
tp38753
sS'DAQmxGetCIFreqStartingEdge'
p38754
((lp38755
S'int32'
p38756
ag34
a((S'taskHandle'
p38757
(lp38758
S'TaskHandle'
p38759
aNtp38760
(S'channel'
p38761
(lp38762
S'char'
p38763
a(lp38764
I-1
aaNtp38765
(S'data'
p38766
(lp38767
S'int32'
p38768
ag42
aNtp38769
tp38770
tp38771
sS'DAQmxSetCICtrTimebaseDigSyncEnable'
p38772
((lp38773
S'int32'
p38774
ag34
a((S'taskHandle'
p38775
(lp38776
S'TaskHandle'
p38777
aNtp38778
(S'channel'
p38779
(lp38780
S'char'
p38781
a(lp38782
I-1
aaNtp38783
(S'data'
p38784
(lp38785
S'bool32'
p38786
aNtp38787
tp38788
tp38789
sS'DAQmxResetDIDigFltrEnableBusMode'
p38790
((lp38791
S'int32'
p38792
ag34
a((S'taskHandle'
p38793
(lp38794
S'TaskHandle'
p38795
aNtp38796
(S'channel'
p38797
(lp38798
S'char'
p38799
a(lp38800
I-1
aaNtp38801
tp38802
tp38803
sS'DAQmxAdjustDSAAICalWithGainAndCoupling'
p38804
((lp38805
S'int32'
p38806
ag34
a((S'calHandle'
p38807
(lp38808
S'CalHandle'
p38809
aNtp38810
(S'coupling'
p38811
(lp38812
S'int32'
p38813
aNtp38814
(S'gain'
p38815
(lp38816
S'float64'
p38817
aNtp38818
(S'referenceVoltage'
p38819
(lp38820
S'float64'
p38821
aNtp38822
tp38823
tp38824
sS'DAQmxGetAnlgWinRefTrigWhen'
p38825
((lp38826
S'int32'
p38827
ag34
a((S'taskHandle'
p38828
(lp38829
S'TaskHandle'
p38830
aNtp38831
(S'data'
p38832
(lp38833
S'int32'
p38834
ag42
aNtp38835
tp38836
tp38837
sS'DAQmxReadCtrTicks'
p38838
((lp38839
S'int32'
p38840
ag34
a((S'taskHandle'
p38841
(lp38842
S'TaskHandle'
p38843
aNtp38844
(S'numSampsPerChan'
p38845
(lp38846
S'int32'
p38847
aNtp38848
(S'timeout'
p38849
(lp38850
S'float64'
p38851
aNtp38852
(S'interleaved'
p38853
(lp38854
S'bool32'
p38855
aNtp38856
(S'readArrayHighTicks'
p38857
(lp38858
S'uInt32'
p38859
a(lp38860
I-1
aaNtp38861
(S'readArrayLowTicks'
p38862
(lp38863
S'uInt32'
p38864
a(lp38865
I-1
aaNtp38866
(S'arraySizeInSamps'
p38867
(lp38868
S'uInt32'
p38869
aNtp38870
(S'sampsPerChanRead'
p38871
(lp38872
S'int32'
p38873
ag42
aNtp38874
(S'reserved'
p38875
(lp38876
S'bool32'
p38877
ag42
aNtp38878
tp38879
tp38880
sS'DAQmxResetAnlgWinPauseTrigTop'
p38881
((lp38882
S'int32'
p38883
ag34
a((S'taskHandle'
p38884
(lp38885
S'TaskHandle'
p38886
aNtp38887
tp38888
tp38889
sS'DAQmxResetAOFilterDelayUnits'
p38890
((lp38891
S'int32'
p38892
ag34
a((S'taskHandle'
p38893
(lp38894
S'TaskHandle'
p38895
aNtp38896
(S'channel'
p38897
(lp38898
S'char'
p38899
a(lp38900
I-1
aaNtp38901
tp38902
tp38903
sS'DAQmxGetExportedCtrOutEventOutputTerm'
p38904
((lp38905
S'int32'
p38906
ag34
a((S'taskHandle'
p38907
(lp38908
S'TaskHandle'
p38909
aNtp38910
(S'data'
p38911
(lp38912
S'char'
p38913
ag42
aNtp38914
(S'bufferSize'
p38915
(lp38916
S'uInt32'
p38917
aNtp38918
tp38919
tp38920
sS'DAQmxSetSampClkTimingResponseMode'
p38921
((lp38922
S'int32'
p38923
ag34
a((S'taskHandle'
p38924
(lp38925
S'TaskHandle'
p38926
aNtp38927
(S'data'
p38928
(lp38929
S'int32'
p38930
aNtp38931
tp38932
tp38933
sS'DAQmxResetCITwoEdgeSepFirstTermCfg'
p38934
((lp38935
S'int32'
p38936
ag34
a((S'taskHandle'
p38937
(lp38938
S'TaskHandle'
p38939
aNtp38940
(S'channel'
p38941
(lp38942
S'char'
p38943
a(lp38944
I-1
aaNtp38945
tp38946
tp38947
sS'DAQmxGetPhysicalChanAOManualControlAmplitude'
p38948
((lp38949
S'int32'
p38950
ag34
a((S'physicalChannel'
p38951
(lp38952
S'char'
p38953
a(lp38954
I-1
aaNtp38955
(S'data'
p38956
(lp38957
S'float64'
p38958
ag42
aNtp38959
tp38960
tp38961
sS'DAQmxGetCICountEdgesCountDirLogicLvlBehavior'
p38962
((lp38963
S'int32'
p38964
ag34
a((S'taskHandle'
p38965
(lp38966
S'TaskHandle'
p38967
aNtp38968
(S'channel'
p38969
(lp38970
S'char'
p38971
a(lp38972
I-1
aaNtp38973
(S'data'
p38974
(lp38975
S'int32'
p38976
ag42
aNtp38977
tp38978
tp38979
sS'DAQmxSetup4322Cal'
p38980
((lp38981
S'int32'
p38982
ag34
a((S'calHandle'
p38983
(lp38984
S'CalHandle'
p38985
aNtp38986
(S'channelNames'
p38987
(lp38988
S'char'
p38989
a(lp38990
I-1
aaNtp38991
(S'outputType'
p38992
(lp38993
S'int32'
p38994
aNtp38995
(S'outputVal'
p38996
(lp38997
S'float64'
p38998
aNtp38999
tp39000
tp39001
sS'DAQmxSetCIThreshVoltage'
p39002
((lp39003
S'int32'
p39004
ag34
a((S'taskHandle'
p39005
(lp39006
S'TaskHandle'
p39007
aNtp39008
(S'channel'
p39009
(lp39010
S'char'
p39011
a(lp39012
I-1
aaNtp39013
(S'data'
p39014
(lp39015
S'float64'
p39016
aNtp39017
tp39018
tp39019
sS'DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth'
p39020
((lp39021
S'int32'
p39022
ag34
a((S'taskHandle'
p39023
(lp39024
S'TaskHandle'
p39025
aNtp39026
(S'data'
p39027
(lp39028
S'float64'
p39029
ag42
aNtp39030
tp39031
tp39032
sS'DAQmxSetSwitchChanAnlgBusSharingEnable'
p39033
((lp39034
S'int32'
p39035
ag34
a((S'switchChannelName'
p39036
(lp39037
S'char'
p39038
a(lp39039
I-1
aaNtp39040
(S'data'
p39041
(lp39042
S'bool32'
p39043
aNtp39044
tp39045
tp39046
sS'DAQmxSetAODACRngLow'
p39047
((lp39048
S'int32'
p39049
ag34
a((S'taskHandle'
p39050
(lp39051
S'TaskHandle'
p39052
aNtp39053
(S'channel'
p39054
(lp39055
S'char'
p39056
a(lp39057
I-1
aaNtp39058
(S'data'
p39059
(lp39060
S'float64'
p39061
aNtp39062
tp39063
tp39064
sS'DAQmxGetExportedAIHoldCmpltEventOutputTerm'
p39065
((lp39066
S'int32'
p39067
ag34
a((S'taskHandle'
p39068
(lp39069
S'TaskHandle'
p39070
aNtp39071
(S'data'
p39072
(lp39073
S'char'
p39074
ag42
aNtp39075
(S'bufferSize'
p39076
(lp39077
S'uInt32'
p39078
aNtp39079
tp39080
tp39081
sS'DAQmxResetAIDigFltrNotchWidth'
p39082
((lp39083
S'int32'
p39084
ag34
a((S'taskHandle'
p39085
(lp39086
S'TaskHandle'
p39087
aNtp39088
(S'channel'
p39089
(lp39090
S'char'
p39091
a(lp39092
I-1
aaNtp39093
tp39094
tp39095
sS'DAQmxGetDOGenerateOn'
p39096
((lp39097
S'int32'
p39098
ag34
a((S'taskHandle'
p39099
(lp39100
S'TaskHandle'
p39101
aNtp39102
(S'channel'
p39103
(lp39104
S'char'
p39105
a(lp39106
I-1
aaNtp39107
(S'data'
p39108
(lp39109
S'int32'
p39110
ag42
aNtp39111
tp39112
tp39113
sS'DAQmxCloseExtCal'
p39114
((lp39115
S'int32'
p39116
ag34
a((S'calHandle'
p39117
(lp39118
S'CalHandle'
p39119
aNtp39120
(S'action'
p39121
(lp39122
S'int32'
p39123
aNtp39124
tp39125
tp39126
sS'DAQmxResetPauseTrigType'
p39127
((lp39128
S'int32'
p39129
ag34
a((S'taskHandle'
p39130
(lp39131
S'TaskHandle'
p39132
aNtp39133
tp39134
tp39135
sS'DAQmxSetAIStrainGageForceReadFromChan'
p39136
((lp39137
S'int32'
p39138
ag34
a((S'taskHandle'
p39139
(lp39140
S'TaskHandle'
p39141
aNtp39142
(S'channel'
p39143
(lp39144
S'char'
p39145
a(lp39146
I-1
aaNtp39147
(S'data'
p39148
(lp39149
S'bool32'
p39150
aNtp39151
tp39152
tp39153
sS'DAQmxGetCIMaxMeasPeriod'
p39154
((lp39155
S'int32'
p39156
ag34
a((S'taskHandle'
p39157
(lp39158
S'TaskHandle'
p39159
aNtp39160
(S'channel'
p39161
(lp39162
S'char'
p39163
a(lp39164
I-1
aaNtp39165
(S'data'
p39166
(lp39167
S'float64'
p39168
ag42
aNtp39169
tp39170
tp39171
sS'DAQmxGetAnlgWinRefTrigTop'
p39172
((lp39173
S'int32'
p39174
ag34
a((S'taskHandle'
p39175
(lp39176
S'TaskHandle'
p39177
aNtp39178
(S'data'
p39179
(lp39180
S'float64'
p39181
ag42
aNtp39182
tp39183
tp39184
sS'DAQmxGetCICustomScaleName'
p39185
((lp39186
S'int32'
p39187
ag34
a((S'taskHandle'
p39188
(lp39189
S'TaskHandle'
p39190
aNtp39191
(S'channel'
p39192
(lp39193
S'char'
p39194
a(lp39195
I-1
aaNtp39196
(S'data'
p39197
(lp39198
S'char'
p39199
ag42
aNtp39200
(S'bufferSize'
p39201
(lp39202
S'uInt32'
p39203
aNtp39204
tp39205
tp39206
sS'DAQmxResetExportedChangeDetectEventOutputTerm'
p39207
((lp39208
S'int32'
p39209
ag34
a((S'taskHandle'
p39210
(lp39211
S'TaskHandle'
p39212
aNtp39213
tp39214
tp39215
sS'DAQmxResetCIPulseWidthLogicLvlBehavior'
p39216
((lp39217
S'int32'
p39218
ag34
a((S'taskHandle'
p39219
(lp39220
S'TaskHandle'
p39221
aNtp39222
(S'channel'
p39223
(lp39224
S'char'
p39225
a(lp39226
I-1
aaNtp39227
tp39228
tp39229
sS'DAQmxGetAODACRefAllowConnToGnd'
p39230
((lp39231
S'int32'
p39232
ag34
a((S'taskHandle'
p39233
(lp39234
S'TaskHandle'
p39235
aNtp39236
(S'channel'
p39237
(lp39238
S'char'
p39239
a(lp39240
I-1
aaNtp39241
(S'data'
p39242
(lp39243
S'bool32'
p39244
ag42
aNtp39245
tp39246
tp39247
sS'DAQmxGetCIEncoderZInputTermCfg'
p39248
((lp39249
S'int32'
p39250
ag34
a((S'taskHandle'
p39251
(lp39252
S'TaskHandle'
p39253
aNtp39254
(S'channel'
p39255
(lp39256
S'char'
p39257
a(lp39258
I-1
aaNtp39259
(S'data'
p39260
(lp39261
S'int32'
p39262
ag42
aNtp39263
tp39264
tp39265
sS'DAQmxSetAIMax'
p39266
((lp39267
S'int32'
p39268
ag34
a((S'taskHandle'
p39269
(lp39270
S'TaskHandle'
p39271
aNtp39272
(S'channel'
p39273
(lp39274
S'char'
p39275
a(lp39276
I-1
aaNtp39277
(S'data'
p39278
(lp39279
S'float64'
p39280
aNtp39281
tp39282
tp39283
sS'DAQmxGetExportedAIHoldCmpltEventPulsePolarity'
p39284
((lp39285
S'int32'
p39286
ag34
a((S'taskHandle'
p39287
(lp39288
S'TaskHandle'
p39289
aNtp39290
(S'data'
p39291
(lp39292
S'int32'
p39293
ag42
aNtp39294
tp39295
tp39296
sS'DAQmxGetPhysicalChanAOManualControlFreq'
p39297
((lp39298
S'int32'
p39299
ag34
a((S'physicalChannel'
p39300
(lp39301
S'char'
p39302
a(lp39303
I-1
aaNtp39304
(S'data'
p39305
(lp39306
S'float64'
p39307
ag42
aNtp39308
tp39309
tp39310
sS'DAQmxSetCIDutyCycleDigFltrTimebaseRate'
p39311
((lp39312
S'int32'
p39313
ag34
a((S'taskHandle'
p39314
(lp39315
S'TaskHandle'
p39316
aNtp39317
(S'channel'
p39318
(lp39319
S'char'
p39320
a(lp39321
I-1
aaNtp39322
(S'data'
p39323
(lp39324
S'float64'
p39325
aNtp39326
tp39327
tp39328
sS'DAQmxGetDevAISupportedMeasTypes'
p39329
((lp39330
S'int32'
p39331
ag34
a((S'device'
p39332
(lp39333
S'char'
p39334
a(lp39335
I-1
aaNtp39336
(S'data'
p39337
(lp39338
S'int32'
p39339
ag42
aNtp39340
(S'arraySizeInElements'
p39341
(lp39342
S'uInt32'
p39343
aNtp39344
tp39345
tp39346
sS'DAQmxAOSeriesCalAdjust'
p39347
((lp39348
S'int32'
p39349
ag34
a((S'calHandle'
p39350
(lp39351
S'CalHandle'
p39352
aNtp39353
(S'referenceVoltage'
p39354
(lp39355
S'float64'
p39356
aNtp39357
tp39358
tp39359
sS'DAQmxCreateAIMicrophoneChan'
p39360
((lp39361
S'int32'
p39362
ag34
a((S'taskHandle'
p39363
(lp39364
S'TaskHandle'
p39365
aNtp39366
(S'physicalChannel'
p39367
(lp39368
S'char'
p39369
a(lp39370
I-1
aaNtp39371
(S'nameToAssignToChannel'
p39372
(lp39373
S'char'
p39374
a(lp39375
I-1
aaNtp39376
(S'terminalConfig'
p39377
(lp39378
S'int32'
p39379
aNtp39380
(S'units'
p39381
(lp39382
S'int32'
p39383
aNtp39384
(S'micSensitivity'
p39385
(lp39386
S'float64'
p39387
aNtp39388
(S'maxSndPressLevel'
p39389
(lp39390
S'float64'
p39391
aNtp39392
(S'currentExcitSource'
p39393
(lp39394
S'int32'
p39395
aNtp39396
(S'currentExcitVal'
p39397
(lp39398
S'float64'
p39399
aNtp39400
(S'customScaleName'
p39401
(lp39402
S'char'
p39403
a(lp39404
I-1
aaNtp39405
tp39406
tp39407
sS'DAQmxSetup9269Cal'
p39408
((lp39409
S'int32'
p39410
ag34
a((S'calHandle'
p39411
(lp39412
S'CalHandle'
p39413
aNtp39414
(S'channelNames'
p39415
(lp39416
S'char'
p39417
a(lp39418
I-1
aaNtp39419
(S'value'
p39420
(lp39421
S'int32'
p39422
aNtp39423
tp39424
tp39425
sS'DAQmxSetAOEnhancedImageRejectionEnable'
p39426
((lp39427
S'int32'
p39428
ag34
a((S'taskHandle'
p39429
(lp39430
S'TaskHandle'
p39431
aNtp39432
(S'channel'
p39433
(lp39434
S'char'
p39435
a(lp39436
I-1
aaNtp39437
(S'data'
p39438
(lp39439
S'bool32'
p39440
aNtp39441
tp39442
tp39443
sS'DAQmxChangeExtCalPassword'
p39444
((lp39445
S'int32'
p39446
ag34
a((S'deviceName'
p39447
(lp39448
S'char'
p39449
a(lp39450
I-1
aaNtp39451
(S'password'
p39452
(lp39453
S'char'
p39454
a(lp39455
I-1
aaNtp39456
(S'newPassword'
p39457
(lp39458
S'char'
p39459
a(lp39460
I-1
aaNtp39461
tp39462
tp39463
sS'DAQmxGetTaskDevices'
p39464
((lp39465
S'int32'
p39466
ag34
a((S'taskHandle'
p39467
(lp39468
S'TaskHandle'
p39469
aNtp39470
(S'data'
p39471
(lp39472
S'char'
p39473
ag42
aNtp39474
(S'bufferSize'
p39475
(lp39476
S'uInt32'
p39477
aNtp39478
tp39479
tp39480
sS'DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth'
p39481
((lp39482
S'int32'
p39483
ag34
a((S'taskHandle'
p39484
(lp39485
S'TaskHandle'
p39486
aNtp39487
(S'data'
p39488
(lp39489
S'float64'
p39490
ag42
aNtp39491
tp39492
tp39493
sS'DAQmxWriteBinaryI32'
p39494
((lp39495
S'int32'
p39496
ag34
a((S'taskHandle'
p39497
(lp39498
S'TaskHandle'
p39499
aNtp39500
(S'numSampsPerChan'
p39501
(lp39502
S'int32'
p39503
aNtp39504
(S'autoStart'
p39505
(lp39506
S'bool32'
p39507
aNtp39508
(S'timeout'
p39509
(lp39510
S'float64'
p39511
aNtp39512
(S'dataLayout'
p39513
(lp39514
S'bool32'
p39515
aNtp39516
(S'writeArray'
p39517
(lp39518
S'int32'
p39519
a(lp39520
I-1
aaNtp39521
(S'sampsPerChanWritten'
p39522
(lp39523
S'int32'
p39524
ag42
aNtp39525
(S'reserved'
p39526
(lp39527
S'bool32'
p39528
ag42
aNtp39529
tp39530
tp39531
sS'DAQmxResetAnlgEdgeRefTrigSrc'
p39532
((lp39533
S'int32'
p39534
ag34
a((S'taskHandle'
p39535
(lp39536
S'TaskHandle'
p39537
aNtp39538
tp39539
tp39540
sS'DAQmxGetAIExcitUseMultiplexed'
p39541
((lp39542
S'int32'
p39543
ag34
a((S'taskHandle'
p39544
(lp39545
S'TaskHandle'
p39546
aNtp39547
(S'channel'
p39548
(lp39549
S'char'
p39550
a(lp39551
I-1
aaNtp39552
(S'data'
p39553
(lp39554
S'bool32'
p39555
ag42
aNtp39556
tp39557
tp39558
sS'DAQmxSetCIPulseTimeTermCfg'
p39559
((lp39560
S'int32'
p39561
ag34
a((S'taskHandle'
p39562
(lp39563
S'TaskHandle'
p39564
aNtp39565
(S'channel'
p39566
(lp39567
S'char'
p39568
a(lp39569
I-1
aaNtp39570
(S'data'
p39571
(lp39572
S'int32'
p39573
aNtp39574
tp39575
tp39576
sS'DAQmxResetWatchdogAOExpirState'
p39577
((lp39578
S'int32'
p39579
ag34
a((S'taskHandle'
p39580
(lp39581
S'TaskHandle'
p39582
aNtp39583
(S'lines'
p39584
(lp39585
S'char'
p39586
a(lp39587
I-1
aaNtp39588
tp39589
tp39590
sS'DAQmxGetCICountEdgesCountResetResetCount'
p39591
((lp39592
S'int32'
p39593
ag34
a((S'taskHandle'
p39594
(lp39595
S'TaskHandle'
p39596
aNtp39597
(S'channel'
p39598
(lp39599
S'char'
p39600
a(lp39601
I-1
aaNtp39602
(S'data'
p39603
(lp39604
S'uInt32'
p39605
ag42
aNtp39606
tp39607
tp39608
sS'DAQmxSetCIAngEncoderPulsesPerRev'
p39609
((lp39610
S'int32'
p39611
ag34
a((S'taskHandle'
p39612
(lp39613
S'TaskHandle'
p39614
aNtp39615
(S'channel'
p39616
(lp39617
S'char'
p39618
a(lp39619
I-1
aaNtp39620
(S'data'
p39621
(lp39622
S'uInt32'
p39623
aNtp39624
tp39625
tp39626
sS'DAQmxGet9230CalAdjustPoints'
p39627
((lp39628
S'int32'
p39629
ag34
a((S'calHandle'
p39630
(lp39631
S'CalHandle'
p39632
aNtp39633
(S'adjustmentPoints'
p39634
(lp39635
S'float64'
p39636
ag42
aNtp39637
(S'bufferSize'
p39638
(lp39639
S'uInt32'
p39640
aNtp39641
tp39642
tp39643
sS'DAQmxResetCIFreqDigFltrMinPulseWidth'
p39644
((lp39645
S'int32'
p39646
ag34
a((S'taskHandle'
p39647
(lp39648
S'TaskHandle'
p39649
aNtp39650
(S'channel'
p39651
(lp39652
S'char'
p39653
a(lp39654
I-1
aaNtp39655
tp39656
tp39657
sS'DAQmxResetCIPulseTimeTerm'
p39658
((lp39659
S'int32'
p39660
ag34
a((S'taskHandle'
p39661
(lp39662
S'TaskHandle'
p39663
aNtp39664
(S'channel'
p39665
(lp39666
S'char'
p39667
a(lp39668
I-1
aaNtp39669
tp39670
tp39671
sS'DAQmxGetAIBridgeTwoPointLinFirstElectricalVal'
p39672
((lp39673
S'int32'
p39674
ag34
a((S'taskHandle'
p39675
(lp39676
S'TaskHandle'
p39677
aNtp39678
(S'channel'
p39679
(lp39680
S'char'
p39681
a(lp39682
I-1
aaNtp39683
(S'data'
p39684
(lp39685
S'float64'
p39686
ag42
aNtp39687
tp39688
tp39689
sS'DAQmxGetTaskChannels'
p39690
((lp39691
S'int32'
p39692
ag34
a((S'taskHandle'
p39693
(lp39694
S'TaskHandle'
p39695
aNtp39696
(S'data'
p39697
(lp39698
S'char'
p39699
ag42
aNtp39700
(S'bufferSize'
p39701
(lp39702
S'uInt32'
p39703
aNtp39704
tp39705
tp39706
sS'DAQmxGetReadOpenThrmcplChansExist'
p39707
((lp39708
S'int32'
p39709
ag34
a((S'taskHandle'
p39710
(lp39711
S'TaskHandle'
p39712
aNtp39713
(S'data'
p39714
(lp39715
S'bool32'
p39716
ag42
aNtp39717
tp39718
tp39719
sS'DAQmxResetAIConvRateEx'
p39720
((lp39721
S'int32'
p39722
ag34
a((S'taskHandle'
p39723
(lp39724
S'TaskHandle'
p39725
aNtp39726
(S'deviceNames'
p39727
(lp39728
S'char'
p39729
a(lp39730
I-1
aaNtp39731
tp39732
tp39733
sS'DAQmxSetAIDigFltrNotchCenterFreq'
p39734
((lp39735
S'int32'
p39736
ag34
a((S'taskHandle'
p39737
(lp39738
S'TaskHandle'
p39739
aNtp39740
(S'channel'
p39741
(lp39742
S'char'
p39743
a(lp39744
I-1
aaNtp39745
(S'data'
p39746
(lp39747
S'float64'
p39748
aNtp39749
tp39750
tp39751
sS'DAQmxCfgOutputBuffer'
p39752
((lp39753
S'int32'
p39754
ag34
a((S'taskHandle'
p39755
(lp39756
S'TaskHandle'
p39757
aNtp39758
(S'numSampsPerChan'
p39759
(lp39760
S'uInt32'
p39761
aNtp39762
tp39763
tp39764
sS'DAQmxSetAIDigFltrHighpassCutoffFreq'
p39765
((lp39766
S'int32'
p39767
ag34
a((S'taskHandle'
p39768
(lp39769
S'TaskHandle'
p39770
aNtp39771
(S'channel'
p39772
(lp39773
S'char'
p39774
a(lp39775
I-1
aaNtp39776
(S'data'
p39777
(lp39778
S'float64'
p39779
aNtp39780
tp39781
tp39782
sS'DAQmxResetCILinEncoderInitialPos'
p39783
((lp39784
S'int32'
p39785
ag34
a((S'taskHandle'
p39786
(lp39787
S'TaskHandle'
p39788
aNtp39789
(S'channel'
p39790
(lp39791
S'char'
p39792
a(lp39793
I-1
aaNtp39794
tp39795
tp39796
sS'DAQmxGetAIEnhancedAliasRejectionEnable'
p39797
((lp39798
S'int32'
p39799
ag34
a((S'taskHandle'
p39800
(lp39801
S'TaskHandle'
p39802
aNtp39803
(S'channel'
p39804
(lp39805
S'char'
p39806
a(lp39807
I-1
aaNtp39808
(S'data'
p39809
(lp39810
S'bool32'
p39811
ag42
aNtp39812
tp39813
tp39814
sS'DAQmxGetAIDigFltrCoeff'
p39815
((lp39816
S'int32'
p39817
ag34
a((S'taskHandle'
p39818
(lp39819
S'TaskHandle'
p39820
aNtp39821
(S'channel'
p39822
(lp39823
S'char'
p39824
a(lp39825
I-1
aaNtp39826
(S'data'
p39827
(lp39828
S'float64'
p39829
ag42
aNtp39830
(S'arraySizeInElements'
p39831
(lp39832
S'uInt32'
p39833
aNtp39834
tp39835
tp39836
sS'DAQmxSetSampClkRate'
p39837
((lp39838
S'int32'
p39839
ag34
a((S'taskHandle'
p39840
(lp39841
S'TaskHandle'
p39842
aNtp39843
(S'data'
p39844
(lp39845
S'float64'
p39846
aNtp39847
tp39848
tp39849
sS'DAQmxSetCalUserDefinedInfo'
p39850
((lp39851
S'int32'
p39852
ag34
a((S'deviceName'
p39853
(lp39854
S'char'
p39855
a(lp39856
I-1
aaNtp39857
(S'data'
p39858
(lp39859
S'char'
p39860
ag42
aNtp39861
tp39862
tp39863
sS'DAQmxResetWriteWaitMode'
p39864
((lp39865
S'int32'
p39866
ag34
a((S'taskHandle'
p39867
(lp39868
S'TaskHandle'
p39869
aNtp39870
tp39871
tp39872
sS'DAQmxGetPhysicalChanAOManualControlEnable'
p39873
((lp39874
S'int32'
p39875
ag34
a((S'physicalChannel'
p39876
(lp39877
S'char'
p39878
a(lp39879
I-1
aaNtp39880
(S'data'
p39881
(lp39882
S'bool32'
p39883
ag42
aNtp39884
tp39885
tp39886
sS'DAQmxGetAIDevScalingCoeff'
p39887
((lp39888
S'int32'
p39889
ag34
a((S'taskHandle'
p39890
(lp39891
S'TaskHandle'
p39892
aNtp39893
(S'channel'
p39894
(lp39895
S'char'
p39896
a(lp39897
I-1
aaNtp39898
(S'data'
p39899
(lp39900
S'float64'
p39901
ag42
aNtp39902
(S'arraySizeInElements'
p39903
(lp39904
S'uInt32'
p39905
aNtp39906
tp39907
tp39908
sS'DAQmxSetAIThrmcplType'
p39909
((lp39910
S'int32'
p39911
ag34
a((S'taskHandle'
p39912
(lp39913
S'TaskHandle'
p39914
aNtp39915
(S'channel'
p39916
(lp39917
S'char'
p39918
a(lp39919
I-1
aaNtp39920
(S'data'
p39921
(lp39922
S'int32'
p39923
aNtp39924
tp39925
tp39926
sS'DAQmxGetSwitchChanMaxACVoltage'
p39927
((lp39928
S'int32'
p39929
ag34
a((S'switchChannelName'
p39930
(lp39931
S'char'
p39932
a(lp39933
I-1
aaNtp39934
(S'data'
p39935
(lp39936
S'float64'
p39937
ag42
aNtp39938
tp39939
tp39940
sS'DAQmxGetCICountEdgesDigSyncEnable'
p39941
((lp39942
S'int32'
p39943
ag34
a((S'taskHandle'
p39944
(lp39945
S'TaskHandle'
p39946
aNtp39947
(S'channel'
p39948
(lp39949
S'char'
p39950
a(lp39951
I-1
aaNtp39952
(S'data'
p39953
(lp39954
S'bool32'
p39955
ag42
aNtp39956
tp39957
tp39958
sS'DAQmxSetAOMin'
p39959
((lp39960
S'int32'
p39961
ag34
a((S'taskHandle'
p39962
(lp39963
S'TaskHandle'
p39964
aNtp39965
(S'channel'
p39966
(lp39967
S'char'
p39968
a(lp39969
I-1
aaNtp39970
(S'data'
p39971
(lp39972
S'float64'
p39973
aNtp39974
tp39975
tp39976
sS'DAQmxResetCIPeriodMeasTime'
p39977
((lp39978
S'int32'
p39979
ag34
a((S'taskHandle'
p39980
(lp39981
S'TaskHandle'
p39982
aNtp39983
(S'channel'
p39984
(lp39985
S'char'
p39986
a(lp39987
I-1
aaNtp39988
tp39989
tp39990
sS'DAQmxGetDevAOPhysicalChans'
p39991
((lp39992
S'int32'
p39993
ag34
a((S'device'
p39994
(lp39995
S'char'
p39996
a(lp39997
I-1
aaNtp39998
(S'data'
p39999
(lp40000
S'char'
p40001
ag42
aNtp40002
(S'bufferSize'
p40003
(lp40004
S'uInt32'
p40005
aNtp40006
tp40007
tp40008
sS'DAQmxSetExportedSampClkDelayOffset'
p40009
((lp40010
S'int32'
p40011
ag34
a((S'taskHandle'
p40012
(lp40013
S'TaskHandle'
p40014
aNtp40015
(S'data'
p40016
(lp40017
S'float64'
p40018
aNtp40019
tp40020
tp40021
sS'DAQmxResetAICustomScaleName'
p40022
((lp40023
S'int32'
p40024
ag34
a((S'taskHandle'
p40025
(lp40026
S'TaskHandle'
p40027
aNtp40028
(S'channel'
p40029
(lp40030
S'char'
p40031
a(lp40032
I-1
aaNtp40033
tp40034
tp40035
sS'DAQmxResetAIRosetteStrainGageOrientation'
p40036
((lp40037
S'int32'
p40038
ag34
a((S'taskHandle'
p40039
(lp40040
S'TaskHandle'
p40041
aNtp40042
(S'channel'
p40043
(lp40044
S'char'
p40045
a(lp40046
I-1
aaNtp40047
tp40048
tp40049
sS'DAQmxGetCalDevTemp'
p40050
((lp40051
S'int32'
p40052
ag34
a((S'deviceName'
p40053
(lp40054
S'char'
p40055
a(lp40056
I-1
aaNtp40057
(S'data'
p40058
(lp40059
S'float64'
p40060
ag42
aNtp40061
tp40062
tp40063
sS'DAQmxGetDevDIMaxRate'
p40064
((lp40065
S'int32'
p40066
ag34
a((S'device'
p40067
(lp40068
S'char'
p40069
a(lp40070
I-1
aaNtp40071
(S'data'
p40072
(lp40073
S'float64'
p40074
ag42
aNtp40075
tp40076
tp40077
sS'DAQmxAdjust4220Cal'
p40078
((lp40079
S'int32'
p40080
ag34
a((S'calHandle'
p40081
(lp40082
S'CalHandle'
p40083
aNtp40084
(S'channelNames'
p40085
(lp40086
S'char'
p40087
a(lp40088
I-1
aaNtp40089
(S'gain'
p40090
(lp40091
S'float64'
p40092
aNtp40093
(S'inputVal'
p40094
(lp40095
S'float64'
p40096
aNtp40097
tp40098
tp40099
sS'DAQmxResetAIDigFltrLowpassCutoffFreq'
p40100
((lp40101
S'int32'
p40102
ag34
a((S'taskHandle'
p40103
(lp40104
S'TaskHandle'
p40105
aNtp40106
(S'channel'
p40107
(lp40108
S'char'
p40109
a(lp40110
I-1
aaNtp40111
tp40112
tp40113
sS'DAQmxResetCITwoEdgeSepSecondTerm'
p40114
((lp40115
S'int32'
p40116
ag34
a((S'taskHandle'
p40117
(lp40118
S'TaskHandle'
p40119
aNtp40120
(S'channel'
p40121
(lp40122
S'char'
p40123
a(lp40124
I-1
aaNtp40125
tp40126
tp40127
sS'DAQmxResetAIACExcitWireMode'
p40128
((lp40129
S'int32'
p40130
ag34
a((S'taskHandle'
p40131
(lp40132
S'TaskHandle'
p40133
aNtp40134
(S'channel'
p40135
(lp40136
S'char'
p40137
a(lp40138
I-1
aaNtp40139
tp40140
tp40141
sS'DAQmxGetExportedStartTrigPulsePolarity'
p40142
((lp40143
S'int32'
p40144
ag34
a((S'taskHandle'
p40145
(lp40146
S'TaskHandle'
p40147
aNtp40148
(S'data'
p40149
(lp40150
S'int32'
p40151
ag42
aNtp40152
tp40153
tp40154
sS'DAQmxGetCIPulseWidthDigFltrMinPulseWidth'
p40155
((lp40156
S'int32'
p40157
ag34
a((S'taskHandle'
p40158
(lp40159
S'TaskHandle'
p40160
aNtp40161
(S'channel'
p40162
(lp40163
S'char'
p40164
a(lp40165
I-1
aaNtp40166
(S'data'
p40167
(lp40168
S'float64'
p40169
ag42
aNtp40170
tp40171
tp40172
sS'DAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth'
p40173
((lp40174
S'int32'
p40175
ag34
a((S'taskHandle'
p40176
(lp40177
S'TaskHandle'
p40178
aNtp40179
(S'data'
p40180
(lp40181
S'float64'
p40182
ag42
aNtp40183
tp40184
tp40185
sS'DAQmxResetDigEdgeRefTrigDigFltrMinPulseWidth'
p40186
((lp40187
S'int32'
p40188
ag34
a((S'taskHandle'
p40189
(lp40190
S'TaskHandle'
p40191
aNtp40192
tp40193
tp40194
sS'DAQmxGetLoggingFileWriteSize'
p40195
((lp40196
S'int32'
p40197
ag34
a((S'taskHandle'
p40198
(lp40199
S'TaskHandle'
p40200
aNtp40201
(S'data'
p40202
(lp40203
S'uInt32'
p40204
ag42
aNtp40205
tp40206
tp40207
sS'DAQmxSetInterlockedHshkTrigAssertedLvl'
p40208
((lp40209
S'int32'
p40210
ag34
a((S'taskHandle'
p40211
(lp40212
S'TaskHandle'
p40213
aNtp40214
(S'data'
p40215
(lp40216
S'int32'
p40217
aNtp40218
tp40219
tp40220
sS'DAQmxSetup4463Cal'
p40221
((lp40222
S'int32'
p40223
ag34
a((S'calHandle'
p40224
(lp40225
S'CalHandle'
p40226
aNtp40227
(S'channelNames'
p40228
(lp40229
S'char'
p40230
a(lp40231
I-1
aaNtp40232
(S'terminalConfig'
p40233
(lp40234
S'int32'
p40235
aNtp40236
(S'gain'
p40237
(lp40238
S'float64'
p40239
aNtp40240
(S'outputVoltage'
p40241
(lp40242
S'float64'
p40243
aNtp40244
tp40245
tp40246
sS'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p40247
((lp40248
S'int32'
p40249
ag34
a((S'taskHandle'
p40250
(lp40251
S'TaskHandle'
p40252
aNtp40253
(S'data'
p40254
(lp40255
S'char'
p40256
ag42
aNtp40257
(S'bufferSize'
p40258
(lp40259
S'uInt32'
p40260
aNtp40261
tp40262
tp40263
sS'DAQmxSetSampTimingType'
p40264
((lp40265
S'int32'
p40266
ag34
a((S'taskHandle'
p40267
(lp40268
S'TaskHandle'
p40269
aNtp40270
(S'data'
p40271
(lp40272
S'int32'
p40273
aNtp40274
tp40275
tp40276
sS'DAQmxResetSampClkTimebaseMasterTimebaseDiv'
p40277
((lp40278
S'int32'
p40279
ag34
a((S'taskHandle'
p40280
(lp40281
S'TaskHandle'
p40282
aNtp40283
tp40284
tp40285
sS'DAQmxGetDOOvercurrentReenablePeriod'
p40286
((lp40287
S'int32'
p40288
ag34
a((S'taskHandle'
p40289
(lp40290
S'TaskHandle'
p40291
aNtp40292
(S'channel'
p40293
(lp40294
S'char'
p40295
a(lp40296
I-1
aaNtp40297
(S'data'
p40298
(lp40299
S'float64'
p40300
ag42
aNtp40301
tp40302
tp40303
sS'DAQmxResetOnDemandSimultaneousAOEnable'
p40304
((lp40305
S'int32'
p40306
ag34
a((S'taskHandle'
p40307
(lp40308
S'TaskHandle'
p40309
aNtp40310
tp40311
tp40312
sS'DAQmxGetAnlgEdgeStartTrigHyst'
p40313
((lp40314
S'int32'
p40315
ag34
a((S'taskHandle'
p40316
(lp40317
S'TaskHandle'
p40318
aNtp40319
(S'data'
p40320
(lp40321
S'float64'
p40322
ag42
aNtp40323
tp40324
tp40325
sS'DAQmxReadDigitalU16'
p40326
((lp40327
S'int32'
p40328
ag34
a((S'taskHandle'
p40329
(lp40330
S'TaskHandle'
p40331
aNtp40332
(S'numSampsPerChan'
p40333
(lp40334
S'int32'
p40335
aNtp40336
(S'timeout'
p40337
(lp40338
S'float64'
p40339
aNtp40340
(S'fillMode'
p40341
(lp40342
S'bool32'
p40343
aNtp40344
(S'readArray'
p40345
(lp40346
S'uInt16'
p40347
a(lp40348
I-1
aaNtp40349
(S'arraySizeInSamps'
p40350
(lp40351
S'uInt32'
p40352
aNtp40353
(S'sampsPerChanRead'
p40354
(lp40355
S'int32'
p40356
ag42
aNtp40357
(S'reserved'
p40358
(lp40359
S'bool32'
p40360
ag42
aNtp40361
tp40362
tp40363
sS'DAQmxSwitchConnect'
p40364
((lp40365
S'int32'
p40366
ag34
a((S'switchChannel1'
p40367
(lp40368
S'char'
p40369
a(lp40370
I-1
aaNtp40371
(S'switchChannel2'
p40372
(lp40373
S'char'
p40374
a(lp40375
I-1
aaNtp40376
(S'waitForSettling'
p40377
(lp40378
S'bool32'
p40379
aNtp40380
tp40381
tp40382
sS'DAQmxSetAIConvDigFltrTimebaseSrc'
p40383
((lp40384
S'int32'
p40385
ag34
a((S'taskHandle'
p40386
(lp40387
S'TaskHandle'
p40388
aNtp40389
(S'data'
p40390
(lp40391
S'char'
p40392
ag42
aNtp40393
tp40394
tp40395
sS'DAQmxAdjust1104Cal'
p40396
((lp40397
S'int32'
p40398
ag34
a((S'calHandle'
p40399
(lp40400
S'CalHandle'
p40401
aNtp40402
(S'refVoltage'
p40403
(lp40404
S'float64'
p40405
aNtp40406
(S'measOutput'
p40407
(lp40408
S'float64'
p40409
aNtp40410
tp40411
tp40412
sS'DAQmxResetAIConvSrcEx'
p40413
((lp40414
S'int32'
p40415
ag34
a((S'taskHandle'
p40416
(lp40417
S'TaskHandle'
p40418
aNtp40419
(S'deviceNames'
p40420
(lp40421
S'char'
p40422
a(lp40423
I-1
aaNtp40424
tp40425
tp40426
sS'DAQmxResetCIPulseFreqDigFltrTimebaseRate'
p40427
((lp40428
S'int32'
p40429
ag34
a((S'taskHandle'
p40430
(lp40431
S'TaskHandle'
p40432
aNtp40433
(S'channel'
p40434
(lp40435
S'char'
p40436
a(lp40437
I-1
aaNtp40438
tp40439
tp40440
sS'DAQmxResetDigPatternRefTrigWhen'
p40441
((lp40442
S'int32'
p40443
ag34
a((S'taskHandle'
p40444
(lp40445
S'TaskHandle'
p40446
aNtp40447
tp40448
tp40449
sS'DAQmxGetDevAILowpassCutoffFreqDiscreteVals'
p40450
((lp40451
S'int32'
p40452
ag34
a((S'device'
p40453
(lp40454
S'char'
p40455
a(lp40456
I-1
aaNtp40457
(S'data'
p40458
(lp40459
S'float64'
p40460
ag42
aNtp40461
(S'arraySizeInElements'
p40462
(lp40463
S'uInt32'
p40464
aNtp40465
tp40466
tp40467
sS'DAQmxGetCILinEncoderUnits'
p40468
((lp40469
S'int32'
p40470
ag34
a((S'taskHandle'
p40471
(lp40472
S'TaskHandle'
p40473
aNtp40474
(S'channel'
p40475
(lp40476
S'char'
p40477
a(lp40478
I-1
aaNtp40479
(S'data'
p40480
(lp40481
S'int32'
p40482
ag42
aNtp40483
tp40484
tp40485
sS'DAQmxGetAIBridgeNomResistance'
p40486
((lp40487
S'int32'
p40488
ag34
a((S'taskHandle'
p40489
(lp40490
S'TaskHandle'
p40491
aNtp40492
(S'channel'
p40493
(lp40494
S'char'
p40495
a(lp40496
I-1
aaNtp40497
(S'data'
p40498
(lp40499
S'float64'
p40500
ag42
aNtp40501
tp40502
tp40503
sS'DAQmxStartTask'
p40504
((lp40505
S'int32'
p40506
ag34
a((S'taskHandle'
p40507
(lp40508
S'TaskHandle'
p40509
aNtp40510
tp40511
tp40512
sS'DAQmxGetReadRawDataWidth'
p40513
((lp40514
S'int32'
p40515
ag34
a((S'taskHandle'
p40516
(lp40517
S'TaskHandle'
p40518
aNtp40519
(S'data'
p40520
(lp40521
S'uInt32'
p40522
ag42
aNtp40523
tp40524
tp40525
sS'DAQmxGetAnlgEdgeStartTrigSlope'
p40526
((lp40527
S'int32'
p40528
ag34
a((S'taskHandle'
p40529
(lp40530
S'TaskHandle'
p40531
aNtp40532
(S'data'
p40533
(lp40534
S'int32'
p40535
ag42
aNtp40536
tp40537
tp40538
sS'DAQmxResetCIPulseTimeDigFltrEnable'
p40539
((lp40540
S'int32'
p40541
ag34
a((S'taskHandle'
p40542
(lp40543
S'TaskHandle'
p40544
aNtp40545
(S'channel'
p40546
(lp40547
S'char'
p40548
a(lp40549
I-1
aaNtp40550
tp40551
tp40552
sS'DAQmxGetReadOverloadedChansExist'
p40553
((lp40554
S'int32'
p40555
ag34
a((S'taskHandle'
p40556
(lp40557
S'TaskHandle'
p40558
aNtp40559
(S'data'
p40560
(lp40561
S'bool32'
p40562
ag42
aNtp40563
tp40564
tp40565
sS'DAQmxGetAOFilterDelay'
p40566
((lp40567
S'int32'
p40568
ag34
a((S'taskHandle'
p40569
(lp40570
S'TaskHandle'
p40571
aNtp40572
(S'channel'
p40573
(lp40574
S'char'
p40575
a(lp40576
I-1
aaNtp40577
(S'data'
p40578
(lp40579
S'float64'
p40580
ag42
aNtp40581
tp40582
tp40583
sS'DAQmxSetDigPatternStartTrigPattern'
p40584
((lp40585
S'int32'
p40586
ag34
a((S'taskHandle'
p40587
(lp40588
S'TaskHandle'
p40589
aNtp40590
(S'data'
p40591
(lp40592
S'char'
p40593
ag42
aNtp40594
tp40595
tp40596
sS'DAQmxGetPauseTrigTerm'
p40597
((lp40598
S'int32'
p40599
ag34
a((S'taskHandle'
p40600
(lp40601
S'TaskHandle'
p40602
aNtp40603
(S'data'
p40604
(lp40605
S'char'
p40606
ag42
aNtp40607
(S'bufferSize'
p40608
(lp40609
S'uInt32'
p40610
aNtp40611
tp40612
tp40613
sS'DAQmxResetReadOffset'
p40614
((lp40615
S'int32'
p40616
ag34
a((S'taskHandle'
p40617
(lp40618
S'TaskHandle'
p40619
aNtp40620
tp40621
tp40622
sS'DAQmxGetRealTimeReportMissedSamp'
p40623
((lp40624
S'int32'
p40625
ag34
a((S'taskHandle'
p40626
(lp40627
S'TaskHandle'
p40628
aNtp40629
(S'data'
p40630
(lp40631
S'bool32'
p40632
ag42
aNtp40633
tp40634
tp40635
sS'DAQmxGetAIAtten'
p40636
((lp40637
S'int32'
p40638
ag34
a((S'taskHandle'
p40639
(lp40640
S'TaskHandle'
p40641
aNtp40642
(S'channel'
p40643
(lp40644
S'char'
p40645
a(lp40646
I-1
aaNtp40647
(S'data'
p40648
(lp40649
S'float64'
p40650
ag42
aNtp40651
tp40652
tp40653
sS'DAQmxGetAIChanCalDesc'
p40654
((lp40655
S'int32'
p40656
ag34
a((S'taskHandle'
p40657
(lp40658
S'TaskHandle'
p40659
aNtp40660
(S'channel'
p40661
(lp40662
S'char'
p40663
a(lp40664
I-1
aaNtp40665
(S'data'
p40666
(lp40667
S'char'
p40668
ag42
aNtp40669
(S'bufferSize'
p40670
(lp40671
S'uInt32'
p40672
aNtp40673
tp40674
tp40675
sS'DAQmxSwitchDisconnectMulti'
p40676
((lp40677
S'int32'
p40678
ag34
a((S'connectionList'
p40679
(lp40680
S'char'
p40681
a(lp40682
I-1
aaNtp40683
(S'waitForSettling'
p40684
(lp40685
S'bool32'
p40686
aNtp40687
tp40688
tp40689
sS'DAQmxSetStartTrigDelay'
p40690
((lp40691
S'int32'
p40692
ag34
a((S'taskHandle'
p40693
(lp40694
S'TaskHandle'
p40695
aNtp40696
(S'data'
p40697
(lp40698
S'float64'
p40699
aNtp40700
tp40701
tp40702
sS'DAQmxResetBufOutputBufSize'
p40703
((lp40704
S'int32'
p40705
ag34
a((S'taskHandle'
p40706
(lp40707
S'TaskHandle'
p40708
aNtp40709
tp40710
tp40711
sS'DAQmxGetDevCISupportedMeasTypes'
p40712
((lp40713
S'int32'
p40714
ag34
a((S'device'
p40715
(lp40716
S'char'
p40717
a(lp40718
I-1
aaNtp40719
(S'data'
p40720
(lp40721
S'int32'
p40722
ag42
aNtp40723
(S'arraySizeInElements'
p40724
(lp40725
S'uInt32'
p40726
aNtp40727
tp40728
tp40729
sS'DAQmxResetCIThreshVoltage'
p40730
((lp40731
S'int32'
p40732
ag34
a((S'taskHandle'
p40733
(lp40734
S'TaskHandle'
p40735
aNtp40736
(S'channel'
p40737
(lp40738
S'char'
p40739
a(lp40740
I-1
aaNtp40741
tp40742
tp40743
sS'DAQmxCfgAnlgEdgeRefTrig'
p40744
((lp40745
S'int32'
p40746
ag34
a((S'taskHandle'
p40747
(lp40748
S'TaskHandle'
p40749
aNtp40750
(S'triggerSource'
p40751
(lp40752
S'char'
p40753
a(lp40754
I-1
aaNtp40755
(S'triggerSlope'
p40756
(lp40757
S'int32'
p40758
aNtp40759
(S'triggerLevel'
p40760
(lp40761
S'float64'
p40762
aNtp40763
(S'pretriggerSamples'
p40764
(lp40765
S'uInt32'
p40766
aNtp40767
tp40768
tp40769
sS'DAQmxResetAIChanCalPolyReverseCoeff'
p40770
((lp40771
S'int32'
p40772
ag34
a((S'taskHandle'
p40773
(lp40774
S'TaskHandle'
p40775
aNtp40776
(S'channel'
p40777
(lp40778
S'char'
p40779
a(lp40780
I-1
aaNtp40781
tp40782
tp40783
sS'DAQmxGetExportedCtrOutEventOutputBehavior'
p40784
((lp40785
S'int32'
p40786
ag34
a((S'taskHandle'
p40787
(lp40788
S'TaskHandle'
p40789
aNtp40790
(S'data'
p40791
(lp40792
S'int32'
p40793
ag42
aNtp40794
tp40795
tp40796
sS'DAQmxResetAIConvDigFltrEnableEx'
p40797
((lp40798
S'int32'
p40799
ag34
a((S'taskHandle'
p40800
(lp40801
S'TaskHandle'
p40802
aNtp40803
(S'deviceNames'
p40804
(lp40805
S'char'
p40806
a(lp40807
I-1
aaNtp40808
tp40809
tp40810
sS'DAQmxGetAnlgWinRefTrigDigFltrEnable'
p40811
((lp40812
S'int32'
p40813
ag34
a((S'taskHandle'
p40814
(lp40815
S'TaskHandle'
p40816
aNtp40817
(S'data'
p40818
(lp40819
S'bool32'
p40820
ag42
aNtp40821
tp40822
tp40823
sS'DAQmxResetAIThrmstrR1'
p40824
((lp40825
S'int32'
p40826
ag34
a((S'taskHandle'
p40827
(lp40828
S'TaskHandle'
p40829
aNtp40830
(S'channel'
p40831
(lp40832
S'char'
p40833
a(lp40834
I-1
aaNtp40835
tp40836
tp40837
sS'DAQmxWriteToTEDSFromArray'
p40838
((lp40839
S'int32'
p40840
ag34
a((S'physicalChannel'
p40841
(lp40842
S'char'
p40843
a(lp40844
I-1
aaNtp40845
(S'bitStream'
p40846
(lp40847
S'uInt8'
p40848
a(lp40849
I-1
aaNtp40850
(S'arraySize'
p40851
(lp40852
S'uInt32'
p40853
aNtp40854
(S'basicTEDSOptions'
p40855
(lp40856
S'int32'
p40857
aNtp40858
tp40859
tp40860
sS'DAQmxSetAOGain'
p40861
((lp40862
S'int32'
p40863
ag34
a((S'taskHandle'
p40864
(lp40865
S'TaskHandle'
p40866
aNtp40867
(S'channel'
p40868
(lp40869
S'char'
p40870
a(lp40871
I-1
aaNtp40872
(S'data'
p40873
(lp40874
S'float64'
p40875
aNtp40876
tp40877
tp40878
sS'DAQmxSetAIRVDTUnits'
p40879
((lp40880
S'int32'
p40881
ag34
a((S'taskHandle'
p40882
(lp40883
S'TaskHandle'
p40884
aNtp40885
(S'channel'
p40886
(lp40887
S'char'
p40888
a(lp40889
I-1
aaNtp40890
(S'data'
p40891
(lp40892
S'int32'
p40893
aNtp40894
tp40895
tp40896
sS'DAQmxGetCOConstrainedGenMode'
p40897
((lp40898
S'int32'
p40899
ag34
a((S'taskHandle'
p40900
(lp40901
S'TaskHandle'
p40902
aNtp40903
(S'channel'
p40904
(lp40905
S'char'
p40906
a(lp40907
I-1
aaNtp40908
(S'data'
p40909
(lp40910
S'int32'
p40911
ag42
aNtp40912
tp40913
tp40914
sS'DAQmxResetAODACOffsetExtSrc'
p40915
((lp40916
S'int32'
p40917
ag34
a((S'taskHandle'
p40918
(lp40919
S'TaskHandle'
p40920
aNtp40921
(S'channel'
p40922
(lp40923
S'char'
p40924
a(lp40925
I-1
aaNtp40926
tp40927
tp40928
sS'DAQmxSetAOIdleOutputBehavior'
p40929
((lp40930
S'int32'
p40931
ag34
a((S'taskHandle'
p40932
(lp40933
S'TaskHandle'
p40934
aNtp40935
(S'channel'
p40936
(lp40937
S'char'
p40938
a(lp40939
I-1
aaNtp40940
(S'data'
p40941
(lp40942
S'int32'
p40943
aNtp40944
tp40945
tp40946
sS'DAQmxSetAIAccelSensitivity'
p40947
((lp40948
S'int32'
p40949
ag34
a((S'taskHandle'
p40950
(lp40951
S'TaskHandle'
p40952
aNtp40953
(S'channel'
p40954
(lp40955
S'char'
p40956
a(lp40957
I-1
aaNtp40958
(S'data'
p40959
(lp40960
S'float64'
p40961
aNtp40962
tp40963
tp40964
sS'DAQmxSetCOPrescaler'
p40965
((lp40966
S'int32'
p40967
ag34
a((S'taskHandle'
p40968
(lp40969
S'TaskHandle'
p40970
aNtp40971
(S'channel'
p40972
(lp40973
S'char'
p40974
a(lp40975
I-1
aaNtp40976
(S'data'
p40977
(lp40978
S'uInt32'
p40979
aNtp40980
tp40981
tp40982
sS'DAQmxCreateAOVoltageChan'
p40983
((lp40984
S'int32'
p40985
ag34
a((S'taskHandle'
p40986
(lp40987
S'TaskHandle'
p40988
aNtp40989
(S'physicalChannel'
p40990
(lp40991
S'char'
p40992
a(lp40993
I-1
aaNtp40994
(S'nameToAssignToChannel'
p40995
(lp40996
S'char'
p40997
a(lp40998
I-1
aaNtp40999
(S'minVal'
p41000
(lp41001
S'float64'
p41002
aNtp41003
(S'maxVal'
p41004
(lp41005
S'float64'
p41006
aNtp41007
(S'units'
p41008
(lp41009
S'int32'
p41010
aNtp41011
(S'customScaleName'
p41012
(lp41013
S'char'
p41014
a(lp41015
I-1
aaNtp41016
tp41017
tp41018
sS'DAQmxSetDigEdgeStartTrigDigFltrEnable'
p41019
((lp41020
S'int32'
p41021
ag34
a((S'taskHandle'
p41022
(lp41023
S'TaskHandle'
p41024
aNtp41025
(S'data'
p41026
(lp41027
S'bool32'
p41028
aNtp41029
tp41030
tp41031
sS'DAQmxGetAIChanCalPolyReverseCoeff'
p41032
((lp41033
S'int32'
p41034
ag34
a((S'taskHandle'
p41035
(lp41036
S'TaskHandle'
p41037
aNtp41038
(S'channel'
p41039
(lp41040
S'char'
p41041
a(lp41042
I-1
aaNtp41043
(S'data'
p41044
(lp41045
S'float64'
p41046
ag42
aNtp41047
(S'arraySizeInElements'
p41048
(lp41049
S'uInt32'
p41050
aNtp41051
tp41052
tp41053
sS'DAQmxResetAnlgWinStartTrigDigFltrMinPulseWidth'
p41054
((lp41055
S'int32'
p41056
ag34
a((S'taskHandle'
p41057
(lp41058
S'TaskHandle'
p41059
aNtp41060
tp41061
tp41062
sS'DAQmxGetExportedHshkEventInterlockedAssertedLvl'
p41063
((lp41064
S'int32'
p41065
ag34
a((S'taskHandle'
p41066
(lp41067
S'TaskHandle'
p41068
aNtp41069
(S'data'
p41070
(lp41071
S'int32'
p41072
ag42
aNtp41073
tp41074
tp41075
sS'DAQmxGetDILogicFamily'
p41076
((lp41077
S'int32'
p41078
ag34
a((S'taskHandle'
p41079
(lp41080
S'TaskHandle'
p41081
aNtp41082
(S'channel'
p41083
(lp41084
S'char'
p41085
a(lp41086
I-1
aaNtp41087
(S'data'
p41088
(lp41089
S'int32'
p41090
ag42
aNtp41091
tp41092
tp41093
sS'DAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes'
p41094
((lp41095
S'int32'
p41096
ag34
a((S'physicalChannel'
p41097
(lp41098
S'char'
p41099
a(lp41100
I-1
aaNtp41101
(S'data'
p41102
(lp41103
S'int32'
p41104
ag42
aNtp41105
(S'arraySizeInElements'
p41106
(lp41107
S'uInt32'
p41108
aNtp41109
tp41110
tp41111
sS'DAQmxGetAIConvDigFltrEnable'
p41112
((lp41113
S'int32'
p41114
ag34
a((S'taskHandle'
p41115
(lp41116
S'TaskHandle'
p41117
aNtp41118
(S'data'
p41119
(lp41120
S'bool32'
p41121
ag42
aNtp41122
tp41123
tp41124
sS'DAQmxSetExportedAdvCmpltEventOutputTerm'
p41125
((lp41126
S'int32'
p41127
ag34
a((S'taskHandle'
p41128
(lp41129
S'TaskHandle'
p41130
aNtp41131
(S'data'
p41132
(lp41133
S'char'
p41134
ag42
aNtp41135
tp41136
tp41137
sS'DAQmxGetSampClkRate'
p41138
((lp41139
S'int32'
p41140
ag34
a((S'taskHandle'
p41141
(lp41142
S'TaskHandle'
p41143
aNtp41144
(S'data'
p41145
(lp41146
S'float64'
p41147
ag42
aNtp41148
tp41149
tp41150
sS'DAQmxSetAIRosetteStrainGageOrientation'
p41151
((lp41152
S'int32'
p41153
ag34
a((S'taskHandle'
p41154
(lp41155
S'TaskHandle'
p41156
aNtp41157
(S'channel'
p41158
(lp41159
S'char'
p41160
a(lp41161
I-1
aaNtp41162
(S'data'
p41163
(lp41164
S'float64'
p41165
aNtp41166
tp41167
tp41168
sS'DAQmxGetCalUserDefinedInfo'
p41169
((lp41170
S'int32'
p41171
ag34
a((S'deviceName'
p41172
(lp41173
S'char'
p41174
a(lp41175
I-1
aaNtp41176
(S'data'
p41177
(lp41178
S'char'
p41179
ag42
aNtp41180
(S'bufferSize'
p41181
(lp41182
S'uInt32'
p41183
aNtp41184
tp41185
tp41186
sS'DAQmxResetChangeDetectDIRisingEdgePhysicalChans'
p41187
((lp41188
S'int32'
p41189
ag34
a((S'taskHandle'
p41190
(lp41191
S'TaskHandle'
p41192
aNtp41193
tp41194
tp41195
sS'DAQmxReadCtrTime'
p41196
((lp41197
S'int32'
p41198
ag34
a((S'taskHandle'
p41199
(lp41200
S'TaskHandle'
p41201
aNtp41202
(S'numSampsPerChan'
p41203
(lp41204
S'int32'
p41205
aNtp41206
(S'timeout'
p41207
(lp41208
S'float64'
p41209
aNtp41210
(S'interleaved'
p41211
(lp41212
S'bool32'
p41213
aNtp41214
(S'readArrayHighTime'
p41215
(lp41216
S'float64'
p41217
a(lp41218
I-1
aaNtp41219
(S'readArrayLowTime'
p41220
(lp41221
S'float64'
p41222
a(lp41223
I-1
aaNtp41224
(S'arraySizeInSamps'
p41225
(lp41226
S'uInt32'
p41227
aNtp41228
(S'sampsPerChanRead'
p41229
(lp41230
S'int32'
p41231
ag42
aNtp41232
(S'reserved'
p41233
(lp41234
S'bool32'
p41235
ag42
aNtp41236
tp41237
tp41238
sS'DAQmxSetCOMemMapEnable'
p41239
((lp41240
S'int32'
p41241
ag34
a((S'taskHandle'
p41242
(lp41243
S'TaskHandle'
p41244
aNtp41245
(S'channel'
p41246
(lp41247
S'char'
p41248
a(lp41249
I-1
aaNtp41250
(S'data'
p41251
(lp41252
S'bool32'
p41253
aNtp41254
tp41255
tp41256
sS'DAQmxSetAIRTDA'
p41257
((lp41258
S'int32'
p41259
ag34
a((S'taskHandle'
p41260
(lp41261
S'TaskHandle'
p41262
aNtp41263
(S'channel'
p41264
(lp41265
S'char'
p41266
a(lp41267
I-1
aaNtp41268
(S'data'
p41269
(lp41270
S'float64'
p41271
aNtp41272
tp41273
tp41274
sS'DAQmxSetAIRTDC'
p41275
((lp41276
S'int32'
p41277
ag34
a((S'taskHandle'
p41278
(lp41279
S'TaskHandle'
p41280
aNtp41281
(S'channel'
p41282
(lp41283
S'char'
p41284
a(lp41285
I-1
aaNtp41286
(S'data'
p41287
(lp41288
S'float64'
p41289
aNtp41290
tp41291
tp41292
sS'DAQmxSetAIRTDB'
p41293
((lp41294
S'int32'
p41295
ag34
a((S'taskHandle'
p41296
(lp41297
S'TaskHandle'
p41298
aNtp41299
(S'channel'
p41300
(lp41301
S'char'
p41302
a(lp41303
I-1
aaNtp41304
(S'data'
p41305
(lp41306
S'float64'
p41307
aNtp41308
tp41309
tp41310
sS'DAQmxGetDevDOLines'
p41311
((lp41312
S'int32'
p41313
ag34
a((S'device'
p41314
(lp41315
S'char'
p41316
a(lp41317
I-1
aaNtp41318
(S'data'
p41319
(lp41320
S'char'
p41321
ag42
aNtp41322
(S'bufferSize'
p41323
(lp41324
S'uInt32'
p41325
aNtp41326
tp41327
tp41328
sS'DAQmxSetCIGPSSyncMethod'
p41329
((lp41330
S'int32'
p41331
ag34
a((S'taskHandle'
p41332
(lp41333
S'TaskHandle'
p41334
aNtp41335
(S'channel'
p41336
(lp41337
S'char'
p41338
a(lp41339
I-1
aaNtp41340
(S'data'
p41341
(lp41342
S'int32'
p41343
aNtp41344
tp41345
tp41346
sS'DAQmxGetWriteOvertemperatureChansExist'
p41347
((lp41348
S'int32'
p41349
ag34
a((S'taskHandle'
p41350
(lp41351
S'TaskHandle'
p41352
aNtp41353
(S'data'
p41354
(lp41355
S'bool32'
p41356
ag42
aNtp41357
tp41358
tp41359
sS'DAQmxGetCIDutyCycleTerm'
p41360
((lp41361
S'int32'
p41362
ag34
a((S'taskHandle'
p41363
(lp41364
S'TaskHandle'
p41365
aNtp41366
(S'channel'
p41367
(lp41368
S'char'
p41369
a(lp41370
I-1
aaNtp41371
(S'data'
p41372
(lp41373
S'char'
p41374
ag42
aNtp41375
(S'bufferSize'
p41376
(lp41377
S'uInt32'
p41378
aNtp41379
tp41380
tp41381
sS'DAQmxSetDOLineStatesStartState'
p41382
((lp41383
S'int32'
p41384
ag34
a((S'taskHandle'
p41385
(lp41386
S'TaskHandle'
p41387
aNtp41388
(S'channel'
p41389
(lp41390
S'char'
p41391
a(lp41392
I-1
aaNtp41393
(S'data'
p41394
(lp41395
S'int32'
p41396
aNtp41397
tp41398
tp41399
sS'DAQmxSetRealTimeWriteRecoveryMode'
p41400
((lp41401
S'int32'
p41402
ag34
a((S'taskHandle'
p41403
(lp41404
S'TaskHandle'
p41405
aNtp41406
(S'data'
p41407
(lp41408
S'int32'
p41409
aNtp41410
tp41411
tp41412
sS'DAQmxSetCOCtrTimebaseRate'
p41413
((lp41414
S'int32'
p41415
ag34
a((S'taskHandle'
p41416
(lp41417
S'TaskHandle'
p41418
aNtp41419
(S'channel'
p41420
(lp41421
S'char'
p41422
a(lp41423
I-1
aaNtp41424
(S'data'
p41425
(lp41426
S'float64'
p41427
aNtp41428
tp41429
tp41430
sS'DAQmxGetAIRTDType'
p41431
((lp41432
S'int32'
p41433
ag34
a((S'taskHandle'
p41434
(lp41435
S'TaskHandle'
p41436
aNtp41437
(S'channel'
p41438
(lp41439
S'char'
p41440
a(lp41441
I-1
aaNtp41442
(S'data'
p41443
(lp41444
S'int32'
p41445
ag42
aNtp41446
tp41447
tp41448
sS'DAQmxSetDIInvertLines'
p41449
((lp41450
S'int32'
p41451
ag34
a((S'taskHandle'
p41452
(lp41453
S'TaskHandle'
p41454
aNtp41455
(S'channel'
p41456
(lp41457
S'char'
p41458
a(lp41459
I-1
aaNtp41460
(S'data'
p41461
(lp41462
S'bool32'
p41463
aNtp41464
tp41465
tp41466
sS'DAQmxResetSampClkSrc'
p41467
((lp41468
S'int32'
p41469
ag34
a((S'taskHandle'
p41470
(lp41471
S'TaskHandle'
p41472
aNtp41473
tp41474
tp41475
sS'DAQmxResetCITwoEdgeSepSecondEdge'
p41476
((lp41477
S'int32'
p41478
ag34
a((S'taskHandle'
p41479
(lp41480
S'TaskHandle'
p41481
aNtp41482
(S'channel'
p41483
(lp41484
S'char'
p41485
a(lp41486
I-1
aaNtp41487
tp41488
tp41489
sS'DAQmxResetDIInvertLines'
p41490
((lp41491
S'int32'
p41492
ag34
a((S'taskHandle'
p41493
(lp41494
S'TaskHandle'
p41495
aNtp41496
(S'channel'
p41497
(lp41498
S'char'
p41499
a(lp41500
I-1
aaNtp41501
tp41502
tp41503
sS'DAQmxGetAnlgWinRefTrigDigFltrTimebaseRate'
p41504
((lp41505
S'int32'
p41506
ag34
a((S'taskHandle'
p41507
(lp41508
S'TaskHandle'
p41509
aNtp41510
(S'data'
p41511
(lp41512
S'float64'
p41513
ag42
aNtp41514
tp41515
tp41516
sS'DAQmxGetCIPulseTimeDigSyncEnable'
p41517
((lp41518
S'int32'
p41519
ag34
a((S'taskHandle'
p41520
(lp41521
S'TaskHandle'
p41522
aNtp41523
(S'channel'
p41524
(lp41525
S'char'
p41526
a(lp41527
I-1
aaNtp41528
(S'data'
p41529
(lp41530
S'bool32'
p41531
ag42
aNtp41532
tp41533
tp41534
sS'DAQmxSwitchGetMultiRelayCount'
p41535
((lp41536
S'int32'
p41537
ag34
a((S'relayList'
p41538
(lp41539
S'char'
p41540
a(lp41541
I-1
aaNtp41542
(S'count'
p41543
(lp41544
S'uInt32'
p41545
a(lp41546
I-1
aaNtp41547
(S'countArraySize'
p41548
(lp41549
S'uInt32'
p41550
aNtp41551
(S'numRelayCountsRead'
p41552
(lp41553
S'uInt32'
p41554
ag42
aNtp41555
tp41556
tp41557
sS'DAQmxSetCICountEdgesTerm'
p41558
((lp41559
S'int32'
p41560
ag34
a((S'taskHandle'
p41561
(lp41562
S'TaskHandle'
p41563
aNtp41564
(S'channel'
p41565
(lp41566
S'char'
p41567
a(lp41568
I-1
aaNtp41569
(S'data'
p41570
(lp41571
S'char'
p41572
ag42
aNtp41573
tp41574
tp41575
sS'DAQmxSetAnlgWinStartTrigWhen'
p41576
((lp41577
S'int32'
p41578
ag34
a((S'taskHandle'
p41579
(lp41580
S'TaskHandle'
p41581
aNtp41582
(S'data'
p41583
(lp41584
S'int32'
p41585
aNtp41586
tp41587
tp41588
sS'DAQmxSetup9264Cal'
p41589
((lp41590
S'int32'
p41591
ag34
a((S'calHandle'
p41592
(lp41593
S'CalHandle'
p41594
aNtp41595
(S'channelNames'
p41596
(lp41597
S'char'
p41598
a(lp41599
I-1
aaNtp41600
(S'value'
p41601
(lp41602
S'int32'
p41603
aNtp41604
tp41605
tp41606
sS'DAQmxResetSampClkActiveEdge'
p41607
((lp41608
S'int32'
p41609
ag34
a((S'taskHandle'
p41610
(lp41611
S'TaskHandle'
p41612
aNtp41613
tp41614
tp41615
sS'DAQmxSwitchDisconnect'
p41616
((lp41617
S'int32'
p41618
ag34
a((S'switchChannel1'
p41619
(lp41620
S'char'
p41621
a(lp41622
I-1
aaNtp41623
(S'switchChannel2'
p41624
(lp41625
S'char'
p41626
a(lp41627
I-1
aaNtp41628
(S'waitForSettling'
p41629
(lp41630
S'bool32'
p41631
aNtp41632
tp41633
tp41634
sS'DAQmxResetAIDigFltrOrder'
p41635
((lp41636
S'int32'
p41637
ag34
a((S'taskHandle'
p41638
(lp41639
S'TaskHandle'
p41640
aNtp41641
(S'channel'
p41642
(lp41643
S'char'
p41644
a(lp41645
I-1
aaNtp41646
tp41647
tp41648
sS'DAQmxGet9269CalAdjustPoints'
p41649
((lp41650
S'int32'
p41651
ag34
a((S'calHandle'
p41652
(lp41653
S'CalHandle'
p41654
aNtp41655
(S'adjustmentPoints'
p41656
(lp41657
S'int32'
p41658
ag42
aNtp41659
(S'bufferSize'
p41660
(lp41661
S'uInt32'
p41662
aNtp41663
tp41664
tp41665
sS'DAQmxSetCIPeriodDigFltrTimebaseRate'
p41666
((lp41667
S'int32'
p41668
ag34
a((S'taskHandle'
p41669
(lp41670
S'TaskHandle'
p41671
aNtp41672
(S'channel'
p41673
(lp41674
S'char'
p41675
a(lp41676
I-1
aaNtp41677
(S'data'
p41678
(lp41679
S'float64'
p41680
aNtp41681
tp41682
tp41683
sS'DAQmxGetCICountEdgesCountResetLogicLvlBehavior'
p41684
((lp41685
S'int32'
p41686
ag34
a((S'taskHandle'
p41687
(lp41688
S'TaskHandle'
p41689
aNtp41690
(S'channel'
p41691
(lp41692
S'char'
p41693
a(lp41694
I-1
aaNtp41695
(S'data'
p41696
(lp41697
S'int32'
p41698
ag42
aNtp41699
tp41700
tp41701
sS'DAQmxResetAnlgWinRefTrigBtm'
p41702
((lp41703
S'int32'
p41704
ag34
a((S'taskHandle'
p41705
(lp41706
S'TaskHandle'
p41707
aNtp41708
tp41709
tp41710
sS'DAQmxResetMasterTimebaseSrc'
p41711
((lp41712
S'int32'
p41713
ag34
a((S'taskHandle'
p41714
(lp41715
S'TaskHandle'
p41716
aNtp41717
tp41718
tp41719
sS'DAQmxAdjust9208OffsetCal'
p41720
((lp41721
S'int32'
p41722
ag34
a((S'calHandle'
p41723
(lp41724
S'CalHandle'
p41725
aNtp41726
(S'channelNames'
p41727
(lp41728
S'char'
p41729
a(lp41730
I-1
aaNtp41731
tp41732
tp41733
sS'DAQmxSetDigEdgeRefTrigEdge'
p41734
((lp41735
S'int32'
p41736
ag34
a((S'taskHandle'
p41737
(lp41738
S'TaskHandle'
p41739
aNtp41740
(S'data'
p41741
(lp41742
S'int32'
p41743
aNtp41744
tp41745
tp41746
sS'DAQmxResetAIRTDR0'
p41747
((lp41748
S'int32'
p41749
ag34
a((S'taskHandle'
p41750
(lp41751
S'TaskHandle'
p41752
aNtp41753
(S'channel'
p41754
(lp41755
S'char'
p41756
a(lp41757
I-1
aaNtp41758
tp41759
tp41760
sS'DAQmxSetup153xCal'
p41761
((lp41762
S'int32'
p41763
ag34
a((S'calHandle'
p41764
(lp41765
S'CalHandle'
p41766
aNtp41767
(S'channelName'
p41768
(lp41769
S'char'
p41770
a(lp41771
I-1
aaNtp41772
(S'gain'
p41773
(lp41774
S'float64'
p41775
aNtp41776
tp41777
tp41778
sS'DAQmxResetWriteAttribute'
p41779
((lp41780
S'int32'
p41781
ag34
a((S'taskHandle'
p41782
(lp41783
S'TaskHandle'
p41784
aNtp41785
(S'attribute'
p41786
(lp41787
S'int32'
p41788
aNtp41789
tp41790
tp41791
sS'DAQmxGetCIEncoderZIndexVal'
p41792
((lp41793
S'int32'
p41794
ag34
a((S'taskHandle'
p41795
(lp41796
S'TaskHandle'
p41797
aNtp41798
(S'channel'
p41799
(lp41800
S'char'
p41801
a(lp41802
I-1
aaNtp41803
(S'data'
p41804
(lp41805
S'float64'
p41806
ag42
aNtp41807
tp41808
tp41809
sS'DAQmxSetAIBridgeBalanceFinePot'
p41810
((lp41811
S'int32'
p41812
ag34
a((S'taskHandle'
p41813
(lp41814
S'TaskHandle'
p41815
aNtp41816
(S'channel'
p41817
(lp41818
S'char'
p41819
a(lp41820
I-1
aaNtp41821
(S'data'
p41822
(lp41823
S'int32'
p41824
aNtp41825
tp41826
tp41827
sS'DAQmxSetRefClkRate'
p41828
((lp41829
S'int32'
p41830
ag34
a((S'taskHandle'
p41831
(lp41832
S'TaskHandle'
p41833
aNtp41834
(S'data'
p41835
(lp41836
S'float64'
p41837
aNtp41838
tp41839
tp41840
sS'DAQmxResetCICountEdgesCountResetTermCfg'
p41841
((lp41842
S'int32'
p41843
ag34
a((S'taskHandle'
p41844
(lp41845
S'TaskHandle'
p41846
aNtp41847
(S'channel'
p41848
(lp41849
S'char'
p41850
a(lp41851
I-1
aaNtp41852
tp41853
tp41854
sS'DAQmxSetAILVDTSensitivityUnits'
p41855
((lp41856
S'int32'
p41857
ag34
a((S'taskHandle'
p41858
(lp41859
S'TaskHandle'
p41860
aNtp41861
(S'channel'
p41862
(lp41863
S'char'
p41864
a(lp41865
I-1
aaNtp41866
(S'data'
p41867
(lp41868
S'int32'
p41869
aNtp41870
tp41871
tp41872
sS'DAQmxCreateAIThrmstrChanIex'
p41873
((lp41874
S'int32'
p41875
ag34
a((S'taskHandle'
p41876
(lp41877
S'TaskHandle'
p41878
aNtp41879
(S'physicalChannel'
p41880
(lp41881
S'char'
p41882
a(lp41883
I-1
aaNtp41884
(S'nameToAssignToChannel'
p41885
(lp41886
S'char'
p41887
a(lp41888
I-1
aaNtp41889
(S'minVal'
p41890
(lp41891
S'float64'
p41892
aNtp41893
(S'maxVal'
p41894
(lp41895
S'float64'
p41896
aNtp41897
(S'units'
p41898
(lp41899
S'int32'
p41900
aNtp41901
(S'resistanceConfig'
p41902
(lp41903
S'int32'
p41904
aNtp41905
(S'currentExcitSource'
p41906
(lp41907
S'int32'
p41908
aNtp41909
(S'currentExcitVal'
p41910
(lp41911
S'float64'
p41912
aNtp41913
(g31773
(lp41914
S'float64'
p41915
aNtp41916
(g31777
(lp41917
S'float64'
p41918
aNtp41919
(g31781
(lp41920
S'float64'
p41921
aNtp41922
tp41923
tp41924
sS'DAQmxResetAIBridgeScaleType'
p41925
((lp41926
S'int32'
p41927
ag34
a((S'taskHandle'
p41928
(lp41929
S'TaskHandle'
p41930
aNtp41931
(S'channel'
p41932
(lp41933
S'char'
p41934
a(lp41935
I-1
aaNtp41936
tp41937
tp41938
sS'DAQmxCreatePolynomialScale'
p41939
((lp41940
S'int32'
p41941
ag34
a((S'name'
p41942
(lp41943
S'char'
p41944
a(lp41945
I-1
aaNtp41946
(S'forwardCoeffs'
p41947
(lp41948
S'float64'
p41949
a(lp41950
I-1
aaNtp41951
(S'numForwardCoeffsIn'
p41952
(lp41953
S'uInt32'
p41954
aNtp41955
(S'reverseCoeffs'
p41956
(lp41957
S'float64'
p41958
a(lp41959
I-1
aaNtp41960
(S'numReverseCoeffsIn'
p41961
(lp41962
S'uInt32'
p41963
aNtp41964
(S'preScaledUnits'
p41965
(lp41966
S'int32'
p41967
aNtp41968
(S'scaledUnits'
p41969
(lp41970
S'char'
p41971
a(lp41972
I-1
aaNtp41973
tp41974
tp41975
sS'DAQmxCSeriesSetCalTemp'
p41976
((lp41977
S'int32'
p41978
ag34
a((S'calHandle'
p41979
(lp41980
S'CalHandle'
p41981
aNtp41982
(S'temperature'
p41983
(lp41984
S'float64'
p41985
aNtp41986
tp41987
tp41988
sS'DAQmxAdjust1122Cal'
p41989
((lp41990
S'int32'
p41991
ag34
a((S'calHandle'
p41992
(lp41993
S'CalHandle'
p41994
aNtp41995
(S'refVoltage'
p41996
(lp41997
S'float64'
p41998
aNtp41999
(S'measOutput'
p42000
(lp42001
S'float64'
p42002
aNtp42003
tp42004
tp42005
sS'DAQmxSetCITwoEdgeSepFirstTerm'
p42006
((lp42007
S'int32'
p42008
ag34
a((S'taskHandle'
p42009
(lp42010
S'TaskHandle'
p42011
aNtp42012
(S'channel'
p42013
(lp42014
S'char'
p42015
a(lp42016
I-1
aaNtp42017
(S'data'
p42018
(lp42019
S'char'
p42020
ag42
aNtp42021
tp42022
tp42023
sS'DAQmxResetCICountEdgesTerm'
p42024
((lp42025
S'int32'
p42026
ag34
a((S'taskHandle'
p42027
(lp42028
S'TaskHandle'
p42029
aNtp42030
(S'channel'
p42031
(lp42032
S'char'
p42033
a(lp42034
I-1
aaNtp42035
tp42036
tp42037
sS'DAQmxSetCIPrescaler'
p42038
((lp42039
S'int32'
p42040
ag34
a((S'taskHandle'
p42041
(lp42042
S'TaskHandle'
p42043
aNtp42044
(S'channel'
p42045
(lp42046
S'char'
p42047
a(lp42048
I-1
aaNtp42049
(S'data'
p42050
(lp42051
S'uInt32'
p42052
aNtp42053
tp42054
tp42055
sS'DAQmxGetCICtrTimebaseRate'
p42056
((lp42057
S'int32'
p42058
ag34
a((S'taskHandle'
p42059
(lp42060
S'TaskHandle'
p42061
aNtp42062
(S'channel'
p42063
(lp42064
S'char'
p42065
a(lp42066
I-1
aaNtp42067
(S'data'
p42068
(lp42069
S'float64'
p42070
ag42
aNtp42071
tp42072
tp42073
sS'DAQmxSetAIThrmcplLeadOffsetVoltage'
p42074
((lp42075
S'int32'
p42076
ag34
a((S'taskHandle'
p42077
(lp42078
S'TaskHandle'
p42079
aNtp42080
(S'channel'
p42081
(lp42082
S'char'
p42083
a(lp42084
I-1
aaNtp42085
(S'data'
p42086
(lp42087
S'float64'
p42088
aNtp42089
tp42090
tp42091
sS'DAQmxSetAnlgWinRefTrigSrc'
p42092
((lp42093
S'int32'
p42094
ag34
a((S'taskHandle'
p42095
(lp42096
S'TaskHandle'
p42097
aNtp42098
(S'data'
p42099
(lp42100
S'char'
p42101
ag42
aNtp42102
tp42103
tp42104
sS'DAQmxResetAIFreqThreshVoltage'
p42105
((lp42106
S'int32'
p42107
ag34
a((S'taskHandle'
p42108
(lp42109
S'TaskHandle'
p42110
aNtp42111
(S'channel'
p42112
(lp42113
S'char'
p42114
a(lp42115
I-1
aaNtp42116
tp42117
tp42118
sS'DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior'
p42119
((lp42120
S'int32'
p42121
ag34
a((S'taskHandle'
p42122
(lp42123
S'TaskHandle'
p42124
aNtp42125
(S'channel'
p42126
(lp42127
S'char'
p42128
a(lp42129
I-1
aaNtp42130
tp42131
tp42132
sS'DAQmxSetCOCtrTimebaseDigSyncEnable'
p42133
((lp42134
S'int32'
p42135
ag34
a((S'taskHandle'
p42136
(lp42137
S'TaskHandle'
p42138
aNtp42139
(S'channel'
p42140
(lp42141
S'char'
p42142
a(lp42143
I-1
aaNtp42144
(S'data'
p42145
(lp42146
S'bool32'
p42147
aNtp42148
tp42149
tp42150
sS'DAQmxResetAOCustomScaleName'
p42151
((lp42152
S'int32'
p42153
ag34
a((S'taskHandle'
p42154
(lp42155
S'TaskHandle'
p42156
aNtp42157
(S'channel'
p42158
(lp42159
S'char'
p42160
a(lp42161
I-1
aaNtp42162
tp42163
tp42164
sS'DAQmxCalculateReversePolyCoeff'
p42165
((lp42166
S'int32'
p42167
ag34
a((S'forwardCoeffs'
p42168
(lp42169
S'float64'
p42170
a(lp42171
I-1
aaNtp42172
(S'numForwardCoeffsIn'
p42173
(lp42174
S'uInt32'
p42175
aNtp42176
(S'minValX'
p42177
(lp42178
S'float64'
p42179
aNtp42180
(S'maxValX'
p42181
(lp42182
S'float64'
p42183
aNtp42184
(S'numPointsToCompute'
p42185
(lp42186
S'int32'
p42187
aNtp42188
(S'reversePolyOrder'
p42189
(lp42190
S'int32'
p42191
aNtp42192
(S'reverseCoeffs'
p42193
(lp42194
S'float64'
p42195
a(lp42196
I-1
aaNtp42197
tp42198
tp42199
sS'DAQmxResetCISemiPeriodDigFltrTimebaseSrc'
p42200
((lp42201
S'int32'
p42202
ag34
a((S'taskHandle'
p42203
(lp42204
S'TaskHandle'
p42205
aNtp42206
(S'channel'
p42207
(lp42208
S'char'
p42209
a(lp42210
I-1
aaNtp42211
tp42212
tp42213
sS'DAQmxResetExportedRefTrigPulsePolarity'
p42214
((lp42215
S'int32'
p42216
ag34
a((S'taskHandle'
p42217
(lp42218
S'TaskHandle'
p42219
aNtp42220
tp42221
tp42222
sS'DAQmxGetReadAutoStart'
p42223
((lp42224
S'int32'
p42225
ag34
a((S'taskHandle'
p42226
(lp42227
S'TaskHandle'
p42228
aNtp42229
(S'data'
p42230
(lp42231
S'bool32'
p42232
ag42
aNtp42233
tp42234
tp42235
sS'DAQmxGetAIRTDA'
p42236
((lp42237
S'int32'
p42238
ag34
a((S'taskHandle'
p42239
(lp42240
S'TaskHandle'
p42241
aNtp42242
(S'channel'
p42243
(lp42244
S'char'
p42245
a(lp42246
I-1
aaNtp42247
(S'data'
p42248
(lp42249
S'float64'
p42250
ag42
aNtp42251
tp42252
tp42253
sS'DAQmxGetAIRTDC'
p42254
((lp42255
S'int32'
p42256
ag34
a((S'taskHandle'
p42257
(lp42258
S'TaskHandle'
p42259
aNtp42260
(S'channel'
p42261
(lp42262
S'char'
p42263
a(lp42264
I-1
aaNtp42265
(S'data'
p42266
(lp42267
S'float64'
p42268
ag42
aNtp42269
tp42270
tp42271
sS'DAQmxGetAIRTDB'
p42272
((lp42273
S'int32'
p42274
ag34
a((S'taskHandle'
p42275
(lp42276
S'TaskHandle'
p42277
aNtp42278
(S'channel'
p42279
(lp42280
S'char'
p42281
a(lp42282
I-1
aaNtp42283
(S'data'
p42284
(lp42285
S'float64'
p42286
ag42
aNtp42287
tp42288
tp42289
sS'DAQmxGetAOMin'
p42290
((lp42291
S'int32'
p42292
ag34
a((S'taskHandle'
p42293
(lp42294
S'TaskHandle'
p42295
aNtp42296
(S'channel'
p42297
(lp42298
S'char'
p42299
a(lp42300
I-1
aaNtp42301
(S'data'
p42302
(lp42303
S'float64'
p42304
ag42
aNtp42305
tp42306
tp42307
sS'DAQmxGetCOPulseDutyCyc'
p42308
((lp42309
S'int32'
p42310
ag34
a((S'taskHandle'
p42311
(lp42312
S'TaskHandle'
p42313
aNtp42314
(S'channel'
p42315
(lp42316
S'char'
p42317
a(lp42318
I-1
aaNtp42319
(S'data'
p42320
(lp42321
S'float64'
p42322
ag42
aNtp42323
tp42324
tp42325
sS'DAQmxGetAICurrentUnits'
p42326
((lp42327
S'int32'
p42328
ag34
a((S'taskHandle'
p42329
(lp42330
S'TaskHandle'
p42331
aNtp42332
(S'channel'
p42333
(lp42334
S'char'
p42335
a(lp42336
I-1
aaNtp42337
(S'data'
p42338
(lp42339
S'int32'
p42340
ag42
aNtp42341
tp42342
tp42343
sS'DAQmxSetCIPeriodTerm'
p42344
((lp42345
S'int32'
p42346
ag34
a((S'taskHandle'
p42347
(lp42348
S'TaskHandle'
p42349
aNtp42350
(S'channel'
p42351
(lp42352
S'char'
p42353
a(lp42354
I-1
aaNtp42355
(S'data'
p42356
(lp42357
S'char'
p42358
ag42
aNtp42359
tp42360
tp42361
sS'DAQmxResetCIPulseWidthUnits'
p42362
((lp42363
S'int32'
p42364
ag34
a((S'taskHandle'
p42365
(lp42366
S'TaskHandle'
p42367
aNtp42368
(S'channel'
p42369
(lp42370
S'char'
p42371
a(lp42372
I-1
aaNtp42373
tp42374
tp42375
sS'DAQmxGetAIImpedance'
p42376
((lp42377
S'int32'
p42378
ag34
a((S'taskHandle'
p42379
(lp42380
S'TaskHandle'
p42381
aNtp42382
(S'channel'
p42383
(lp42384
S'char'
p42385
a(lp42386
I-1
aaNtp42387
(S'data'
p42388
(lp42389
S'float64'
p42390
ag42
aNtp42391
tp42392
tp42393
sS'DAQmxResetCIGPSSyncMethod'
p42394
((lp42395
S'int32'
p42396
ag34
a((S'taskHandle'
p42397
(lp42398
S'TaskHandle'
p42399
aNtp42400
(S'channel'
p42401
(lp42402
S'char'
p42403
a(lp42404
I-1
aaNtp42405
tp42406
tp42407
sS'DAQmxResetAIStrainUnits'
p42408
((lp42409
S'int32'
p42410
ag34
a((S'taskHandle'
p42411
(lp42412
S'TaskHandle'
p42413
aNtp42414
(S'channel'
p42415
(lp42416
S'char'
p42417
a(lp42418
I-1
aaNtp42419
tp42420
tp42421
sS'DAQmxResetAIOpenThrmcplDetectEnable'
p42422
((lp42423
S'int32'
p42424
ag34
a((S'taskHandle'
p42425
(lp42426
S'TaskHandle'
p42427
aNtp42428
(S'channel'
p42429
(lp42430
S'char'
p42431
a(lp42432
I-1
aaNtp42433
tp42434
tp42435
sS'DAQmxResetDOUseOnlyOnBrdMem'
p42436
((lp42437
S'int32'
p42438
ag34
a((S'taskHandle'
p42439
(lp42440
S'TaskHandle'
p42441
aNtp42442
(S'channel'
p42443
(lp42444
S'char'
p42445
a(lp42446
I-1
aaNtp42447
tp42448
tp42449
sS'DAQmxGetCOPulseFreqInitialDelay'
p42450
((lp42451
S'int32'
p42452
ag34
a((S'taskHandle'
p42453
(lp42454
S'TaskHandle'
p42455
aNtp42456
(S'channel'
p42457
(lp42458
S'char'
p42459
a(lp42460
I-1
aaNtp42461
(S'data'
p42462
(lp42463
S'float64'
p42464
ag42
aNtp42465
tp42466
tp42467
sS'DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p42468
((lp42469
S'int32'
p42470
ag34
a((S'taskHandle'
p42471
(lp42472
S'TaskHandle'
p42473
aNtp42474
tp42475
tp42476
sS'DAQmxResetAOUseOnlyOnBrdMem'
p42477
((lp42478
S'int32'
p42479
ag34
a((S'taskHandle'
p42480
(lp42481
S'TaskHandle'
p42482
aNtp42483
(S'channel'
p42484
(lp42485
S'char'
p42486
a(lp42487
I-1
aaNtp42488
tp42489
tp42490
sS'DAQmxResetCICountEdgesCountResetActiveEdge'
p42491
((lp42492
S'int32'
p42493
ag34
a((S'taskHandle'
p42494
(lp42495
S'TaskHandle'
p42496
aNtp42497
(S'channel'
p42498
(lp42499
S'char'
p42500
a(lp42501
I-1
aaNtp42502
tp42503
tp42504
sS'DAQmxResetDigPatternStartTrigWhen'
p42505
((lp42506
S'int32'
p42507
ag34
a((S'taskHandle'
p42508
(lp42509
S'TaskHandle'
p42510
aNtp42511
tp42512
tp42513
sS'DAQmxSetCICountEdgesDirTerm'
p42514
((lp42515
S'int32'
p42516
ag34
a((S'taskHandle'
p42517
(lp42518
S'TaskHandle'
p42519
aNtp42520
(S'channel'
p42521
(lp42522
S'char'
p42523
a(lp42524
I-1
aaNtp42525
(S'data'
p42526
(lp42527
S'char'
p42528
ag42
aNtp42529
tp42530
tp42531
sS'DAQmxGetScaleLinYIntercept'
p42532
((lp42533
S'int32'
p42534
ag34
a((S'scaleName'
p42535
(lp42536
S'char'
p42537
a(lp42538
I-1
aaNtp42539
(S'data'
p42540
(lp42541
S'float64'
p42542
ag42
aNtp42543
tp42544
tp42545
sS'DAQmxSetAOFuncGenModulationType'
p42546
((lp42547
S'int32'
p42548
ag34
a((S'taskHandle'
p42549
(lp42550
S'TaskHandle'
p42551
aNtp42552
(S'channel'
p42553
(lp42554
S'char'
p42555
a(lp42556
I-1
aaNtp42557
(S'data'
p42558
(lp42559
S'int32'
p42560
aNtp42561
tp42562
tp42563
sS'DAQmxSetStartTrigRetriggerable'
p42564
((lp42565
S'int32'
p42566
ag34
a((S'taskHandle'
p42567
(lp42568
S'TaskHandle'
p42569
aNtp42570
(S'data'
p42571
(lp42572
S'bool32'
p42573
aNtp42574
tp42575
tp42576
sS'DAQmxGetExportedRdyForXferEventLvlActiveLvl'
p42577
((lp42578
S'int32'
p42579
ag34
a((S'taskHandle'
p42580
(lp42581
S'TaskHandle'
p42582
aNtp42583
(S'data'
p42584
(lp42585
S'int32'
p42586
ag42
aNtp42587
tp42588
tp42589
sS'DAQmxResetAIRVDTSensitivity'
p42590
((lp42591
S'int32'
p42592
ag34
a((S'taskHandle'
p42593
(lp42594
S'TaskHandle'
p42595
aNtp42596
(S'channel'
p42597
(lp42598
S'char'
p42599
a(lp42600
I-1
aaNtp42601
tp42602
tp42603
sS'DAQmxSetAODACRngHigh'
p42604
((lp42605
S'int32'
p42606
ag34
a((S'taskHandle'
p42607
(lp42608
S'TaskHandle'
p42609
aNtp42610
(S'channel'
p42611
(lp42612
S'char'
p42613
a(lp42614
I-1
aaNtp42615
(S'data'
p42616
(lp42617
S'float64'
p42618
aNtp42619
tp42620
tp42621
sS'DAQmxSetCICtrTimebaseMasterTimebaseDiv'
p42622
((lp42623
S'int32'
p42624
ag34
a((S'taskHandle'
p42625
(lp42626
S'TaskHandle'
p42627
aNtp42628
(S'channel'
p42629
(lp42630
S'char'
p42631
a(lp42632
I-1
aaNtp42633
(S'data'
p42634
(lp42635
S'uInt32'
p42636
aNtp42637
tp42638
tp42639
sS'DAQmxResetCIFreqMeasTime'
p42640
((lp42641
S'int32'
p42642
ag34
a((S'taskHandle'
p42643
(lp42644
S'TaskHandle'
p42645
aNtp42646
(S'channel'
p42647
(lp42648
S'char'
p42649
a(lp42650
I-1
aaNtp42651
tp42652
tp42653
sS'DAQmxSetSwitchScanRepeatMode'
p42654
((lp42655
S'int32'
p42656
ag34
a((S'taskHandle'
p42657
(lp42658
S'TaskHandle'
p42659
aNtp42660
(S'data'
p42661
(lp42662
S'int32'
p42663
aNtp42664
tp42665
tp42666
sS'DAQmxGetReadReadAllAvailSamp'
p42667
((lp42668
S'int32'
p42669
ag34
a((S'taskHandle'
p42670
(lp42671
S'TaskHandle'
p42672
aNtp42673
(S'data'
p42674
(lp42675
S'bool32'
p42676
ag42
aNtp42677
tp42678
tp42679
sS'DAQmxGetDigEdgeStartTrigDigSyncEnable'
p42680
((lp42681
S'int32'
p42682
ag34
a((S'taskHandle'
p42683
(lp42684
S'TaskHandle'
p42685
aNtp42686
(S'data'
p42687
(lp42688
S'bool32'
p42689
ag42
aNtp42690
tp42691
tp42692
sS'DAQmxResetAIDigFltrEnable'
p42693
((lp42694
S'int32'
p42695
ag34
a((S'taskHandle'
p42696
(lp42697
S'TaskHandle'
p42698
aNtp42699
(S'channel'
p42700
(lp42701
S'char'
p42702
a(lp42703
I-1
aaNtp42704
tp42705
tp42706
sS'DAQmxSetAIDataXferReqCond'
p42707
((lp42708
S'int32'
p42709
ag34
a((S'taskHandle'
p42710
(lp42711
S'TaskHandle'
p42712
aNtp42713
(S'channel'
p42714
(lp42715
S'char'
p42716
a(lp42717
I-1
aaNtp42718
(S'data'
p42719
(lp42720
S'int32'
p42721
aNtp42722
tp42723
tp42724
sS'DAQmxCreateAIRosetteStrainGageChan'
p42725
((lp42726
S'int32'
p42727
ag34
a((S'taskHandle'
p42728
(lp42729
S'TaskHandle'
p42730
aNtp42731
(S'physicalChannel'
p42732
(lp42733
S'char'
p42734
a(lp42735
I-1
aaNtp42736
(S'nameToAssignToChannel'
p42737
(lp42738
S'char'
p42739
a(lp42740
I-1
aaNtp42741
(S'minVal'
p42742
(lp42743
S'float64'
p42744
aNtp42745
(S'maxVal'
p42746
(lp42747
S'float64'
p42748
aNtp42749
(S'rosetteType'
p42750
(lp42751
S'int32'
p42752
aNtp42753
(S'gageOrientation'
p42754
(lp42755
S'float64'
p42756
aNtp42757
(S'rosetteMeasTypes'
p42758
(lp42759
S'int32'
p42760
a(lp42761
I-1
aaNtp42762
(S'numRosetteMeasTypes'
p42763
(lp42764
S'uInt32'
p42765
aNtp42766
(S'strainConfig'
p42767
(lp42768
S'int32'
p42769
aNtp42770
(S'voltageExcitSource'
p42771
(lp42772
S'int32'
p42773
aNtp42774
(S'voltageExcitVal'
p42775
(lp42776
S'float64'
p42777
aNtp42778
(S'gageFactor'
p42779
(lp42780
S'float64'
p42781
aNtp42782
(S'nominalGageResistance'
p42783
(lp42784
S'float64'
p42785
aNtp42786
(S'poissonRatio'
p42787
(lp42788
S'float64'
p42789
aNtp42790
(S'leadWireResistance'
p42791
(lp42792
S'float64'
p42793
aNtp42794
tp42795
tp42796
sS'DAQmxResetDigEdgeStartTrigDigFltrEnable'
p42797
((lp42798
S'int32'
p42799
ag34
a((S'taskHandle'
p42800
(lp42801
S'TaskHandle'
p42802
aNtp42803
tp42804
tp42805
sS'DAQmxWriteCtrTicks'
p42806
((lp42807
S'int32'
p42808
ag34
a((S'taskHandle'
p42809
(lp42810
S'TaskHandle'
p42811
aNtp42812
(S'numSampsPerChan'
p42813
(lp42814
S'int32'
p42815
aNtp42816
(S'autoStart'
p42817
(lp42818
S'bool32'
p42819
aNtp42820
(S'timeout'
p42821
(lp42822
S'float64'
p42823
aNtp42824
(S'dataLayout'
p42825
(lp42826
S'bool32'
p42827
aNtp42828
(S'highTicks'
p42829
(lp42830
S'uInt32'
p42831
a(lp42832
I-1
aaNtp42833
(S'lowTicks'
p42834
(lp42835
S'uInt32'
p42836
a(lp42837
I-1
aaNtp42838
(S'numSampsPerChanWritten'
p42839
(lp42840
S'int32'
p42841
ag42
aNtp42842
(S'reserved'
p42843
(lp42844
S'bool32'
p42845
ag42
aNtp42846
tp42847
tp42848
sS'DAQmxGetWriteExternalOvervoltageChans'
p42849
((lp42850
S'int32'
p42851
ag34
a((S'taskHandle'
p42852
(lp42853
S'TaskHandle'
p42854
aNtp42855
(S'data'
p42856
(lp42857
S'char'
p42858
ag42
aNtp42859
(S'bufferSize'
p42860
(lp42861
S'uInt32'
p42862
aNtp42863
tp42864
tp42865
sS'DAQmxGetDigEdgeStartTrigDigFltrEnable'
p42866
((lp42867
S'int32'
p42868
ag34
a((S'taskHandle'
p42869
(lp42870
S'TaskHandle'
p42871
aNtp42872
(S'data'
p42873
(lp42874
S'bool32'
p42875
ag42
aNtp42876
tp42877
tp42878
sS'DAQmxResetAnlgEdgeStartTrigLvl'
p42879
((lp42880
S'int32'
p42881
ag34
a((S'taskHandle'
p42882
(lp42883
S'TaskHandle'
p42884
aNtp42885
tp42886
tp42887
sS'DAQmxGetCIDupCountPrevent'
p42888
((lp42889
S'int32'
p42890
ag34
a((S'taskHandle'
p42891
(lp42892
S'TaskHandle'
p42893
aNtp42894
(S'channel'
p42895
(lp42896
S'char'
p42897
a(lp42898
I-1
aaNtp42899
(S'data'
p42900
(lp42901
S'bool32'
p42902
ag42
aNtp42903
tp42904
tp42905
sS'DAQmxResetCIPeriodDigFltrMinPulseWidth'
p42906
((lp42907
S'int32'
p42908
ag34
a((S'taskHandle'
p42909
(lp42910
S'TaskHandle'
p42911
aNtp42912
(S'channel'
p42913
(lp42914
S'char'
p42915
a(lp42916
I-1
aaNtp42917
tp42918
tp42919
sS'DAQmxGetScaleTablePreScaledVals'
p42920
((lp42921
S'int32'
p42922
ag34
a((S'scaleName'
p42923
(lp42924
S'char'
p42925
a(lp42926
I-1
aaNtp42927
(S'data'
p42928
(lp42929
S'float64'
p42930
ag42
aNtp42931
(S'arraySizeInElements'
p42932
(lp42933
S'uInt32'
p42934
aNtp42935
tp42936
tp42937
sS'DAQmxSetAOVoltageCurrentLimit'
p42938
((lp42939
S'int32'
p42940
ag34
a((S'taskHandle'
p42941
(lp42942
S'TaskHandle'
p42943
aNtp42944
(S'channel'
p42945
(lp42946
S'char'
p42947
a(lp42948
I-1
aaNtp42949
(S'data'
p42950
(lp42951
S'float64'
p42952
aNtp42953
tp42954
tp42955
sS'DAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc'
p42956
((lp42957
S'int32'
p42958
ag34
a((S'taskHandle'
p42959
(lp42960
S'TaskHandle'
p42961
aNtp42962
(S'data'
p42963
(lp42964
S'char'
p42965
ag42
aNtp42966
(S'bufferSize'
p42967
(lp42968
S'uInt32'
p42969
aNtp42970
tp42971
tp42972
sS'DAQmxGetCOPulseHighTicks'
p42973
((lp42974
S'int32'
p42975
ag34
a((S'taskHandle'
p42976
(lp42977
S'TaskHandle'
p42978
aNtp42979
(S'channel'
p42980
(lp42981
S'char'
p42982
a(lp42983
I-1
aaNtp42984
(S'data'
p42985
(lp42986
S'uInt32'
p42987
ag42
aNtp42988
tp42989
tp42990
sS'DAQmxAreConfiguredCDAQSyncPortsDisconnected'
p42991
((lp42992
S'int32'
p42993
ag34
a((S'chassisDevicesPorts'
p42994
(lp42995
S'char'
p42996
a(lp42997
I-1
aaNtp42998
(S'timeout'
p42999
(lp43000
S'float64'
p43001
aNtp43002
(S'disconnectedPortsExist'
p43003
(lp43004
S'bool32'
p43005
ag42
aNtp43006
tp43007
tp43008
sS'DAQmxGetWriteRelativeTo'
p43009
((lp43010
S'int32'
p43011
ag34
a((S'taskHandle'
p43012
(lp43013
S'TaskHandle'
p43014
aNtp43015
(S'data'
p43016
(lp43017
S'int32'
p43018
ag42
aNtp43019
tp43020
tp43021
sS'DAQmxSetAIExcitVoltageOrCurrent'
p43022
((lp43023
S'int32'
p43024
ag34
a((S'taskHandle'
p43025
(lp43026
S'TaskHandle'
p43027
aNtp43028
(S'channel'
p43029
(lp43030
S'char'
p43031
a(lp43032
I-1
aaNtp43033
(S'data'
p43034
(lp43035
S'int32'
p43036
aNtp43037
tp43038
tp43039
sS'DAQmxCreateAIForceBridgeTableChan'
p43040
((lp43041
S'int32'
p43042
ag34
a((S'taskHandle'
p43043
(lp43044
S'TaskHandle'
p43045
aNtp43046
(S'physicalChannel'
p43047
(lp43048
S'char'
p43049
a(lp43050
I-1
aaNtp43051
(S'nameToAssignToChannel'
p43052
(lp43053
S'char'
p43054
a(lp43055
I-1
aaNtp43056
(S'minVal'
p43057
(lp43058
S'float64'
p43059
aNtp43060
(S'maxVal'
p43061
(lp43062
S'float64'
p43063
aNtp43064
(S'units'
p43065
(lp43066
S'int32'
p43067
aNtp43068
(S'bridgeConfig'
p43069
(lp43070
S'int32'
p43071
aNtp43072
(S'voltageExcitSource'
p43073
(lp43074
S'int32'
p43075
aNtp43076
(S'voltageExcitVal'
p43077
(lp43078
S'float64'
p43079
aNtp43080
(S'nominalBridgeResistance'
p43081
(lp43082
S'float64'
p43083
aNtp43084
(S'electricalVals'
p43085
(lp43086
S'float64'
p43087
a(lp43088
I-1
aaNtp43089
(S'numElectricalVals'
p43090
(lp43091
S'uInt32'
p43092
aNtp43093
(S'electricalUnits'
p43094
(lp43095
S'int32'
p43096
aNtp43097
(S'physicalVals'
p43098
(lp43099
S'float64'
p43100
a(lp43101
I-1
aaNtp43102
(S'numPhysicalVals'
p43103
(lp43104
S'uInt32'
p43105
aNtp43106
(S'physicalUnits'
p43107
(lp43108
S'int32'
p43109
aNtp43110
(S'customScaleName'
p43111
(lp43112
S'char'
p43113
a(lp43114
I-1
aaNtp43115
tp43116
tp43117
sS'DAQmxAddCDAQSyncConnection'
p43118
((lp43119
S'int32'
p43120
ag34
a((S'portList'
p43121
(lp43122
S'char'
p43123
a(lp43124
I-1
aaNtp43125
tp43126
tp43127
sS'DAQmxSetCICountEdgesCountDirTermCfg'
p43128
((lp43129
S'int32'
p43130
ag34
a((S'taskHandle'
p43131
(lp43132
S'TaskHandle'
p43133
aNtp43134
(S'channel'
p43135
(lp43136
S'char'
p43137
a(lp43138
I-1
aaNtp43139
(S'data'
p43140
(lp43141
S'int32'
p43142
aNtp43143
tp43144
tp43145
sS'DAQmxResetAnlgLvlPauseTrigDigFltrMinPulseWidth'
p43146
((lp43147
S'int32'
p43148
ag34
a((S'taskHandle'
p43149
(lp43150
S'TaskHandle'
p43151
aNtp43152
tp43153
tp43154
sS'DAQmxSetCITimestampInitialSeconds'
p43155
((lp43156
S'int32'
p43157
ag34
a((S'taskHandle'
p43158
(lp43159
S'TaskHandle'
p43160
aNtp43161
(S'channel'
p43162
(lp43163
S'char'
p43164
a(lp43165
I-1
aaNtp43166
(S'data'
p43167
(lp43168
S'uInt32'
p43169
aNtp43170
tp43171
tp43172
sS'DAQmxCreateCIPulseChanTicks'
p43173
((lp43174
S'int32'
p43175
ag34
a((S'taskHandle'
p43176
(lp43177
S'TaskHandle'
p43178
aNtp43179
(S'counter'
p43180
(lp43181
S'char'
p43182
a(lp43183
I-1
aaNtp43184
(S'nameToAssignToChannel'
p43185
(lp43186
S'char'
p43187
a(lp43188
I-1
aaNtp43189
(S'sourceTerminal'
p43190
(lp43191
S'char'
p43192
a(lp43193
I-1
aaNtp43194
(S'minVal'
p43195
(lp43196
S'float64'
p43197
aNtp43198
(S'maxVal'
p43199
(lp43200
S'float64'
p43201
aNtp43202
tp43203
tp43204
sS'DAQmxGetCIDutyCycleLogicLvlBehavior'
p43205
((lp43206
S'int32'
p43207
ag34
a((S'taskHandle'
p43208
(lp43209
S'TaskHandle'
p43210
aNtp43211
(S'channel'
p43212
(lp43213
S'char'
p43214
a(lp43215
I-1
aaNtp43216
(S'data'
p43217
(lp43218
S'int32'
p43219
ag42
aNtp43220
tp43221
tp43222
sS'DAQmxResetAIFilterDelayAdjustment'
p43223
((lp43224
S'int32'
p43225
ag34
a((S'taskHandle'
p43226
(lp43227
S'TaskHandle'
p43228
aNtp43229
(S'channel'
p43230
(lp43231
S'char'
p43232
a(lp43233
I-1
aaNtp43234
tp43235
tp43236
sS'DAQmxGetScaleMapScaledMax'
p43237
((lp43238
S'int32'
p43239
ag34
a((S'scaleName'
p43240
(lp43241
S'char'
p43242
a(lp43243
I-1
aaNtp43244
(S'data'
p43245
(lp43246
S'float64'
p43247
ag42
aNtp43248
tp43249
tp43250
sS'DAQmxGetSampClkDigFltrMinPulseWidth'
p43251
((lp43252
S'int32'
p43253
ag34
a((S'taskHandle'
p43254
(lp43255
S'TaskHandle'
p43256
aNtp43257
(S'data'
p43258
(lp43259
S'float64'
p43260
ag42
aNtp43261
tp43262
tp43263
sS'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p43264
((lp43265
S'int32'
p43266
ag34
a((S'taskHandle'
p43267
(lp43268
S'TaskHandle'
p43269
aNtp43270
(S'data'
p43271
(lp43272
S'char'
p43273
ag42
aNtp43274
tp43275
tp43276
sS'DAQmxSetAIDataXferCustomThreshold'
p43277
((lp43278
S'int32'
p43279
ag34
a((S'taskHandle'
p43280
(lp43281
S'TaskHandle'
p43282
aNtp43283
(S'channel'
p43284
(lp43285
S'char'
p43286
a(lp43287
I-1
aaNtp43288
(S'data'
p43289
(lp43290
S'uInt32'
p43291
aNtp43292
tp43293
tp43294
sS'DAQmxSetup1521Cal'
p43295
((lp43296
S'int32'
p43297
ag34
a((S'calHandle'
p43298
(lp43299
S'CalHandle'
p43300
aNtp43301
(S'channelName'
p43302
(lp43303
S'char'
p43304
a(lp43305
I-1
aaNtp43306
tp43307
tp43308
sS'DAQmxSetAICurrentUnits'
p43309
((lp43310
S'int32'
p43311
ag34
a((S'taskHandle'
p43312
(lp43313
S'TaskHandle'
p43314
aNtp43315
(S'channel'
p43316
(lp43317
S'char'
p43318
a(lp43319
I-1
aaNtp43320
(S'data'
p43321
(lp43322
S'int32'
p43323
aNtp43324
tp43325
tp43326
sS'DAQmxResetCICountEdgesCountResetDigSyncEnable'
p43327
((lp43328
S'int32'
p43329
ag34
a((S'taskHandle'
p43330
(lp43331
S'TaskHandle'
p43332
aNtp43333
(S'channel'
p43334
(lp43335
S'char'
p43336
a(lp43337
I-1
aaNtp43338
tp43339
tp43340
sS'DAQmxGetAOGain'
p43341
((lp43342
S'int32'
p43343
ag34
a((S'taskHandle'
p43344
(lp43345
S'TaskHandle'
p43346
aNtp43347
(S'channel'
p43348
(lp43349
S'char'
p43350
a(lp43351
I-1
aaNtp43352
(S'data'
p43353
(lp43354
S'float64'
p43355
ag42
aNtp43356
tp43357
tp43358
sS'DAQmxGetCIDutyCycleDigFltrMinPulseWidth'
p43359
((lp43360
S'int32'
p43361
ag34
a((S'taskHandle'
p43362
(lp43363
S'TaskHandle'
p43364
aNtp43365
(S'channel'
p43366
(lp43367
S'char'
p43368
a(lp43369
I-1
aaNtp43370
(S'data'
p43371
(lp43372
S'float64'
p43373
ag42
aNtp43374
tp43375
tp43376
sS'DAQmxGetExportedStartTrigOutputTerm'
p43377
((lp43378
S'int32'
p43379
ag34
a((S'taskHandle'
p43380
(lp43381
S'TaskHandle'
p43382
aNtp43383
(S'data'
p43384
(lp43385
S'char'
p43386
ag42
aNtp43387
(S'bufferSize'
p43388
(lp43389
S'uInt32'
p43390
aNtp43391
tp43392
tp43393
sS'DAQmxGetCIAngEncoderInitialAngle'
p43394
((lp43395
S'int32'
p43396
ag34
a((S'taskHandle'
p43397
(lp43398
S'TaskHandle'
p43399
aNtp43400
(S'channel'
p43401
(lp43402
S'char'
p43403
a(lp43404
I-1
aaNtp43405
(S'data'
p43406
(lp43407
S'float64'
p43408
ag42
aNtp43409
tp43410
tp43411
sS'DAQmxAdjust1503CurrentCal'
p43412
((lp43413
S'int32'
p43414
ag34
a((S'calHandle'
p43415
(lp43416
S'CalHandle'
p43417
aNtp43418
(S'channelName'
p43419
(lp43420
S'char'
p43421
a(lp43422
I-1
aaNtp43423
(S'measCurrent'
p43424
(lp43425
S'float64'
p43426
aNtp43427
tp43428
tp43429
sS'DAQmxGetPhysicalChanAOTermCfgs'
p43430
((lp43431
S'int32'
p43432
ag34
a((S'physicalChannel'
p43433
(lp43434
S'char'
p43435
a(lp43436
I-1
aaNtp43437
(S'data'
p43438
(lp43439
S'int32'
p43440
ag42
aNtp43441
tp43442
tp43443
sS'DAQmxClearTEDS'
p43444
((lp43445
S'int32'
p43446
ag34
a((S'physicalChannel'
p43447
(lp43448
S'char'
p43449
a(lp43450
I-1
aaNtp43451
tp43452
tp43453
sS'DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth'
p43454
((lp43455
S'int32'
p43456
ag34
a((S'taskHandle'
p43457
(lp43458
S'TaskHandle'
p43459
aNtp43460
(S'channel'
p43461
(lp43462
S'char'
p43463
a(lp43464
I-1
aaNtp43465
tp43466
tp43467
sS'DAQmxGetExportedAdvTrigPulseWidth'
p43468
((lp43469
S'int32'
p43470
ag34
a((S'taskHandle'
p43471
(lp43472
S'TaskHandle'
p43473
aNtp43474
(S'data'
p43475
(lp43476
S'float64'
p43477
ag42
aNtp43478
tp43479
tp43480
sS'DAQmxCfgAnlgWindowStartTrig'
p43481
((lp43482
S'int32'
p43483
ag34
a((S'taskHandle'
p43484
(lp43485
S'TaskHandle'
p43486
aNtp43487
(S'triggerSource'
p43488
(lp43489
S'char'
p43490
a(lp43491
I-1
aaNtp43492
(S'triggerWhen'
p43493
(lp43494
S'int32'
p43495
aNtp43496
(S'windowTop'
p43497
(lp43498
S'float64'
p43499
aNtp43500
(S'windowBottom'
p43501
(lp43502
S'float64'
p43503
aNtp43504
tp43505
tp43506
sS'DAQmxGetWriteOvercurrentChans'
p43507
((lp43508
S'int32'
p43509
ag34
a((S'taskHandle'
p43510
(lp43511
S'TaskHandle'
p43512
aNtp43513
(S'data'
p43514
(lp43515
S'char'
p43516
ag42
aNtp43517
(S'bufferSize'
p43518
(lp43519
S'uInt32'
p43520
aNtp43521
tp43522
tp43523
sS'DAQmxGetCOPulseLowTime'
p43524
((lp43525
S'int32'
p43526
ag34
a((S'taskHandle'
p43527
(lp43528
S'TaskHandle'
p43529
aNtp43530
(S'channel'
p43531
(lp43532
S'char'
p43533
a(lp43534
I-1
aaNtp43535
(S'data'
p43536
(lp43537
S'float64'
p43538
ag42
aNtp43539
tp43540
tp43541
sS'DAQmxGetCICountEdgesCountResetTerm'
p43542
((lp43543
S'int32'
p43544
ag34
a((S'taskHandle'
p43545
(lp43546
S'TaskHandle'
p43547
aNtp43548
(S'channel'
p43549
(lp43550
S'char'
p43551
a(lp43552
I-1
aaNtp43553
(S'data'
p43554
(lp43555
S'char'
p43556
ag42
aNtp43557
(S'bufferSize'
p43558
(lp43559
S'uInt32'
p43560
aNtp43561
tp43562
tp43563
sS'DAQmxSetAILVDTUnits'
p43564
((lp43565
S'int32'
p43566
ag34
a((S'taskHandle'
p43567
(lp43568
S'TaskHandle'
p43569
aNtp43570
(S'channel'
p43571
(lp43572
S'char'
p43573
a(lp43574
I-1
aaNtp43575
(S'data'
p43576
(lp43577
S'int32'
p43578
aNtp43579
tp43580
tp43581
sS'DAQmxAdjust9225Cal'
p43582
((lp43583
S'int32'
p43584
ag34
a((S'calHandle'
p43585
(lp43586
S'CalHandle'
p43587
aNtp43588
(S'channelNames'
p43589
(lp43590
S'char'
p43591
a(lp43592
I-1
aaNtp43593
(S'value'
p43594
(lp43595
S'float64'
p43596
aNtp43597
tp43598
tp43599
sS'DAQmxSetExportedChangeDetectEventOutputTerm'
p43600
((lp43601
S'int32'
p43602
ag34
a((S'taskHandle'
p43603
(lp43604
S'TaskHandle'
p43605
aNtp43606
(S'data'
p43607
(lp43608
S'char'
p43609
ag42
aNtp43610
tp43611
tp43612
sS'DAQmxGetAIConvSrcEx'
p43613
((lp43614
S'int32'
p43615
ag34
a((S'taskHandle'
p43616
(lp43617
S'TaskHandle'
p43618
aNtp43619
(S'deviceNames'
p43620
(lp43621
S'char'
p43622
a(lp43623
I-1
aaNtp43624
(S'data'
p43625
(lp43626
S'char'
p43627
ag42
aNtp43628
(S'bufferSize'
p43629
(lp43630
S'uInt32'
p43631
aNtp43632
tp43633
tp43634
sS'DAQmxCfgDigPatternStartTrig'
p43635
((lp43636
S'int32'
p43637
ag34
a((S'taskHandle'
p43638
(lp43639
S'TaskHandle'
p43640
aNtp43641
(S'triggerSource'
p43642
(lp43643
S'char'
p43644
a(lp43645
I-1
aaNtp43646
(S'triggerPattern'
p43647
(lp43648
S'char'
p43649
a(lp43650
I-1
aaNtp43651
(S'triggerWhen'
p43652
(lp43653
S'int32'
p43654
aNtp43655
tp43656
tp43657
sS'DAQmxSetCIEncoderAInputDigFltrTimebaseSrc'
p43658
((lp43659
S'int32'
p43660
ag34
a((S'taskHandle'
p43661
(lp43662
S'TaskHandle'
p43663
aNtp43664
(S'channel'
p43665
(lp43666
S'char'
p43667
a(lp43668
I-1
aaNtp43669
(S'data'
p43670
(lp43671
S'char'
p43672
ag42
aNtp43673
tp43674
tp43675
sS'DAQmxAdjust4224Cal'
p43676
((lp43677
S'int32'
p43678
ag34
a((S'calHandle'
p43679
(lp43680
S'CalHandle'
p43681
aNtp43682
(S'channelNames'
p43683
(lp43684
S'char'
p43685
a(lp43686
I-1
aaNtp43687
(S'gain'
p43688
(lp43689
S'float64'
p43690
aNtp43691
(S'inputVal'
p43692
(lp43693
S'float64'
p43694
aNtp43695
tp43696
tp43697
sS'DAQmxSetAOFilterDelay'
p43698
((lp43699
S'int32'
p43700
ag34
a((S'taskHandle'
p43701
(lp43702
S'TaskHandle'
p43703
aNtp43704
(S'channel'
p43705
(lp43706
S'char'
p43707
a(lp43708
I-1
aaNtp43709
(S'data'
p43710
(lp43711
S'float64'
p43712
aNtp43713
tp43714
tp43715
sS'DAQmxDisconnectTerms'
p43716
((lp43717
S'int32'
p43718
ag34
a((S'sourceTerminal'
p43719
(lp43720
S'char'
p43721
a(lp43722
I-1
aaNtp43723
(S'destinationTerminal'
p43724
(lp43725
S'char'
p43726
a(lp43727
I-1
aaNtp43728
tp43729
tp43730
sS'DAQmxResetAnlgWinRefTrigDigSyncEnable'
p43731
((lp43732
S'int32'
p43733
ag34
a((S'taskHandle'
p43734
(lp43735
S'TaskHandle'
p43736
aNtp43737
tp43738
tp43739
sS'DAQmxSetDOLineStatesPausedState'
p43740
((lp43741
S'int32'
p43742
ag34
a((S'taskHandle'
p43743
(lp43744
S'TaskHandle'
p43745
aNtp43746
(S'channel'
p43747
(lp43748
S'char'
p43749
a(lp43750
I-1
aaNtp43751
(S'data'
p43752
(lp43753
S'int32'
p43754
aNtp43755
tp43756
tp43757
sS'DAQmxSetCIPulseFreqStartEdge'
p43758
((lp43759
S'int32'
p43760
ag34
a((S'taskHandle'
p43761
(lp43762
S'TaskHandle'
p43763
aNtp43764
(S'channel'
p43765
(lp43766
S'char'
p43767
a(lp43768
I-1
aaNtp43769
(S'data'
p43770
(lp43771
S'int32'
p43772
aNtp43773
tp43774
tp43775
sS'DAQmxResetExportedHshkEventPulsePolarity'
p43776
((lp43777
S'int32'
p43778
ag34
a((S'taskHandle'
p43779
(lp43780
S'TaskHandle'
p43781
aNtp43782
tp43783
tp43784
sS'DAQmxResetAIFreqHyst'
p43785
((lp43786
S'int32'
p43787
ag34
a((S'taskHandle'
p43788
(lp43789
S'TaskHandle'
p43790
aNtp43791
(S'channel'
p43792
(lp43793
S'char'
p43794
a(lp43795
I-1
aaNtp43796
tp43797
tp43798
sS'DAQmxGetWatchdogHasExpired'
p43799
((lp43800
S'int32'
p43801
ag34
a((S'taskHandle'
p43802
(lp43803
S'TaskHandle'
p43804
aNtp43805
(S'data'
p43806
(lp43807
S'bool32'
p43808
ag42
aNtp43809
tp43810
tp43811
sS'DAQmxResetAILowpassEnable'
p43812
((lp43813
S'int32'
p43814
ag34
a((S'taskHandle'
p43815
(lp43816
S'TaskHandle'
p43817
aNtp43818
(S'channel'
p43819
(lp43820
S'char'
p43821
a(lp43822
I-1
aaNtp43823
tp43824
tp43825
sS'DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals'
p43826
((lp43827
S'int32'
p43828
ag34
a((S'device'
p43829
(lp43830
S'char'
p43831
a(lp43832
I-1
aaNtp43833
(S'data'
p43834
(lp43835
S'float64'
p43836
ag42
aNtp43837
(S'arraySizeInElements'
p43838
(lp43839
S'uInt32'
p43840
aNtp43841
tp43842
tp43843
sS'DAQmxGetDevAICurrentIntExcitDiscreteVals'
p43844
((lp43845
S'int32'
p43846
ag34
a((S'device'
p43847
(lp43848
S'char'
p43849
a(lp43850
I-1
aaNtp43851
(S'data'
p43852
(lp43853
S'float64'
p43854
ag42
aNtp43855
(S'arraySizeInElements'
p43856
(lp43857
S'uInt32'
p43858
aNtp43859
tp43860
tp43861
sS'DAQmxResetReadOverWrite'
p43862
((lp43863
S'int32'
p43864
ag34
a((S'taskHandle'
p43865
(lp43866
S'TaskHandle'
p43867
aNtp43868
tp43869
tp43870
sS'DAQmxSetDODataXferReqCond'
p43871
((lp43872
S'int32'
p43873
ag34
a((S'taskHandle'
p43874
(lp43875
S'TaskHandle'
p43876
aNtp43877
(S'channel'
p43878
(lp43879
S'char'
p43880
a(lp43881
I-1
aaNtp43882
(S'data'
p43883
(lp43884
S'int32'
p43885
aNtp43886
tp43887
tp43888
sS'DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth'
p43889
((lp43890
S'int32'
p43891
ag34
a((S'taskHandle'
p43892
(lp43893
S'TaskHandle'
p43894
aNtp43895
(S'channel'
p43896
(lp43897
S'char'
p43898
a(lp43899
I-1
aaNtp43900
(S'data'
p43901
(lp43902
S'float64'
p43903
ag42
aNtp43904
tp43905
tp43906
sS'DAQmxSetScalePolyForwardCoeff'
p43907
((lp43908
S'int32'
p43909
ag34
a((S'scaleName'
p43910
(lp43911
S'char'
p43912
a(lp43913
I-1
aaNtp43914
(S'data'
p43915
(lp43916
S'float64'
p43917
ag42
aNtp43918
(S'arraySizeInElements'
p43919
(lp43920
S'uInt32'
p43921
aNtp43922
tp43923
tp43924
sS'DAQmxGetAILVDTUnits'
p43925
((lp43926
S'int32'
p43927
ag34
a((S'taskHandle'
p43928
(lp43929
S'TaskHandle'
p43930
aNtp43931
(S'channel'
p43932
(lp43933
S'char'
p43934
a(lp43935
I-1
aaNtp43936
(S'data'
p43937
(lp43938
S'int32'
p43939
ag42
aNtp43940
tp43941
tp43942
sS'DAQmxSetDigPatternStartTrigSrc'
p43943
((lp43944
S'int32'
p43945
ag34
a((S'taskHandle'
p43946
(lp43947
S'TaskHandle'
p43948
aNtp43949
(S'data'
p43950
(lp43951
S'char'
p43952
ag42
aNtp43953
tp43954
tp43955
sS'DAQmxSetAIResistanceCfg'
p43956
((lp43957
S'int32'
p43958
ag34
a((S'taskHandle'
p43959
(lp43960
S'TaskHandle'
p43961
aNtp43962
(S'channel'
p43963
(lp43964
S'char'
p43965
a(lp43966
I-1
aaNtp43967
(S'data'
p43968
(lp43969
S'int32'
p43970
aNtp43971
tp43972
tp43973
sS'DAQmxSetup1125Cal'
p43974
((lp43975
S'int32'
p43976
ag34
a((S'calHandle'
p43977
(lp43978
S'CalHandle'
p43979
aNtp43980
(S'channelName'
p43981
(lp43982
S'char'
p43983
a(lp43984
I-1
aaNtp43985
(S'gain'
p43986
(lp43987
S'float64'
p43988
aNtp43989
tp43990
tp43991
sS'DAQmxSetup1502Cal'
p43992
((lp43993
S'int32'
p43994
ag34
a((S'calHandle'
p43995
(lp43996
S'CalHandle'
p43997
aNtp43998
(S'channelName'
p43999
(lp44000
S'char'
p44001
a(lp44002
I-1
aaNtp44003
(S'gain'
p44004
(lp44005
S'float64'
p44006
aNtp44007
tp44008
tp44009
sS'DAQmxSetCOAutoIncrCnt'
p44010
((lp44011
S'int32'
p44012
ag34
a((S'taskHandle'
p44013
(lp44014
S'TaskHandle'
p44015
aNtp44016
(S'channel'
p44017
(lp44018
S'char'
p44019
a(lp44020
I-1
aaNtp44021
(S'data'
p44022
(lp44023
S'uInt32'
p44024
aNtp44025
tp44026
tp44027
sS'DAQmxResetDigPatternRefTrigPattern'
p44028
((lp44029
S'int32'
p44030
ag34
a((S'taskHandle'
p44031
(lp44032
S'TaskHandle'
p44033
aNtp44034
tp44035
tp44036
sS'DAQmxResetCIPulseTimeUnits'
p44037
((lp44038
S'int32'
p44039
ag34
a((S'taskHandle'
p44040
(lp44041
S'TaskHandle'
p44042
aNtp44043
(S'channel'
p44044
(lp44045
S'char'
p44046
a(lp44047
I-1
aaNtp44048
tp44049
tp44050
sS'DAQmxGetAnlgLvlPauseTrigDigSyncEnable'
p44051
((lp44052
S'int32'
p44053
ag34
a((S'taskHandle'
p44054
(lp44055
S'TaskHandle'
p44056
aNtp44057
(S'data'
p44058
(lp44059
S'bool32'
p44060
ag42
aNtp44061
tp44062
tp44063
sS'DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc'
p44064
((lp44065
S'int32'
p44066
ag34
a((S'taskHandle'
p44067
(lp44068
S'TaskHandle'
p44069
aNtp44070
(S'channel'
p44071
(lp44072
S'char'
p44073
a(lp44074
I-1
aaNtp44075
(S'data'
p44076
(lp44077
S'char'
p44078
ag42
aNtp44079
tp44080
tp44081
sS'DAQmxSetBufOutputOnbrdBufSize'
p44082
((lp44083
S'int32'
p44084
ag34
a((S'taskHandle'
p44085
(lp44086
S'TaskHandle'
p44087
aNtp44088
(S'data'
p44089
(lp44090
S'uInt32'
p44091
aNtp44092
tp44093
tp44094
sS'DAQmxCreateWatchdogTimerTaskEx'
p44095
((lp44096
S'int32'
p44097
ag34
a((S'deviceName'
p44098
(lp44099
S'char'
p44100
a(lp44101
I-1
aaNtp44102
(S'taskName'
p44103
(lp44104
S'char'
p44105
a(lp44106
I-1
aaNtp44107
(S'taskHandle'
p44108
(lp44109
S'TaskHandle'
p44110
ag42
aNtp44111
(S'timeout'
p44112
(lp44113
S'float64'
p44114
aNtp44115
tp44116
tp44117
sS'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p44118
((lp44119
S'int32'
p44120
ag34
a((S'taskHandle'
p44121
(lp44122
S'TaskHandle'
p44123
aNtp44124
(S'channel'
p44125
(lp44126
S'char'
p44127
a(lp44128
I-1
aaNtp44129
(S'data'
p44130
(lp44131
S'char'
p44132
ag42
aNtp44133
tp44134
tp44135
sS'DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseSrc'
p44136
((lp44137
S'int32'
p44138
ag34
a((S'taskHandle'
p44139
(lp44140
S'TaskHandle'
p44141
aNtp44142
tp44143
tp44144
sS'DAQmxGetCIEncoderZInputDigFltrTimebaseRate'
p44145
((lp44146
S'int32'
p44147
ag34
a((S'taskHandle'
p44148
(lp44149
S'TaskHandle'
p44150
aNtp44151
(S'channel'
p44152
(lp44153
S'char'
p44154
a(lp44155
I-1
aaNtp44156
(S'data'
p44157
(lp44158
S'float64'
p44159
ag42
aNtp44160
tp44161
tp44162
sS'DAQmxResetDigLvlPauseTrigDigSyncEnable'
p44163
((lp44164
S'int32'
p44165
ag34
a((S'taskHandle'
p44166
(lp44167
S'TaskHandle'
p44168
aNtp44169
tp44170
tp44171
sS'DAQmxGetCIEncoderBInputDigSyncEnable'
p44172
((lp44173
S'int32'
p44174
ag34
a((S'taskHandle'
p44175
(lp44176
S'TaskHandle'
p44177
aNtp44178
(S'channel'
p44179
(lp44180
S'char'
p44181
a(lp44182
I-1
aaNtp44183
(S'data'
p44184
(lp44185
S'bool32'
p44186
ag42
aNtp44187
tp44188
tp44189
sS'DAQmxResetAIDigFltrBandpassCenterFreq'
p44190
((lp44191
S'int32'
p44192
ag34
a((S'taskHandle'
p44193
(lp44194
S'TaskHandle'
p44195
aNtp44196
(S'channel'
p44197
(lp44198
S'char'
p44199
a(lp44200
I-1
aaNtp44201
tp44202
tp44203
sS'DAQmxSetAICurrentShuntLoc'
p44204
((lp44205
S'int32'
p44206
ag34
a((S'taskHandle'
p44207
(lp44208
S'TaskHandle'
p44209
aNtp44210
(S'channel'
p44211
(lp44212
S'char'
p44213
a(lp44214
I-1
aaNtp44215
(S'data'
p44216
(lp44217
S'int32'
p44218
aNtp44219
tp44220
tp44221
sS'DAQmxResetLoggingPause'
p44222
((lp44223
S'int32'
p44224
ag34
a((S'taskHandle'
p44225
(lp44226
S'TaskHandle'
p44227
aNtp44228
tp44229
tp44230
sS'DAQmxSetCIEncoderZInputTermCfg'
p44231
((lp44232
S'int32'
p44233
ag34
a((S'taskHandle'
p44234
(lp44235
S'TaskHandle'
p44236
aNtp44237
(S'channel'
p44238
(lp44239
S'char'
p44240
a(lp44241
I-1
aaNtp44242
(S'data'
p44243
(lp44244
S'int32'
p44245
aNtp44246
tp44247
tp44248
sS'DAQmxResetAnlgEdgeStartTrigDigSyncEnable'
p44249
((lp44250
S'int32'
p44251
ag34
a((S'taskHandle'
p44252
(lp44253
S'TaskHandle'
p44254
aNtp44255
tp44256
tp44257
sS'DAQmxSetCIEncoderBInputTerm'
p44258
((lp44259
S'int32'
p44260
ag34
a((S'taskHandle'
p44261
(lp44262
S'TaskHandle'
p44263
aNtp44264
(S'channel'
p44265
(lp44266
S'char'
p44267
a(lp44268
I-1
aaNtp44269
(S'data'
p44270
(lp44271
S'char'
p44272
ag42
aNtp44273
tp44274
tp44275
sS'DAQmxRegisterEveryNSamplesEvent'
p44276
((lp44277
S'int32'
p44278
ag34
a((S'task'
p44279
(lp44280
S'TaskHandle'
p44281
aNtp44282
(S'everyNsamplesEventType'
p44283
(lp44284
S'int32'
p44285
aNtp44286
(S'nSamples'
p44287
(lp44288
S'uInt32'
p44289
aNtp44290
(S'options'
p44291
(lp44292
S'uInt32'
p44293
aNtp44294
(S'callbackFunction'
p44295
(lp44296
S'DAQmxEveryNSamplesEventCallbackPtr'
p44297
aNtp44298
(S'callbackData'
p44299
(lp44300
S'void'
p44301
ag42
aNtp44302
tp44303
tp44304
sS'DAQmxSetReadOffset'
p44305
((lp44306
S'int32'
p44307
ag34
a((S'taskHandle'
p44308
(lp44309
S'TaskHandle'
p44310
aNtp44311
(S'data'
p44312
(lp44313
S'int32'
p44314
aNtp44315
tp44316
tp44317
sS'DAQmxResetCIPulseTimeLogicLvlBehavior'
p44318
((lp44319
S'int32'
p44320
ag34
a((S'taskHandle'
p44321
(lp44322
S'TaskHandle'
p44323
aNtp44324
(S'channel'
p44325
(lp44326
S'char'
p44327
a(lp44328
I-1
aaNtp44329
tp44330
tp44331
sS'DAQmxAdjust9216Cal'
p44332
((lp44333
S'int32'
p44334
ag34
a((S'calHandle'
p44335
(lp44336
S'CalHandle'
p44337
aNtp44338
(S'channelNames'
p44339
(lp44340
S'char'
p44341
a(lp44342
I-1
aaNtp44343
(S'value'
p44344
(lp44345
S'float64'
p44346
aNtp44347
tp44348
tp44349
sS'DAQmxResetCIEncoderZInputDigFltrMinPulseWidth'
p44350
((lp44351
S'int32'
p44352
ag34
a((S'taskHandle'
p44353
(lp44354
S'TaskHandle'
p44355
aNtp44356
(S'channel'
p44357
(lp44358
S'char'
p44359
a(lp44360
I-1
aaNtp44361
tp44362
tp44363
sS'DAQmxResetAIForceIEPESensorSensitivityUnits'
p44364
((lp44365
S'int32'
p44366
ag34
a((S'taskHandle'
p44367
(lp44368
S'TaskHandle'
p44369
aNtp44370
(S'channel'
p44371
(lp44372
S'char'
p44373
a(lp44374
I-1
aaNtp44375
tp44376
tp44377
sS'DAQmxResetReadWaitMode'
p44378
((lp44379
S'int32'
p44380
ag34
a((S'taskHandle'
p44381
(lp44382
S'TaskHandle'
p44383
aNtp44384
tp44385
tp44386
sS'DAQmxResetCICountEdgesInitialCnt'
p44387
((lp44388
S'int32'
p44389
ag34
a((S'taskHandle'
p44390
(lp44391
S'TaskHandle'
p44392
aNtp44393
(S'channel'
p44394
(lp44395
S'char'
p44396
a(lp44397
I-1
aaNtp44398
tp44399
tp44400
sS'DAQmxGetCIPeriodTerm'
p44401
((lp44402
S'int32'
p44403
ag34
a((S'taskHandle'
p44404
(lp44405
S'TaskHandle'
p44406
aNtp44407
(S'channel'
p44408
(lp44409
S'char'
p44410
a(lp44411
I-1
aaNtp44412
(S'data'
p44413
(lp44414
S'char'
p44415
ag42
aNtp44416
(S'bufferSize'
p44417
(lp44418
S'uInt32'
p44419
aNtp44420
tp44421
tp44422
sS'DAQmxResetDIDataXferMech'
p44423
((lp44424
S'int32'
p44425
ag34
a((S'taskHandle'
p44426
(lp44427
S'TaskHandle'
p44428
aNtp44429
(S'channel'
p44430
(lp44431
S'char'
p44432
a(lp44433
I-1
aaNtp44434
tp44435
tp44436
sS'DAQmxReadBinaryU32'
p44437
((lp44438
S'int32'
p44439
ag34
a((S'taskHandle'
p44440
(lp44441
S'TaskHandle'
p44442
aNtp44443
(S'numSampsPerChan'
p44444
(lp44445
S'int32'
p44446
aNtp44447
(S'timeout'
p44448
(lp44449
S'float64'
p44450
aNtp44451
(S'fillMode'
p44452
(lp44453
S'bool32'
p44454
aNtp44455
(S'readArray'
p44456
(lp44457
S'uInt32'
p44458
a(lp44459
I-1
aaNtp44460
(S'arraySizeInSamps'
p44461
(lp44462
S'uInt32'
p44463
aNtp44464
(S'sampsPerChanRead'
p44465
(lp44466
S'int32'
p44467
ag42
aNtp44468
(S'reserved'
p44469
(lp44470
S'bool32'
p44471
ag42
aNtp44472
tp44473
tp44474
sS'DAQmxCfgDigEdgeRefTrig'
p44475
((lp44476
S'int32'
p44477
ag34
a((S'taskHandle'
p44478
(lp44479
S'TaskHandle'
p44480
aNtp44481
(S'triggerSource'
p44482
(lp44483
S'char'
p44484
a(lp44485
I-1
aaNtp44486
(S'triggerEdge'
p44487
(lp44488
S'int32'
p44489
aNtp44490
(S'pretriggerSamples'
p44491
(lp44492
S'uInt32'
p44493
aNtp44494
tp44495
tp44496
sS'DAQmxResetAnlgWinStartTrigBtm'
p44497
((lp44498
S'int32'
p44499
ag34
a((S'taskHandle'
p44500
(lp44501
S'TaskHandle'
p44502
aNtp44503
tp44504
tp44505
sS'DAQmxSelfCal'
p44506
((lp44507
S'int32'
p44508
ag34
a((S'deviceName'
p44509
(lp44510
S'char'
p44511
a(lp44512
I-1
aaNtp44513
tp44514
tp44515
sS'DAQmxResetAIVelocityIEPESensorSensitivityUnits'
p44516
((lp44517
S'int32'
p44518
ag34
a((S'taskHandle'
p44519
(lp44520
S'TaskHandle'
p44521
aNtp44522
(S'channel'
p44523
(lp44524
S'char'
p44525
a(lp44526
I-1
aaNtp44527
tp44528
tp44529
sS'DAQmxSetAIThrmcplScaleType'
p44530
((lp44531
S'int32'
p44532
ag34
a((S'taskHandle'
p44533
(lp44534
S'TaskHandle'
p44535
aNtp44536
(S'channel'
p44537
(lp44538
S'char'
p44539
a(lp44540
I-1
aaNtp44541
(S'data'
p44542
(lp44543
S'int32'
p44544
aNtp44545
tp44546
tp44547
sS'DAQmxSetAIVelocityIEPESensorSensitivityUnits'
p44548
((lp44549
S'int32'
p44550
ag34
a((S'taskHandle'
p44551
(lp44552
S'TaskHandle'
p44553
aNtp44554
(S'channel'
p44555
(lp44556
S'char'
p44557
a(lp44558
I-1
aaNtp44559
(S'data'
p44560
(lp44561
S'int32'
p44562
aNtp44563
tp44564
tp44565
sS'DAQmxResetLoggingFilePath'
p44566
((lp44567
S'int32'
p44568
ag34
a((S'taskHandle'
p44569
(lp44570
S'TaskHandle'
p44571
aNtp44572
tp44573
tp44574
sS'DAQmxGetAIConvMaxRateEx'
p44575
((lp44576
S'int32'
p44577
ag34
a((S'taskHandle'
p44578
(lp44579
S'TaskHandle'
p44580
aNtp44581
(S'deviceNames'
p44582
(lp44583
S'char'
p44584
a(lp44585
I-1
aaNtp44586
(S'data'
p44587
(lp44588
S'float64'
p44589
ag42
aNtp44590
tp44591
tp44592
sS'DAQmxGetSysNIDAQMajorVersion'
p44593
((lp44594
S'int32'
p44595
ag34
a((S'data'
p44596
(lp44597
S'uInt32'
p44598
ag42
aNtp44599
tp44600
tp44601
sS'DAQmxGetCIFreqDigFltrTimebaseSrc'
p44602
((lp44603
S'int32'
p44604
ag34
a((S'taskHandle'
p44605
(lp44606
S'TaskHandle'
p44607
aNtp44608
(S'channel'
p44609
(lp44610
S'char'
p44611
a(lp44612
I-1
aaNtp44613
(S'data'
p44614
(lp44615
S'char'
p44616
ag42
aNtp44617
(S'bufferSize'
p44618
(lp44619
S'uInt32'
p44620
aNtp44621
tp44622
tp44623
sS'DAQmxPerformBridgeShuntCal'
p44624
((lp44625
S'int32'
p44626
ag34
a((S'taskHandle'
p44627
(lp44628
S'TaskHandle'
p44629
aNtp44630
(S'channel'
p44631
(lp44632
S'char'
p44633
a(lp44634
I-1
aaNtp44635
(S'shuntResistorValue'
p44636
(lp44637
S'float64'
p44638
aNtp44639
(S'shuntResistorLocation'
p44640
(lp44641
S'int32'
p44642
aNtp44643
(S'bridgeResistance'
p44644
(lp44645
S'float64'
p44646
aNtp44647
(S'skipUnsupportedChannels'
p44648
(lp44649
S'bool32'
p44650
aNtp44651
tp44652
tp44653
sS'DAQmxSetup433xCal'
p44654
((lp44655
S'int32'
p44656
ag34
a((S'calHandle'
p44657
(lp44658
S'CalHandle'
p44659
aNtp44660
(S'channelNames'
p44661
(lp44662
S'char'
p44663
a(lp44664
I-1
aaNtp44665
(S'excitationVoltage'
p44666
(lp44667
S'float64'
p44668
aNtp44669
tp44670
tp44671
sS'DAQmxGetExportedHshkEventOutputBehavior'
p44672
((lp44673
S'int32'
p44674
ag34
a((S'taskHandle'
p44675
(lp44676
S'TaskHandle'
p44677
aNtp44678
(S'data'
p44679
(lp44680
S'int32'
p44681
ag42
aNtp44682
tp44683
tp44684
sS'DAQmxGetAIChanCalApplyCalIfExp'
p44685
((lp44686
S'int32'
p44687
ag34
a((S'taskHandle'
p44688
(lp44689
S'TaskHandle'
p44690
aNtp44691
(S'channel'
p44692
(lp44693
S'char'
p44694
a(lp44695
I-1
aaNtp44696
(S'data'
p44697
(lp44698
S'bool32'
p44699
ag42
aNtp44700
tp44701
tp44702
sS'DAQmxResetSampClkDigFltrMinPulseWidth'
p44703
((lp44704
S'int32'
p44705
ag34
a((S'taskHandle'
p44706
(lp44707
S'TaskHandle'
p44708
aNtp44709
tp44710
tp44711
sS'DAQmxGetSampClkTimebaseTerm'
p44712
((lp44713
S'int32'
p44714
ag34
a((S'taskHandle'
p44715
(lp44716
S'TaskHandle'
p44717
aNtp44718
(S'data'
p44719
(lp44720
S'char'
p44721
ag42
aNtp44722
(S'bufferSize'
p44723
(lp44724
S'uInt32'
p44725
aNtp44726
tp44727
tp44728
sS'DAQmxSetAOCustomScaleName'
p44729
((lp44730
S'int32'
p44731
ag34
a((S'taskHandle'
p44732
(lp44733
S'TaskHandle'
p44734
aNtp44735
(S'channel'
p44736
(lp44737
S'char'
p44738
a(lp44739
I-1
aaNtp44740
(S'data'
p44741
(lp44742
S'char'
p44743
ag42
aNtp44744
tp44745
tp44746
sS'DAQmxSetCIFreqLogicLvlBehavior'
p44747
((lp44748
S'int32'
p44749
ag34
a((S'taskHandle'
p44750
(lp44751
S'TaskHandle'
p44752
aNtp44753
(S'channel'
p44754
(lp44755
S'char'
p44756
a(lp44757
I-1
aaNtp44758
(S'data'
p44759
(lp44760
S'int32'
p44761
aNtp44762
tp44763
tp44764
sS'DAQmxGetCICountEdgesCountResetTermCfg'
p44765
((lp44766
S'int32'
p44767
ag34
a((S'taskHandle'
p44768
(lp44769
S'TaskHandle'
p44770
aNtp44771
(S'channel'
p44772
(lp44773
S'char'
p44774
a(lp44775
I-1
aaNtp44776
(S'data'
p44777
(lp44778
S'int32'
p44779
ag42
aNtp44780
tp44781
tp44782
sS'DAQmxSetDigPatternStartTrigWhen'
p44783
((lp44784
S'int32'
p44785
ag34
a((S'taskHandle'
p44786
(lp44787
S'TaskHandle'
p44788
aNtp44789
(S'data'
p44790
(lp44791
S'int32'
p44792
aNtp44793
tp44794
tp44795
sS'DAQmxGetNthTaskReadChannel'
p44796
((lp44797
S'int32'
p44798
ag34
a((S'taskHandle'
p44799
(lp44800
S'TaskHandle'
p44801
aNtp44802
(S'index'
p44803
(lp44804
S'uInt32'
p44805
aNtp44806
(S'buffer'
p44807
(lp44808
S'char'
p44809
a(lp44810
I-1
aaNtp44811
(S'bufferSize'
p44812
(lp44813
S'int32'
p44814
aNtp44815
tp44816
tp44817
sS'DAQmxResetAIThrmcplType'
p44818
((lp44819
S'int32'
p44820
ag34
a((S'taskHandle'
p44821
(lp44822
S'TaskHandle'
p44823
aNtp44824
(S'channel'
p44825
(lp44826
S'char'
p44827
a(lp44828
I-1
aaNtp44829
tp44830
tp44831
sS'DAQmxWaitUntilTaskDone'
p44832
((lp44833
S'int32'
p44834
ag34
a((S'taskHandle'
p44835
(lp44836
S'TaskHandle'
p44837
aNtp44838
(S'timeToWait'
p44839
(lp44840
S'float64'
p44841
aNtp44842
tp44843
tp44844
sS'DAQmxSetAIAtten'
p44845
((lp44846
S'int32'
p44847
ag34
a((S'taskHandle'
p44848
(lp44849
S'TaskHandle'
p44850
aNtp44851
(S'channel'
p44852
(lp44853
S'char'
p44854
a(lp44855
I-1
aaNtp44856
(S'data'
p44857
(lp44858
S'float64'
p44859
aNtp44860
tp44861
tp44862
sS'DAQmxResetAILowpassSwitchCapClkSrc'
p44863
((lp44864
S'int32'
p44865
ag34
a((S'taskHandle'
p44866
(lp44867
S'TaskHandle'
p44868
aNtp44869
(S'channel'
p44870
(lp44871
S'char'
p44872
a(lp44873
I-1
aaNtp44874
tp44875
tp44876
sS'DAQmxResetCIEncoderZInputDigFltrEnable'
p44877
((lp44878
S'int32'
p44879
ag34
a((S'taskHandle'
p44880
(lp44881
S'TaskHandle'
p44882
aNtp44883
(S'channel'
p44884
(lp44885
S'char'
p44886
a(lp44887
I-1
aaNtp44888
tp44889
tp44890
sS'DAQmxSetRefTrigPretrigSamples'
p44891
((lp44892
S'int32'
p44893
ag34
a((S'taskHandle'
p44894
(lp44895
S'TaskHandle'
p44896
aNtp44897
(S'data'
p44898
(lp44899
S'uInt32'
p44900
aNtp44901
tp44902
tp44903
sS'DAQmxResetAICurrentShuntLoc'
p44904
((lp44905
S'int32'
p44906
ag34
a((S'taskHandle'
p44907
(lp44908
S'TaskHandle'
p44909
aNtp44910
(S'channel'
p44911
(lp44912
S'char'
p44913
a(lp44914
I-1
aaNtp44915
tp44916
tp44917
sS'DAQmxGetAIRVDTSensitivity'
p44918
((lp44919
S'int32'
p44920
ag34
a((S'taskHandle'
p44921
(lp44922
S'TaskHandle'
p44923
aNtp44924
(S'channel'
p44925
(lp44926
S'char'
p44927
a(lp44928
I-1
aaNtp44929
(S'data'
p44930
(lp44931
S'float64'
p44932
ag42
aNtp44933
tp44934
tp44935
sS'DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc'
p44936
((lp44937
S'int32'
p44938
ag34
a((S'taskHandle'
p44939
(lp44940
S'TaskHandle'
p44941
aNtp44942
(S'channel'
p44943
(lp44944
S'char'
p44945
a(lp44946
I-1
aaNtp44947
(S'data'
p44948
(lp44949
S'char'
p44950
ag42
aNtp44951
(S'bufferSize'
p44952
(lp44953
S'uInt32'
p44954
aNtp44955
tp44956
tp44957
sS'DAQmxResetDOUsbXferReqSize'
p44958
((lp44959
S'int32'
p44960
ag34
a((S'taskHandle'
p44961
(lp44962
S'TaskHandle'
p44963
aNtp44964
(S'channel'
p44965
(lp44966
S'char'
p44967
a(lp44968
I-1
aaNtp44969
tp44970
tp44971
sS'DAQmxIsTaskDone'
p44972
((lp44973
S'int32'
p44974
ag34
a((S'taskHandle'
p44975
(lp44976
S'TaskHandle'
p44977
aNtp44978
(S'isTaskDone'
p44979
(lp44980
S'bool32'
p44981
ag42
aNtp44982
tp44983
tp44984
sS'DAQmxSetCOPulseTimeUnits'
p44985
((lp44986
S'int32'
p44987
ag34
a((S'taskHandle'
p44988
(lp44989
S'TaskHandle'
p44990
aNtp44991
(S'channel'
p44992
(lp44993
S'char'
p44994
a(lp44995
I-1
aaNtp44996
(S'data'
p44997
(lp44998
S'int32'
p44999
aNtp45000
tp45001
tp45002
sS'DAQmxSetAnlgWinStartTrigBtm'
p45003
((lp45004
S'int32'
p45005
ag34
a((S'taskHandle'
p45006
(lp45007
S'TaskHandle'
p45008
aNtp45009
(S'data'
p45010
(lp45011
S'float64'
p45012
aNtp45013
tp45014
tp45015
sS'DAQmxGetAODACRefExtSrc'
p45016
((lp45017
S'int32'
p45018
ag34
a((S'taskHandle'
p45019
(lp45020
S'TaskHandle'
p45021
aNtp45022
(S'channel'
p45023
(lp45024
S'char'
p45025
a(lp45026
I-1
aaNtp45027
(S'data'
p45028
(lp45029
S'char'
p45030
ag42
aNtp45031
(S'bufferSize'
p45032
(lp45033
S'uInt32'
p45034
aNtp45035
tp45036
tp45037
sS'DAQmxSetAIExcitVal'
p45038
((lp45039
S'int32'
p45040
ag34
a((S'taskHandle'
p45041
(lp45042
S'TaskHandle'
p45043
aNtp45044
(S'channel'
p45045
(lp45046
S'char'
p45047
a(lp45048
I-1
aaNtp45049
(S'data'
p45050
(lp45051
S'float64'
p45052
aNtp45053
tp45054
tp45055
sS'DAQmxGetCICountEdgesDirTerm'
p45056
((lp45057
S'int32'
p45058
ag34
a((S'taskHandle'
p45059
(lp45060
S'TaskHandle'
p45061
aNtp45062
(S'channel'
p45063
(lp45064
S'char'
p45065
a(lp45066
I-1
aaNtp45067
(S'data'
p45068
(lp45069
S'char'
p45070
ag42
aNtp45071
(S'bufferSize'
p45072
(lp45073
S'uInt32'
p45074
aNtp45075
tp45076
tp45077
sS'DAQmxSetDOUseOnlyOnBrdMem'
p45078
((lp45079
S'int32'
p45080
ag34
a((S'taskHandle'
p45081
(lp45082
S'TaskHandle'
p45083
aNtp45084
(S'channel'
p45085
(lp45086
S'char'
p45087
a(lp45088
I-1
aaNtp45089
(S'data'
p45090
(lp45091
S'bool32'
p45092
aNtp45093
tp45094
tp45095
sS'DAQmxSetCOUsbXferReqSize'
p45096
((lp45097
S'int32'
p45098
ag34
a((S'taskHandle'
p45099
(lp45100
S'TaskHandle'
p45101
aNtp45102
(S'channel'
p45103
(lp45104
S'char'
p45105
a(lp45106
I-1
aaNtp45107
(S'data'
p45108
(lp45109
S'uInt32'
p45110
aNtp45111
tp45112
tp45113
sS'DAQmxResetSampQuantSampMode'
p45114
((lp45115
S'int32'
p45116
ag34
a((S'taskHandle'
p45117
(lp45118
S'TaskHandle'
p45119
aNtp45120
tp45121
tp45122
sS'DAQmxSetCIEncoderZInputDigFltrTimebaseRate'
p45123
((lp45124
S'int32'
p45125
ag34
a((S'taskHandle'
p45126
(lp45127
S'TaskHandle'
p45128
aNtp45129
(S'channel'
p45130
(lp45131
S'char'
p45132
a(lp45133
I-1
aaNtp45134
(S'data'
p45135
(lp45136
S'float64'
p45137
aNtp45138
tp45139
tp45140
sS'DAQmxResetInterlockedHshkTrigAssertedLvl'
p45141
((lp45142
S'int32'
p45143
ag34
a((S'taskHandle'
p45144
(lp45145
S'TaskHandle'
p45146
aNtp45147
tp45148
tp45149
sS'DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseRate'
p45150
((lp45151
S'int32'
p45152
ag34
a((S'taskHandle'
p45153
(lp45154
S'TaskHandle'
p45155
aNtp45156
(S'data'
p45157
(lp45158
S'float64'
p45159
aNtp45160
tp45161
tp45162
sS'DAQmxSetCISemiPeriodTerm'
p45163
((lp45164
S'int32'
p45165
ag34
a((S'taskHandle'
p45166
(lp45167
S'TaskHandle'
p45168
aNtp45169
(S'channel'
p45170
(lp45171
S'char'
p45172
a(lp45173
I-1
aaNtp45174
(S'data'
p45175
(lp45176
S'char'
p45177
ag42
aNtp45178
tp45179
tp45180
sS'DAQmxResetAnlgWinRefTrigDigFltrEnable'
p45181
((lp45182
S'int32'
p45183
ag34
a((S'taskHandle'
p45184
(lp45185
S'TaskHandle'
p45186
aNtp45187
tp45188
tp45189
sS'DAQmxGetCISemiPeriodDigSyncEnable'
p45190
((lp45191
S'int32'
p45192
ag34
a((S'taskHandle'
p45193
(lp45194
S'TaskHandle'
p45195
aNtp45196
(S'channel'
p45197
(lp45198
S'char'
p45199
a(lp45200
I-1
aaNtp45201
(S'data'
p45202
(lp45203
S'bool32'
p45204
ag42
aNtp45205
tp45206
tp45207
sS'DAQmxResetAILowpassSwitchCapExtClkFreq'
p45208
((lp45209
S'int32'
p45210
ag34
a((S'taskHandle'
p45211
(lp45212
S'TaskHandle'
p45213
aNtp45214
(S'channel'
p45215
(lp45216
S'char'
p45217
a(lp45218
I-1
aaNtp45219
tp45220
tp45221
sS'DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate'
p45222
((lp45223
S'int32'
p45224
ag34
a((S'taskHandle'
p45225
(lp45226
S'TaskHandle'
p45227
aNtp45228
(S'data'
p45229
(lp45230
S'float64'
p45231
aNtp45232
tp45233
tp45234
sS'DAQmxGetStartTrigType'
p45235
((lp45236
S'int32'
p45237
ag34
a((S'taskHandle'
p45238
(lp45239
S'TaskHandle'
p45240
aNtp45241
(S'data'
p45242
(lp45243
S'int32'
p45244
ag42
aNtp45245
tp45246
tp45247
sS'DAQmxGetAnlgEdgeRefTrigDigSyncEnable'
p45248
((lp45249
S'int32'
p45250
ag34
a((S'taskHandle'
p45251
(lp45252
S'TaskHandle'
p45253
aNtp45254
(S'data'
p45255
(lp45256
S'bool32'
p45257
ag42
aNtp45258
tp45259
tp45260
sS'DAQmxGetAnlgWinPauseTrigTop'
p45261
((lp45262
S'int32'
p45263
ag34
a((S'taskHandle'
p45264
(lp45265
S'TaskHandle'
p45266
aNtp45267
(S'data'
p45268
(lp45269
S'float64'
p45270
ag42
aNtp45271
tp45272
tp45273
sS'DAQmxGetPauseTrigType'
p45274
((lp45275
S'int32'
p45276
ag34
a((S'taskHandle'
p45277
(lp45278
S'TaskHandle'
p45279
aNtp45280
(S'data'
p45281
(lp45282
S'int32'
p45283
ag42
aNtp45284
tp45285
tp45286
sS'DAQmxSetCOCtrTimebaseMasterTimebaseDiv'
p45287
((lp45288
S'int32'
p45289
ag34
a((S'taskHandle'
p45290
(lp45291
S'TaskHandle'
p45292
aNtp45293
(S'channel'
p45294
(lp45295
S'char'
p45296
a(lp45297
I-1
aaNtp45298
(S'data'
p45299
(lp45300
S'uInt32'
p45301
aNtp45302
tp45303
tp45304
sS'DAQmxResetAnlgLvlPauseTrigWhen'
p45305
((lp45306
S'int32'
p45307
ag34
a((S'taskHandle'
p45308
(lp45309
S'TaskHandle'
p45310
aNtp45311
tp45312
tp45313
sS'DAQmxGetAIDigFltrOrder'
p45314
((lp45315
S'int32'
p45316
ag34
a((S'taskHandle'
p45317
(lp45318
S'TaskHandle'
p45319
aNtp45320
(S'channel'
p45321
(lp45322
S'char'
p45323
a(lp45324
I-1
aaNtp45325
(S'data'
p45326
(lp45327
S'uInt32'
p45328
ag42
aNtp45329
tp45330
tp45331
sS'DAQmxSetCIPulseTimeStartEdge'
p45332
((lp45333
S'int32'
p45334
ag34
a((S'taskHandle'
p45335
(lp45336
S'TaskHandle'
p45337
aNtp45338
(S'channel'
p45339
(lp45340
S'char'
p45341
a(lp45342
I-1
aaNtp45343
(S'data'
p45344
(lp45345
S'int32'
p45346
aNtp45347
tp45348
tp45349
sS'DAQmxGetCOCtrTimebaseDigSyncEnable'
p45350
((lp45351
S'int32'
p45352
ag34
a((S'taskHandle'
p45353
(lp45354
S'TaskHandle'
p45355
aNtp45356
(S'channel'
p45357
(lp45358
S'char'
p45359
a(lp45360
I-1
aaNtp45361
(S'data'
p45362
(lp45363
S'bool32'
p45364
ag42
aNtp45365
tp45366
tp45367
sS'DAQmxGetRefTrigAutoTriggered'
p45368
((lp45369
S'int32'
p45370
ag34
a((S'taskHandle'
p45371
(lp45372
S'TaskHandle'
p45373
aNtp45374
(S'data'
p45375
(lp45376
S'bool32'
p45377
ag42
aNtp45378
tp45379
tp45380
sS'DAQmxGetScalePreScaledUnits'
p45381
((lp45382
S'int32'
p45383
ag34
a((S'scaleName'
p45384
(lp45385
S'char'
p45386
a(lp45387
I-1
aaNtp45388
(S'data'
p45389
(lp45390
S'int32'
p45391
ag42
aNtp45392
tp45393
tp45394
sS'DAQmxGetAOPowerAmpGain'
p45395
((lp45396
S'int32'
p45397
ag34
a((S'physicalChannel'
p45398
(lp45399
S'char'
p45400
a(lp45401
I-1
aaNtp45402
(S'data'
p45403
(lp45404
S'float64'
p45405
ag42
aNtp45406
tp45407
tp45408
sS'DAQmxResetAILVDTSensitivityUnits'
p45409
((lp45410
S'int32'
p45411
ag34
a((S'taskHandle'
p45412
(lp45413
S'TaskHandle'
p45414
aNtp45415
(S'channel'
p45416
(lp45417
S'char'
p45418
a(lp45419
I-1
aaNtp45420
tp45421
tp45422
sS'DAQmxResetCICtrTimebaseRate'
p45423
((lp45424
S'int32'
p45425
ag34
a((S'taskHandle'
p45426
(lp45427
S'TaskHandle'
p45428
aNtp45429
(S'channel'
p45430
(lp45431
S'char'
p45432
a(lp45433
I-1
aaNtp45434
tp45435
tp45436
sS'DAQmxResetRefTrigDelay'
p45437
((lp45438
S'int32'
p45439
ag34
a((S'taskHandle'
p45440
(lp45441
S'TaskHandle'
p45442
aNtp45443
tp45444
tp45445
sS'DAQmxSetAIBridgeTableElectricalVals'
p45446
((lp45447
S'int32'
p45448
ag34
a((S'taskHandle'
p45449
(lp45450
S'TaskHandle'
p45451
aNtp45452
(S'channel'
p45453
(lp45454
S'char'
p45455
a(lp45456
I-1
aaNtp45457
(S'data'
p45458
(lp45459
S'float64'
p45460
ag42
aNtp45461
(S'arraySizeInElements'
p45462
(lp45463
S'uInt32'
p45464
aNtp45465
tp45466
tp45467
sS'DAQmxResetCICountEdgesCountResetDigFltrEnable'
p45468
((lp45469
S'int32'
p45470
ag34
a((S'taskHandle'
p45471
(lp45472
S'TaskHandle'
p45473
aNtp45474
(S'channel'
p45475
(lp45476
S'char'
p45477
a(lp45478
I-1
aaNtp45479
tp45480
tp45481
sS'DAQmxResetAnlgEdgeRefTrigDigSyncEnable'
p45482
((lp45483
S'int32'
p45484
ag34
a((S'taskHandle'
p45485
(lp45486
S'TaskHandle'
p45487
aNtp45488
tp45489
tp45490
sS'DAQmxResetCIEncoderBInputDigFltrTimebaseSrc'
p45491
((lp45492
S'int32'
p45493
ag34
a((S'taskHandle'
p45494
(lp45495
S'TaskHandle'
p45496
aNtp45497
(S'channel'
p45498
(lp45499
S'char'
p45500
a(lp45501
I-1
aaNtp45502
tp45503
tp45504
sS'DAQmxResetCOCtrTimebaseMasterTimebaseDiv'
p45505
((lp45506
S'int32'
p45507
ag34
a((S'taskHandle'
p45508
(lp45509
S'TaskHandle'
p45510
aNtp45511
(S'channel'
p45512
(lp45513
S'char'
p45514
a(lp45515
I-1
aaNtp45516
tp45517
tp45518
sS'DAQmxResetDOOvercurrentAutoReenable'
p45519
((lp45520
S'int32'
p45521
ag34
a((S'taskHandle'
p45522
(lp45523
S'TaskHandle'
p45524
aNtp45525
(S'channel'
p45526
(lp45527
S'char'
p45528
a(lp45529
I-1
aaNtp45530
tp45531
tp45532
sS'DAQmxResetCIAngEncoderUnits'
p45533
((lp45534
S'int32'
p45535
ag34
a((S'taskHandle'
p45536
(lp45537
S'TaskHandle'
p45538
aNtp45539
(S'channel'
p45540
(lp45541
S'char'
p45542
a(lp45543
I-1
aaNtp45544
tp45545
tp45546
sS'DAQmxResetAnlgWinRefTrigDigFltrMinPulseWidth'
p45547
((lp45548
S'int32'
p45549
ag34
a((S'taskHandle'
p45550
(lp45551
S'TaskHandle'
p45552
aNtp45553
tp45554
tp45555
sS'DAQmxGetCOPulseIdleState'
p45556
((lp45557
S'int32'
p45558
ag34
a((S'taskHandle'
p45559
(lp45560
S'TaskHandle'
p45561
aNtp45562
(S'channel'
p45563
(lp45564
S'char'
p45565
a(lp45566
I-1
aaNtp45567
(S'data'
p45568
(lp45569
S'int32'
p45570
ag42
aNtp45571
tp45572
tp45573
sS'DAQmxSetAIDigFltrBandpassWidth'
p45574
((lp45575
S'int32'
p45576
ag34
a((S'taskHandle'
p45577
(lp45578
S'TaskHandle'
p45579
aNtp45580
(S'channel'
p45581
(lp45582
S'char'
p45583
a(lp45584
I-1
aaNtp45585
(S'data'
p45586
(lp45587
S'float64'
p45588
aNtp45589
tp45590
tp45591
sS'DAQmxGetReadDevsWithInsertedOrRemovedAccessories'
p45592
((lp45593
S'int32'
p45594
ag34
a((S'taskHandle'
p45595
(lp45596
S'TaskHandle'
p45597
aNtp45598
(S'data'
p45599
(lp45600
S'char'
p45601
ag42
aNtp45602
(S'bufferSize'
p45603
(lp45604
S'uInt32'
p45605
aNtp45606
tp45607
tp45608
sS'DAQmxResetExportedCtrOutEventOutputBehavior'
p45609
((lp45610
S'int32'
p45611
ag34
a((S'taskHandle'
p45612
(lp45613
S'TaskHandle'
p45614
aNtp45615
tp45616
tp45617
sS'DAQmxDeleteSavedScale'
p45618
((lp45619
S'int32'
p45620
ag34
a((S'scaleName'
p45621
(lp45622
S'char'
p45623
a(lp45624
I-1
aaNtp45625
tp45626
tp45627
sS'DAQmxGetCIPulseTicksStartEdge'
p45628
((lp45629
S'int32'
p45630
ag34
a((S'taskHandle'
p45631
(lp45632
S'TaskHandle'
p45633
aNtp45634
(S'channel'
p45635
(lp45636
S'char'
p45637
a(lp45638
I-1
aaNtp45639
(S'data'
p45640
(lp45641
S'int32'
p45642
ag42
aNtp45643
tp45644
tp45645
sS'DAQmxGetCOPrescaler'
p45646
((lp45647
S'int32'
p45648
ag34
a((S'taskHandle'
p45649
(lp45650
S'TaskHandle'
p45651
aNtp45652
(S'channel'
p45653
(lp45654
S'char'
p45655
a(lp45656
I-1
aaNtp45657
(S'data'
p45658
(lp45659
S'uInt32'
p45660
ag42
aNtp45661
tp45662
tp45663
sS'DAQmxResetAnlgLvlPauseTrigDigSyncEnable'
p45664
((lp45665
S'int32'
p45666
ag34
a((S'taskHandle'
p45667
(lp45668
S'TaskHandle'
p45669
aNtp45670
tp45671
tp45672
sS'DAQmxCreateAIPressureBridgeTableChan'
p45673
((lp45674
S'int32'
p45675
ag34
a((S'taskHandle'
p45676
(lp45677
S'TaskHandle'
p45678
aNtp45679
(S'physicalChannel'
p45680
(lp45681
S'char'
p45682
a(lp45683
I-1
aaNtp45684
(S'nameToAssignToChannel'
p45685
(lp45686
S'char'
p45687
a(lp45688
I-1
aaNtp45689
(S'minVal'
p45690
(lp45691
S'float64'
p45692
aNtp45693
(S'maxVal'
p45694
(lp45695
S'float64'
p45696
aNtp45697
(S'units'
p45698
(lp45699
S'int32'
p45700
aNtp45701
(S'bridgeConfig'
p45702
(lp45703
S'int32'
p45704
aNtp45705
(S'voltageExcitSource'
p45706
(lp45707
S'int32'
p45708
aNtp45709
(S'voltageExcitVal'
p45710
(lp45711
S'float64'
p45712
aNtp45713
(S'nominalBridgeResistance'
p45714
(lp45715
S'float64'
p45716
aNtp45717
(S'electricalVals'
p45718
(lp45719
S'float64'
p45720
a(lp45721
I-1
aaNtp45722
(S'numElectricalVals'
p45723
(lp45724
S'uInt32'
p45725
aNtp45726
(S'electricalUnits'
p45727
(lp45728
S'int32'
p45729
aNtp45730
(S'physicalVals'
p45731
(lp45732
S'float64'
p45733
a(lp45734
I-1
aaNtp45735
(S'numPhysicalVals'
p45736
(lp45737
S'uInt32'
p45738
aNtp45739
(S'physicalUnits'
p45740
(lp45741
S'int32'
p45742
aNtp45743
(S'customScaleName'
p45744
(lp45745
S'char'
p45746
a(lp45747
I-1
aaNtp45748
tp45749
tp45750
sS'DAQmxGetAIRTDR0'
p45751
((lp45752
S'int32'
p45753
ag34
a((S'taskHandle'
p45754
(lp45755
S'TaskHandle'
p45756
aNtp45757
(S'channel'
p45758
(lp45759
S'char'
p45760
a(lp45761
I-1
aaNtp45762
(S'data'
p45763
(lp45764
S'float64'
p45765
ag42
aNtp45766
tp45767
tp45768
sS'DAQmxSetAIBridgePolyReverseCoeff'
p45769
((lp45770
S'int32'
p45771
ag34
a((S'taskHandle'
p45772
(lp45773
S'TaskHandle'
p45774
aNtp45775
(S'channel'
p45776
(lp45777
S'char'
p45778
a(lp45779
I-1
aaNtp45780
(S'data'
p45781
(lp45782
S'float64'
p45783
ag42
aNtp45784
(S'arraySizeInElements'
p45785
(lp45786
S'uInt32'
p45787
aNtp45788
tp45789
tp45790
sS'DAQmxGetAIResistanceUnits'
p45791
((lp45792
S'int32'
p45793
ag34
a((S'taskHandle'
p45794
(lp45795
S'TaskHandle'
p45796
aNtp45797
(S'channel'
p45798
(lp45799
S'char'
p45800
a(lp45801
I-1
aaNtp45802
(S'data'
p45803
(lp45804
S'int32'
p45805
ag42
aNtp45806
tp45807
tp45808
sS'DAQmxSetCOCtrTimebaseActiveEdge'
p45809
((lp45810
S'int32'
p45811
ag34
a((S'taskHandle'
p45812
(lp45813
S'TaskHandle'
p45814
aNtp45815
(S'channel'
p45816
(lp45817
S'char'
p45818
a(lp45819
I-1
aaNtp45820
(S'data'
p45821
(lp45822
S'int32'
p45823
aNtp45824
tp45825
tp45826
sS'DAQmxSetAnlgEdgeRefTrigDigSyncEnable'
p45827
((lp45828
S'int32'
p45829
ag34
a((S'taskHandle'
p45830
(lp45831
S'TaskHandle'
p45832
aNtp45833
(S'data'
p45834
(lp45835
S'bool32'
p45836
aNtp45837
tp45838
tp45839
sS'DAQmxResetCIMemMapEnable'
p45840
((lp45841
S'int32'
p45842
ag34
a((S'taskHandle'
p45843
(lp45844
S'TaskHandle'
p45845
aNtp45846
(S'channel'
p45847
(lp45848
S'char'
p45849
a(lp45850
I-1
aaNtp45851
tp45852
tp45853
sS'DAQmxResetCIPulseFreqDigFltrEnable'
p45854
((lp45855
S'int32'
p45856
ag34
a((S'taskHandle'
p45857
(lp45858
S'TaskHandle'
p45859
aNtp45860
(S'channel'
p45861
(lp45862
S'char'
p45863
a(lp45864
I-1
aaNtp45865
tp45866
tp45867
sS'DAQmxSetDIDigFltrEnableBusMode'
p45868
((lp45869
S'int32'
p45870
ag34
a((S'taskHandle'
p45871
(lp45872
S'TaskHandle'
p45873
aNtp45874
(S'channel'
p45875
(lp45876
S'char'
p45877
a(lp45878
I-1
aaNtp45879
(S'data'
p45880
(lp45881
S'bool32'
p45882
aNtp45883
tp45884
tp45885
sS'DAQmxGetWriteCurrWritePos'
p45886
((lp45887
S'int32'
p45888
ag34
a((S'taskHandle'
p45889
(lp45890
S'TaskHandle'
p45891
aNtp45892
(S'data'
p45893
(lp45894
S'uInt64'
p45895
ag42
aNtp45896
tp45897
tp45898
sS'DAQmxResetCIGPSSyncSrc'
p45899
((lp45900
S'int32'
p45901
ag34
a((S'taskHandle'
p45902
(lp45903
S'TaskHandle'
p45904
aNtp45905
(S'channel'
p45906
(lp45907
S'char'
p45908
a(lp45909
I-1
aaNtp45910
tp45911
tp45912
sS'DAQmxResetCITwoEdgeSepFirstDigFltrEnable'
p45913
((lp45914
S'int32'
p45915
ag34
a((S'taskHandle'
p45916
(lp45917
S'TaskHandle'
p45918
aNtp45919
(S'channel'
p45920
(lp45921
S'char'
p45922
a(lp45923
I-1
aaNtp45924
tp45925
tp45926
sS'DAQmxAdjust9218Cal'
p45927
((lp45928
S'int32'
p45929
ag34
a((S'calHandle'
p45930
(lp45931
S'CalHandle'
p45932
aNtp45933
(S'channelNames'
p45934
(lp45935
S'char'
p45936
a(lp45937
I-1
aaNtp45938
(S'value'
p45939
(lp45940
S'float64'
p45941
aNtp45942
tp45943
tp45944
sS'DAQmxGet9212CalAdjustPoints'
p45945
((lp45946
S'int32'
p45947
ag34
a((S'calHandle'
p45948
(lp45949
S'CalHandle'
p45950
aNtp45951
(S'channelNames'
p45952
(lp45953
S'char'
p45954
a(lp45955
I-1
aaNtp45956
(S'adjustmentPoints'
p45957
(lp45958
S'float64'
p45959
ag42
aNtp45960
(S'bufferSize'
p45961
(lp45962
S'uInt32'
p45963
aNtp45964
tp45965
tp45966
sS'DAQmxResetExportedSampClkDelayOffset'
p45967
((lp45968
S'int32'
p45969
ag34
a((S'taskHandle'
p45970
(lp45971
S'TaskHandle'
p45972
aNtp45973
tp45974
tp45975
sS'DAQmxGetDevAnlgTrigSupported'
p45976
((lp45977
S'int32'
p45978
ag34
a((S'device'
p45979
(lp45980
S'char'
p45981
a(lp45982
I-1
aaNtp45983
(S'data'
p45984
(lp45985
S'bool32'
p45986
ag42
aNtp45987
tp45988
tp45989
sS'DAQmxSetAIConvActiveEdgeEx'
p45990
((lp45991
S'int32'
p45992
ag34
a((S'taskHandle'
p45993
(lp45994
S'TaskHandle'
p45995
aNtp45996
(S'deviceNames'
p45997
(lp45998
S'char'
p45999
a(lp46000
I-1
aaNtp46001
(S'data'
p46002
(lp46003
S'int32'
p46004
aNtp46005
tp46006
tp46007
sS'DAQmxGetCIFreqMeasTime'
p46008
((lp46009
S'int32'
p46010
ag34
a((S'taskHandle'
p46011
(lp46012
S'TaskHandle'
p46013
aNtp46014
(S'channel'
p46015
(lp46016
S'char'
p46017
a(lp46018
I-1
aaNtp46019
(S'data'
p46020
(lp46021
S'float64'
p46022
ag42
aNtp46023
tp46024
tp46025
sS'DAQmxGetLoggingMode'
p46026
((lp46027
S'int32'
p46028
ag34
a((S'taskHandle'
p46029
(lp46030
S'TaskHandle'
p46031
aNtp46032
(S'data'
p46033
(lp46034
S'int32'
p46035
ag42
aNtp46036
tp46037
tp46038
sS'DAQmxResetDigPatternStartTrigPattern'
p46039
((lp46040
S'int32'
p46041
ag34
a((S'taskHandle'
p46042
(lp46043
S'TaskHandle'
p46044
aNtp46045
tp46046
tp46047
sS'DAQmxGetAIDataXferReqCond'
p46048
((lp46049
S'int32'
p46050
ag34
a((S'taskHandle'
p46051
(lp46052
S'TaskHandle'
p46053
aNtp46054
(S'channel'
p46055
(lp46056
S'char'
p46057
a(lp46058
I-1
aaNtp46059
(S'data'
p46060
(lp46061
S'int32'
p46062
ag42
aNtp46063
tp46064
tp46065
sS'DAQmxGetCISemiPeriodStartingEdge'
p46066
((lp46067
S'int32'
p46068
ag34
a((S'taskHandle'
p46069
(lp46070
S'TaskHandle'
p46071
aNtp46072
(S'channel'
p46073
(lp46074
S'char'
p46075
a(lp46076
I-1
aaNtp46077
(S'data'
p46078
(lp46079
S'int32'
p46080
ag42
aNtp46081
tp46082
tp46083
sS'DAQmxGetAIBridgeShuntCalGainAdjust'
p46084
((lp46085
S'int32'
p46086
ag34
a((S'taskHandle'
p46087
(lp46088
S'TaskHandle'
p46089
aNtp46090
(S'channel'
p46091
(lp46092
S'char'
p46093
a(lp46094
I-1
aaNtp46095
(S'data'
p46096
(lp46097
S'float64'
p46098
ag42
aNtp46099
tp46100
tp46101
sS'DAQmxSetCIPeriodDiv'
p46102
((lp46103
S'int32'
p46104
ag34
a((S'taskHandle'
p46105
(lp46106
S'TaskHandle'
p46107
aNtp46108
(S'channel'
p46109
(lp46110
S'char'
p46111
a(lp46112
I-1
aaNtp46113
(S'data'
p46114
(lp46115
S'uInt32'
p46116
aNtp46117
tp46118
tp46119
sS'DAQmxWriteBinaryI16'
p46120
((lp46121
S'int32'
p46122
ag34
a((S'taskHandle'
p46123
(lp46124
S'TaskHandle'
p46125
aNtp46126
(S'numSampsPerChan'
p46127
(lp46128
S'int32'
p46129
aNtp46130
(S'autoStart'
p46131
(lp46132
S'bool32'
p46133
aNtp46134
(S'timeout'
p46135
(lp46136
S'float64'
p46137
aNtp46138
(S'dataLayout'
p46139
(lp46140
S'bool32'
p46141
aNtp46142
(S'writeArray'
p46143
(lp46144
S'int16'
p46145
a(lp46146
I-1
aaNtp46147
(S'sampsPerChanWritten'
p46148
(lp46149
S'int32'
p46150
ag42
aNtp46151
(S'reserved'
p46152
(lp46153
S'bool32'
p46154
ag42
aNtp46155
tp46156
tp46157
sS'DAQmxGetWriteNextWriteIsLast'
p46158
((lp46159
S'int32'
p46160
ag34
a((S'taskHandle'
p46161
(lp46162
S'TaskHandle'
p46163
aNtp46164
(S'data'
p46165
(lp46166
S'bool32'
p46167
ag42
aNtp46168
tp46169
tp46170
sS'DAQmxSetCICountEdgesCountDirDigSyncEnable'
p46171
((lp46172
S'int32'
p46173
ag34
a((S'taskHandle'
p46174
(lp46175
S'TaskHandle'
p46176
aNtp46177
(S'channel'
p46178
(lp46179
S'char'
p46180
a(lp46181
I-1
aaNtp46182
(S'data'
p46183
(lp46184
S'bool32'
p46185
aNtp46186
tp46187
tp46188
sS'DAQmxGetWriteNumChans'
p46189
((lp46190
S'int32'
p46191
ag34
a((S'taskHandle'
p46192
(lp46193
S'TaskHandle'
p46194
aNtp46195
(S'data'
p46196
(lp46197
S'uInt32'
p46198
ag42
aNtp46199
tp46200
tp46201
sS'DAQmxResetWatchdogExpirTrigTrigOnNetworkConnLoss'
p46202
((lp46203
S'int32'
p46204
ag34
a((S'taskHandle'
p46205
(lp46206
S'TaskHandle'
p46207
aNtp46208
tp46209
tp46210
sS'DAQmxGetCITwoEdgeSepFirstTermCfg'
p46211
((lp46212
S'int32'
p46213
ag34
a((S'taskHandle'
p46214
(lp46215
S'TaskHandle'
p46216
aNtp46217
(S'channel'
p46218
(lp46219
S'char'
p46220
a(lp46221
I-1
aaNtp46222
(S'data'
p46223
(lp46224
S'int32'
p46225
ag42
aNtp46226
tp46227
tp46228
sS'DAQmxSetSampClkDigFltrEnable'
p46229
((lp46230
S'int32'
p46231
ag34
a((S'taskHandle'
p46232
(lp46233
S'TaskHandle'
p46234
aNtp46235
(S'data'
p46236
(lp46237
S'bool32'
p46238
aNtp46239
tp46240
tp46241
sS'DAQmxResetAnlgWinStartTrigDigFltrEnable'
p46242
((lp46243
S'int32'
p46244
ag34
a((S'taskHandle'
p46245
(lp46246
S'TaskHandle'
p46247
aNtp46248
tp46249
tp46250
sS'DAQmxSetCICountEdgesDigFltrMinPulseWidth'
p46251
((lp46252
S'int32'
p46253
ag34
a((S'taskHandle'
p46254
(lp46255
S'TaskHandle'
p46256
aNtp46257
(S'channel'
p46258
(lp46259
S'char'
p46260
a(lp46261
I-1
aaNtp46262
(S'data'
p46263
(lp46264
S'float64'
p46265
aNtp46266
tp46267
tp46268
sS'DAQmxGetDevAOTrigUsage'
p46269
((lp46270
S'int32'
p46271
ag34
a((S'device'
p46272
(lp46273
S'char'
p46274
a(lp46275
I-1
aaNtp46276
(S'data'
p46277
(lp46278
S'int32'
p46279
ag42
aNtp46280
tp46281
tp46282
sS'DAQmxGetAnlgWinStartTrigWhen'
p46283
((lp46284
S'int32'
p46285
ag34
a((S'taskHandle'
p46286
(lp46287
S'TaskHandle'
p46288
aNtp46289
(S'data'
p46290
(lp46291
S'int32'
p46292
ag42
aNtp46293
tp46294
tp46295
sS'DAQmxCreateAIStrainGageChan'
p46296
((lp46297
S'int32'
p46298
ag34
a((S'taskHandle'
p46299
(lp46300
S'TaskHandle'
p46301
aNtp46302
(S'physicalChannel'
p46303
(lp46304
S'char'
p46305
a(lp46306
I-1
aaNtp46307
(S'nameToAssignToChannel'
p46308
(lp46309
S'char'
p46310
a(lp46311
I-1
aaNtp46312
(S'minVal'
p46313
(lp46314
S'float64'
p46315
aNtp46316
(S'maxVal'
p46317
(lp46318
S'float64'
p46319
aNtp46320
(S'units'
p46321
(lp46322
S'int32'
p46323
aNtp46324
(S'strainConfig'
p46325
(lp46326
S'int32'
p46327
aNtp46328
(S'voltageExcitSource'
p46329
(lp46330
S'int32'
p46331
aNtp46332
(S'voltageExcitVal'
p46333
(lp46334
S'float64'
p46335
aNtp46336
(S'gageFactor'
p46337
(lp46338
S'float64'
p46339
aNtp46340
(S'initialBridgeVoltage'
p46341
(lp46342
S'float64'
p46343
aNtp46344
(S'nominalGageResistance'
p46345
(lp46346
S'float64'
p46347
aNtp46348
(S'poissonRatio'
p46349
(lp46350
S'float64'
p46351
aNtp46352
(S'leadWireResistance'
p46353
(lp46354
S'float64'
p46355
aNtp46356
(S'customScaleName'
p46357
(lp46358
S'char'
p46359
a(lp46360
I-1
aaNtp46361
tp46362
tp46363
sS'DAQmxGetDevAOGains'
p46364
((lp46365
S'int32'
p46366
ag34
a((S'device'
p46367
(lp46368
S'char'
p46369
a(lp46370
I-1
aaNtp46371
(S'data'
p46372
(lp46373
S'float64'
p46374
ag42
aNtp46375
(S'arraySizeInElements'
p46376
(lp46377
S'uInt32'
p46378
aNtp46379
tp46380
tp46381
sS'DAQmxResetSampClkTimebaseSrc'
p46382
((lp46383
S'int32'
p46384
ag34
a((S'taskHandle'
p46385
(lp46386
S'TaskHandle'
p46387
aNtp46388
tp46389
tp46390
sS'DAQmxResetCICtrTimebaseDigFltrEnable'
p46391
((lp46392
S'int32'
p46393
ag34
a((S'taskHandle'
p46394
(lp46395
S'TaskHandle'
p46396
aNtp46397
(S'channel'
p46398
(lp46399
S'char'
p46400
a(lp46401
I-1
aaNtp46402
tp46403
tp46404
sS'DAQmxGetSysNIDAQMinorVersion'
p46405
((lp46406
S'int32'
p46407
ag34
a((S'data'
p46408
(lp46409
S'uInt32'
p46410
ag42
aNtp46411
tp46412
tp46413
sS'DAQmxGetAIConvDigSyncEnableEx'
p46414
((lp46415
S'int32'
p46416
ag34
a((S'taskHandle'
p46417
(lp46418
S'TaskHandle'
p46419
aNtp46420
(S'deviceNames'
p46421
(lp46422
S'char'
p46423
a(lp46424
I-1
aaNtp46425
(S'data'
p46426
(lp46427
S'bool32'
p46428
ag42
aNtp46429
tp46430
tp46431
sS'DAQmxGetAIThrmcplLeadOffsetVoltage'
p46432
((lp46433
S'int32'
p46434
ag34
a((S'taskHandle'
p46435
(lp46436
S'TaskHandle'
p46437
aNtp46438
(S'channel'
p46439
(lp46440
S'char'
p46441
a(lp46442
I-1
aaNtp46443
(S'data'
p46444
(lp46445
S'float64'
p46446
ag42
aNtp46447
tp46448
tp46449
sS'DAQmxResetCICountEdgesCountDirTermCfg'
p46450
((lp46451
S'int32'
p46452
ag34
a((S'taskHandle'
p46453
(lp46454
S'TaskHandle'
p46455
aNtp46456
(S'channel'
p46457
(lp46458
S'char'
p46459
a(lp46460
I-1
aaNtp46461
tp46462
tp46463
sS'DAQmxGetAOPowerAmpOffset'
p46464
((lp46465
S'int32'
p46466
ag34
a((S'physicalChannel'
p46467
(lp46468
S'char'
p46469
a(lp46470
I-1
aaNtp46471
(S'data'
p46472
(lp46473
S'float64'
p46474
ag42
aNtp46475
tp46476
tp46477
sS'DAQmxSetCIDutyCycleLogicLvlBehavior'
p46478
((lp46479
S'int32'
p46480
ag34
a((S'taskHandle'
p46481
(lp46482
S'TaskHandle'
p46483
aNtp46484
(S'channel'
p46485
(lp46486
S'char'
p46487
a(lp46488
I-1
aaNtp46489
(S'data'
p46490
(lp46491
S'int32'
p46492
aNtp46493
tp46494
tp46495
sS'DAQmxSetSyncPulseResetDelay'
p46496
((lp46497
S'int32'
p46498
ag34
a((S'taskHandle'
p46499
(lp46500
S'TaskHandle'
p46501
aNtp46502
(S'data'
p46503
(lp46504
S'float64'
p46505
aNtp46506
tp46507
tp46508
sS'DAQmxSetCIAngEncoderUnits'
p46509
((lp46510
S'int32'
p46511
ag34
a((S'taskHandle'
p46512
(lp46513
S'TaskHandle'
p46514
aNtp46515
(S'channel'
p46516
(lp46517
S'char'
p46518
a(lp46519
I-1
aaNtp46520
(S'data'
p46521
(lp46522
S'int32'
p46523
aNtp46524
tp46525
tp46526
sS'DAQmxAdjust4353Cal'
p46527
((lp46528
S'int32'
p46529
ag34
a((S'calHandle'
p46530
(lp46531
S'CalHandle'
p46532
aNtp46533
(S'channelNames'
p46534
(lp46535
S'char'
p46536
a(lp46537
I-1
aaNtp46538
(S'refVal'
p46539
(lp46540
S'float64'
p46541
aNtp46542
tp46543
tp46544
sS'DAQmxGetReadNumChans'
p46545
((lp46546
S'int32'
p46547
ag34
a((S'taskHandle'
p46548
(lp46549
S'TaskHandle'
p46550
aNtp46551
(S'data'
p46552
(lp46553
S'uInt32'
p46554
ag42
aNtp46555
tp46556
tp46557
sS'DAQmxGetCITwoEdgeSepFirstDigFltrEnable'
p46558
((lp46559
S'int32'
p46560
ag34
a((S'taskHandle'
p46561
(lp46562
S'TaskHandle'
p46563
aNtp46564
(S'channel'
p46565
(lp46566
S'char'
p46567
a(lp46568
I-1
aaNtp46569
(S'data'
p46570
(lp46571
S'bool32'
p46572
ag42
aNtp46573
tp46574
tp46575
sS'DAQmxSetExportedRdyForXferEventDeassertCondCustomThreshold'
p46576
((lp46577
S'int32'
p46578
ag34
a((S'taskHandle'
p46579
(lp46580
S'TaskHandle'
p46581
aNtp46582
(S'data'
p46583
(lp46584
S'uInt32'
p46585
aNtp46586
tp46587
tp46588
sS'DAQmxGetPersistedChanAllowInteractiveDeletion'
p46589
((lp46590
S'int32'
p46591
ag34
a((S'channel'
p46592
(lp46593
S'char'
p46594
a(lp46595
I-1
aaNtp46596
(S'data'
p46597
(lp46598
S'bool32'
p46599
ag42
aNtp46600
tp46601
tp46602
sS'DAQmxSetExportedSampClkPulsePolarity'
p46603
((lp46604
S'int32'
p46605
ag34
a((S'taskHandle'
p46606
(lp46607
S'TaskHandle'
p46608
aNtp46609
(S'data'
p46610
(lp46611
S'int32'
p46612
aNtp46613
tp46614
tp46615
sS'DAQmxGetSampClkSrc'
p46616
((lp46617
S'int32'
p46618
ag34
a((S'taskHandle'
p46619
(lp46620
S'TaskHandle'
p46621
aNtp46622
(S'data'
p46623
(lp46624
S'char'
p46625
ag42
aNtp46626
(S'bufferSize'
p46627
(lp46628
S'uInt32'
p46629
aNtp46630
tp46631
tp46632
sS'DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth'
p46633
((lp46634
S'int32'
p46635
ag34
a((S'taskHandle'
p46636
(lp46637
S'TaskHandle'
p46638
aNtp46639
(S'channel'
p46640
(lp46641
S'char'
p46642
a(lp46643
I-1
aaNtp46644
(S'data'
p46645
(lp46646
S'float64'
p46647
aNtp46648
tp46649
tp46650
sS'DAQmxSetCIEncoderZIndexEnable'
p46651
((lp46652
S'int32'
p46653
ag34
a((S'taskHandle'
p46654
(lp46655
S'TaskHandle'
p46656
aNtp46657
(S'channel'
p46658
(lp46659
S'char'
p46660
a(lp46661
I-1
aaNtp46662
(S'data'
p46663
(lp46664
S'bool32'
p46665
aNtp46666
tp46667
tp46668
sS'DAQmxSetCOPulseTimeInitialDelay'
p46669
((lp46670
S'int32'
p46671
ag34
a((S'taskHandle'
p46672
(lp46673
S'TaskHandle'
p46674
aNtp46675
(S'channel'
p46676
(lp46677
S'char'
p46678
a(lp46679
I-1
aaNtp46680
(S'data'
p46681
(lp46682
S'float64'
p46683
aNtp46684
tp46685
tp46686
sS'DAQmxSetAOOutputImpedance'
p46687
((lp46688
S'int32'
p46689
ag34
a((S'taskHandle'
p46690
(lp46691
S'TaskHandle'
p46692
aNtp46693
(S'channel'
p46694
(lp46695
S'char'
p46696
a(lp46697
I-1
aaNtp46698
(S'data'
p46699
(lp46700
S'float64'
p46701
aNtp46702
tp46703
tp46704
sS'DAQmxSetDILogicFamily'
p46705
((lp46706
S'int32'
p46707
ag34
a((S'taskHandle'
p46708
(lp46709
S'TaskHandle'
p46710
aNtp46711
(S'channel'
p46712
(lp46713
S'char'
p46714
a(lp46715
I-1
aaNtp46716
(S'data'
p46717
(lp46718
S'int32'
p46719
aNtp46720
tp46721
tp46722
sS'DAQmxSetCIFreqDigFltrTimebaseRate'
p46723
((lp46724
S'int32'
p46725
ag34
a((S'taskHandle'
p46726
(lp46727
S'TaskHandle'
p46728
aNtp46729
(S'channel'
p46730
(lp46731
S'char'
p46732
a(lp46733
I-1
aaNtp46734
(S'data'
p46735
(lp46736
S'float64'
p46737
aNtp46738
tp46739
tp46740
sS'DAQmxSetAIMicrophoneSensitivity'
p46741
((lp46742
S'int32'
p46743
ag34
a((S'taskHandle'
p46744
(lp46745
S'TaskHandle'
p46746
aNtp46747
(S'channel'
p46748
(lp46749
S'char'
p46750
a(lp46751
I-1
aaNtp46752
(S'data'
p46753
(lp46754
S'float64'
p46755
aNtp46756
tp46757
tp46758
sS'DAQmxGetAIVelocityIEPESensorSensitivity'
p46759
((lp46760
S'int32'
p46761
ag34
a((S'taskHandle'
p46762
(lp46763
S'TaskHandle'
p46764
aNtp46765
(S'channel'
p46766
(lp46767
S'char'
p46768
a(lp46769
I-1
aaNtp46770
(S'data'
p46771
(lp46772
S'float64'
p46773
ag42
aNtp46774
tp46775
tp46776
sS'DAQmxSetCOPulseDutyCyc'
p46777
((lp46778
S'int32'
p46779
ag34
a((S'taskHandle'
p46780
(lp46781
S'TaskHandle'
p46782
aNtp46783
(S'channel'
p46784
(lp46785
S'char'
p46786
a(lp46787
I-1
aaNtp46788
(S'data'
p46789
(lp46790
S'float64'
p46791
aNtp46792
tp46793
tp46794
sS'DAQmxCreateTEDSAIForceIEPEChan'
p46795
((lp46796
S'int32'
p46797
ag34
a((S'taskHandle'
p46798
(lp46799
S'TaskHandle'
p46800
aNtp46801
(S'physicalChannel'
p46802
(lp46803
S'char'
p46804
a(lp46805
I-1
aaNtp46806
(S'nameToAssignToChannel'
p46807
(lp46808
S'char'
p46809
a(lp46810
I-1
aaNtp46811
(S'terminalConfig'
p46812
(lp46813
S'int32'
p46814
aNtp46815
(S'minVal'
p46816
(lp46817
S'float64'
p46818
aNtp46819
(S'maxVal'
p46820
(lp46821
S'float64'
p46822
aNtp46823
(S'units'
p46824
(lp46825
S'int32'
p46826
aNtp46827
(S'currentExcitSource'
p46828
(lp46829
S'int32'
p46830
aNtp46831
(S'currentExcitVal'
p46832
(lp46833
S'float64'
p46834
aNtp46835
(S'customScaleName'
p46836
(lp46837
S'char'
p46838
a(lp46839
I-1
aaNtp46840
tp46841
tp46842
sS'DAQmxSetAIVoltageACRMSUnits'
p46843
((lp46844
S'int32'
p46845
ag34
a((S'taskHandle'
p46846
(lp46847
S'TaskHandle'
p46848
aNtp46849
(S'channel'
p46850
(lp46851
S'char'
p46852
a(lp46853
I-1
aaNtp46854
(S'data'
p46855
(lp46856
S'int32'
p46857
aNtp46858
tp46859
tp46860
sS'DAQmxGetWriteOverloadedChansExist'
p46861
((lp46862
S'int32'
p46863
ag34
a((S'taskHandle'
p46864
(lp46865
S'TaskHandle'
p46866
aNtp46867
(S'data'
p46868
(lp46869
S'bool32'
p46870
ag42
aNtp46871
tp46872
tp46873
sS'DAQmxResetAILowpassCutoffFreq'
p46874
((lp46875
S'int32'
p46876
ag34
a((S'taskHandle'
p46877
(lp46878
S'TaskHandle'
p46879
aNtp46880
(S'channel'
p46881
(lp46882
S'char'
p46883
a(lp46884
I-1
aaNtp46885
tp46886
tp46887
sS'DAQmxResetRefTrigType'
p46888
((lp46889
S'int32'
p46890
ag34
a((S'taskHandle'
p46891
(lp46892
S'TaskHandle'
p46893
aNtp46894
tp46895
tp46896
sS'DAQmxGetCIFreqTerm'
p46897
((lp46898
S'int32'
p46899
ag34
a((S'taskHandle'
p46900
(lp46901
S'TaskHandle'
p46902
aNtp46903
(S'channel'
p46904
(lp46905
S'char'
p46906
a(lp46907
I-1
aaNtp46908
(S'data'
p46909
(lp46910
S'char'
p46911
ag42
aNtp46912
(S'bufferSize'
p46913
(lp46914
S'uInt32'
p46915
aNtp46916
tp46917
tp46918
sS'DAQmxSetCIPulseWidthTermCfg'
p46919
((lp46920
S'int32'
p46921
ag34
a((S'taskHandle'
p46922
(lp46923
S'TaskHandle'
p46924
aNtp46925
(S'channel'
p46926
(lp46927
S'char'
p46928
a(lp46929
I-1
aaNtp46930
(S'data'
p46931
(lp46932
S'int32'
p46933
aNtp46934
tp46935
tp46936
sS'DAQmxResetCIFreqDigFltrTimebaseSrc'
p46937
((lp46938
S'int32'
p46939
ag34
a((S'taskHandle'
p46940
(lp46941
S'TaskHandle'
p46942
aNtp46943
(S'channel'
p46944
(lp46945
S'char'
p46946
a(lp46947
I-1
aaNtp46948
tp46949
tp46950
sS'DAQmxResetCOPrescaler'
p46951
((lp46952
S'int32'
p46953
ag34
a((S'taskHandle'
p46954
(lp46955
S'TaskHandle'
p46956
aNtp46957
(S'channel'
p46958
(lp46959
S'char'
p46960
a(lp46961
I-1
aaNtp46962
tp46963
tp46964
sS'DAQmxResetCOPulseTerm'
p46965
((lp46966
S'int32'
p46967
ag34
a((S'taskHandle'
p46968
(lp46969
S'TaskHandle'
p46970
aNtp46971
(S'channel'
p46972
(lp46973
S'char'
p46974
a(lp46975
I-1
aaNtp46976
tp46977
tp46978
sS'DAQmxGetScaleDescr'
p46979
((lp46980
S'int32'
p46981
ag34
a((S'scaleName'
p46982
(lp46983
S'char'
p46984
a(lp46985
I-1
aaNtp46986
(S'data'
p46987
(lp46988
S'char'
p46989
ag42
aNtp46990
(S'bufferSize'
p46991
(lp46992
S'uInt32'
p46993
aNtp46994
tp46995
tp46996
sS'DAQmxGetAnlgWinStartTrigCoupling'
p46997
((lp46998
S'int32'
p46999
ag34
a((S'taskHandle'
p47000
(lp47001
S'TaskHandle'
p47002
aNtp47003
(S'data'
p47004
(lp47005
S'int32'
p47006
ag42
aNtp47007
tp47008
tp47009
sS'DAQmxGetAnlgLvlPauseTrigLvl'
p47010
((lp47011
S'int32'
p47012
ag34
a((S'taskHandle'
p47013
(lp47014
S'TaskHandle'
p47015
aNtp47016
(S'data'
p47017
(lp47018
S'float64'
p47019
ag42
aNtp47020
tp47021
tp47022
sS'DAQmxGetAIBridgeShuntCalShuntCalBResistance'
p47023
((lp47024
S'int32'
p47025
ag34
a((S'taskHandle'
p47026
(lp47027
S'TaskHandle'
p47028
aNtp47029
(S'channel'
p47030
(lp47031
S'char'
p47032
a(lp47033
I-1
aaNtp47034
(S'data'
p47035
(lp47036
S'float64'
p47037
ag42
aNtp47038
tp47039
tp47040
sS'DAQmxSetCISemiPeriodLogicLvlBehavior'
p47041
((lp47042
S'int32'
p47043
ag34
a((S'taskHandle'
p47044
(lp47045
S'TaskHandle'
p47046
aNtp47047
(S'channel'
p47048
(lp47049
S'char'
p47050
a(lp47051
I-1
aaNtp47052
(S'data'
p47053
(lp47054
S'int32'
p47055
aNtp47056
tp47057
tp47058
sS'DAQmxResetCISemiPeriodStartingEdge'
p47059
((lp47060
S'int32'
p47061
ag34
a((S'taskHandle'
p47062
(lp47063
S'TaskHandle'
p47064
aNtp47065
(S'channel'
p47066
(lp47067
S'char'
p47068
a(lp47069
I-1
aaNtp47070
tp47071
tp47072
sS'DAQmxGetSysTasks'
p47073
((lp47074
S'int32'
p47075
ag34
a((S'data'
p47076
(lp47077
S'char'
p47078
ag42
aNtp47079
(S'bufferSize'
p47080
(lp47081
S'uInt32'
p47082
aNtp47083
tp47084
tp47085
sS'DAQmxGetReadCommonModeRangeErrorChansExist'
p47086
((lp47087
S'int32'
p47088
ag34
a((S'taskHandle'
p47089
(lp47090
S'TaskHandle'
p47091
aNtp47092
(S'data'
p47093
(lp47094
S'bool32'
p47095
ag42
aNtp47096
tp47097
tp47098
sS'DAQmxSetCISemiPeriodDigFltrEnable'
p47099
((lp47100
S'int32'
p47101
ag34
a((S'taskHandle'
p47102
(lp47103
S'TaskHandle'
p47104
aNtp47105
(S'channel'
p47106
(lp47107
S'char'
p47108
a(lp47109
I-1
aaNtp47110
(S'data'
p47111
(lp47112
S'bool32'
p47113
aNtp47114
tp47115
tp47116
sS'DAQmxSetAnlgEdgeStartTrigSrc'
p47117
((lp47118
S'int32'
p47119
ag34
a((S'taskHandle'
p47120
(lp47121
S'TaskHandle'
p47122
aNtp47123
(S'data'
p47124
(lp47125
S'char'
p47126
ag42
aNtp47127
tp47128
tp47129
sS'DAQmxResetBufInputBufSize'
p47130
((lp47131
S'int32'
p47132
ag34
a((S'taskHandle'
p47133
(lp47134
S'TaskHandle'
p47135
aNtp47136
tp47137
tp47138
sS'DAQmxSetCICountEdgesDigFltrTimebaseSrc'
p47139
((lp47140
S'int32'
p47141
ag34
a((S'taskHandle'
p47142
(lp47143
S'TaskHandle'
p47144
aNtp47145
(S'channel'
p47146
(lp47147
S'char'
p47148
a(lp47149
I-1
aaNtp47150
(S'data'
p47151
(lp47152
S'char'
p47153
ag42
aNtp47154
tp47155
tp47156
sS'DAQmxGetDITristate'
p47157
((lp47158
S'int32'
p47159
ag34
a((S'taskHandle'
p47160
(lp47161
S'TaskHandle'
p47162
aNtp47163
(S'channel'
p47164
(lp47165
S'char'
p47166
a(lp47167
I-1
aaNtp47168
(S'data'
p47169
(lp47170
S'bool32'
p47171
ag42
aNtp47172
tp47173
tp47174
sS'DAQmxGetTaskComplete'
p47175
((lp47176
S'int32'
p47177
ag34
a((S'taskHandle'
p47178
(lp47179
S'TaskHandle'
p47180
aNtp47181
(S'data'
p47182
(lp47183
S'bool32'
p47184
ag42
aNtp47185
tp47186
tp47187
sS'DAQmxResetAIBridgeTableElectricalVals'
p47188
((lp47189
S'int32'
p47190
ag34
a((S'taskHandle'
p47191
(lp47192
S'TaskHandle'
p47193
aNtp47194
(S'channel'
p47195
(lp47196
S'char'
p47197
a(lp47198
I-1
aaNtp47199
tp47200
tp47201
sS'DAQmxSetAIConvDigSyncEnableEx'
p47202
((lp47203
S'int32'
p47204
ag34
a((S'taskHandle'
p47205
(lp47206
S'TaskHandle'
p47207
aNtp47208
(S'deviceNames'
p47209
(lp47210
S'char'
p47211
a(lp47212
I-1
aaNtp47213
(S'data'
p47214
(lp47215
S'bool32'
p47216
aNtp47217
tp47218
tp47219
sS'DAQmxGetSysGlobalChans'
p47220
((lp47221
S'int32'
p47222
ag34
a((S'data'
p47223
(lp47224
S'char'
p47225
ag42
aNtp47226
(S'bufferSize'
p47227
(lp47228
S'uInt32'
p47229
aNtp47230
tp47231
tp47232
sS'DAQmxResetCICustomScaleName'
p47233
((lp47234
S'int32'
p47235
ag34
a((S'taskHandle'
p47236
(lp47237
S'TaskHandle'
p47238
aNtp47239
(S'channel'
p47240
(lp47241
S'char'
p47242
a(lp47243
I-1
aaNtp47244
tp47245
tp47246
sS'DAQmxGetCIPulseWidthDigSyncEnable'
p47247
((lp47248
S'int32'
p47249
ag34
a((S'taskHandle'
p47250
(lp47251
S'TaskHandle'
p47252
aNtp47253
(S'channel'
p47254
(lp47255
S'char'
p47256
a(lp47257
I-1
aaNtp47258
(S'data'
p47259
(lp47260
S'bool32'
p47261
ag42
aNtp47262
tp47263
tp47264
sS'DAQmxReadDigitalU32'
p47265
((lp47266
S'int32'
p47267
ag34
a((S'taskHandle'
p47268
(lp47269
S'TaskHandle'
p47270
aNtp47271
(S'numSampsPerChan'
p47272
(lp47273
S'int32'
p47274
aNtp47275
(S'timeout'
p47276
(lp47277
S'float64'
p47278
aNtp47279
(S'fillMode'
p47280
(lp47281
S'bool32'
p47282
aNtp47283
(S'readArray'
p47284
(lp47285
S'uInt32'
p47286
a(lp47287
I-1
aaNtp47288
(S'arraySizeInSamps'
p47289
(lp47290
S'uInt32'
p47291
aNtp47292
(S'sampsPerChanRead'
p47293
(lp47294
S'int32'
p47295
ag42
aNtp47296
(S'reserved'
p47297
(lp47298
S'bool32'
p47299
ag42
aNtp47300
tp47301
tp47302
sS'DAQmxGetPhysicalChanTEDSVersionLetter'
p47303
((lp47304
S'int32'
p47305
ag34
a((S'physicalChannel'
p47306
(lp47307
S'char'
p47308
a(lp47309
I-1
aaNtp47310
(S'data'
p47311
(lp47312
S'char'
p47313
ag42
aNtp47314
(S'bufferSize'
p47315
(lp47316
S'uInt32'
p47317
aNtp47318
tp47319
tp47320
sS'DAQmxGetCIPeriodDigFltrMinPulseWidth'
p47321
((lp47322
S'int32'
p47323
ag34
a((S'taskHandle'
p47324
(lp47325
S'TaskHandle'
p47326
aNtp47327
(S'channel'
p47328
(lp47329
S'char'
p47330
a(lp47331
I-1
aaNtp47332
(S'data'
p47333
(lp47334
S'float64'
p47335
ag42
aNtp47336
tp47337
tp47338
sS'DAQmxGetDODataXferReqCond'
p47339
((lp47340
S'int32'
p47341
ag34
a((S'taskHandle'
p47342
(lp47343
S'TaskHandle'
p47344
aNtp47345
(S'channel'
p47346
(lp47347
S'char'
p47348
a(lp47349
I-1
aaNtp47350
(S'data'
p47351
(lp47352
S'int32'
p47353
ag42
aNtp47354
tp47355
tp47356
sS'DAQmxGetAIDigFltrType'
p47357
((lp47358
S'int32'
p47359
ag34
a((S'taskHandle'
p47360
(lp47361
S'TaskHandle'
p47362
aNtp47363
(S'channel'
p47364
(lp47365
S'char'
p47366
a(lp47367
I-1
aaNtp47368
(S'data'
p47369
(lp47370
S'int32'
p47371
ag42
aNtp47372
tp47373
tp47374
sS'DAQmxResetDIDataXferReqCond'
p47375
((lp47376
S'int32'
p47377
ag34
a((S'taskHandle'
p47378
(lp47379
S'TaskHandle'
p47380
aNtp47381
(S'channel'
p47382
(lp47383
S'char'
p47384
a(lp47385
I-1
aaNtp47386
tp47387
tp47388
sS'DAQmxReadCounterScalarF64'
p47389
((lp47390
S'int32'
p47391
ag34
a((S'taskHandle'
p47392
(lp47393
S'TaskHandle'
p47394
aNtp47395
(S'timeout'
p47396
(lp47397
S'float64'
p47398
aNtp47399
(S'value'
p47400
(lp47401
S'float64'
p47402
ag42
aNtp47403
(S'reserved'
p47404
(lp47405
S'bool32'
p47406
ag42
aNtp47407
tp47408
tp47409
sS'DAQmxGetAIDataXferCustomThreshold'
p47410
((lp47411
S'int32'
p47412
ag34
a((S'taskHandle'
p47413
(lp47414
S'TaskHandle'
p47415
aNtp47416
(S'channel'
p47417
(lp47418
S'char'
p47419
a(lp47420
I-1
aaNtp47421
(S'data'
p47422
(lp47423
S'uInt32'
p47424
ag42
aNtp47425
tp47426
tp47427
sS'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate'
p47428
((lp47429
S'int32'
p47430
ag34
a((S'taskHandle'
p47431
(lp47432
S'TaskHandle'
p47433
aNtp47434
(S'channel'
p47435
(lp47436
S'char'
p47437
a(lp47438
I-1
aaNtp47439
tp47440
tp47441
sS'DAQmxSetAIMemMapEnable'
p47442
((lp47443
S'int32'
p47444
ag34
a((S'taskHandle'
p47445
(lp47446
S'TaskHandle'
p47447
aNtp47448
(S'channel'
p47449
(lp47450
S'char'
p47451
a(lp47452
I-1
aaNtp47453
(S'data'
p47454
(lp47455
S'bool32'
p47456
aNtp47457
tp47458
tp47459
sS'DAQmxGetLoggingFilePreallocationSize'
p47460
((lp47461
S'int32'
p47462
ag34
a((S'taskHandle'
p47463
(lp47464
S'TaskHandle'
p47465
aNtp47466
(S'data'
p47467
(lp47468
S'uInt64'
p47469
ag42
aNtp47470
tp47471
tp47472
sS'DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p47473
((lp47474
S'int32'
p47475
ag34
a((S'taskHandle'
p47476
(lp47477
S'TaskHandle'
p47478
aNtp47479
(S'channel'
p47480
(lp47481
S'char'
p47482
a(lp47483
I-1
aaNtp47484
tp47485
tp47486
sS'DAQmxResetAOEnhancedImageRejectionEnable'
p47487
((lp47488
S'int32'
p47489
ag34
a((S'taskHandle'
p47490
(lp47491
S'TaskHandle'
p47492
aNtp47493
(S'channel'
p47494
(lp47495
S'char'
p47496
a(lp47497
I-1
aaNtp47498
tp47499
tp47500
sS'DAQmxSetWatchdogAOOutputType'
p47501
((lp47502
S'int32'
p47503
ag34
a((S'taskHandle'
p47504
(lp47505
S'TaskHandle'
p47506
aNtp47507
(S'lines'
p47508
(lp47509
S'char'
p47510
a(lp47511
I-1
aaNtp47512
(S'data'
p47513
(lp47514
S'int32'
p47515
aNtp47516
tp47517
tp47518
sS'DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate'
p47519
((lp47520
S'int32'
p47521
ag34
a((S'taskHandle'
p47522
(lp47523
S'TaskHandle'
p47524
aNtp47525
(S'channel'
p47526
(lp47527
S'char'
p47528
a(lp47529
I-1
aaNtp47530
(S'data'
p47531
(lp47532
S'float64'
p47533
aNtp47534
tp47535
tp47536
sS'DAQmxResetCOPulseIdleState'
p47537
((lp47538
S'int32'
p47539
ag34
a((S'taskHandle'
p47540
(lp47541
S'TaskHandle'
p47542
aNtp47543
(S'channel'
p47544
(lp47545
S'char'
p47546
a(lp47547
I-1
aaNtp47548
tp47549
tp47550
sS'DAQmxGetExportedDataActiveEventOutputTerm'
p47551
((lp47552
S'int32'
p47553
ag34
a((S'taskHandle'
p47554
(lp47555
S'TaskHandle'
p47556
aNtp47557
(S'data'
p47558
(lp47559
S'char'
p47560
ag42
aNtp47561
(S'bufferSize'
p47562
(lp47563
S'uInt32'
p47564
aNtp47565
tp47566
tp47567
sS'DAQmxResetAIDigFltrCoeff'
p47568
((lp47569
S'int32'
p47570
ag34
a((S'taskHandle'
p47571
(lp47572
S'TaskHandle'
p47573
aNtp47574
(S'channel'
p47575
(lp47576
S'char'
p47577
a(lp47578
I-1
aaNtp47579
tp47580
tp47581
sS'DAQmxGet9238CalAdjustPoints'
p47582
((lp47583
S'int32'
p47584
ag34
a((S'calHandle'
p47585
(lp47586
S'CalHandle'
p47587
aNtp47588
(S'adjustmentPoints'
p47589
(lp47590
S'float64'
p47591
ag42
aNtp47592
(S'bufferSize'
p47593
(lp47594
S'uInt32'
p47595
aNtp47596
tp47597
tp47598
sS'DAQmxGetAIFreqUnits'
p47599
((lp47600
S'int32'
p47601
ag34
a((S'taskHandle'
p47602
(lp47603
S'TaskHandle'
p47604
aNtp47605
(S'channel'
p47606
(lp47607
S'char'
p47608
a(lp47609
I-1
aaNtp47610
(S'data'
p47611
(lp47612
S'int32'
p47613
ag42
aNtp47614
tp47615
tp47616
sS'DAQmxGetPhysicalChanTEDSSerialNum'
p47617
((lp47618
S'int32'
p47619
ag34
a((S'physicalChannel'
p47620
(lp47621
S'char'
p47622
a(lp47623
I-1
aaNtp47624
(S'data'
p47625
(lp47626
S'uInt32'
p47627
ag42
aNtp47628
tp47629
tp47630
sS'DAQmxGetDigLvlPauseTrigSrc'
p47631
((lp47632
S'int32'
p47633
ag34
a((S'taskHandle'
p47634
(lp47635
S'TaskHandle'
p47636
aNtp47637
(S'data'
p47638
(lp47639
S'char'
p47640
ag42
aNtp47641
(S'bufferSize'
p47642
(lp47643
S'uInt32'
p47644
aNtp47645
tp47646
tp47647
sS'DAQmxGetDevTCPIPWirelessIP'
p47648
((lp47649
S'int32'
p47650
ag34
a((S'device'
p47651
(lp47652
S'char'
p47653
a(lp47654
I-1
aaNtp47655
(S'data'
p47656
(lp47657
S'char'
p47658
ag42
aNtp47659
(S'bufferSize'
p47660
(lp47661
S'uInt32'
p47662
aNtp47663
tp47664
tp47665
sS'DAQmxSetDigLvlPauseTrigDigFltrEnable'
p47666
((lp47667
S'int32'
p47668
ag34
a((S'taskHandle'
p47669
(lp47670
S'TaskHandle'
p47671
aNtp47672
(S'data'
p47673
(lp47674
S'bool32'
p47675
aNtp47676
tp47677
tp47678
sS'DAQmxGetExtCalLastDateAndTime'
p47679
((lp47680
S'int32'
p47681
ag34
a((S'deviceName'
p47682
(lp47683
S'char'
p47684
a(lp47685
I-1
aaNtp47686
(S'year'
p47687
(lp47688
S'uInt32'
p47689
ag42
aNtp47690
(S'month'
p47691
(lp47692
S'uInt32'
p47693
ag42
aNtp47694
(S'day'
p47695
(lp47696
S'uInt32'
p47697
ag42
aNtp47698
(S'hour'
p47699
(lp47700
S'uInt32'
p47701
ag42
aNtp47702
(S'minute'
p47703
(lp47704
S'uInt32'
p47705
ag42
aNtp47706
tp47707
tp47708
sS'DAQmxResetCICountEdgesLogicLvlBehavior'
p47709
((lp47710
S'int32'
p47711
ag34
a((S'taskHandle'
p47712
(lp47713
S'TaskHandle'
p47714
aNtp47715
(S'channel'
p47716
(lp47717
S'char'
p47718
a(lp47719
I-1
aaNtp47720
tp47721
tp47722
sS'DAQmxGetAODevScalingCoeff'
p47723
((lp47724
S'int32'
p47725
ag34
a((S'taskHandle'
p47726
(lp47727
S'TaskHandle'
p47728
aNtp47729
(S'channel'
p47730
(lp47731
S'char'
p47732
a(lp47733
I-1
aaNtp47734
(S'data'
p47735
(lp47736
S'float64'
p47737
ag42
aNtp47738
(S'arraySizeInElements'
p47739
(lp47740
S'uInt32'
p47741
aNtp47742
tp47743
tp47744
sS'DAQmxSetAIStrainGagePoissonRatio'
p47745
((lp47746
S'int32'
p47747
ag34
a((S'taskHandle'
p47748
(lp47749
S'TaskHandle'
p47750
aNtp47751
(S'channel'
p47752
(lp47753
S'char'
p47754
a(lp47755
I-1
aaNtp47756
(S'data'
p47757
(lp47758
S'float64'
p47759
aNtp47760
tp47761
tp47762
sS'DAQmxGetCIPeriodDiv'
p47763
((lp47764
S'int32'
p47765
ag34
a((S'taskHandle'
p47766
(lp47767
S'TaskHandle'
p47768
aNtp47769
(S'channel'
p47770
(lp47771
S'char'
p47772
a(lp47773
I-1
aaNtp47774
(S'data'
p47775
(lp47776
S'uInt32'
p47777
ag42
aNtp47778
tp47779
tp47780
sS'DAQmxResetAIAcceldBRef'
p47781
((lp47782
S'int32'
p47783
ag34
a((S'taskHandle'
p47784
(lp47785
S'TaskHandle'
p47786
aNtp47787
(S'channel'
p47788
(lp47789
S'char'
p47790
a(lp47791
I-1
aaNtp47792
tp47793
tp47794
sS'DAQmxGetAnlgWinStartTrigTop'
p47795
((lp47796
S'int32'
p47797
ag34
a((S'taskHandle'
p47798
(lp47799
S'TaskHandle'
p47800
aNtp47801
(S'data'
p47802
(lp47803
S'float64'
p47804
ag42
aNtp47805
tp47806
tp47807
sS'DAQmxGetAOOutputImpedance'
p47808
((lp47809
S'int32'
p47810
ag34
a((S'taskHandle'
p47811
(lp47812
S'TaskHandle'
p47813
aNtp47814
(S'channel'
p47815
(lp47816
S'char'
p47817
a(lp47818
I-1
aaNtp47819
(S'data'
p47820
(lp47821
S'float64'
p47822
ag42
aNtp47823
tp47824
tp47825
ssg10
(dp47826
sg12
(dp47827
sg14
(dp47828
S'DAQmx_Dev_DI_Ports'
p47829
S'0x2321'
p47830
sS'DAQmx_PhysicalChan_AI_InputSrcs'
p47831
S'0x2FD8'
p47832
sS'DAQmxWarningNotActiveResourceManager'
p47833
S'(26807)'
p47834
sS'DAQmxErrorChannelNotReservedForRouting'
p47835
S'(-200186)'
p47836
sS'DAQmx_CI_PulseWidth_LogicLvlBehavior'
p47837
S'0x30AA'
p47838
sS'DAQmx_AI_RTD_B'
p47839
S'0x1011'
p47840
sS'DAQmx_AI_RTD_C'
p47841
S'0x1013'
p47842
sS'DAQmx_AI_RTD_A'
p47843
S'0x1010'
p47844
sS'DAQmx_Val_SampClkActiveEdge'
p47845
S'14617'
p47846
sS'DAQmx_AIConv_MaxRate'
p47847
S'0x22C9'
p47848
sS'DAQmxErrorSampToWritePerChanNotMultipleOfIncr'
p47849
S'(-200584)'
p47850
sS'DAQmxWarningReversePowerProtectionActivated'
p47851
S'(200050)'
p47852
sS'DAQmx_SwitchDev_NumRows'
p47853
S'0x18E9'
p47854
sS'DAQmxWarningPALTransferOverread'
p47855
S'(50411)'
p47856
sS'DAQmxErrorPROMOnTEDSAlreadyWritten'
p47857
S'(-200823)'
p47858
sS'DAQmxErrorWriteNotCompleteBeforeSampClk'
p47859
S'(-209801)'
p47860
sS'DAQmxErrorDiskFull'
p47861
S'(-201305)'
p47862
sS'DAQmxErrorSpecifiedAttrNotValid'
p47863
S'(-200233)'
p47864
sS'DAQmx_Val_SingleCycle'
p47865
S'14613'
p47866
sS'DAQmx_Val_TCPIP'
p47867
S'14828'
p47868
sS'DAQmx_Val_Switch_Topology_2575_2_Wire_95x1_Mux'
p47869
S'"2575/2-Wire 95x1 Mux"'
p47870
sS'DAQmxErrorPrimingCfgFIFO'
p47871
S'(-200329)'
p47872
sS'DAQmxErrorLoggingSampsPerFileNotDivisible'
p47873
S'(-201402)'
p47874
sS'DAQmxErrorCounterTimebaseRateNotSpecified'
p47875
S'(-200143)'
p47876
sS'DAQmxErrorHWUnexpectedlyPoweredOffAndOn'
p47877
S'(-200194)'
p47878
sS'DAQmx_AI_Excit_Val'
p47879
S'0x17F5'
p47880
sS'DAQmx_Val_FullBridgeIII'
p47881
S'10185'
p47882
sS'DAQmxErrorDigitalWaveformExpected'
p47883
S'(-200094)'
p47884
sS'DAQmx_Val_PoundsPerSquareInch'
p47885
S'15879'
p47886
sS'DAQmx_DigEdge_AdvTrig_Edge'
p47887
S'0x1360'
p47888
sS'DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread'
p47889
S'(-200979)'
p47890
sS'DAQmxErrorInadequateResolutionForTimebaseCal'
p47891
S'(-200721)'
p47892
sS'DAQmx_Val_Switch_Topology_2531_1_Wire_8x64_Matrix'
p47893
S'"2531/1-Wire 8x64 Matrix"'
p47894
sS'DAQmxErrorInterpolationRateNotPossible'
p47895
S'(-200270)'
p47896
sS'DAQmx_Write_OpenCurrentLoopChansExist'
p47897
S'0x29EA'
p47898
sS'DAQmxErrorRequestedSignalInversionForRoutingNotPossible'
p47899
S'(-200042)'
p47900
sS'DAQmx_Val_Bits'
p47901
S'10109'
p47902
sS'DAQmxErrorInvalidIdentifierFollowingSeparatorInList'
p47903
S'(-200051)'
p47904
sS'DAQmxErrorSCXI1126ThreshHystCombination'
p47905
S'(-200223)'
p47906
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInStarTriggerSlot_Routing'
p47907
S'(-89162)'
p47908
sS'DAQmxErrorFirmwareTooNew'
p47909
S'(-201165)'
p47910
sS'DAQmxErrorNetworkDAQCannotCreateEmptySleeve'
p47911
S'(-201246)'
p47912
sS'DAQmxErrorInvalidRoutingSourceTerminalName_Routing'
p47913
S'(-89120)'
p47914
sS'DAQmxErrorSelfCalTemperatureNotDAQmx'
p47915
S'(-200542)'
p47916
sS'DAQmxErrorCantSetWatchdogExpirationOnDigInChan'
p47917
S'(-200651)'
p47918
sS'DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate'
p47919
S'0x221C'
p47920
sS'DAQmxErrorInvalidCouplingForMeasurementType'
p47921
S'(-201279)'
p47922
sS'DAQmx_SwitchDev_SettlingTime'
p47923
S'0x1244'
p47924
sS'DAQmxErrorInvalidAsynOpHandle'
p47925
S'(-200616)'
p47926
sS'DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth'
p47927
S'0x221A'
p47928
sS'DAQmx_AO_DataXferReqCond'
p47929
S'0x183C'
p47930
sS'DAQmx_AI_MemMapEnable'
p47931
S'0x188C'
p47932
sS'DAQmxErrorTimebaseCalFailedToConverge'
p47933
S'(-200722)'
p47934
sS'DAQmx_SwitchDev_RelayList'
p47935
S'0x17DC'
p47936
sS'DAQmxErrorPALSyncAbandoned'
p47937
S'(-50551)'
p47938
sS'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2'
p47939
S'(-200745)'
p47940
sS'DAQmxErrorInvalidGlobalChan'
p47941
S'(-200882)'
p47942
sS'DAQmxErrorExtCalConstsInvalid'
p47943
S'(-200437)'
p47944
sS'DAQmxErrorSwitchDifferentTopologyWhenScanning'
p47945
S'(-200191)'
p47946
sS'DAQmxErrorCalibrationFailedAOOutOfRange'
p47947
S'(-201295)'
p47948
sS'DAQmxErrorWaitUntilTriggerNotAllowedInBreakBlock'
p47949
S'(-201216)'
p47950
sS'DAQmx_Val_LargeRng2Ctr'
p47951
S'10205'
p47952
sS'DAQmxErrorMeasCalAdjustDirectPathOutputImpedance'
p47953
S'(-200507)'
p47954
sS'DAQmxErrorCantAllowConnectDACToGnd'
p47955
S'(-200669)'
p47956
sS'DAQmx_PauseTrig_Term'
p47957
S'0x2F20'
p47958
sS'DAQmxErrorPALPhysicalBufferEmpty'
p47959
S'(-50408)'
p47960
sS'DAQmxErrorInvalidAccessoryChange'
p47961
S'(-201341)'
p47962
sS'DAQmxErrorResourcesInUseForInversionInTask_Routing'
p47963
S'(-89135)'
p47964
sS'DAQmxErrorSampPerChanNotMultOfXferSize'
p47965
S'(-200837)'
p47966
sS'DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType'
p47967
S'(-200915)'
p47968
sS'DAQmxErrorConfigFailedBecauseWatchdogExpired'
p47969
S'(-201434)'
p47970
sS'DAQmxErrorPALTransferTimedOut'
p47971
S'(-50400)'
p47972
sS'DAQmxErrorSensorInvalidCompletionResistance'
p47973
S'(-200163)'
p47974
sS'DAQmxErrorPxiResmanSystemDescriptionParseError'
p47975
S'(-26401)'
p47976
sS'DAQmx_Val_AllowRegen'
p47977
S'10097'
p47978
sS'DAQmxErrorOperationAborted'
p47979
S'(-201452)'
p47980
sS'DAQmx_Val_PrincipalStrainAngle'
p47981
S'15973'
p47982
sS'DAQmxWarningWriteNotCompleteBeforeSampClk'
p47983
S'(209801)'
p47984
sS'DAQmxErrorLoggingWriteSizeTooBig'
p47985
S'(-201383)'
p47986
sS'DAQmxErrorNoForwardPolyScaleCoeffs'
p47987
S'(-200405)'
p47988
sS'DAQmxErrorAllChansShouldBeProvidedForCalibration'
p47989
S'(-201482)'
p47990
sS'DAQmxErrorChannelSizeTooBigForPortReadType'
p47991
S'(-200466)'
p47992
sS'DAQmxErrorNetworkDevicesNotSupportedOnThisPlatform'
p47993
S'(-201379)'
p47994
sS'DAQmxErrorInvalidAIAttenuation'
p47995
S'(-200412)'
p47996
sS'DAQmx_Dev_AI_CurrentIntExcitDiscreteVals'
p47997
S'0x29CB'
p47998
sS'DAQmxWarningReadRepeatedData'
p47999
S'(200060)'
p48000
sS'DAQmxErrorBufferWithOnDemandSampTiming'
p48001
S'(-200217)'
p48002
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc'
p48003
S'0x2216'
p48004
sS'DAQmxErrorChanSizeTooBigForU32PortRead'
p48005
S'(-200564)'
p48006
sS'DAQmx_AI_ChanCal_Desc'
p48007
S'0x22A4'
p48008
sS'DAQmxErrorCantSetPropertyTaskNotRunningCommitted'
p48009
S'(-200971)'
p48010
sS'DAQmx_CO_Pulse_Freq'
p48011
S'0x1178'
p48012
sS'DAQmxErrorRoutingDestTermPXIStarInSystemTimingSlot_Routing'
p48013
S'(-89153)'
p48014
sS'DAQmxErrorDataNotAvailable'
p48015
S'(-200005)'
p48016
sS'DAQmx_SwitchChan_WireMode'
p48017
S'0x18E5'
p48018
sS'DAQmx_RealTime_WaitForNextSampClkWaitMode'
p48019
S'0x22EF'
p48020
sS'DAQmxErrorReferenceVoltageInvalid'
p48021
S'(-200153)'
p48022
sS'DAQmxWarningPALHardwareFault'
p48023
S'(50152)'
p48024
sS'DAQmx_Val_RightJustified'
p48025
S'10279'
p48026
sS'DAQmx_Write_NextWriteIsLast'
p48027
S'0x296C'
p48028
sS'DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged'
p48029
S'(-200961)'
p48030
sS'DAQmxErrorCOWritePulseHighTimeOutOfRange'
p48031
S'(-200686)'
p48032
sS'DAQmxErrorMyDAQPowerRailFault'
p48033
S'(-201381)'
p48034
sS'DAQmxErrorTaskNotInDataNeighborhood'
p48035
S'(-200485)'
p48036
sS'DAQmx_CI_Timestamp_Units'
p48037
S'0x22B3'
p48038
sS'DAQmx_Val_Switch_Topology_2554_4x1_Mux'
p48039
S'"2554/4x1 Mux"'
p48040
sS'DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone'
p48041
S'(-200581)'
p48042
sS'DAQmxErrorChannelExpansionWithInvalidAnalogTriggerDevice'
p48043
S'(-201362)'
p48044
sS'DAQmx_Val_Force_IEPESensor'
p48045
S'15895'
p48046
sS'DAQmxErrorRoutingPathNotAvailable_Routing'
p48047
S'(-89124)'
p48048
sS'DAQmxErrorOnboardRegenWithMoreThan16Channels'
p48049
S'(-201365)'
p48050
sS'DAQmx_Val_HWTimedSinglePoint'
p48051
S'12522'
p48052
sS'DAQmx_Dev_Terminals'
p48053
S'0x2A40'
p48054
sS'DAQmx_AI_Thrmstr_A'
p48055
S'0x18C9'
p48056
sS'DAQmx_AI_Thrmstr_B'
p48057
S'0x18CB'
p48058
sS'DAQmx_AI_Thrmstr_C'
p48059
S'0x18CA'
p48060
sS'DAQmx_DO_LineStates_StartState'
p48061
S'0x2972'
p48062
sS'DAQmxErrorIncorrectPassword'
p48063
S'(-200110)'
p48064
sS'DAQmx_Task_NumChans'
p48065
S'0x2181'
p48066
sS'DAQmxErrorAnalogTrigChanNotFirstInScanList'
p48067
S'(-200131)'
p48068
sS'DAQmx_CI_Period_EnableAveraging'
p48069
S'0x2ED1'
p48070
sS'DAQmx_Exported_HshkEvent_Pulse_Width'
p48071
S'0x22C1'
p48072
sS'DAQmx_Val_QuarterBridge'
p48073
S'10270'
p48074
sS'DAQmxErrorInvalidLineGrouping'
p48075
S'(-200528)'
p48076
sS'DAQmx_SampClk_Src'
p48077
S'0x1852'
p48078
sS'DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly'
p48079
S'(-200928)'
p48080
sS'DAQmxErrorEveryNSampsEventAlreadyRegistered'
p48081
S'(-200881)'
p48082
sS'DAQmxErrorDevAbsentOrUnavailable'
p48083
S'(-200324)'
p48084
sS'DAQmxWarningPALBadPointer'
p48085
S'(50004)'
p48086
sS'DAQmx_Val_CartesianStrainY'
p48087
S'15975'
p48088
sS'DAQmx_Val_CartesianStrainX'
p48089
S'15974'
p48090
sS'DAQmxErrorNestingNotAllowedInBreakBlock'
p48091
S'(-201219)'
p48092
sS'DAQmx_Val_SCXI1124RangeNeg5to5V'
p48093
S'14633'
p48094
sS'DAQmxErrorNegativeReadSampleNumber'
p48095
S'(-200277)'
p48096
sS'DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning'
p48097
S'(-200834)'
p48098
sS'DAQmx_Val_Position_LVDT'
p48099
S'10352'
p48100
sS'DAQmxErrorChanCalTablePreScaledValsNotSpecd'
p48101
S'(-200936)'
p48102
sS'DAQmx_Val_TIOSeries'
p48103
S'14661'
p48104
sS'DAQmx_SyncPulse_ResetDelay'
p48105
S'0x2F7D'
p48106
sS'DAQmxErrorCardsIncompatible'
p48107
S'(-201354)'
p48108
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate'
p48109
S'0x2212'
p48110
sS'DAQmxWarningPALResourceOwnedBySystem'
p48111
S'(50100)'
p48112
sS'DAQmxErrorAIMinTooLarge'
p48113
S'(-200577)'
p48114
sS'DAQmxErrorPxiResmanControllerTypeInvalid'
p48115
S'(-26301)'
p48116
sS'DAQmxErrorScriptNotInMem'
p48117
S'(-200342)'
p48118
sS'DAQmxErrorPALHardwareFault'
p48119
S'(-50152)'
p48120
sS'DAQmxErrorPhysChanMeasType'
p48121
S'(-200431)'
p48122
sS'DAQmxWarningPALValueConflict'
p48123
S'(50000)'
p48124
sS'DAQmxErrorMarkerPositionOutsideSubsetInScript'
p48125
S'(-200034)'
p48126
sS'DAQmx_Val_PulseWidth'
p48127
S'10359'
p48128
sS'DAQmxErrorDeviceComponentTestFailure'
p48129
S'(-201112)'
p48130
sS'DAQmxErrorRetriggeringFiniteCONotAllowed'
p48131
S'(-201439)'
p48132
sS'DAQmx_Val_WaitForHandshakeTriggerAssert'
p48133
S'12550'
p48134
sS'DAQmxWarningTrigmanDisconnected'
p48135
S'(26010)'
p48136
sS'DAQmx_AnlgWin_StartTrig_Top'
p48137
S'0x1403'
p48138
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_64x1_Mux'
p48139
S'"2576/2-Wire 64x1 Mux"'
p48140
sS'DAQmx_DO_LineStates_DoneState'
p48141
S'0x2968'
p48142
sS'DAQmxErrorInvalidRefClkSrc'
p48143
S'(-200415)'
p48144
sS'DAQmx_Val_DynamicSignalAcquisition'
p48145
S'14649'
p48146
sS'DAQmx_DO_DataXferReqCond'
p48147
S'0x2267'
p48148
sS'DAQmx_CI_Freq_DigFltr_TimebaseRate'
p48149
S'0x21EA'
p48150
sS'DAQmx_Dev_CI_MaxSize'
p48151
S'0x299F'
p48152
sS'DAQmxErrorWaitForNextSampClkNotSupported'
p48153
S'(-200863)'
p48154
sS'DAQmxWarningAttributeNotFound'
p48155
S'(26653)'
p48156
sS'DAQmxWarningDevNotSelfCalibratedWithDAQmx'
p48157
S'(200016)'
p48158
sS'DAQmx_AI_FilterDelayUnits'
p48159
S'0x3071'
p48160
sS'DAQmxErrorNoAnalogTrigHW'
p48161
S'(-200214)'
p48162
sS'DAQmx_Dev_DO_TrigUsage'
p48163
S'0x2989'
p48164
sS'DAQmx_Val_HighResolution'
p48165
S'10195'
p48166
sS'DAQmx_Dev_AO_SampClkSupported'
p48167
S'0x2996'
p48168
sS'DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq'
p48169
S'0x1885'
p48170
sS'DAQmx_AI_Resistance_Units'
p48171
S'0x0955'
p48172
sS'DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqDiscreteVals'
p48173
S'0x30C8'
p48174
sS'DAQmx_Val_mVoltsPerPound'
p48175
S'15892'
p48176
sS'DAQmxErrorWriteOffsetNotMultOfIncr'
p48177
S'(-200630)'
p48178
sS'DAQmxErrorGlobalChanNameAlreadyTaskName'
p48179
S'(-200918)'
p48180
sS'DAQmxErrorClockMasterForExternalClockNotLongestPipeline'
p48181
S'(-201018)'
p48182
sS'DAQmx_PersistedScale_Author'
p48183
S'0x22D4'
p48184
sS'DAQmx_Dev_IsSimulated'
p48185
S'0x22CA'
p48186
sS'DAQmx_AO_FilterDelayAdjustment'
p48187
S'0x3072'
p48188
sS'DAQmx_Exported_HshkEvent_Delay'
p48189
S'0x22BC'
p48190
sS'DAQmx_Val_ZeroVoltsOrAmps'
p48191
S'12526'
p48192
sS'DAQmx_AnlgWin_PauseTrig_Coupling'
p48193
S'0x2237'
p48194
sS'DAQmx_AnlgWin_PauseTrig_Btm'
p48195
S'0x1375'
p48196
sS'DAQmx_Val_Switch_Topology_2585_1_Wire_10x1_Mux'
p48197
S'"2585/1-Wire 10x1 Mux"'
p48198
sS'DAQmxErrorPhysChanOutputType'
p48199
S'(-200432)'
p48200
sS'DAQmxWarningSampValCoercedToMin'
p48201
S'(200022)'
p48202
sS'DAQmxErrorNoReversePolyScaleCoeffs'
p48203
S'(-200406)'
p48204
sS'DAQmxErrorPALComponentAlreadyLoaded'
p48205
S'(-50260)'
p48206
sS'DAQmxErrorPhysChanNotInTask'
p48207
S'(-200649)'
p48208
sS'DAQmx_Val_Switch_Topology_1193_Dual_8x1_Terminated_Mux'
p48209
S'"1193/Dual 8x1 Terminated Mux"'
p48210
sS'DAQmxErrorNetworkTargetUnreachable'
p48211
S'(-201252)'
p48212
sS'DAQmx_AO_PowerAmp_ChannelEnable'
p48213
S'0x3062'
p48214
sS'DAQmxErrorPALComponentInitializationFault'
p48215
S'(-50258)'
p48216
sS'DAQmx_Exported_HshkEvent_OutputBehavior'
p48217
S'0x22BB'
p48218
sS'DAQmx_Val_IRIGB'
p48219
S'10070'
p48220
sS'DAQmx_Val_Position_LinEncoder'
p48221
S'10361'
p48222
sS'DAQmx_CI_Encoder_BInput_DigSync_Enable'
p48223
S'0x2204'
p48224
sS'DAQmx_Val_LosslessPacking'
p48225
S'12555'
p48226
sS'DAQmxErrorResourcesInUseForRoute'
p48227
S'(-200369)'
p48228
sS'DAQmx_Val_Switch_Topology_1166_32_SPDT'
p48229
S'"1166/32-SPDT"'
p48230
sS'DAQmx_Val_ChannelHighImpedance'
p48231
S'2'
p48232
sS'DAQmxErrorPALTransferInProgress'
p48233
S'(-50403)'
p48234
sS'DAQmx_CI_Max'
p48235
S'0x189C'
p48236
sS'DAQmx_AnlgLvl_PauseTrig_DigFltr_Enable'
p48237
S'0x2EF0'
p48238
sS'DAQmx_Val_PipelinedSampClk'
p48239
S'14668'
p48240
sS'DAQmxErrorTwoEdgeSeparationSameTerminalSameEdge'
p48241
S'(-201442)'
p48242
sS'DAQmxErrorLineNumIncompatibleWithVideoSignalFormat'
p48243
S'(-200424)'
p48244
sS'DAQmx_Exported_RdyForXferEvent_Lvl_ActiveLvl'
p48245
S'0x22B6'
p48246
sS'DAQmxErrorLabVIEWEmptyTaskOrChans'
p48247
S'(-200429)'
p48248
sS'DAQmxErrorPALDeviceNotFound'
p48249
S'(-50300)'
p48250
sS'DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x'
p48251
S'(-200899)'
p48252
sS'DAQmxErrorMStudioMultiplePhysChansNotSupported'
p48253
S'(-200792)'
p48254
sS'DAQmxErrorADCOverrun'
p48255
S'(-200019)'
p48256
sS'DAQmxErrorCounterTimebaseRateNotFound'
p48257
S'(-200142)'
p48258
sS'DAQmxErrorPALLogicalBufferFull'
p48259
S'(-50407)'
p48260
sS'DAQmx_AI_Force_IEPESensor_Sensitivity'
p48261
S'0x2F81'
p48262
sS'DAQmx_CO_CtrTimebaseRate'
p48263
S'0x18C2'
p48264
sS'DAQmxErrorAOMinMaxNotInGainRange'
p48265
S'(-200760)'
p48266
sS'DAQmx_Val_MapRanges'
p48267
S'10448'
p48268
sS'DAQmx_Val_SCExpress'
p48269
S'15886'
p48270
sS'DAQmx_Val_Switch_Topology_2593_Dual_8x1_Mux'
p48271
S'"2593/Dual 8x1 Mux"'
p48272
sS'DAQmx_CI_Encoder_AInputTerm'
p48273
S'0x219D'
p48274
sS'TRUE'
p48275
S'(1L)'
p48276
sS'DAQmx_Val_Switch_Topology_1169_50_DPST'
p48277
S'"1169/50-DPST"'
p48278
sS'DAQmx_Val_mVoltsPerNewton'
p48279
S'15891'
p48280
sS'DAQmxErrorExpectedNumberOfChannelsVerificationFailed'
p48281
S'(-200464)'
p48282
sS'DAQmxErrorInconsistentDigitalFilteringAcrossTerminals'
p48283
S'(-201510)'
p48284
sS'DAQmxErrorRoutingDestTermPXIStarInNonStarTriggerSlot_Routing'
p48285
S'(-89155)'
p48286
sS'DAQmxErrorInvalidSCCSlotNumberSpecd'
p48287
S'(-201079)'
p48288
sS'DAQmxErrorUserDefinedWfmWithOOKUnsupported'
p48289
S'(-201111)'
p48290
sS'DAQmxErrorTrigLineNotFound'
p48291
S'(-200224)'
p48292
sS'DAQmx_SwitchDev_AutoConnAnlgBus'
p48293
S'0x17DA'
p48294
sS'DAQmxErrorExternalTimebaseRateNotknownForRate'
p48295
S'(-200132)'
p48296
sS'DAQmx_Val_CO'
p48297
S'10132'
p48298
sS'DAQmxErrorReadChanTypeMismatch'
p48299
S'(-200525)'
p48300
sS'DAQmx_Val_CI'
p48301
S'10131'
p48302
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_4x64_Matrix'
p48303
S'"2532/1-Wire Dual 4x64 Matrix"'
p48304
sS'DAQmx_CO_Pulse_DutyCyc'
p48305
S'0x1176'
p48306
sS'DAQmxErrorAutoConfigOfOfflineDevicesInvalid'
p48307
S'(-201465)'
p48308
sS'DAQmxErrorCantUseThisTimingEngineWithAPort'
p48309
S'(-201227)'
p48310
sS'DAQmx_Val_PulseFrequency'
p48311
S'15864'
p48312
sS'DAQmxErrorAddressAlreadyInUse'
p48313
S'(-201031)'
p48314
sS'DAQmxErrorInvalidWaveformLengthBeforeBreakBlock'
p48315
S'(-201209)'
p48316
sS'DAQmx_CI_Freq_EnableAveraging'
p48317
S'0x2ED0'
p48318
sS'DAQmx_Val_Radians'
p48319
S'10273'
p48320
sS'DAQmx_Val_Rosette_Strain_Gage'
p48321
S'15980'
p48322
sS'DAQmxErrorSCXIDigitizerSimMustNotBeSimWhenModIsNotSim'
p48323
S'(-201153)'
p48324
sS'DAQmxWarningPALLogicalBufferFull'
p48325
S'(50407)'
p48326
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth'
p48327
S'0x222E'
p48328
sS'DAQmxErrorTEDSSensorDataError'
p48329
S'(-200826)'
p48330
sS'DAQmxErrorIncorrectDataType'
p48331
S'(-26656)'
p48332
sS'DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType'
p48333
S'(-200916)'
p48334
sS'DAQmxErrorFewerThan2ScaledValues'
p48335
S'(-200433)'
p48336
sS'DAQmx_AI_Velocity_Units'
p48337
S'0x2FF4'
p48338
sS'DAQmx_SampQuant_SampMode'
p48339
S'0x1300'
p48340
sS'DAQmx_Val_Switch_Topology_2546_Dual_4x1_Mux'
p48341
S'"2546/Dual 4x1 Mux"'
p48342
sS'DAQmxErrorResourcesInUseForExportSignalPolarity'
p48343
S'(-200367)'
p48344
sS'DAQmx_CI_CountEdges_Term'
p48345
S'0x18C7'
p48346
sS'DAQmxErrorProductTypeAndProductNumberConflict'
p48347
S'(-201041)'
p48348
sS'DAQmxErrorAnalogTrigChanNotExternal'
p48349
S'(-200711)'
p48350
sS'DAQmx_Val_MetersPerSecond'
p48351
S'15959'
p48352
sS'DAQmxErrorOverVoltageProtectionActivated'
p48353
S'(-201265)'
p48354
sS'DAQmx_Val_Switch_Topology_1193_Independent'
p48355
S'"1193/Independent"'
p48356
sS'DAQmxErrorTimingSrcDoesNotExist'
p48357
S'(-200738)'
p48358
sS'DAQmx_AI_ChanCal_Verif_AcqVals'
p48359
S'0x22A2'
p48360
sS'DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate'
p48361
S'0x2274'
p48362
sS'DAQmx_Val_Pounds'
p48363
S'15876'
p48364
sS'DAQmx_Val_Switch_Topology_2595_4x1_Mux'
p48365
S'"2595/4x1 Mux"'
p48366
sS'DAQmxErrorTriggerTooFast'
p48367
S'(-201364)'
p48368
sS'DAQmx_Val_Switch_Topology_1193_32x1_Mux'
p48369
S'"1193/32x1 Mux"'
p48370
sS'DAQmxErrorCabledModuleNotCapableOfRoutingAI'
p48371
S'(-200151)'
p48372
sS'DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist'
p48373
S'(-200640)'
p48374
sS'DAQmx_AI_Bridge_ShuntCal_ShuntCalAResistance'
p48375
S'0x2F78'
p48376
sS'DAQmxErrorInvalidTriggerLineInList'
p48377
S'(-200048)'
p48378
sS'DAQmx_CI_AngEncoder_Units'
p48379
S'0x18A6'
p48380
sS'DAQmxErrorLocalRemoteDriverVersionMismatch_Routing'
p48381
S'(-88716)'
p48382
sS'DAQmx_Val_ProgrammedIO'
p48383
S'10264'
p48384
sS'DAQmxErrorOperationTimedOut'
p48385
S'(-200474)'
p48386
sS'DAQmxErrorRoutingSrcTermPXIStarInNonStarTriggerSlot_Routing'
p48387
S'(-89156)'
p48388
sS'DAQmx_DI_InvertLines'
p48389
S'0x0793'
p48390
sS'DAQmx_Dev_CI_SampModes'
p48391
S'0x2FDE'
p48392
sS'DAQmx_Exported_SampClk_OutputBehavior'
p48393
S'0x186B'
p48394
sS'DAQmx_Scale_Type'
p48395
S'0x1929'
p48396
sS'CVICALLBACK'
p48397
S'__cdecl'
p48398
sS'DAQmxErrorMStudioCppRemoveEventsBeforeStop'
p48399
S'(-200991)'
p48400
sS'DAQmxWarningPALTransferStopped'
p48401
S'(50404)'
p48402
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Octal_8x1_Mux'
p48403
S'"2576/2-Wire Octal 8x1 Mux"'
p48404
sS'DAQmx_CO_OutputType'
p48405
S'0x18B5'
p48406
sS'DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth'
p48407
S'0x2201'
p48408
sS'DAQmxErrorTEDSDoesNotContainPROM'
p48409
S'(-200822)'
p48410
sS'DAQmxErrorScriptHasInvalidIdentifier'
p48411
S'(-200024)'
p48412
sS'DAQmxErrorCfgTEDSNotSupportedOnRT'
p48413
S'(-200808)'
p48414
sS'DAQmxErrorPALDeviceUnknown'
p48415
S'(-50301)'
p48416
sS'DAQmxErrorInternalAIInputSrcInMultipleChanGroups'
p48417
S'(-200571)'
p48418
sS'DAQmxErrorRoutingDestTermPXIStarXNotInSystemTimingSlot_Routing'
p48419
S'(-89159)'
p48420
sS'DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseSrc'
p48421
S'0x2F01'
p48422
sS'DAQmxErrorAcqStoppedToPreventInputBufferOverwrite'
p48423
S'(-200222)'
p48424
sS'DAQmx_Dev_CompactDAQ_ChassisDevName'
p48425
S'0x29B7'
p48426
sS'DAQmxErrorSpecdSlotAlreadyOccupied'
p48427
S'(-201033)'
p48428
sS'DAQmxErrorInvalidAOOffsetCalConst'
p48429
S'(-200719)'
p48430
sS'DAQmxErrorWaveformWriteOutOfBounds'
p48431
S'(-200311)'
p48432
sS'DAQmx_CI_CountEdges_DigSync_Enable'
p48433
S'0x21FA'
p48434
sS'DAQmxErrorInvalidRoutingDestinationTerminalName_Routing'
p48435
S'(-89121)'
p48436
sS'DAQmxWarningUserDefinedInfoTooLong'
p48437
S'(200025)'
p48438
sS'DAQmxErrorDuplicatedChannel'
p48439
S'(-200003)'
p48440
sS'DAQmx_CI_CountEdges_LogicLvlBehavior'
p48441
S'0x309C'
p48442
sS'DAQmx_Val_Pulse'
p48443
S'10265'
p48444
sS'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc'
p48445
S'0x2202'
p48446
sS'DAQmxErrorInvalidNumRefVoltagesToWrite'
p48447
S'(-201430)'
p48448
sS'DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev'
p48449
S'(-200494)'
p48450
sS'DAQmxErrorInvalidAttribute'
p48451
S'(-26806)'
p48452
sS'DAQmx_DI_DataXferMech'
p48453
S'0x2263'
p48454
sS'DAQmx_Read_ReadAllAvailSamp'
p48455
S'0x1215'
p48456
sS'DAQmxErrorDAQmxCantUseStringDueToUnknownChar'
p48457
S'(-200811)'
p48458
sS'DAQmxErrorOddTotalNumSampsToWrite'
p48459
S'(-200692)'
p48460
sS'DAQmxErrorSampTbRateSampTbSrcMismatch'
p48461
S'(-200308)'
p48462
sS'DAQmxErrorRouteNotSupportedByHW_Routing'
p48463
S'(-89136)'
p48464
sS'DAQmxWarningPXIe5606_NotConfigured'
p48465
S'(200072)'
p48466
sS'DAQmxErrorDeviceNotSupportedOnLocalSystem'
p48467
S'(-201474)'
p48468
sS'DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType'
p48469
S'(-200998)'
p48470
sS'DAQmxErrorPROMOnTEDSContainsBasicTEDSData'
p48471
S'(-200824)'
p48472
sS'DAQmx_SampClk_OverrunBehavior'
p48473
S'0x2EFC'
p48474
sS'DAQmxErrorTristateLogicLevelNotSupported'
p48475
S'(-201392)'
p48476
sS'DAQmx_DO_NumLines'
p48477
S'0x2179'
p48478
sS'DAQmxErrorAccessDenied'
p48479
S'(-26111)'
p48480
sS'DAQmx_Val_TEDS_Sensor'
p48481
S'12531'
p48482
sS'DAQmxErrorCppCantRemoveEventHandlerTwice'
p48483
S'(-200589)'
p48484
sS'DAQmxErrorEEPROMDataInvalid'
p48485
S'(-200152)'
p48486
sS'DAQmxErrorPALFileSeekFault'
p48487
S'(-50206)'
p48488
sS'DAQmx_Val_ALowBHigh'
p48489
S'10042'
p48490
sS'DAQmx_Val_Switch_Topology_2542_Quad_2x1_Terminated_Mux'
p48491
S'"2542/Quad 2x1 Terminated Mux"'
p48492
sS'DAQmxErrorInvalidStorage'
p48493
S'(-201234)'
p48494
sS'DAQmx_Val_Switch_Topology_2543_Dual_4x1_Terminated_Mux'
p48495
S'"2543/Dual 4x1 Terminated Mux"'
p48496
sS'DAQmx_CI_Encoder_AInputLogicLvlBehavior'
p48497
S'0x30A4'
p48498
sS'DAQmx_Task_Name'
p48499
S'0x1276'
p48500
sS'DAQmx_Val_Switch_Topology_2556_Dual_4x1_Mux'
p48501
S'"2556/Dual 4x1 Mux"'
p48502
sS'DAQmx_Write_OvercurrentChans'
p48503
S'0x29E9'
p48504
sS'DAQmxErrorWriteFailedMultipleCOOutputTypes'
p48505
S'(-200829)'
p48506
sS'DAQmx_CI_Period_MeasTime'
p48507
S'0x192D'
p48508
sS'DAQmx_Exported_HshkEvent_Interlocked_AssertedLvl'
p48509
S'0x22BD'
p48510
sS'DAQmxErrorTableScalePreScaledValsNotSpecd'
p48511
S'(-200349)'
p48512
sS'DAQmxErrorFileNotFound'
p48513
S'(-26103)'
p48514
sS'DAQmx_PhysicalChan_AO_ManualControlEnable'
p48515
S'0x2A1E'
p48516
sS'DAQmxErrorConnectionInScanlistMustWaitForTrig'
p48517
S'(-200636)'
p48518
sS'DAQmxErrorPALResourceInitialized'
p48519
S'(-50105)'
p48520
sS'DAQmxErrorRoutingSrcTermPXIDStarInNonDStarTriggerSlot_Routing'
p48521
S'(-89165)'
p48522
sS'DAQmxErrorFirmwareFailedToDownload'
p48523
S'(-201263)'
p48524
sS'DAQmxErrorPALBadToken'
p48525
S'(-50020)'
p48526
sS'DAQmx_AO_FilterDelayUnits'
p48527
S'0x3076'
p48528
sS'DAQmx_Dev_TEDS_HWTEDSSupported'
p48529
S'0x2FD6'
p48530
sS'DAQmxErrorCannotTristateBusyTerm_Routing'
p48531
S'(-89127)'
p48532
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable'
p48533
S'0x222D'
p48534
sS'DAQmxErrorDevInUnidentifiedPXIChassis'
p48535
S'(-200862)'
p48536
sS'DAQmxErrorDDCClkOutDCMBecameUnlocked'
p48537
S'(-200244)'
p48538
sS'DAQmx_SwitchDev_NumRelays'
p48539
S'0x18E6'
p48540
sS'DAQmxErrorInvalidAttentuationBasedOnMinMax'
p48541
S'(-200321)'
p48542
sS'DAQmxErrorInputFIFOUnderflow'
p48543
S'(-200017)'
p48544
sS'DAQmx_Val_Switch_Topology_2531_1_Wire_4x128_Matrix'
p48545
S'"2531/1-Wire 4x128 Matrix"'
p48546
sS'DAQmxErrorCounterMultipleSampleClockedChannels'
p48547
S'(-201324)'
p48548
sS'DAQmx_Val_Switch_Topology_2520_80_SPST'
p48549
S'"2520/80-SPST"'
p48550
sS'DAQmxErrorPALThreadStackSizeNotSupported'
p48551
S'(-50603)'
p48552
sS'DAQmxErrorCannotTristateTerm'
p48553
S'(-200253)'
p48554
sS'DAQmxWarningPALResourceReserved'
p48555
S'(50103)'
p48556
sS'DAQmxErrorInconsistentAnalogTrigSettingsCDAQ'
p48557
S'(-201104)'
p48558
sS'DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x'
p48559
S'(-200898)'
p48560
sS'DAQmx_Read_OpenThrmcplChansExist'
p48561
S'0x2A96'
p48562
sS'DAQmxErrorChanNamesNotSpecdInCfgFile'
p48563
S'(-201083)'
p48564
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable'
p48565
S'0x2214'
p48566
sS'DAQmx_Val_Switch_Topology_2564_8_DPST'
p48567
S'"2564/8-DPST"'
p48568
sS'DAQmx_Scale_Map_ScaledMin'
p48569
S'0x1230'
p48570
sS'DAQmxErrorSampClkRateAndDivCombo'
p48571
S'(-200273)'
p48572
sS'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted'
p48573
S'(-200472)'
p48574
sS'DAQmxErrorRoutingDestTermPXIStarXNotInStarTriggerSlot_Routing'
p48575
S'(-89160)'
p48576
sS'DAQmxErrorChanVersionNew'
p48577
S'(-200469)'
p48578
sS'DAQmxWarningPALResourceBusy'
p48579
S'(50106)'
p48580
sS'FALSE'
p48581
S'(0L)'
p48582
sS'DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid'
p48583
S'(-200145)'
p48584
sS'DAQmx_Val_LogAndRead'
p48585
S'15842'
p48586
sS'DAQmx_CI_Pulse_Freq_Units'
p48587
S'0x2F0B'
p48588
sS'DAQmxErrorInvalidAttributeName'
p48589
S'(-201086)'
p48590
sS'DAQmx_AnlgWin_PauseTrig_DigSync_Enable'
p48591
S'0x2EF9'
p48592
sS'DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask'
p48593
S'(-200948)'
p48594
sS'DAQmx_AI_Bridge_ScaleType'
p48595
S'0x2F89'
p48596
sS'DAQmx_MasterTimebase_Rate'
p48597
S'0x1495'
p48598
sS'DAQmx_Read_CurrReadPos'
p48599
S'0x1221'
p48600
sS'DAQmxErrorInvalidLocalChanName'
p48601
S'(-201069)'
p48602
sS'DAQmx_AI_Bridge_Cfg'
p48603
S'0x0087'
p48604
sS'DAQmxErrorGenericFileIO'
p48605
S'(-201309)'
p48606
sS'DAQmx_Watchdog_AO_ExpirState'
p48607
S'0x305F'
p48608
sS'DAQmxErrorDeviceNotUsableUntilUSBReplug'
p48609
S'(-201190)'
p48610
sS'DAQmxErrorClkDoublerDCMBecameUnlocked'
p48611
S'(-200242)'
p48612
sS'DAQmx_Val_Default'
p48613
S'-1'
p48614
sS'DAQmxError2InputPortCombinationGivenSampTimingType653x'
p48615
S'(-200929)'
p48616
sS'DAQmxErrorDeviceIsNotAValidSwitch'
p48617
S'(-200069)'
p48618
sS'DAQmxErrorInvalidSectionIdentifier'
p48619
S'(-201078)'
p48620
sS'DAQmx_Read_OverWrite'
p48621
S'0x1211'
p48622
sS'DAQmxErrorStartTrigDigPatternChanNotTristated'
p48623
S'(-200886)'
p48624
sS'DAQmxErrorSetupCalNeededBeforeGetCalDataPoints'
p48625
S'(-201497)'
p48626
sS'DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop'
p48627
S'(-200740)'
p48628
sS'DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingType'
p48629
S'(-201122)'
p48630
sS'DAQmx_PhysicalChanName'
p48631
S'0x18F5'
p48632
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_16x16_Matrix'
p48633
S'"2532/2-Wire 16x16 Matrix"'
p48634
sS'DAQmxErrorStreamDCMBecameUnlocked'
p48635
S'(-200314)'
p48636
sS'DAQmxErrorDifferentRawDataCompression'
p48637
S'(-200959)'
p48638
sS'DAQmx_Val_StartTrigger'
p48639
S'12491'
p48640
sS'DAQmxErrorInvalidAttributeValuePossiblyDueToOtherAttributeValues'
p48641
S'(-201398)'
p48642
sS'DAQmx_Val_S_Type_TC'
p48643
S'10085'
p48644
sS'DAQmx_CI_Period_DigFltr_Enable'
p48645
S'0x21EC'
p48646
sS'DAQmxErrorPALConnectionReset'
p48647
S'(-50803)'
p48648
sS'DAQmx_Logging_FileWriteSize'
p48649
S'0x2FC3'
p48650
sS'DAQmxErrorMeasCalAdjustDirectPathGain'
p48651
S'(-200505)'
p48652
sS'DAQmxErrorProductOfAOMinAndGainTooSmall'
p48653
S'(-200271)'
p48654
sS'DAQmxErrorChanCalExpirationDateNotSet'
p48655
S'(-200933)'
p48656
sS'DAQmxErrorExternalSampClkAndRefClkThruSameTerm'
p48657
S'(-200276)'
p48658
sS'DAQmxErrorPortConfiguredForStaticDigitalOps'
p48659
S'(-200119)'
p48660
sS'DAQmxWarningPxiResmanChassisSlotParseError'
p48661
S'(26204)'
p48662
sS'DAQmx_Val_R_Type_TC'
p48663
S'10082'
p48664
sS'DAQmx_Read_OverloadedChansExist'
p48665
S'0x2174'
p48666
sS'DAQmxErrorRepeatLoopNestingTooDeepInScript'
p48667
S'(-200035)'
p48668
sS'DAQmxWarningOnlyGainCalibrated'
p48669
S'(200049)'
p48670
sS'DAQmxErrorDLLLock'
p48671
S'(-200550)'
p48672
sS'DAQmxErrorOutputCantStartChangedRegenerationMode'
p48673
S'(-200568)'
p48674
sS'DAQmxErrorParsingTEDSData'
p48675
S'(-200753)'
p48676
sS'DAQmxErrorSlaveAndNoExternalSyncPulse'
p48677
S'(-201346)'
p48678
sS'DAQmxWarningPathNotFound'
p48679
S'(26110)'
p48680
sS'_NI_uInt8_DEFINED_'
p48681
S''
p48682
sS'DAQmx_Scale_Map_PreScaledMax'
p48683
S'0x1231'
p48684
sS'DAQmxErrorCantSaveChanWithoutReplace'
p48685
S'(-200483)'
p48686
sS'DAQmx_Val_Switch_Topology_2584_2_Wire_6x1_Mux'
p48687
S'"2584/2-Wire 6x1 Mux"'
p48688
sS'DAQmxErrorPALBadReadCount'
p48689
S'(-50011)'
p48690
sS'DAQmx_CI_Period_DigFltr_MinPulseWidth'
p48691
S'0x21ED'
p48692
sS'DAQmx_Val_Switch_Topology_1127_Independent'
p48693
S'"1127/Independent"'
p48694
sS'DAQmxErrorUserDefInfoStringTooLong'
p48695
S'(-201245)'
p48696
sS'DAQmxErrorInputBoardClkDCMBecameUnlocked'
p48697
S'(-200387)'
p48698
sS'DAQmx_Val_Switch_Topology_2514_Independent'
p48699
S'"2514/Independent"'
p48700
sS'DAQmx_PersistedScale_AllowInteractiveEditing'
p48701
S'0x22D5'
p48702
sS'DAQmxErrorIdentifierInUse'
p48703
S'(-201028)'
p48704
sS'DAQmxErrorCannotConnectSrcChans'
p48705
S'(-200188)'
p48706
sS'DAQmx_Val_DigLvl'
p48707
S'10152'
p48708
sS'DAQmx_Val_Switch_Topology_2568_15_DPST'
p48709
S'"2568/15-DPST"'
p48710
sS'DAQmxErrorPALBadMode'
p48711
S'(-50006)'
p48712
sS'DAQmx_Val_CurrWritePos'
p48713
S'10430'
p48714
sS'DAQmx_Val_WaitInfinitely'
p48715
S'-1.0'
p48716
sS'DAQmxErrorMeasTypeOrChannelNotSupportedForLogging'
p48717
S'(-201312)'
p48718
sS'DAQmxErrorInvalidSectionName'
p48719
S'(-201077)'
p48720
sS'DAQmxWarningPxiResmanPciDescriptionStringParseError'
p48721
S'(26550)'
p48722
sS'DAQmxErrorChanIndexInvalid'
p48723
S'(-200606)'
p48724
sS'DAQmx_Val_ActiveHigh'
p48725
S'10095'
p48726
sS'DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort'
p48727
S'(-200654)'
p48728
sS'DAQmx_AI_ACExcit_WireMode'
p48729
S'0x18CD'
p48730
sS'DAQmxErrorMeasCalAdjustCalADC'
p48731
S'(-200509)'
p48732
sS'DAQmxErrorDeviceDoesNotSupportThisOperation'
p48733
S'(-201380)'
p48734
sS'DAQmxErrorStrobePhaseShiftDCMBecameUnlocked'
p48735
S'(-200391)'
p48736
sS'DAQmx_DigLvl_PauseTrig_When'
p48737
S'0x1380'
p48738
sS'DAQmxErrorInvalidIPv4AddressFormat'
p48739
S'(-201272)'
p48740
sS'DAQmx_Dev_DigTrigSupported'
p48741
S'0x2985'
p48742
sS'DAQmx_CI_Encoder_BInput_DigFltr_Enable'
p48743
S'0x2200'
p48744
sS'DAQmx_Val_AIConvertClock'
p48745
S'12484'
p48746
sS'DAQmxErrorPxiResmanSystemDescriptionFileNotFound'
p48747
S'(-26400)'
p48748
sS'DAQmx_Read_OverloadedChans'
p48749
S'0x2175'
p48750
sS'DAQmxErrorStartTrigDelayWithDSAModule'
p48751
S'(-201429)'
p48752
sS'DAQmxErrorCollectionDoesNotMatchChanType'
p48753
S'(-200569)'
p48754
sS'DAQmx_Dev_AI_TrigUsage'
p48755
S'0x2986'
p48756
sS'DAQmxWarningDeviceMayShutDownDueToHighTemp'
p48757
S'(200034)'
p48758
sS'DAQmxErrorMemMappedOnDemandNotSupported'
p48759
S'(-201351)'
p48760
sS'DAQmx_SyncPulse_SyncTime'
p48761
S'0x223E'
p48762
sS'DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty'
p48763
S'(-200643)'
p48764
sS'DAQmx_Dev_AO_VoltageRngs'
p48765
S'0x299B'
p48766
sS'DAQmx_ChanIsGlobal'
p48767
S'0x2304'
p48768
sS'DAQmxErrorTimeStampOverwritten'
p48769
S'(-200009)'
p48770
sS'DAQmx_AnlgEdge_StartTrig_DigFltr_MinPulseWidth'
p48771
S'0x2EE2'
p48772
sS'DAQmx_AI_Velocity_IEPESensor_SensitivityUnits'
p48773
S'0x2FF7'
p48774
sS'DAQmx_Scale_Lin_Slope'
p48775
S'0x1227'
p48776
sS'DAQmx_Val_OverwriteUnreadSamps'
p48777
S'10252'
p48778
sS'DAQmxErrorCalTempNotSupported'
p48779
S'(-200338)'
p48780
sS'DAQmxErrorUnsupportedTrigTypeSendsSWTrig'
p48781
S'(-200373)'
p48782
sS'DAQmxErrorInvalidLoopIterationsInScript'
p48783
S'(-200036)'
p48784
sS'DAQmxErrorSelfCalConstsInvalid'
p48785
S'(-200549)'
p48786
sS'DAQmxErrorDevDoesNotSupportMultiplexedSCXIDigitizationMode'
p48787
S'(-201239)'
p48788
sS'DAQmxWarningTimestampCounterRolledOver'
p48789
S'(200003)'
p48790
sS'DAQmx_CI_DutyCycle_DigFltr_MinPulseWidth'
p48791
S'0x308F'
p48792
sS'DAQmxErrorInversionNotSupportedByHW'
p48793
S'(-200363)'
p48794
sS'DAQmxErrorDeviceSerialPortError'
p48795
S'(-201283)'
p48796
sS'DAQmx_Val_Bit_TriggerUsageTypes_Reference'
p48797
S'(1<<2)'
p48798
sS'DAQmx_Val_Yield'
p48799
S'12525'
p48800
sS'DAQmxErrorCabledModuleCannotRouteSSH'
p48801
S'(-200320)'
p48802
sS'___nidaqmx_h___'
p48803
g48682
sS'DAQmxErrorPxiResmanControllerParseError'
p48804
S'(-26302)'
p48805
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Quad_32x1_Mux'
p48806
S'"2530/1-Wire Quad 32x1 Mux"'
p48807
sS'DAQmxErrorChanDoesNotSupportCJC'
p48808
S'(-200976)'
p48809
sS'DAQmx_StartTrig_DelayUnits'
p48810
S'0x18C8'
p48811
sS'DAQmxErrorInvalidSignalTypeExportSignal'
p48812
S'(-200374)'
p48813
sS'DAQmxErrorOneChanReadForMultiChanTask'
p48814
S'(-200523)'
p48815
sS'DAQmxErrorInvalidRefClkRate'
p48816
S'(-200427)'
p48817
sS'DAQmx_AI_RosetteStrainGage_Orientation'
p48818
S'0x2FFC'
p48819
sS'DAQmxErrorNoAcqStarted'
p48820
S'(-200286)'
p48821
sS'DAQmxErrorDuplicatePropertyInObject'
p48822
S'(-201055)'
p48823
sS'DAQmxErrorExceededCarrierPowerLimit'
p48824
S'(-201355)'
p48825
sS'DAQmxErrorUnexpectedSeparatorInList'
p48826
S'(-200064)'
p48827
sS'DAQmx_Val_PathStatus_ChannelReservedForRouting'
p48828
S'10436'
p48829
sS'DAQmx_Val_DoNotInvertPolarity'
p48830
S'0'
p48831
sS'DAQmxErrorInvalidSwitchChan'
p48832
S'(-200181)'
p48833
sS'DAQmxErrorSampleValueOutOfRange'
p48834
S'(-200490)'
p48835
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_128x1_Mux'
p48836
S'"2530/1-Wire 128x1 Mux"'
p48837
sS'DAQmx_Val_Ohms'
p48838
S'10384'
p48839
sS'DAQmxErrorNoPatternMatcherAvailable'
p48840
S'(-200382)'
p48841
sS'DAQmx_DI_AcquireOn'
p48842
S'0x2966'
p48843
sS'DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty'
p48844
S'(-200642)'
p48845
sS'DAQmxErrorDigFilterIntervalAlreadyCfgd'
p48846
S'(-200645)'
p48847
sS'DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput'
p48848
S'(-200727)'
p48849
sS'DAQmx_Val_Switch_Topology_1128_Independent'
p48850
S'"1128/Independent"'
p48851
sS'DAQmxErrorNotActiveResourceManager'
p48852
S'(-26807)'
p48853
sS'DAQmx_Val_Bar'
p48854
S'15880'
p48855
sS'DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList'
p48856
S'(-200210)'
p48857
sS'DAQmx_Implicit_UnderflowBehavior'
p48858
S'0x2EFD'
p48859
sS'DAQmxErrorWriteNoOutputChansInTask'
p48860
S'(-200459)'
p48861
sS'DAQmxErrorUnexpectedIDFollowingSwitchChanName'
p48862
S'(-200532)'
p48863
sS'DAQmx_Val_SSeriesDAQ'
p48864
S'14644'
p48865
sS'DAQmxErrorSessionCorruptedByDLLReload'
p48866
S'(-201095)'
p48867
sS'DAQmxErrorBufferedAndDataXferPIO'
p48868
S'(-200847)'
p48869
sS'DAQmx_PhysicalChan_AO_SupportedPowerUpOutputTypes'
p48870
S'0x304E'
p48871
sS'DAQmx_Val_Pulse_Time'
p48872
S'10269'
p48873
sS'DAQmx_Dev_ProductType'
p48874
S'0x0631'
p48875
sS'DAQmxErrorLoggingNotSupportOnOutputTasks'
p48876
S'(-201332)'
p48877
sS'DAQmx_Val_Linear'
p48878
S'10447'
p48879
sS'DAQmxErrorTEDSMultipleCalTemplatesNotSupported'
p48880
S'(-200755)'
p48881
sS'DAQmx_AI_Bridge_TwoPointLin_First_ElectricalVal'
p48882
S'0x2F8A'
p48883
sS'DAQmx_AI_DigFltr_Bandpass_Width'
p48884
S'0x30C4'
p48885
sS'DAQmx_SampClk_DigFltr_TimebaseRate'
p48886
S'0x2221'
p48887
sS'DAQmx_Dev_CI_SupportedMeasTypes'
p48888
S'0x2FD4'
p48889
sS'DAQmx_Val_20MHzTimebase'
p48890
S'12537'
p48891
sS'DAQmx_AI_DataXferMech'
p48892
S'0x1821'
p48893
sS'DAQmxWarningPALPhysicalBufferFull'
p48894
S'(50409)'
p48895
sS'DAQmx_Write_NumChans'
p48896
S'0x217E'
p48897
sS'DAQmx_Val_DC'
p48898
S'10050'
p48899
sS'DAQmxErrorCannotUpdatePulseGenProperty'
p48900
S'(-200301)'
p48901
sS'DAQmx_Val_DI'
p48902
S'10151'
p48903
sS'DAQmx_Val_FromTEDS'
p48904
S'12516'
p48905
sS'DAQmx_Val_Force_Bridge'
p48906
S'15899'
p48907
sS'DAQmx_AI_InputSrc'
p48908
S'0x2198'
p48909
sS'DAQmx_Val_DO'
p48910
S'10153'
p48911
sS'DAQmxErrorSampRateTooLow'
p48912
S'(-200331)'
p48913
sS'DAQmxErrorPFI0UsedForAnalogAndDigitalSrc'
p48914
S'(-200330)'
p48915
sS'DAQmx_Val_CreateOrReplace'
p48916
S'15847'
p48917
sS'DAQmx_CI_CountEdges_CountReset_TermCfg'
p48918
S'0x309F'
p48919
sS'DAQmxErrorBufferedOperationsNotSupportedOnSelectedLines'
p48920
S'(-201062)'
p48921
sS'DAQmx_CI_Encoder_DecodingType'
p48922
S'0x21E6'
p48923
sS'DAQmxErrorInvalidTimeoutVal'
p48924
S'(-200453)'
p48925
sS'DAQmxErrorSampClockCannotBeExportedFromExternalSampClockSrc'
p48926
S'(-201164)'
p48927
sS'DAQmxErrorInvalidNumberInRepeatStatementInList'
p48928
S'(-200049)'
p48929
sS'DAQmxErrorMStudioNoForwardPolyScaleCoeffs'
p48930
S'(-200783)'
p48931
sS'DAQmx_Val_Switch_Topology_2564_16_SPST'
p48932
S'"2564/16-SPST"'
p48933
sS'DAQmxErrorThrmcplLeadOffsetNullingCalNotSupported'
p48934
S'(-201375)'
p48935
sS'DAQmx_Val_RepeatedData'
p48936
S'16062'
p48937
sS'DAQmxErrorNetworkDeviceReservedByAnotherHost'
p48938
S'(-201420)'
p48939
sS'DAQmx_RealTime_WriteRecoveryMode'
p48940
S'0x231A'
p48941
sS'DAQmxErrorPALPhysicalBufferFull'
p48942
S'(-50409)'
p48943
sS'DAQmxErrorInputFIFOOverflowDuringCalibration'
p48944
S'(-201188)'
p48945
sS'DAQmxErrorNetworkEEPROMHasChanged'
p48946
S'(-201255)'
p48947
sS'DAQmx_Dev_AO_TrigUsage'
p48948
S'0x2987'
p48949
sS'DAQmx_AnlgWin_StartTrig_DigFltr_Enable'
p48950
S'0x2EFF'
p48951
sS'DAQmxErrorPropertyValNotSupportedByHW'
p48952
S'(-200355)'
p48953
sS'DAQmx_AI_Resolution'
p48954
S'0x1765'
p48955
sS'DAQmxErrorFileAlreadyOpened'
p48956
S'(-201306)'
p48957
sS'DAQmxErrorCantSetAuthorForLocalChan'
p48958
S'(-201038)'
p48959
sS'DAQmx_Exported_PauseTrig_Lvl_ActiveLvl'
p48960
S'0x1616'
p48961
sS'DAQmxErrorInvalidSCCModuleForSlotSpecd'
p48962
S'(-201080)'
p48963
sS'DAQmxErrorInvalidChannelNameInList'
p48964
S'(-200050)'
p48965
sS'DAQmx_Val_Switch_Topology_2558_4_SPDT'
p48966
S'"2558/4-SPDT"'
p48967
sS'DAQmxErrorRetriggeringInvalidForGivenSettings'
p48968
S'(-201320)'
p48969
sS'DAQmx_Val_InvertPolarity'
p48970
S'1'
p48971
sS'DAQmxErrorDeviceNameTooLong'
p48972
S'(-201337)'
p48973
sS'DAQmxWarningPXISAConfigurationLocked'
p48974
S'(26808)'
p48975
sS'DAQmx_CI_Pulse_Time_LogicLvlBehavior'
p48976
S'0x30B4'
p48977
sS'DAQmxErrorNoMatchForSpecdDevice'
p48978
S'(-201042)'
p48979
sS'DAQmx_CI_Freq_Units'
p48980
S'0x18A1'
p48981
sS'DAQmxErrorTrigmanDisconnected'
p48982
S'(-26010)'
p48983
sS'DAQmx_CI_UsbXferReqSize'
p48984
S'0x2A92'
p48985
sS'DAQmxErrorInvalidDeviceIDInList'
p48986
S'(-200207)'
p48987
sS'DAQmxErrorNoExternalSyncPulseDetected'
p48988
S'(-201347)'
p48989
sS'DAQmx_Write_OverloadedChansExist'
p48990
S'0x3084'
p48991
sS'DAQmx_Val_TwoPointLinear'
p48992
S'15898'
p48993
sS'DAQmx_DO_Overcurrent_ReenablePeriod'
p48994
S'0x2A87'
p48995
sS'DAQmxErrorPlus12VFuseBlown'
p48996
S'(-201286)'
p48997
sS'DAQmxErrorPALThreadAlreadyDead'
p48998
S'(-50604)'
p48999
sS'DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq'
p49000
S'(200028)'
p49001
sS'DAQmxErrorGetCalDataInvalidForCalMode'
p49002
S'(-201499)'
p49003
sS'DAQmx_Val_Position_EddyCurrentProximityProbe'
p49004
S'14835'
p49005
sS'DAQmx_AI_Bridge_PhysicalUnits'
p49006
S'0x2F88'
p49007
sS'DAQmx_AI_RTD_Type'
p49008
S'0x1032'
p49009
sS'DAQmxErrorWfmNameSameAsScriptName'
p49010
S'(-200634)'
p49011
sS'DAQmxErrorProgrammedIOFailsBecauseOfWatchdogTimer'
p49012
S'(-201229)'
p49013
sS'DAQmx_Val_Position_RVDT'
p49014
S'10353'
p49015
sS'DAQmx_Exported_ChangeDetectEvent_OutputTerm'
p49016
S'0x2197'
p49017
sS'DAQmx_Val_AnlgWin'
p49018
S'10103'
p49019
sS'DAQmx_Val_PatternDoesNotMatch'
p49020
S'10253'
p49021
sS'DAQmxErrorInvalidTEDSPhysChanNotAI'
p49022
S'(-200969)'
p49023
sS'DAQmx_SwitchChan_Usage'
p49024
S'0x18E4'
p49025
sS'DAQmx_Val_PulseTime'
p49026
S'15865'
p49027
sS'DAQmxErrorOperationNotPermittedWhileScanning'
p49028
S'(-200176)'
p49029
sS'DAQmxErrorPhysicalChanDoesNotExist'
p49030
S'(-200170)'
p49031
sS'DAQmx_Val_AIHoldCmpltEvent'
p49032
S'12493'
p49033
sS'DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseRate'
p49034
S'0x2EF8'
p49035
sS'DAQmx_Read_AccessoryInsertionOrRemovalDetected'
p49036
S'0x2F70'
p49037
sS'DAQmxErrorSampClkRateMustBeSpecd'
p49038
S'(-201087)'
p49039
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_Quad_16x1_Mux'
p49040
S'"2530/2-Wire Quad 16x1 Mux"'
p49041
sS'DAQmxErrorRoutingHardwareBusy_Routing'
p49042
S'(-89123)'
p49043
sS'DAQmxErrorTrigmanInvalidClient'
p49044
S'(-26009)'
p49045
sS'DAQmxErrorWaveformNotInMem'
p49046
S'(-200312)'
p49047
sS'DAQmxErrorInvalidcDAQSyncPortConnectionFormat'
p49048
S'(-201449)'
p49049
sS'DAQmxWarningSampClkRateTooLow'
p49050
S'(200027)'
p49051
sS'DAQmx_AO_Voltage_Units'
p49052
S'0x1184'
p49053
sS'DAQmx_Val_Switch_Topology_2530_4_Wire_32x1_Mux'
p49054
S'"2530/4-Wire 32x1 Mux"'
p49055
sS'DAQmx_CI_Pulse_Time_TermCfg'
p49056
S'0x30B3'
p49057
sS'DAQmx_Val_Acquired_Into_Buffer'
p49058
g48971
sS'DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO'
p49059
S'(-200796)'
p49060
sS'DAQmxErrorExportTwoSignalsOnSameTerminal'
p49061
S'(-200607)'
p49062
sS'DAQmxErrorPlus3VFuseBlown'
p49063
S'(-201284)'
p49064
sS'DAQmx_SampClk_Timebase_Src'
p49065
S'0x1308'
p49066
sS'DAQmx_Val_Switch_Topology_2527_4_Wire_16x1_Mux'
p49067
S'"2527/4-Wire 16x1 Mux"'
p49068
sS'DAQmx_Logging_FilePath'
p49069
S'0x2EC4'
p49070
sS'DAQmxErrorRecursiveCall'
p49071
S'(-26803)'
p49072
sS'DAQmx_Val_Sine'
p49073
S'14751'
p49074
sS'DAQmx_DO_GenerateOn'
p49075
S'0x2969'
p49076
sS'DAQmx_SampClk_ActiveEdge'
p49077
S'0x1301'
p49078
sS'DAQmxWarningFileDoesNotExist'
p49079
S'(26852)'
p49080
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot2'
p49081
S'(-200700)'
p49082
sS'DAQmxErrorModuleTypeDoesNotMatchModuleTypeInDestination'
p49083
S'(-201244)'
p49084
sS'DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev'
p49085
S'(-200861)'
p49086
sS'DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx'
p49087
S'(-200804)'
p49088
sS'DAQmx_PhysicalChan_TEDS_SerialNum'
p49089
S'0x21DC'
p49090
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_128x1_Mux'
p49091
S'"1130/2-Wire 128x1 Mux"'
p49092
sS'DAQmxErrorSwitchScanlistTooBig'
p49093
S'(-200201)'
p49094
sS'DAQmx_Buf_Input_OnbrdBufSize'
p49095
S'0x230A'
p49096
sS'DAQmx_Val_External'
p49097
S'10167'
p49098
sS'DAQmx_CI_Period_StartingEdge'
p49099
S'0x0852'
p49100
sS'DAQmxErrorResourcesInUseForRouteInTask_Routing'
p49101
S'(-89138)'
p49102
sS'DAQmxErrorPhysicalChannelNotSpecified'
p49103
S'(-200099)'
p49104
sS'DAQmxErrorWriteDataTypeTooSmall'
p49105
S'(-200790)'
p49106
sS'DAQmxErrorCDAQSyncConnectionToSamePort'
p49107
S'(-201457)'
p49108
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Dual_32x1_Mux'
p49109
S'"2576/2-Wire Dual 32x1 Mux"'
p49110
sS'DAQmxErrorScriptHasInvalidCharacter'
p49111
S'(-200023)'
p49112
sS'DAQmx_AnlgWin_PauseTrig_Src'
p49113
S'0x1373'
p49114
sS'DAQmxErrorEmptyStringTermNameNotSupported'
p49115
S'(-200797)'
p49116
sS'DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript'
p49117
S'(-201014)'
p49118
sS'DAQmxErrorWriteWhenTaskNotRunningCOTime'
p49119
S'(-200874)'
p49120
sS'DAQmxErrorAccessoryNotPresent'
p49121
S'(-201413)'
p49122
sS'DAQmx_Sys_Scales'
p49123
S'0x1266'
p49124
sS'DAQmxErrorPALTransferStopped'
p49125
S'(-50404)'
p49126
sS'DAQmx_Val_Switch_Topology_2527_2_Wire_Dual_16x1_Mux'
p49127
S'"2527/2-Wire Dual 16x1 Mux"'
p49128
sS'DAQmx_AnlgLvl_PauseTrig_When'
p49129
S'0x1371'
p49130
sS'DAQmxErrorPLLDACUpdateFailed'
p49131
S'(-201506)'
p49132
sS'DAQmx_AI_Velocity_IEPESensor_dBRef'
p49133
S'0x2FF5'
p49134
sS'DAQmx_Val_BurstHandshake'
p49135
S'12548'
p49136
sS'_NI_int8_DEFINED_'
p49137
g48682
sS'DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth'
p49138
S'0x21FC'
p49139
sS'DAQmxErrorDSFStopClock'
p49140
S'(-200632)'
p49141
sS'DAQmxErrorPxiResmanAllocationError'
p49142
S'(-26100)'
p49143
sS'DAQmxErrorDevAbsentOrUnavailable_Routing'
p49144
S'(-89130)'
p49145
sS'DAQmxErrorChangeRateWhileRunningCouldNotBeCompleted'
p49146
S'(-201261)'
p49147
sS'DAQmxErrorSampClkTimebaseDivWithExtSampClk'
p49148
S'(-201100)'
p49149
sS'DAQmx_Read_NumChans'
p49150
S'0x217B'
p49151
sS'DAQmx_Val_Switch_Topology_1192_8_SPDT'
p49152
S'"1192/8-SPDT"'
p49153
sS'DAQmx_Val_Software'
p49154
S'10292'
p49155
sS'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate'
p49156
S'0x2226'
p49157
sS'DAQmxErrorSCCInvalidDualStageCombo'
p49158
S'(-201327)'
p49159
sS'DAQmxErrorInvalidEscapeCharacterInString'
p49160
S'(-201068)'
p49161
sS'DAQmxErrorCOWriteFreqOutOfRange'
p49162
S'(-200685)'
p49163
sS'DAQmxErrorWriteToTEDSNotSupportedOnRT'
p49164
S'(-200828)'
p49165
sS'DAQmxErrorAutoStartReadNotAllowedEventRegistered'
p49166
S'(-200984)'
p49167
sS'DAQmx_Dev_AO_Gains'
p49168
S'0x299D'
p49169
sS'DAQmx_CI_Period_Units'
p49170
S'0x18A3'
p49171
sS'DAQmxErrorPALComponentNeverLoaded'
p49172
S'(-50261)'
p49173
sS'DAQmxErrorTristateLogicLevelNotSpecdForEntirePort'
p49174
S'(-201394)'
p49175
sS'DAQmx_Dev_CO_PhysicalChans'
p49176
S'0x2325'
p49177
sS'DAQmx_AnlgWin_PauseTrig_DigFltr_Enable'
p49178
S'0x2EF5'
p49179
sS'DAQmx_AnlgLvl_PauseTrig_DigFltr_MinPulseWidth'
p49180
S'0x2EF1'
p49181
sS'DAQmx_AI_Lowpass_CutoffFreq'
p49182
S'0x1803'
p49183
sS'DAQmx_Val_CurrReadPos'
p49184
S'10425'
p49185
sS'DAQmxWarningPXI5661_IncorrectlyConfigured'
p49186
S'(200062)'
p49187
sS'DAQmx_CI_Period_Term'
p49188
S'0x18A4'
p49189
sS'DAQmx_AO_DevScalingCoeff'
p49190
S'0x1931'
p49191
sS'DAQmxErrorIncapableSCCDigitizingDeviceSpecd'
p49192
S'(-201049)'
p49193
sS'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing'
p49194
S'(-89145)'
p49195
sS'DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc'
p49196
S'0x220C'
p49197
sS'DAQmxErrorCDAQMissingDSAMasterForChanExpansion'
p49198
S'(-201484)'
p49199
sS'DAQmx_AI_Coupling'
p49200
S'0x0064'
p49201
sS'DAQmxErrorPhysChanReservedForOutputWhenDesiredForInput'
p49202
S'(-201162)'
p49203
sS'DAQmx_DigPattern_StartTrig_When'
p49204
S'0x1411'
p49205
sS'DAQmx_Val_Switch_Topology_2541_1_Wire_8x12_Matrix'
p49206
S'"2541/1-Wire 8x12 Matrix"'
p49207
sS'DAQmxErrorPxiResmanInvalidConfiguration'
p49208
S'(-26101)'
p49209
sS'DAQmx_Val_Switch_Topology_1128_1_Wire_64x1_Mux'
p49210
S'"1128/1-Wire 64x1 Mux"'
p49211
sS'DAQmx_Dev_AO_CurrentRngs'
p49212
S'0x299C'
p49213
sS'DAQmxErrorAIMaxNotSpecified'
p49214
S'(-200695)'
p49215
sS'DAQmxErrorNoSyncPulseAnotherTaskRunning'
p49216
S'(-200761)'
p49217
sS'DAQmxErrorPrescalerNot1ForTimebaseSrc'
p49218
S'(-200840)'
p49219
sS'DAQmx_SwitchChan_MaxDCCarryPwr'
p49220
S'0x0643'
p49221
sS'DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing'
p49222
S'(-89122)'
p49223
sS'DAQmx_ReadWaitMode'
p49224
S'0x2232'
p49225
sS'DAQmx_Exported_RdyForStartEvent_Lvl_ActiveLvl'
p49226
S'0x1751'
p49227
sS'DAQmx_Watchdog_CO_ExpirState'
p49228
S'0x3060'
p49229
sS'DAQmxErrorPALSocketListenerAlreadyRegistered'
p49230
S'(-50501)'
p49231
sS'DAQmxErrorPropertyValueInChannelExpansionContextInvalid'
p49232
S'(-201117)'
p49233
sS'DAQmx_Val_SwitchBlock'
p49234
S'15870'
p49235
sS'DAQmx_AI_Rng_Low'
p49236
S'0x1816'
p49237
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_16x16_Matrix'
p49238
S'"1129/2-Wire 16x16 Matrix"'
p49239
sS'DAQmx_CI_PulseWidth_TermCfg'
p49240
S'0x30A9'
p49241
sS'DAQmx_CI_Count'
p49242
S'0x0148'
p49243
sS'DAQmxErrorDeviceShutDownDueToHighTemp'
p49244
S'(-200680)'
p49245
sS'DAQmxErrorNetworkDAQDeviceNotSupported'
p49246
S'(-201247)'
p49247
sS'DAQmx_Val_NoBridge'
p49248
S'10228'
p49249
sS'DAQmx_Val_PauseUntilDataAvailable'
p49250
S'14616'
p49251
sS'DAQmx_Val_Bit_CouplingTypes_HFReject'
p49252
S'(1<<3)'
p49253
sS'DAQmx_PhysicalChan_AO_SupportedOutputTypes'
p49254
S'0x2FD9'
p49255
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc'
p49256
S'0x2211'
p49257
sS'DAQmx_CI_Pulse_Freq_DigFltr_TimebaseSrc'
p49258
S'0x2F08'
p49259
sS'DAQmxErrorCannotWriteAfterStartWithOnboardMemory'
p49260
S'(-200295)'
p49261
sS'DAQmx_Val_Save_Overwrite'
p49262
S'(1<<0)'
p49263
sS'DAQmx_Val_USBbulk'
p49264
S'12590'
p49265
sS'DAQmx_AnlgEdge_StartTrig_Slope'
p49266
S'0x1397'
p49267
sS'DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput'
p49268
S'(-200964)'
p49269
sS'DAQmx_Val_Switch_Topology_1193_Quad_4x1_Terminated_Mux'
p49270
S'"1193/Quad 4x1 Terminated Mux"'
p49271
sS'DAQmxErrorGetPropertyNotOutputBufferedTask'
p49272
S'(-200454)'
p49273
sS'DAQmxErrorCouldNotReserveLinesForSCXIControl'
p49274
S'(-200158)'
p49275
sS'DAQmx_Exported_CtrOutEvent_OutputTerm'
p49276
S'0x1717'
p49277
sS'DAQmx_Val_OnbrdMemFull'
p49278
S'10236'
p49279
sS'DAQmx_Exported_SyncPulseEvent_OutputTerm'
p49280
S'0x223C'
p49281
sS'DAQmxErrorRangeSyntaxNumberTooBig'
p49282
S'(-200605)'
p49283
sS'DAQmx_AI_Excit_VoltageOrCurrent'
p49284
S'0x17F6'
p49285
sS'DAQmx_Val_USB'
p49286
S'12586'
p49287
sS'DAQmx_DigEdge_RefTrig_Src'
p49288
S'0x1434'
p49289
sS'DAQmxErrorCantGetPropertyTaskNotRunning'
p49290
S'(-200973)'
p49291
sS'DAQmx_Hshk_StartCond'
p49292
S'0x22C3'
p49293
sS'DAQmx_CO_UsbXferReqCount'
p49294
S'0x3005'
p49295
sS'DAQmxErrorInvalidIdentifierInListFollowingDeviceID'
p49296
S'(-200047)'
p49297
sS'DAQmxErrorPALTransferOverwritten'
p49298
S'(-50410)'
p49299
sS'DAQmx_AO_Max'
p49300
S'0x1186'
p49301
sS'DAQmx_DigLvl_PauseTrig_DigFltr_Enable'
p49302
S'0x2228'
p49303
sS'DAQmxErrorCalibrationFailed'
p49304
S'(-200157)'
p49305
sS'DAQmxErrorPxiResmanChassisFileNotFound'
p49306
S'(-26200)'
p49307
sS'DAQmxErrorTwoPortsRequired'
p49308
S'(-201451)'
p49309
sS'DAQmxErrorChildNotFound'
p49310
S'(-26654)'
p49311
sS'DAQmxErrorOpenSessionExists'
p49312
S'(-201480)'
p49313
sS'DAQmxErrorInvalidAOChanOrder'
p49314
S'(-200219)'
p49315
sS'DAQmxErrorInvalidCalLowPassCutoffFreq'
p49316
S'(-200857)'
p49317
sS'DAQmxErrorFilePathInvalid'
p49318
S'(-201304)'
p49319
sS'DAQmxErrorRXBitErrorRateLimitExceeded'
p49320
S'(-201196)'
p49321
sS'DAQmxErrorInvalidAIChanOrder'
p49322
S'(-200618)'
p49323
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_4x6_Matrix'
p49324
S'"2501/2-Wire 4x6 Matrix"'
p49325
sS'DAQmx_Val_RisingSlope'
p49326
S'10280'
p49327
sS'DAQmx_Val_Switch_Topology_2576_Independent'
p49328
S'"2576/Independent"'
p49329
sS'DAQmx_Val_Switch_Topology_2720_Independent'
p49330
S'"2720/Independent"'
p49331
sS'DAQmxErrorDevsWithoutCommonSyncConnectionStrategy'
p49332
S'(-201456)'
p49333
sS'DAQmxErrorDevImportFailedAssociatedResourceIDsNotSupported'
p49334
S'(-201175)'
p49335
sS'DAQmxErrorPALComponentCircularDependency'
p49336
S'(-50259)'
p49337
sS'DAQmxErrorDigFilterIntervalNotEqualForLines'
p49338
S'(-200646)'
p49339
sS'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate'
p49340
S'0x21FE'
p49341
sS'DAQmx_AIConv_TimebaseDiv'
p49342
S'0x1335'
p49343
sS'DAQmxErrorInvalidRangeOfObjectsSyntaxInString'
p49344
S'(-200498)'
p49345
sS'DAQmxErrorTwoPartAttributeCalledOutOfOrder'
p49346
S'(-201194)'
p49347
sS'DAQmx_Val_Switch_Topology_Configured_Topology'
p49348
S'"Configured Topology"'
p49349
sS'DAQmx_Val_Highpass'
p49350
S'16072'
p49351
sS'DAQmx_PhysicalChan_AO_ManualControlFreq'
p49352
S'0x2A20'
p49353
sS'DAQmxErrorNoPathToDisconnect'
p49354
S'(-200182)'
p49355
sS'DAQmxErrorCPUNotSupportedRequireSSE'
p49356
S'(-201121)'
p49357
sS'DAQmx_Dev_DO_MaxRate'
p49358
S'0x299A'
p49359
sS'DAQmx_Val_Switch_Topology_1191_Quad_4x1_Mux'
p49360
S'"1191/Quad 4x1 Mux"'
p49361
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInSystemTimingSlot_Routing'
p49362
S'(-89161)'
p49363
sS'DAQmx_Val_Bandpass'
p49364
S'16073'
p49365
sS'DAQmx_Dev_PXI_SlotNum'
p49366
S'0x232A'
p49367
sS'DAQmx_Val_Switch_Topology_2555_4x1_Terminated_Mux'
p49368
S'"2555/4x1 Terminated Mux"'
p49369
sS'DAQmx_AO_DAC_Offset_ExtSrc'
p49370
S'0x2254'
p49371
sS'DAQmx_Val_Temp_RTD'
p49372
S'10301'
p49373
sS'DAQmx_AnlgWin_PauseTrig_When'
p49374
S'0x1374'
p49375
sS'DAQmxErrorSamplesWillNeverBeAvailable'
p49376
S'(-200278)'
p49377
sS'DAQmxErrorAIMinTooSmall'
p49378
S'(-200578)'
p49379
sS'DAQmx_AIConv_Timebase_Src'
p49380
S'0x1339'
p49381
sS'DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript'
p49382
S'(-201008)'
p49383
sS'DAQmxErrorConflictingAutoZeroMode'
p49384
S'(-201098)'
p49385
sS'DAQmxErrorRuntimeAborted_Routing'
p49386
S'(-88709)'
p49387
sS'DAQmx_AI_Bridge_Table_PhysicalVals'
p49388
S'0x2F8F'
p49389
sS'DAQmxErrorChansForCalAdjustMustPerformSetContext'
p49390
S'(-201500)'
p49391
sS'DAQmx_AI_Thrmstr_R1'
p49392
S'0x1061'
p49393
sS'DAQmx_Val_ActiveLow'
p49394
S'10096'
p49395
sS'DAQmx_AO_PowerAmp_Gain'
p49396
S'0x3065'
p49397
sS'DAQmx_SampQuant_SampPerChan'
p49398
S'0x1310'
p49399
sS'DAQmx_Val_Task_Abort'
p49400
S'6'
p49401
sS'DAQmx_AI_MeasType'
p49402
S'0x0695'
p49403
sS'DAQmxErrorInvalidExtClockFreqAndDivCombo'
p49404
S'(-200379)'
p49405
sS'DAQmxErrorFREQOUTCannotProduceDesiredFrequency'
p49406
S'(-200148)'
p49407
sS'DAQmxErrorNoRegenWhenUsingBrdMem'
p49408
S'(-200656)'
p49409
sS'DAQmx_Val_Switch_Topology_2547_8x1_Mux'
p49410
S'"2547/8x1 Mux"'
p49411
sS'DAQmx_Val_Switch_Topology_1130_4_Wire_64x1_Mux'
p49412
S'"1130/4-Wire 64x1 Mux"'
p49413
sS'DAQmx_SwitchChan_AnlgBusSharingEnable'
p49414
S'0x2F9E'
p49415
sS'DAQmxErrorTEDSIncompatibleSensorAndMeasType'
p49416
S'(-200756)'
p49417
sS'DAQmx_Val_Switch_Topology_2545_4x1_Terminated_Mux'
p49418
S'"2545/4x1 Terminated Mux"'
p49419
sS'DAQmx_Val_Switch_Topology_2599_2_SPDT'
p49420
S'"2599/2-SPDT"'
p49421
sS'DAQmx_RealTime_NumOfWarmupIters'
p49422
S'0x22ED'
p49423
sS'DAQmx_PhysicalChan_AO_ManualControl_ShortDetected'
p49424
S'0x2EC3'
p49425
sS'DAQmxErrorBothAnalogAndDigitalModulationEnabled'
p49426
S'(-201108)'
p49427
sS'DAQmx_AI_RawDataCompressionType'
p49428
S'0x22D8'
p49429
sS'DAQmx_AI_SoundPressure_Units'
p49430
S'0x1528'
p49431
sS'_NI_uInt16_DEFINED_'
p49432
g48682
sS'DAQmxWarningInputTerminationOverloaded'
p49433
S'(200004)'
p49434
sS'DAQmx_Val_DegC'
p49435
S'10143'
p49436
sS'DAQmx_Val_Pressure_Bridge'
p49437
S'15902'
p49438
sS'DAQmxErrorEmptyPhysChanInPowerUpStatesArray'
p49439
S'(-200626)'
p49440
sS'DAQmx_Val_DegF'
p49441
S'10144'
p49442
sS'DAQmxErrorProgrammedIOConflict'
p49443
S'(-201226)'
p49444
sS'DAQmxErrorSampRateTooHigh'
p49445
S'(-200332)'
p49446
sS'DAQmx_Val_DegR'
p49447
S'10145'
p49448
sS'DAQmx_Val_Internal'
p49449
S'10200'
p49450
sS'DAQmx_SyncPulse_Term'
p49451
S'0x2F85'
p49452
sS'DAQmx_CI_TwoEdgeSep_Units'
p49453
S'0x18AC'
p49454
sS'DAQmxWarningPALBadCount'
p49455
S'(50008)'
p49456
sS'DAQmx_SwitchScan_BreakMode'
p49457
S'0x1247'
p49458
sS'DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO'
p49459
S'(-200769)'
p49460
sS'DAQmxErrorPALRetryLimitExceeded'
p49461
S'(-50412)'
p49462
sS'DAQmxErrorDACRngLowNotMinusRefValNorZero'
p49463
S'(-200449)'
p49464
sS'DAQmx_Val_FullBridgeI'
p49465
S'10183'
p49466
sS'DAQmx_Val_Bit_TriggerUsageTypes_Handshake'
p49467
S'(1<<4)'
p49468
sS'DAQmx_AI_Thrmcpl_ScaleType'
p49469
S'0x29D0'
p49470
sS'DAQmx_Val_Switch_Topology_1166_16_DPDT'
p49471
S'"1166/16-DPDT"'
p49472
sS'DAQmx_Read_OvertemperatureChansExist'
p49473
S'0x3081'
p49474
sS'DAQmx_Val_Switch_Topology_2534_1_Wire_8x32_Matrix'
p49475
S'"2534/1-Wire 8x32 Matrix"'
p49476
sS'DAQmx_Write_SpaceAvail'
p49477
S'0x1460'
p49478
sS'DAQmx_SwitchChan_MaxACSwitchCurrent'
p49479
S'0x0646'
p49480
sS'DAQmx_Val_Strain_Gage'
p49481
S'10300'
p49482
sS'DAQmxErrorIncorrectFirmwareFileUploaded'
p49483
S'(-201419)'
p49484
sS'DAQmxErrorCannotCreateChannelAfterTaskVerified'
p49485
S'(-200160)'
p49486
sS'DAQmx_Val_E_Type_TC'
p49487
S'10055'
p49488
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_4x32_Matrix'
p49489
S'"2530/1-Wire 4x32 Matrix"'
p49490
sS'DAQmx_Val_Switch_Topology_2522_53_SPDT'
p49491
S'"2522/53-SPDT"'
p49492
sS'DAQmx_Val_T_Type_TC'
p49493
S'10086'
p49494
sS'DAQmxErrorTrigmanConflictingRouteGeneric'
p49495
S'(-26006)'
p49496
sS'DAQmx_AI_Impedance'
p49497
S'0x0062'
p49498
sS'DAQmx_SwitchDev_SwitchChanList'
p49499
S'0x18E7'
p49500
sS'DAQmx_Val_MostRecentSamp'
p49501
S'10428'
p49502
sS'DAQmxErrorInvalidSampAndMasterTimebaseRateCombo'
p49503
S'(-200173)'
p49504
sS'DAQmxErrorFinitePulseTrainNotPossible'
p49505
S'(-200305)'
p49506
sS'DAQmx_Dev_CI_TrigUsage'
p49507
S'0x298A'
p49508
sS'DAQmxErrorDevDoesNotSupportSCXIComm'
p49509
S'(-201242)'
p49510
sS'DAQmxErrorExpectedConnectOperatorInList'
p49511
S'(-200062)'
p49512
sS'DAQmxWarningTrigmanInvalidParameter'
p49513
S'(26002)'
p49514
sS'DAQmx_AI_Current_ACRMS_Units'
p49515
S'0x17E3'
p49516
sS'DAQmxErrorFirmwareVersionOlderThanInstalledVersion'
p49517
S'(-201490)'
p49518
sS'DAQmxErrorInconsistentFileFault'
p49519
S'(-26655)'
p49520
sS'DAQmx_Read_AvailSampPerChan'
p49521
S'0x1223'
p49522
sS'DAQmxErrorInvalidCalConstCalADCAdjustment'
p49523
S'(-200520)'
p49524
sS'DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType'
p49525
S'(-200913)'
p49526
sS'DAQmxErrorNetworkSerialNumberMismatch'
p49527
S'(-201254)'
p49528
sS'DAQmxErrorInvalidSampRateConsiderRIS'
p49529
S'(-200420)'
p49530
sS'DAQmx_Val_Switch_Topology_2566_16_SPDT'
p49531
S'"2566/16-SPDT"'
p49532
sS'DAQmxErrorIncapableTEDSInterfaceControllingDeviceSpecd'
p49533
S'(-201051)'
p49534
sS'DAQmx_Val_Switch_Topology_1130_4_Wire_Quad_16x1_Mux'
p49535
S'"1130/4-Wire Quad 16x1 Mux"'
p49536
sS'DAQmxErrorSCXIModuleDoesNotSupportDigitizationMode'
p49537
S'(-201240)'
p49538
sS'DAQmx_Val_SCXI1124Range0to10V'
p49539
S'14631'
p49540
sS'DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans'
p49541
S'0x2195'
p49542
sS'DAQmx_Val_Bit_CouplingTypes_AC'
p49543
S'(1<<0)'
p49544
sS'DAQmx_AIConv_DigSync_Enable'
p49545
S'0x2EE0'
p49546
sS'DAQmx_Val_Switch_Topology_2535_1_Wire_4x136_Matrix'
p49547
S'"2535/1-Wire 4x136 Matrix"'
p49548
sS'DAQmx_AnlgEdge_StartTrig_Hyst'
p49549
S'0x1395'
p49550
sS'DAQmx_Val_AHighBHigh'
p49551
S'10040'
p49552
sS'DAQmxErrorUnknownFirmwareVersion'
p49553
S'(-201378)'
p49554
sS'DAQmxErrorGlobalTaskNameAlreadyChanName'
p49555
S'(-200919)'
p49556
sS'DAQmx_PhysicalChan_DO_SampClkSupported'
p49557
S'0x29A8'
p49558
sS'DAQmx_CI_CountEdges_TermCfg'
p49559
S'0x309B'
p49560
sS'DAQmxErrorPALBadReadOffset'
p49561
S'(-50010)'
p49562
sS'DAQmxErrorZeroBasedChanIndexInvalid'
p49563
S'(-200612)'
p49564
sS'DAQmxErrorMeasurementTypeNotSupportedForLogging'
p49565
S'(-201307)'
p49566
sS'DAQmx_AI_ACExcit_SyncEnable'
p49567
S'0x0102'
p49568
sS'DAQmxErrorCantUseAITimingEngineWithCounters'
p49569
S'(-201503)'
p49570
sS'DAQmxErrorNoChansOfGivenTypeInTask'
p49571
S'(-200611)'
p49572
sS'DAQmxErrorTEDSTemplateParametersNotSupported'
p49573
S'(-200754)'
p49574
sS'DAQmxErrorChanNotInTask'
p49575
S'(-200486)'
p49576
sS'DAQmxErrorDuplicateDeviceIDInListWhenSettling'
p49577
S'(-200057)'
p49578
sS'DAQmx_Val_OpenCollector'
p49579
S'12574'
p49580
sS'DAQmxErrorSelfCalDateTimeNotDAQmx'
p49581
S'(-200541)'
p49582
sS'__CFUNCPTRVAR'
p49583
S'__cdecl'
p49584
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_Dual_32x1_Mux'
p49585
S'"2530/2-Wire Dual 32x1 Mux"'
p49586
sS'DAQmx_CI_Freq_DigFltr_TimebaseSrc'
p49587
S'0x21E9'
p49588
sS'DAQmxErrorNoSyncPulseExtSampClkTimebase'
p49589
S'(-200762)'
p49590
sS'DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq'
p49591
S'(-200734)'
p49592
sS'DAQmxWarningPALTransferNotInProgress'
p49593
S'(50402)'
p49594
sS'DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseSrc'
p49595
S'0x2EF2'
p49596
sS'DAQmxErrorBufferWithHWTimedSinglePointSampMode'
p49597
S'(-200690)'
p49598
sS'DAQmx_Val_XSeriesDAQ'
p49599
S'15858'
p49600
sS'DAQmxErrorWaveformPreviouslyAllocated'
p49601
S'(-200310)'
p49602
sS'DAQmxErrorPxiResmanChassisTriggerParseError'
p49603
S'(-26206)'
p49604
sS'DAQmxErrorDSAExpansionMixedBoardsWrongOrderInPXIChassis'
p49605
S'(-201114)'
p49606
sS'DAQmx_DigLvl_PauseTrig_Src'
p49607
S'0x1379'
p49608
sS'DAQmx_Val_Task_Commit'
p49609
S'3'
p49610
sS'DAQmx_AnlgEdge_StartTrig_Src'
p49611
S'0x1398'
p49612
sS'DAQmx_AI_Accel_dBRef'
p49613
S'0x29B2'
p49614
sS'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove'
p49615
S'(-200702)'
p49616
sS'DAQmxErrorDeviceNotUsableUntilColdStart'
p49617
S'(-201177)'
p49618
sS'DAQmxErrorTaskVersionNew'
p49619
S'(-200470)'
p49620
sS'DAQmx_AI_Rng_High'
p49621
S'0x1815'
p49622
sS'DAQmx_Val_Switch_Topology_1127_1_Wire_64x1_Mux'
p49623
S'"1127/1-Wire 64x1 Mux"'
p49624
sS'DAQmxErrorAttributeNotFound'
p49625
S'(-26653)'
p49626
sS'DAQmx_AO_PowerAmp_ScalingCoeff'
p49627
S'0x3063'
p49628
sS'DAQmx_CI_DutyCycle_LogicLvlBehavior'
p49629
S'0x30A2'
p49630
sS'DAQmxErrorPALSyncTimedOut'
p49631
S'(-50550)'
p49632
sS'DAQmxErrorTrigLineNotFoundSingleDevRoute'
p49633
S'(-200574)'
p49634
sS'DAQmx_Dev_AO_PhysicalChans'
p49635
S'0x231F'
p49636
sS'DAQmx_CI_Pulse_Freq_DigFltr_MinPulseWidth'
p49637
S'0x2F07'
p49638
sS'DAQmxErrorFullySpecifiedPathInListContainsRange'
p49639
S'(-200060)'
p49640
sS'DAQmx_Dev_DI_TrigUsage'
p49641
S'0x2988'
p49642
sS'DAQmx_Val_Switch_Topology_2575_2_Wire_98x1_Mux'
p49643
S'"2575/2-Wire 98x1 Mux"'
p49644
sS'DAQmx_CI_Freq_StartingEdge'
p49645
S'0x0799'
p49646
sS'DAQmxErrorCOCannotKeepUpInHWTimedSinglePointPolled'
p49647
S'(-201022)'
p49648
sS'DAQmxErrorPALMemoryFull'
p49649
S'(-50352)'
p49650
sS'DAQmxErrorMultipleChansNotSupportedDuringCalAdjust'
p49651
S'(-201494)'
p49652
sS'DAQmxErrorDSFFailedToResetStream'
p49653
S'(-200586)'
p49654
sS'DAQmxErrorInvalidActionInControlTask'
p49655
S'(-200538)'
p49656
sS'DAQmx_Exported_RdyForXferEvent_DeassertCond'
p49657
S'0x2963'
p49658
sS'DAQmxErrorMarkerPositionNotAlignedInScript'
p49659
S'(-200031)'
p49660
sS'DAQmx_Val_None'
p49661
S'10230'
p49662
sS'DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask'
p49663
S'(-200987)'
p49664
sS'DAQmxWarningPALBadWriteMode'
p49665
S'(50012)'
p49666
sS'DAQmxErrorPLLLock'
p49667
S'(-200245)'
p49668
sS'DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT'
p49669
S'(-200844)'
p49670
sS'DAQmxErrorPortConfiguredForOutput'
p49671
S'(-200121)'
p49672
sS'DAQmxErrorVerticalOffsetNotSupportedOnDevice'
p49673
S'(-201280)'
p49674
sS'DAQmxWarningPALOSFault'
p49675
S'(50202)'
p49676
sS'DAQmx_Val_ReferenceTrigger'
p49677
S'12490'
p49678
sS'DAQmxErrorFileVersionMismatch'
p49679
S'(-201303)'
p49680
sS'DAQmxErrorDevsWithoutSyncStrategies'
p49681
S'(-201426)'
p49682
sS'DAQmx_Write_RegenMode'
p49683
S'0x1453'
p49684
sS'DAQmxErrorInvalidWirelessSecuritySelection'
p49685
S'(-201249)'
p49686
sS'DAQmx_Val_Switch_Topology_2527_2_Wire_32x1_Mux'
p49687
S'"2527/2-Wire 32x1 Mux"'
p49688
sS'DAQmxErrorInvalidTimingType'
p49689
S'(-200300)'
p49690
sS'DAQmxErrorOnlyFrontEndChanOpsDuringScan'
p49691
S'(-200377)'
p49692
sS'DAQmxErrorConfiguredTEDSInterfaceDevNotDetected'
p49693
S'(-200958)'
p49694
sS'DAQmx_AO_ReglitchEnable'
p49695
S'0x0133'
p49696
sS'DAQmx_SwitchDev_Topology'
p49697
S'0x193D'
p49698
sS'DAQmxWarningPXIe5665_5605_IncorrectlyConfigured'
p49699
S'(200070)'
p49700
sS'DAQmx_AI_Strain_Units'
p49701
S'0x0981'
p49702
sS'DAQmxErrorTaskMissingChannelProperty'
p49703
S'(-201070)'
p49704
sS'DAQmx_DO_Overcurrent_Limit'
p49705
S'0x2A85'
p49706
sS'DAQmxErrorSampleClockRateIsTooFastForBurstTiming'
p49707
S'(-201176)'
p49708
sS'DAQmx_Val_SameAsSampTimebase'
p49709
S'10284'
p49710
sS'DAQmxErrorNoChansSpecdForChangeDetect'
p49711
S'(-200751)'
p49712
sS'DAQmxErrorSCCSecondStageEmpty'
p49713
S'(-201328)'
p49714
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRange'
p49715
S'(-200872)'
p49716
sS'DAQmxWarningPXIe5601_NotConfigured'
p49717
S'(200063)'
p49718
sS'DAQmx_SwitchChan_Impedance'
p49719
S'0x0641'
p49720
sS'DAQmxErrorEventDelayOutOfRange'
p49721
S'(-200345)'
p49722
sS'DAQmxErrorPALResourceBusy'
p49723
S'(-50106)'
p49724
sS'DAQmxErrorChanDoesNotSupportCompression'
p49725
S'(-200956)'
p49726
sS'DAQmx_Sys_NIDAQUpdateVersion'
p49727
S'0x2F22'
p49728
sS'DAQmx_DigEdge_WatchdogExpirTrig_Edge'
p49729
S'0x21A5'
p49730
sS'DAQmxErrorStrainShuntCaNotSupported'
p49731
S'(-201203)'
p49732
sS'DAQmxErrorHostnameAlreadyInUse'
p49733
S'(-201369)'
p49734
sS'DAQmxErrorExternalFIFOFault'
p49735
S'(-201464)'
p49736
sS'DAQmx_AI_Excit_IdleOutputBehavior'
p49737
S'0x30B8'
p49738
sS'DAQmxErrorMultipleSubsytemCalibration'
p49739
S'(-201432)'
p49740
sS'DAQmxErrorChannelNameGenerationNumberTooBig'
p49741
S'(-200600)'
p49742
sS'DAQmx_Val_FirstSample'
p49743
S'10424'
p49744
sS'DAQmxErrorExtSampClkSrcNotSpecified'
p49745
S'(-200303)'
p49746
sS'DAQmxErrorPortConfiguredForInput'
p49747
S'(-200120)'
p49748
sS'DAQmx_Val_Log'
p49749
S'15844'
p49750
sS'DAQmx_DigEdge_RefTrig_Edge'
p49751
S'0x1430'
p49752
sS'DAQmx_Exported_HshkEvent_OutputTerm'
p49753
S'0x22BA'
p49754
sS'DAQmx_Read_AutoStart'
p49755
S'0x1826'
p49756
sS'DAQmx_ExtCal_LastTemp'
p49757
S'0x1867'
p49758
sS'DAQmxErrorPALSoftwareFault'
p49759
S'(-50150)'
p49760
sS'DAQmxErrorCannotQueryManualControlAttribute'
p49761
S'(-201260)'
p49762
sS'DAQmx_Val_ChanForAllLines'
p49763
g48971
sS'DAQmx_Val_HandshakeTriggerAsserts'
p49764
S'12552'
p49765
sS'DAQmxErrorNetworkTargetNotFound'
p49766
S'(-201251)'
p49767
sS'DAQmx_CI_SemiPeriod_Units'
p49768
S'0x18AF'
p49769
sS'DAQmxErrorHWTimedAndDataXferPIO'
p49770
S'(-201026)'
p49771
sS'DAQmx_Read_RelativeTo'
p49772
S'0x190A'
p49773
sS'DAQmxErrorConflictingNextWriteIsLastAndRegenModeProperties'
p49774
S'(-201119)'
p49775
sS'DAQmx_Val_Switch_Topology_2593_8x1_Terminated_Mux'
p49776
S'"2593/8x1 Terminated Mux"'
p49777
sS'DAQmx_Val_Slave'
p49778
S'15889'
p49779
sS'DAQmx_Val_PathStatus_Unsupported'
p49780
S'10433'
p49781
sS'DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition'
p49782
S'(-200294)'
p49783
sS'DAQmxErrorAIDuringCounter0DMAConflict'
p49784
S'(-200078)'
p49785
sS'DAQmx_CO_Pulse_Term'
p49786
S'0x18E1'
p49787
sS'DAQmxWarningPotentialGlitchDuringWrite'
p49788
S'(200015)'
p49789
sS'DAQmxErrorSampClkTimebaseRateInvalid'
p49790
S'(-201089)'
p49791
sS'DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth'
p49792
S'0x220B'
p49793
sS'DAQmx_AI_Min'
p49794
S'0x17DE'
p49795
sS'DAQmx_Val_Switch_Topology_2569_100_SPST'
p49796
S'"2569/100-SPST"'
p49797
sS'DAQmx_AI_RVDT_Units'
p49798
S'0x0877'
p49799
sS'DAQmx_Val_LogicLevelPullUp'
p49800
S'16064'
p49801
sS'DAQmx_SwitchDev_Settled'
p49802
S'0x1243'
p49803
sS'DAQmxWarningInvalidHandle'
p49804
S'(26805)'
p49805
sS'DAQmx_Val_N_Type_TC'
p49806
S'10077'
p49807
sS'DAQmx_Val_Switch_Topology_2593_Dual_4x1_Terminated_Mux'
p49808
S'"2593/Dual 4x1 Terminated Mux"'
p49809
sS'DAQmxErrorNoHWTimingWithOnDemand'
p49810
S'(-200731)'
p49811
sS'DAQmx_SampClk_Rate'
p49812
S'0x1344'
p49813
sS'DAQmx_Val_Task_Unreserve'
p49814
S'5'
p49815
sS'DAQmxErrorPlus5VFuseBlown'
p49816
S'(-201285)'
p49817
sS'DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType'
p49818
S'(-200912)'
p49819
sS'DAQmxErrorDontMixSyncPulseAndSampClkTimebaseOn449x'
p49820
S'(-201441)'
p49821
sS'DAQmxErrorExtSampClkRateTooLowForClkIn'
p49822
S'(-200275)'
p49823
sS'DAQmxErrorInvalidReadPosDuringRIS'
p49824
S'(-200419)'
p49825
sS'DAQmxErrorUnableToContainCards'
p49826
S'(-201454)'
p49827
sS'DAQmxErrorFileDeleteFault'
p49828
S'(-26107)'
p49829
sS'DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow'
p49830
S'(-200283)'
p49831
sS'DAQmxErrorUnexpectedIDFollowingRelayNameInList'
p49832
S'(-200530)'
p49833
sS'DAQmxErrorTEDSNotSupported'
p49834
S'(-200741)'
p49835
sS'DAQmxErrorTooManyChansForAnalogPauseTrigCDAQ'
p49836
S'(-201103)'
p49837
sS'DAQmxErrorWriteBufferTooSmall'
p49838
S'(-200234)'
p49839
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod'
p49840
S'(-200993)'
p49841
sS'DAQmx_Val_Switch_Topology_2584_Independent'
p49842
S'"2584/Independent"'
p49843
sS'DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth'
p49844
S'0x2206'
p49845
sS'DAQmxError3InputPortCombinationGivenSampTimingType653x'
p49846
S'(-200931)'
p49847
sS'DAQmxErrorReadNotCompleteBefore3SampClkEdges'
p49848
S'(-200843)'
p49849
sS'DAQmxErrorRefTrigMasterSessionUnavailable'
p49850
S'(-200682)'
p49851
sS'DAQmxErrorCouldNotConnectToServer_Routing'
p49852
S'(-88900)'
p49853
sS'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc'
p49854
S'0x21FD'
p49855
sS'DAQmxErrorPALInvalidAddressComponent'
p49856
S'(-50806)'
p49857
sS'DAQmxWarningPXI5610_NotConfigured'
p49858
S'(200074)'
p49859
sS'DAQmx_Val_FM'
p49860
S'14757'
p49861
sS'DAQmx_Val_Once'
p49862
S'10244'
p49863
sS'DAQmx_DO_UsbXferReqCount'
p49864
S'0x3003'
p49865
sS'DAQmxErrorRefTrigDigPatternChanNotTristated'
p49866
S'(-200888)'
p49867
sS'DAQmx_AnlgWin_RefTrig_When'
p49868
S'0x1427'
p49869
sS'DAQmxErrorCanNotPerformOpWhileTaskRunning'
p49870
S'(-200479)'
p49871
sS'DAQmxErrorRangeWithTooManyObjects'
p49872
S'(-200592)'
p49873
sS'DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript'
p49874
S'(-201009)'
p49875
sS'DAQmxErrorInvalidTimeFormat'
p49876
S'(-201036)'
p49877
sS'DAQmxErrorOverrunUnderflowConfigurationCombo'
p49878
S'(-201292)'
p49879
sS'DAQmxErrorDeviceInfoFailedPXIChassisNotIdentified'
p49880
S'(-201059)'
p49881
sS'DAQmxErrorDevAlreadyInTask'
p49882
S'(-200481)'
p49883
sS'DAQmx_Val_OnbrdMemCustomThreshold'
p49884
S'12577'
p49885
sS'DAQmxErrorInterruptsInsufficientDataXferMech'
p49886
S'(-200322)'
p49887
sS'DAQmx_AI_Thrmcpl_CJCVal'
p49888
S'0x1036'
p49889
sS'DAQmxErrorMinMaxOutsideTableRange'
p49890
S'(-201363)'
p49891
sS'DAQmxErrorPropertyRequiresPerDeviceCfg'
p49892
S'(-201126)'
p49893
sS'DAQmx_Val_CounterOutputEvent'
p49894
S'12494'
p49895
sS'DAQmx_Scale_Descr'
p49896
S'0x1226'
p49897
sS'DAQmxErrorAIOverrun'
p49898
S'(-201319)'
p49899
sS'DAQmx_CI_Pulse_Freq_LogicLvlBehavior'
p49900
S'0x30B2'
p49901
sS'DAQmxErrorCalInputsShortedNotSupported'
p49902
S'(-201289)'
p49903
sS'DAQmx_DO_InvertLines'
p49904
S'0x1133'
p49905
sS'DAQmxErrorUnsupportedAccessory'
p49906
S'(-201342)'
p49907
sS'DAQmx_PhysicalChan_DO_SampModes'
p49908
S'0x2FE1'
p49909
sS'DAQmxErrorMultipleActivePhysChansNotSupported'
p49910
S'(-200752)'
p49911
sS'DAQmxErrorSMIOPauseTriggersNotSupportedWithChannelExpansion'
p49912
S'(-201019)'
p49913
sS'DAQmxErrorSelfCalFailedTryExtCal'
p49914
S'(-201374)'
p49915
sS'DAQmxErrorCantExceedSlotRelayDriveLimit'
p49916
S'(-201416)'
p49917
sS'DAQmxErrorMemMapOnlyForProgIOXfer'
p49918
S'(-200169)'
p49919
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_4x6_Matrix'
p49920
S'"2503/2-Wire 4x6 Matrix"'
p49921
sS'DAQmx_Val_Switch_Topology_1193_Quad_8x1_Mux'
p49922
S'"1193/Quad 8x1 Mux"'
p49923
sS'DAQmxErrorWhenAcqCompAndNoRefTrig'
p49924
S'(-200864)'
p49925
sS'DAQmxErrorTrigWindowAIMinAIMaxCombo'
p49926
S'(-200423)'
p49927
sS'DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType'
p49928
S'(-200906)'
p49929
sS'DAQmx_Val_Switches'
p49930
S'14650'
p49931
sS'DAQmx_AI_Thrmcpl_CJCChan'
p49932
S'0x1034'
p49933
sS'DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint'
p49934
S'(200037)'
p49935
sS'DAQmxErrorReadAllAvailableDataWithoutBuffer'
p49936
S'(-200340)'
p49937
sS'DAQmxWarningPXIe5667_5605_IncorrectlyConfigured'
p49938
S'(200071)'
p49939
sS'DAQmx_CI_CountEdges_DigFltr_Enable'
p49940
S'0x21F6'
p49941
sS'DAQmxErrorFileAlreadyOpenedForWrite'
p49942
S'(-201311)'
p49943
sS'DAQmx_Val_Switch_Topology_2503_1_Wire_48x1_Mux'
p49944
S'"2503/1-Wire 48x1 Mux"'
p49945
sS'DAQmxErrorIncorrectNumChannelsToWrite'
p49946
S'(-200101)'
p49947
sS'DAQmx_Val_Switch_Topology_2798_Dual_Transfer'
p49948
S'"2798/Dual Transfer"'
p49949
sS'DAQmx_Write_CurrWritePos'
p49950
S'0x1458'
p49951
sS'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2'
p49952
S'(-200705)'
p49953
sS'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate'
p49954
S'0x2208'
p49955
sS'DAQmx_Val_Rising'
p49956
S'10280'
p49957
sS'DAQmx_Val_2Wire'
p49958
g48232
sS'DAQmxErrorDigFilterAndSyncBothEnabled'
p49959
S'(-200770)'
p49960
sS'DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType'
p49961
S'(-200800)'
p49962
sS'DAQmxWarningPXIe5663E_IncorrectlyConfigured'
p49963
S'(200065)'
p49964
sS'DAQmxErrorPALBadWriteMode'
p49965
S'(-50012)'
p49966
sS'DAQmxErrorMinAndMaxNotSymmetric'
p49967
S'(-200266)'
p49968
sS'DAQmx_Val_Task_Verify'
p49969
g48232
sS'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt'
p49970
S'(-200803)'
p49971
sS'DAQmx_CI_Pulse_Freq_Term'
p49972
S'0x2F04'
p49973
sS'DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals'
p49974
S'(-200938)'
p49975
sS'DAQmx_CI_PulseWidth_Units'
p49976
S'0x0823'
p49977
sS'DAQmxErrorPALFileFault'
p49978
S'(-50209)'
p49979
sS'DAQmx_Val_Switch_Topology_1169_100_SPST'
p49980
S'"1169/100-SPST"'
p49981
sS'DAQmxErrorInvalidOutputToInputCDAQSyncConnection'
p49982
S'(-201462)'
p49983
sS'DAQmxErrorGetPropertyNotInputBufferedTask'
p49984
S'(-200455)'
p49985
sS'DAQmx_AO_DAC_Offset_Val'
p49986
S'0x2255'
p49987
sS'DAQmxErrorInvalidCalGain'
p49988
S'(-200749)'
p49989
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_4x64_Matrix'
p49990
S'"2532/2-Wire 4x64 Matrix"'
p49991
sS'DAQmx_Val_Switch_Topology_2570_20_DPDT'
p49992
S'"2570/20-DPDT"'
p49993
sS'DAQmx_Val_X4'
p49994
S'10092'
p49995
sS'DAQmxErrorOffsetTooLargeForOffsetCalConst'
p49996
S'(-201201)'
p49997
sS'DAQmx_CI_Period_TermCfg'
p49998
S'0x3099'
p49999
sS'DAQmxErrorFirmwareUpdateAutomaticManagementEnabled'
p50000
S'(-201487)'
p50001
sS'DAQmx_Val_X1'
p50002
S'10090'
p50003
sS'DAQmx_Val_X2'
p50004
S'10091'
p50005
sS'DAQmxErrorTooManyChansForAnalogPauseTrig'
p50006
S'(-200263)'
p50007
sS'DAQmx_AI_StrainGage_ForceReadFromChan'
p50008
S'0x2FFA'
p50009
sS'DAQmxErrorLoggingWriteSizeNotDivisible'
p50010
S'(-201382)'
p50011
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_Quad_32x1_Mux'
p50012
S'"1130/2-Wire Quad 32x1 Mux"'
p50013
sS'DAQmxErrorPALBadThreadMultitask'
p50014
S'(-50019)'
p50015
sS'DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks'
p50016
S'(-209803)'
p50017
sS'DAQmxErrorPxiResmanSystemNotInitialized'
p50018
S'(-26102)'
p50019
sS'DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseRate'
p50020
S'0x2EE4'
p50021
sS'DAQmxErrorPALComponentBusy'
p50022
S'(-50264)'
p50023
sS'DAQmxErrorPropertyNotFound'
p50024
S'(-201266)'
p50025
sS'DAQmxWarningChanCalExpired'
p50026
S'(200043)'
p50027
sS'DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput'
p50028
S'(-200725)'
p50029
sS'DAQmx_Val_Pulse_Ticks'
p50030
S'10268'
p50031
sS'DAQmxErrorEmptyString'
p50032
S'(-200467)'
p50033
sS'DAQmxErrorOpNotSupportedWhenRefClkSrcNone'
p50034
S'(-200661)'
p50035
sS'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev'
p50036
S'(-200920)'
p50037
sS'DAQmx_Write_AccessoryInsertionOrRemovalDetected'
p50038
S'0x3053'
p50039
sS'DAQmxErrorInputFIFOOverflow'
p50040
S'(-200010)'
p50041
sS'DAQmx_CI_LinEncoder_InitialPos'
p50042
S'0x0915'
p50043
sS'DAQmx_Dev_AI_Couplings'
p50044
S'0x2994'
p50045
sS'DAQmx_Exported_SampClk_DelayOffset'
p50046
S'0x21C4'
p50047
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled'
p50048
S'(-201024)'
p50049
sS'DAQmxErrorSamplesNoLongerAvailable'
p50050
S'(-200279)'
p50051
sS'DAQmx_Val_J_Type_TC'
p50052
S'10072'
p50053
sS'DAQmx_Val_Switch_Topology_1160_16_SPDT'
p50054
S'"1160/16-SPDT"'
p50055
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc'
p50056
S'0x21F3'
p50057
sS'DAQmxErrorDigDevChansSpecdInModeOtherThanParallel'
p50058
S'(-201035)'
p50059
sS'DAQmxErrorChanCalExpired'
p50060
S'(-200934)'
p50061
sS'DAQmxErrorInvalidAdvanceEventTriggerType'
p50062
S'(-200070)'
p50063
sS'DAQmx_AI_Microphone_Sensitivity'
p50064
S'0x1536'
p50065
sS'DAQmxErrorPALConnectionAborted'
p50066
S'(-50802)'
p50067
sS'DAQmxErrorSuitableTimebaseNotFoundTimeCombo2'
p50068
S'(-200746)'
p50069
sS'DAQmx_CI_TwoEdgeSep_SecondEdge'
p50070
S'0x0834'
p50071
sS'DAQmx_Val_Temp_TC'
p50072
S'10303'
p50073
sS'DAQmxErrorTristateLogicLevelNotSupportedOnDigOutChan'
p50074
S'(-201393)'
p50075
sS'DAQmxErrorExtCalFunctionOutsideExtCalSession'
p50076
S'(-200439)'
p50077
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Quad_4x16_Matrix'
p50078
S'"1129/2-Wire Quad 4x16 Matrix"'
p50079
sS'DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning'
p50080
S'(-200960)'
p50081
sS'DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms'
p50082
S'(-200978)'
p50083
sS'DAQmxErrorRoutingPathNotAvailable'
p50084
S'(-200044)'
p50085
sS'DAQmxErrorCantMaintainExistingValueAOSync'
p50086
S'(-200793)'
p50087
sS'DAQmx_Val_Elliptical'
p50088
S'16077'
p50089
sS'DAQmx_AI_ChanCal_ScaleType'
p50090
S'0x229C'
p50091
sS'DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseSrc'
p50092
S'0x2EE3'
p50093
sS'DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth'
p50094
S'0x2277'
p50095
sS'DAQmx_SampClk_Timebase_ActiveEdge'
p50096
S'0x18EC'
p50097
sS'DAQmxErrorMultiDevsInTask'
p50098
S'(-200558)'
p50099
sS'DAQmxWarningPXIe5611_IncorrectlyConfigured'
p50100
S'(200077)'
p50101
sS'DAQmx_Exported_RdyForXferEvent_DeassertCondCustomThreshold'
p50102
S'0x2964'
p50103
sS'DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance'
p50104
S'(-200514)'
p50105
sS'DAQmxErrorInvalidDateTimeInEEPROM'
p50106
S'(-200501)'
p50107
sS'DAQmx_CI_CountEdges_CountReset_DigSync_Enable'
p50108
S'0x2FB7'
p50109
sS'DAQmx_Val_Switch_Topology_2527_Independent'
p50110
S'"2527/Independent"'
p50111
sS'DAQmxErrorNULLPtr'
p50112
S'(-200604)'
p50113
sS'DAQmxErrorRoutingSrcTermPXIStarInStarTriggerSlot_Routing'
p50114
S'(-89152)'
p50115
sS'DAQmxErrorElvis2PowerRailFault'
p50116
S'(-201199)'
p50117
sS'DAQmx_AI_Bridge_ShuntCal_ShuntCalAActualResistance'
p50118
S'0x2F79'
p50119
sS'DAQmx_Val_MSeriesDAQ'
p50120
S'14643'
p50121
sS'DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning'
p50122
S'(-200994)'
p50123
sS'DAQmxErrorPxiResmanSystemDescriptionWriteError'
p50124
S'(-26402)'
p50125
sS'DAQmx_Val_Toggle'
p50126
S'10307'
p50127
sS'DAQmxErrorExportSignalPolarityNotSupportedByHW'
p50128
S'(-200364)'
p50129
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2'
p50130
S'(-200704)'
p50131
sS'DAQmxErrorMemMappedDataReadByAnotherProcess'
p50132
S'(-201321)'
p50133
sS'DAQmxErrorTrigmanLineNotReserved'
p50134
S'(-26003)'
p50135
sS'DAQmx_Watchdog_AO_OutputType'
p50136
S'0x305E'
p50137
sS'DAQmx_AI_Dither_Enable'
p50138
S'0x0068'
p50139
sS'DAQmxErrorPALConnectionRefused'
p50140
S'(-50801)'
p50141
sS'DAQmxErrorSimPXIDevReqSlotAndChassisSpecd'
p50142
S'(-201151)'
p50143
sS'DAQmxErrorInvalidCloseAction'
p50144
S'(-200440)'
p50145
sS'DAQmx_AnlgWin_StartTrig_Btm'
p50146
S'0x1402'
p50147
sS'DAQmx_Read_DevsWithInsertedOrRemovedAccessories'
p50148
S'0x2F71'
p50149
sS'DAQmx_Val_Switch_Topology_2536_1_Wire_8x68_Matrix'
p50150
S'"2536/1-Wire 8x68 Matrix"'
p50151
sS'DAQmxErrorCardsMustBeInSameCarrier'
p50152
S'(-201359)'
p50153
sS'DAQmxErrorPALValueConflict'
p50154
S'(-50000)'
p50155
sS'DAQmxErrorRefClkSrcNotSupported'
p50156
S'(-200903)'
p50157
sS'DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans'
p50158
S'0x2196'
p50159
sS'DAQmx_Val_Switch_Topology_2790_Independent'
p50160
S'"2790/Independent"'
p50161
sS'DAQmx_Val_RectangularRosette'
p50162
S'15968'
p50163
sS'DAQmx_Val_Cont'
p50164
S'10117'
p50165
sS'DAQmx_Logging_Pause'
p50166
S'0x2FE3'
p50167
sS'DAQmx_Scale_Table_ScaledVals'
p50168
S'0x1236'
p50169
sS'DAQmx_Dev_AI_LowpassCutoffFreqRangeVals'
p50170
S'0x29CF'
p50171
sS'DAQmxErrorPALBusResetOccurred'
p50172
S'(-50800)'
p50173
sS'DAQmx_CI_Freq_Div'
p50174
S'0x0147'
p50175
sS'DAQmxErrorPropertyUnavailWhenUsingOnboardMemory'
p50176
S'(-200297)'
p50177
sS'DAQmxErrorSoftwareTooNewForHardware'
p50178
S'(-201140)'
p50179
sS'DAQmxErrorCppCantRemoveInvalidEventHandler'
p50180
S'(-200590)'
p50181
sS'DAQmx_AI_ResistanceCfg'
p50182
S'0x1881'
p50183
sS'DAQmx_Cal_DevTemp'
p50184
S'0x223B'
p50185
sS'DAQmxErrorInputCfgFailedBecauseWatchdogExpired'
p50186
S'(-200712)'
p50187
sS'DAQmx_Val_Voltage'
p50188
S'10322'
p50189
sS'DAQmxErrorCIOverrun'
p50190
S'(-201314)'
p50191
sS'DAQmx_DigEdge_AdvTrig_DigFltr_Enable'
p50192
S'0x2238'
p50193
sS'DAQmxErrorPALBadCount'
p50194
S'(-50008)'
p50195
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_Dual_12x1_Mux'
p50196
S'"2503/2-Wire Dual 12x1 Mux"'
p50197
sS'DAQmx_Val_Table'
p50198
S'10450'
p50199
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove'
p50200
S'(-200703)'
p50201
sS'DAQmxErrorNoAvailTrigLinesOnDevice'
p50202
S'(-200227)'
p50203
sS'DAQmx_AnlgEdge_RefTrig_Lvl'
p50204
S'0x1422'
p50205
sS'DAQmxErrorDevCannotBeAccessed'
p50206
S'(-201003)'
p50207
sS'DAQmxErrorClkDoublerDCMLock'
p50208
S'(-200241)'
p50209
sS'DAQmx_Val_PCIe'
p50210
S'13612'
p50211
sS'DAQmxErrorMemMapDataXferModeSampTimingCombo'
p50212
S'(-200260)'
p50213
sS'DAQmx_Val_Pt3750'
p50214
S'12481'
p50215
sS'DAQmx_Exported_RdyForStartEvent_OutputTerm'
p50216
S'0x1609'
p50217
sS'DAQmxErrorSampClkRateUnavailable'
p50218
S'(-200660)'
p50219
sS'DAQmx_Exported_AIHoldCmpltEvent_PulsePolarity'
p50220
S'0x18EE'
p50221
sS'DAQmxErrorDuplicateTask'
p50222
S'(-200089)'
p50223
sS'DAQmxErrorReadDataTypeTooSmall'
p50224
S'(-200789)'
p50225
sS'DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech'
p50226
S'(-200613)'
p50227
sS'DAQmxWarningOverVoltageProtectionActivated'
p50228
S'(200051)'
p50229
sS'DAQmx_Val_Open'
p50230
S'10437'
p50231
sS'DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth'
p50232
S'0x2224'
p50233
sS'DAQmx_Task_Channels'
p50234
S'0x1273'
p50235
sS'DAQmxErrorResourcesInUseForProperty_Routing'
p50236
S'(-89132)'
p50237
sS'DAQmx_Val_CartesianShearStrainXY'
p50238
S'15976'
p50239
sS'DAQmx_Val_Pt3916'
p50240
S'10069'
p50241
sS'DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg'
p50242
S'(-200105)'
p50243
sS'DAQmx_Exported_SampClkTimebase_OutputTerm'
p50244
S'0x18F9'
p50245
sS'DAQmxErrorInvalidAttributeValue'
p50246
S'(-200077)'
p50247
sS'DAQmx_Val_Pt3911'
p50248
S'12482'
p50249
sS'DAQmx_Val_Seconds'
p50250
S'10364'
p50251
sS'DAQmxErrorInversionNotSupportedByHW_Routing'
p50252
S'(-89133)'
p50253
sS'DAQmxErrorInvalidCalInputRef'
p50254
S'(-201180)'
p50255
sS'DAQmxErrorCannotHaveCJTempWithOtherChans'
p50256
S'(-200167)'
p50257
sS'DAQmxErrorMissingStartOfTable'
p50258
S'(-201065)'
p50259
sS'DAQmx_DigEdge_RefTrig_DigFltr_Enable'
p50260
S'0x2ED7'
p50261
sS'DAQmxErrorExtCalibrationDataTooNewForSoftware'
p50262
S'(-201143)'
p50263
sS'DAQmx_AI_DevScalingCoeff'
p50264
S'0x1930'
p50265
sS'DAQmx_Read_WaitMode'
p50266
S'0x2232'
p50267
sS'DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseSrc'
p50268
S'0x2EED'
p50269
sS'DAQmx_AI_Excit_DCorAC'
p50270
S'0x17FB'
p50271
sS'DAQmxErrorDigSyncNotAvailableOnTerm'
p50272
S'(-200773)'
p50273
sS'DAQmxErrorBufferNameExpectedInScript'
p50274
S'(-200026)'
p50275
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2'
p50276
S'(-200706)'
p50277
sS'DAQmx_Val_VoltageRMS'
p50278
S'10350'
p50279
sS'DAQmx_AIConv_Src'
p50280
S'0x1502'
p50281
sS'DAQmx_SampTimingType'
p50282
S'0x1347'
p50283
sS'DAQmxWarningPALDispatcherAlreadyExported'
p50284
S'(50500)'
p50285
sS'DAQmxErrorNoCabledDevice'
p50286
S'(-201505)'
p50287
sS'DAQmx_Exported_AdvTrig_OutputTerm'
p50288
S'0x1645'
p50289
sS'DAQmx_CI_Pulse_Ticks_StartEdge'
p50290
S'0x2F15'
p50291
sS'DAQmxWarningPALBadDataSize'
p50292
S'(50005)'
p50293
sS'DAQmxErrorPALBadWindowType'
p50294
S'(-50016)'
p50295
sS'DAQmxErrorInvalidHWProductType'
p50296
S'(-201057)'
p50297
sS'DAQmxErrorUnsupportedSignalTypeExportSignal'
p50298
S'(-200375)'
p50299
sS'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero'
p50300
S'(-200802)'
p50301
sS'DAQmxErrorTimeoutExceeded'
p50302
S'(-200221)'
p50303
sS'DAQmx_AI_Velocity_IEPESensor_Sensitivity'
p50304
S'0x2FF6'
p50305
sS'DAQmxErrorOnboardMemTooSmall'
p50306
S'(-200341)'
p50307
sS'DAQmx_Val_Switch_Topology_1167_Independent'
p50308
S'"1167/Independent"'
p50309
sS'DAQmxErrorValueFoundInInvalidColumn'
p50310
S'(-201066)'
p50311
sS'DAQmx_SampTimingEngine'
p50312
S'0x2A26'
p50313
sS'DAQmxErrorMStudioPropertyGetWhileTaskNotVerified'
p50314
S'(-200593)'
p50315
sS'DAQmxErrorCounterNoTimebaseEdgesBetweenGates'
p50316
S'(-200140)'
p50317
sS'DAQmxErrorSharingDifferentWireModes'
p50318
S'(-201436)'
p50319
sS'DAQmxErrorHWTimedSinglePointOddNumChansInAITask'
p50320
S'(-200820)'
p50321
sS'DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseRate'
p50322
S'0x2FB6'
p50323
sS'DAQmxErrorRangeWithoutAConnectActionInList'
p50324
S'(-200052)'
p50325
sS'DAQmxErrorPALMessageQueueFull'
p50326
S'(-50108)'
p50327
sS'DAQmx_CI_Encoder_BInputTerm'
p50328
S'0x219E'
p50329
sS'DAQmx_AnlgLvl_PauseTrig_Hyst'
p50330
S'0x1368'
p50331
sS'DAQmxErrorCOInvalidTimingSrcDueToSignal'
p50332
S'(-200801)'
p50333
sS'DAQmxErrorCertificateIsTooBigToTransfer'
p50334
S'(-201277)'
p50335
sS'DAQmx_AI_Temp_Units'
p50336
S'0x1033'
p50337
sS'DAQmx_CI_CountEdges_CountReset_DigFltr_Enable'
p50338
S'0x2FB3'
p50339
sS'DAQmxErrorCommDeviceForPXIBackplaneNotInSameChassis'
p50340
S'(-201185)'
p50341
sS'DAQmxErrorPALBadDevice'
p50342
S'(-50002)'
p50343
sS'DAQmx_AI_TermCfg'
p50344
S'0x1097'
p50345
sS'DAQmxErrorConnectionsNotReciprocal'
p50346
S'(-201463)'
p50347
sS'DAQmxWarningPXIe5667_5603_IncorrectlyConfigured'
p50348
S'(200068)'
p50349
sS'DAQmx_Val_Switch_Topology_2797_6x1_Terminated_Mux'
p50350
S'"2797/6x1 Terminated Mux"'
p50351
sS'DAQmx_Val_Velocity_IEPESensor'
p50352
S'15966'
p50353
sS'DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing'
p50354
S'(-89140)'
p50355
sS'DAQmx_PhysicalChan_TEDS_BitStream'
p50356
S'0x21DF'
p50357
sS'DAQmx_Val_Switch_Topology_2584_1_Wire_12x1_Mux'
p50358
S'"2584/1-Wire 12x1 Mux"'
p50359
sS'DAQmxErrorSampClkRateNotSupportedWithEAREnabled'
p50360
S'(-201097)'
p50361
sS'DAQmx_Val_Voltage_CustomWithExcitation'
p50362
S'10323'
p50363
sS'DAQmx_Val_IgnoreOverruns'
p50364
S'15863'
p50365
sS'DAQmxErrorPALMemoryAlignmentFault'
p50366
S'(-50351)'
p50367
sS'DAQmx_AI_DigFltr_Notch_CenterFreq'
p50368
S'0x30C5'
p50369
sS'DAQmxErrorAttributeNotSupportedInTaskContext'
p50370
S'(-200452)'
p50371
sS'DAQmxErrorFindDisconnectedBetweenPhysAndSimDeviceStatesInvalid'
p50372
S'(-201453)'
p50373
sS'DAQmxWarningSampleRateMayCauseAcqToFail'
p50374
S'(200053)'
p50375
sS'DAQmx_Dev_AI_MinRate'
p50376
S'0x298E'
p50377
sS'DAQmx_Val_SCCModule'
p50378
S'14705'
p50379
sS'DAQmxErrorDeviceDoesNotSupportScanning'
p50380
S'(-200068)'
p50381
sS'DAQmx_Exported_DataActiveEvent_OutputTerm'
p50382
S'0x1633'
p50383
sS'DAQmxErrorSelfCalFailedToConverge'
p50384
S'(-201385)'
p50385
sS'DAQmxErrorCannotWriteBeyondFinalFiniteSample'
p50386
S'(-201132)'
p50387
sS'DAQmxWarningRateViolatesMaxADCRate'
p50388
S'(200012)'
p50389
sS'DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize'
p50390
S'(-200865)'
p50391
sS'DAQmx_Val_CountUp'
p50392
S'10128'
p50393
sS'DAQmxErrorChangeDetectionStoppedToPreventDeviceHang'
p50394
S'(-201397)'
p50395
sS'DAQmxErrorPALResourceAmbiguous'
p50396
S'(-50107)'
p50397
sS'DAQmxErrorConnectionsNotSupported'
p50398
S'(-201414)'
p50399
sS'DAQmxErrorIncorrectDigitalPattern'
p50400
S'(-200102)'
p50401
sS'DAQmx_Val_MilliVoltsPerInchPerSecond'
p50402
S'15964'
p50403
sS'DAQmx_PhysicalChan_DI_SampModes'
p50404
S'0x2FE0'
p50405
sS'DAQmxErrorDCMLock'
p50406
S'(-200385)'
p50407
sS'DAQmxErrorTemperatureOutOfRangeForCalibration'
p50408
S'(-200113)'
p50409
sS'DAQmxErrorFileDoesNotExist'
p50410
S'(-26852)'
p50411
sS'DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist'
p50412
S'(-200638)'
p50413
sS'DAQmx_Val_WriteToPROM'
p50414
S'12539'
p50415
sS'DAQmx_CI_Encoder_AInput_DigSync_Enable'
p50416
S'0x21FF'
p50417
sS'DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset'
p50418
S'(-200504)'
p50419
sS'DAQmx_Val_Switch_Topology_1193_Dual_16x1_Mux'
p50420
S'"1193/Dual 16x1 Mux"'
p50421
sS'DAQmx_Dev_AI_VoltageRngs'
p50422
S'0x2990'
p50423
sS'DAQmx_CI_CountEdges_CountDir_DigSync_Enable'
p50424
S'0x21F5'
p50425
sS'DAQmx_SwitchChan_MaxDCVoltage'
p50426
S'0x0650'
p50427
sS'DAQmxErrorInvalidSampClkSrc'
p50428
S'(-200414)'
p50429
sS'DAQmxErrorCantHaveBothMemMappedAndNonMemMappedTasks'
p50430
S'(-201322)'
p50431
sS'DAQmx_SampClk_Timebase_Rate'
p50432
S'0x1303'
p50433
sS'DAQmxErrorCtrMinMax'
p50434
S'(-200527)'
p50435
sS'DAQmx_Val_OnBrdMemEmpty'
p50436
S'10235'
p50437
sS'DAQmx_Task_Devices'
p50438
S'0x230E'
p50439
sS'DAQmxErrorElvis2PhysicalChansFault'
p50440
S'(-201198)'
p50441
sS'DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning'
p50442
S'(-200556)'
p50443
sS'DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed'
p50444
S'(-200921)'
p50445
sS'DAQmxErrorCounterOutputPauseTriggerInvalid'
p50446
S'(-200144)'
p50447
sS'DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl'
p50448
S'(-200728)'
p50449
sS'DAQmx_Val_Switch_Topology_1128_4_Wire_16x1_Mux'
p50450
S'"1128/4-Wire 16x1 Mux"'
p50451
sS'DAQmx_CI_CtrTimebase_DigFltr_Enable'
p50452
S'0x2271'
p50453
sS'DAQmxErrorVoltageNotCalibrated'
p50454
S'(-201496)'
p50455
sS'DAQmxErrorVirtualTEDSDataFileError'
p50456
S'(-200827)'
p50457
sS'DAQmxErrorPxiResmanModuleParseError'
p50458
S'(-26500)'
p50459
sS'DAQmxErrorInternalSampClkNotRisingEdge'
p50460
S'(-200890)'
p50461
sS'DAQmx_SwitchChan_MaxDCCarryCurrent'
p50462
S'0x0647'
p50463
sS'DAQmxErrorConnectionNotPermittedOnChanReservedForRouting'
p50464
S'(-200189)'
p50465
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth'
p50466
S'0x2210'
p50467
sS'DAQmxErrorInvalidTEDSInterfaceAddress'
p50468
S'(-201243)'
p50469
sS'DAQmx_Read_OpenThrmcplChans'
p50470
S'0x2A97'
p50471
sS'DAQmx_Val_VoltsPerVolt'
p50472
S'15896'
p50473
sS'DAQmx_Dev_AI_VoltageIntExcitRangeVals'
p50474
S'0x29CA'
p50475
sS'DAQmxErrorInconsistentChannelDirections'
p50476
S'(-200011)'
p50477
sS'DAQmxErrorExplanationNotFound'
p50478
S'(-200235)'
p50479
sS'DAQmxErrorPhysChanNotSupportedInSpecdSlotForCDAQ'
p50480
S'(-201106)'
p50481
sS'DAQmx_Val_MaintainExistingValue'
p50482
S'12528'
p50483
sS'DAQmx_Read_TotalSampPerChanAcquired'
p50484
S'0x192A'
p50485
sS'DAQmx_SampClk_DigFltr_MinPulseWidth'
p50486
S'0x221F'
p50487
sS'DAQmxErrorFilterDelayRemovalNotPosssibleWithAnalogTrigger'
p50488
S'(-201396)'
p50489
sS'DAQmx_Dev_PCI_DevNum'
p50490
S'0x2328'
p50491
sS'DAQmxErrorAttributeNotSupportedWhenLogging'
p50492
S'(-201300)'
p50493
sS'DAQmxWarningExternalCRCNotCorrect'
p50494
S'(200046)'
p50495
sS'DAQmx_Dev_DI_Lines'
p50496
S'0x2320'
p50497
sS'DAQmxWarningPALResourceAmbiguous'
p50498
S'(50107)'
p50499
sS'DAQmx_DI_DigSync_Enable'
p50500
S'0x2ED6'
p50501
sS'DAQmxErrorPALReceiverSocketInvalid'
p50502
S'(-50503)'
p50503
sS'DAQmxErrorNoCommonTrigLineForImmedRoute'
p50504
S'(-200396)'
p50505
sS'DAQmx_SwitchChan_MaxACVoltage'
p50506
S'0x0651'
p50507
sS'DAQmxWarningPALBadReadMode'
p50508
S'(50009)'
p50509
sS'DAQmxErrorPALResourceReserved'
p50510
S'(-50103)'
p50511
sS'DAQmx_AI_Bridge_InitialVoltage'
p50512
S'0x17ED'
p50513
sS'DAQmxErrorMissingRequiredScalingParameter'
p50514
S'(-201333)'
p50515
sS'DAQmxErrorCannotReadRelativeToRefTrigUntilDone'
p50516
S'(-200281)'
p50517
sS'DAQmx_AI_ChanCal_HasValidCalInfo'
p50518
S'0x2297'
p50519
sS'DAQmxErrorRefTrigTypeNotSupportedGivenTimingType'
p50520
S'(-200907)'
p50521
sS'DAQmx_Val_Transferred_From_Buffer'
p50522
g48232
sS'DAQmx_CO_Pulse_Freq_Units'
p50523
S'0x18D5'
p50524
sS'DAQmxErrorInvalidRoutingDestinationTerminalName'
p50525
S'(-200041)'
p50526
sS'DAQmx_Val_ClearExpiration'
p50527
g48971
sS'DAQmx_PhysicalChan_DI_PortWidth'
p50528
S'0x29A4'
p50529
sS'DAQmx_Val_Task_Start'
p50530
g48831
sS'DAQmxErrorCouldNotDownloadFirmwareHWDamaged'
p50531
S'(-200962)'
p50532
sS'DAQmxErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks'
p50533
S'(-201027)'
p50534
sS'DAQmxErrorWriteNumChansMismatch'
p50535
S'(-200524)'
p50536
sS'DAQmxErrorNoAdvTrigForMultiDevScan'
p50537
S'(-200323)'
p50538
sS'DAQmx_CI_DutyCycle_DigFltr_TimebaseRate'
p50539
S'0x3091'
p50540
sS'DAQmx_Dev_AI_SimultaneousSamplingSupported'
p50541
S'0x298F'
p50542
sS'DAQmx_AI_TEDS_Units'
p50543
S'0x21E0'
p50544
sS'DAQmxErrorDevImportFailedNoDeviceToOverwriteAndSimulationNotSupported'
p50545
S'(-201170)'
p50546
sS'DAQmx_Val_BSeriesDAQ'
p50547
S'14662'
p50548
sS'DAQmx_Val_MaxShearStrain'
p50549
S'15977'
p50550
sS'DAQmx_CO_Pulse_Time_Units'
p50551
S'0x18D6'
p50552
sS'DAQmx_Val_Switch_Topology_1175_2_Wire_98x1_Mux'
p50553
S'"1175/2-Wire 98x1 Mux"'
p50554
sS'DAQmxErrorPropertyNotSupportedWithConflictingProperty'
p50555
S'(-201298)'
p50556
sS'DAQmxErrorTooManyPhysicalChansForTEDSInterfaceSpecd'
p50557
S'(-201052)'
p50558
sS'DAQmxErrorPowerLimitExceeded'
p50559
S'(-200195)'
p50560
sS'DAQmx_Dev_CI_SampClkSupported'
p50561
S'0x299E'
p50562
sS'DAQmx_Val_SCXI1124Range0to5V'
p50563
S'14630'
p50564
sS'DAQmxErrorCannotTristateTerm_Routing'
p50565
S'(-89128)'
p50566
sS'DAQmxErrorPALDeviceNotSupported'
p50567
S'(-50302)'
p50568
sS'DAQmx_Val_GND'
p50569
S'10066'
p50570
sS'DAQmxErrorSwitchNotResetBeforeScan'
p50571
S'(-200199)'
p50572
sS'DAQmxErrorNoDivisorForExternalSignal'
p50573
S'(-200130)'
p50574
sS'DAQmx_CI_Pulse_Freq_DigFltr_Enable'
p50575
S'0x2F06'
p50576
sS'DAQmx_SwitchChan_MaxDCSwitchCurrent'
p50577
S'0x0645'
p50578
sS'DAQmx_Val_Bit_CouplingTypes_Ground'
p50579
S'(1<<2)'
p50580
sS'DAQmxErrorRepeatedAIPhysicalChan'
p50581
S'(-200620)'
p50582
sS'DAQmx_CI_Encoder_ZInputTerm'
p50583
S'0x219F'
p50584
sS'DAQmxErrorFirmwareUpdateInvalidState'
p50585
S'(-201489)'
p50586
sS'DAQmxErrorInvalidTimeValue'
p50587
S'(-201037)'
p50588
sS'DAQmx_AnlgWin_RefTrig_Coupling'
p50589
S'0x1857'
p50590
sS'DAQmxErrorDigInputNotSupported'
p50591
S'(-200647)'
p50592
sS'DAQmxErrorInvalidCalConstOffsetDACValue'
p50593
S'(-200517)'
p50594
sS'DAQmxErrorDifferentAIInputSrcInOneChanGroup'
p50595
S'(-200572)'
p50596
sS'DAQmx_AI_Bridge_ElectricalUnits'
p50597
S'0x2F87'
p50598
sS'DAQmxErrorSampClkOutputTermIncludesStartTrigSrc'
p50599
S'(-200954)'
p50600
sS'DAQmx_AI_SoundPressure_MaxSoundPressureLvl'
p50601
S'0x223A'
p50602
sS'DAQmxErrorCOWritePulseLowTicksNotSupported'
p50603
S'(-200689)'
p50604
sS'DAQmxErrorCantResetExpiredWatchdog'
p50605
S'(-200644)'
p50606
sS'DAQmxErrorInvalidSyntaxForPhysicalChannelRange'
p50607
S'(-200086)'
p50608
sS'DAQmxErrorNonZeroBufferSizeInProgIOXfer'
p50609
S'(-200172)'
p50610
sS'DAQmxErrorTEDSMinPhysValGEMaxPhysVal'
p50611
S'(-200815)'
p50612
sS'DAQmx_Val_QuarterBridgeII'
p50613
S'10272'
p50614
sS'DAQmxErrorInputBufSizeTooSmallToStartAcq'
p50615
S'(-200608)'
p50616
sS'DAQmx_AdvTrig_Type'
p50617
S'0x1365'
p50618
sS'DAQmx_PhysicalChan_TEDS_VersionLetter'
p50619
S'0x21DE'
p50620
sS'DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS'
p50621
S'(-200825)'
p50622
sS'DAQmx_Val_Unconstrained'
p50623
S'14708'
p50624
sS'DAQmx_Val_K_Type_TC'
p50625
S'10073'
p50626
sS'DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported'
p50627
S'(-200766)'
p50628
sS'DAQmxErrorSpecdDeviceIsAlreadyOnRTSIBus'
p50629
S'(-201029)'
p50630
sS'DAQmx_CI_CountEdges_ActiveEdge'
p50631
S'0x0697'
p50632
sS'DAQmxErrorRepeatedNumberInScaledValues'
p50633
S'(-200599)'
p50634
sS'DAQmx_Exported_AdvTrig_Pulse_WidthUnits'
p50635
S'0x1647'
p50636
sS'DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript'
p50637
S'(-201011)'
p50638
sS'DAQmxWarningPxiResmanAllocationError'
p50639
S'(26100)'
p50640
sS'DAQmx_DI_UsbXferReqCount'
p50641
S'0x3002'
p50642
sS'DAQmx_CI_SemiPeriod_Term'
p50643
S'0x18B0'
p50644
sS'DAQmxWarningPXI5610_IncorrectlyConfigured'
p50645
S'(200075)'
p50646
sS'DAQmx_AI_LossyLSBRemoval_CompressedSampSize'
p50647
S'0x22D9'
p50648
sS'DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange'
p50649
S'(-200076)'
p50650
sS'DAQmxErrorSampPerChanNotMultipleOfIncr'
p50651
S'(-200344)'
p50652
sS'DAQmxErrorInvalidWirelessConfiguration'
p50653
S'(-201258)'
p50654
sS'DAQmx_Val_Chan'
p50655
S'10113'
p50656
sS'DAQmxErrorRoutingNotSupportedForDevice'
p50657
S'(-200039)'
p50658
sS'DAQmxErrorCOSampModeSampTimingTypeSampClkConflict'
p50659
S'(-200778)'
p50660
sS'DAQmxErrorInvalidNumOfPhysChansForDeltaRosette'
p50661
S'(-201447)'
p50662
sS'DAQmx_CI_LinEncoder_Units'
p50663
S'0x18A9'
p50664
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_Octal_16x1_Mux'
p50665
S'"1130/2-Wire Octal 16x1 Mux"'
p50666
sS'DAQmxErrorNetworkStatusDown'
p50667
S'(-201253)'
p50668
sS'DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay'
p50669
S'0x22BF'
p50670
sS'DAQmx_CI_CountEdges_DigFltr_TimebaseSrc'
p50671
S'0x21F8'
p50672
sS'DAQmxErrorLines4To7ConfiguredForOutput'
p50673
S'(-200125)'
p50674
sS'DAQmx_Val_SampleCompleteEvent'
p50675
S'12530'
p50676
sS'DAQmxErrorStrainGageCalibration'
p50677
S'(-200380)'
p50678
sS'DAQmxErrorSoftwareTooNewForSelfCalibrationData'
p50679
S'(-201146)'
p50680
sS'DAQmxWarningPALIrrelevantAttribute'
p50681
S'(50001)'
p50682
sS'DAQmx_AI_Bridge_ShuntCal_ShuntCalBActualResistance'
p50683
S'0x2F7B'
p50684
sS'DAQmxErrorCantPrimeWithEmptyBuffer'
p50685
S'(-201435)'
p50686
sS'DAQmxWarningPALTransferOverwritten'
p50687
S'(50410)'
p50688
sS'DAQmx_CI_Prescaler'
p50689
S'0x2239'
p50690
sS'DAQmxErrorRepeatedPhysicalChan'
p50691
S'(-200371)'
p50692
sS'DAQmxErrorInvalidAccessoryName'
p50693
S'(-201044)'
p50694
sS'DAQmxErrorReversePolynomialCoefNotSpecd'
p50695
S'(-200325)'
p50696
sS'DAQmx_Val_OnBrdMemHalfFullOrLess'
p50697
S'10239'
p50698
sS'DAQmx_PhysicalChan_DI_SampClkSupported'
p50699
S'0x29A5'
p50700
sS'DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint'
p50701
S'(-200997)'
p50702
sS'DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev'
p50703
S'(-200856)'
p50704
sS'DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv'
p50705
S'0x1886'
p50706
sS'DAQmx_PhysicalChan_TEDS_VersionNum'
p50707
S'0x21DD'
p50708
sS'DAQmx_Scale_Lin_YIntercept'
p50709
S'0x1228'
p50710
sS'DAQmxErrorCannotTristateBusyTerm'
p50711
S'(-200252)'
p50712
sS'DAQmxErrorInvalidFirmwareFileUploaded'
p50713
S'(-201418)'
p50714
sS'DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing'
p50715
S'(-89144)'
p50716
sS'DAQmx_Dev_AnlgTrigSupported'
p50717
S'0x2984'
p50718
sS'DAQmxErrorFirmwareIsTooOld'
p50719
S'(-201168)'
p50720
sS'DAQmx_Val_Pt3928'
p50721
S'12483'
p50722
sS'DAQmx_Val_mVoltsPerMillimeter'
p50723
S'14838'
p50724
sS'DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice'
p50725
S'(-200981)'
p50726
sS'DAQmx_Val_PathStatus_AlreadyExists'
p50727
S'10432'
p50728
sS'DAQmx_Val_InchPounds'
p50729
S'15883'
p50730
sS'DAQmx_Val_Pt3920'
p50731
S'10053'
p50732
sS'DAQmx_Val_Polynomial'
p50733
S'10449'
p50734
sS'DAQmx_Val_Implicit'
p50735
S'10451'
p50736
sS'DAQmxErrorBridgeShuntCaNotSupported'
p50737
S'(-201204)'
p50738
sS'DAQmxErrorPLLBecameUnlocked'
p50739
S'(-200246)'
p50740
sS'DAQmx_Cal_AccConnectionCount'
p50741
S'0x2FEB'
p50742
sS'DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads'
p50743
S'(-200990)'
p50744
sS'DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals'
p50745
S'(-200657)'
p50746
sS'DAQmx_AI_EddyCurrentProxProbe_Sensitivity'
p50747
S'0x2ABE'
p50748
sS'DAQmxErrorTimebaseCalFreqVarianceTooLarge'
p50749
S'(-200723)'
p50750
sS'DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth'
p50751
S'0x2229'
p50752
sS'DAQmxErrorDelayFromSampClkTooShort'
p50753
S'(-200336)'
p50754
sS'DAQmxErrorNoRefTrigConfigured'
p50755
S'(-200282)'
p50756
sS'DAQmx_Val_Switch_Topology_2501_4_Wire_12x1_Mux'
p50757
S'"2501/4-Wire 12x1 Mux"'
p50758
sS'DAQmxWarningPxiResmanModuleParseError'
p50759
S'(26500)'
p50760
sS'DAQmx_Val_MaxShearStrainAngle'
p50761
S'15978'
p50762
sS'DAQmxWarningFileNotFound'
p50763
S'(26103)'
p50764
sS'DAQmx_CO_Prescaler'
p50765
S'0x226D'
p50766
sS'DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2'
p50767
S'(-200970)'
p50768
sS'DAQmx_Dev_CO_MaxSize'
p50769
S'0x29A1'
p50770
sS'DAQmxErrorReferenceCurrentInvalid'
p50771
S'(-200154)'
p50772
sS'DAQmx_Val_NIELVIS'
p50773
S'14755'
p50774
sS'DAQmx_AI_LVDT_Units'
p50775
S'0x0910'
p50776
sS'DAQmxErrorLines0To3ConfiguredForInput'
p50777
S'(-200122)'
p50778
sS'DAQmx_Val_DMA'
p50779
S'10054'
p50780
sS'DAQmx_DigPattern_RefTrig_When'
p50781
S'0x1438'
p50782
sS'DAQmxErrorCustomScaleNameUsed'
p50783
S'(-200356)'
p50784
sS'DAQmxErrorCalChanReversePolyCoefNotSpecd'
p50785
S'(-200941)'
p50786
sS'DAQmxErrorTopologyNotSupportedByCfgTermBlock'
p50787
S'(-200256)'
p50788
sS'DAQmx_Val_Accelerometer'
p50789
S'10356'
p50790
sS'DAQmx_CI_Period_Div'
p50791
S'0x192E'
p50792
sS'DAQmxErrorPALUSBTransactionError'
p50793
S'(-50808)'
p50794
sS'DAQmx_Val_NewtonMeters'
p50795
S'15881'
p50796
sS'DAQmx_DO_DataXferMech'
p50797
S'0x2266'
p50798
sS'DAQmxErrorPALComponentTooOld'
p50799
S'(-50252)'
p50800
sS'DAQmx_AI_Voltage_ACRMS_Units'
p50801
S'0x17E2'
p50802
sS'DAQmx_Write_SleepTime'
p50803
S'0x22B2'
p50804
sS'DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand'
p50805
S'(-200999)'
p50806
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing'
p50807
S'(-89149)'
p50808
sS'DAQmxErrorDevNotInTask'
p50809
S'(-200482)'
p50810
sS'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Mux'
p50811
S'"2501/1-Wire 48x1 Mux"'
p50812
sS'DAQmx_Val_NoChange'
p50813
S'10160'
p50814
sS'DAQmxErrorAIMaxTooLarge'
p50815
S'(-200579)'
p50816
sS'DAQmxErrorPALInvalidDeviceState'
p50817
S'(-50804)'
p50818
sS'DAQmxErrorPALCalculationOverflow'
p50819
S'(-50175)'
p50820
sS'DAQmx_DigEdge_StartTrig_Src'
p50821
S'0x1407'
p50822
sS'DAQmx_CI_CtrTimebaseSrc'
p50823
S'0x0143'
p50824
sS'DAQmxErrorNetworkProductTypeMismatch'
p50825
S'(-201271)'
p50826
sS'DAQmxErrorMasterTbRateMasterTbSrcMismatch'
p50827
S'(-200307)'
p50828
sS'DAQmxErrorConnectionsNotSupportedOnAccessory'
p50829
S'(-201411)'
p50830
sS'DAQmx_Val_Bit_CouplingTypes_NoiseReject'
p50831
S'(1<<5)'
p50832
sS'DAQmxErrorInvalidShuntLocationForCalibration'
p50833
S'(-201338)'
p50834
sS'DAQmx_DI_DataXferReqCond'
p50835
S'0x2264'
p50836
sS'DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x'
p50837
S'(-200897)'
p50838
sS'DAQmxErrorHWTimedSinglePointAndDataXferNotDMA'
p50839
S'(-201329)'
p50840
sS'DAQmxErrorPALThreadCouldNotRun'
p50841
S'(-50600)'
p50842
sS'DAQmx_Val_InchesPerSecond'
p50843
S'15960'
p50844
sS'DAQmx_PhysicalChan_TEDS_TemplateIDs'
p50845
S'0x228F'
p50846
sS'DAQmxErrorInvalidExcitValForScaling'
p50847
S'(-200318)'
p50848
sS'DAQmx_AI_Pressure_Units'
p50849
S'0x2F76'
p50850
sS'DAQmx_Write_OvertemperatureChansExist'
p50851
S'0x2A84'
p50852
sS'DAQmxErrorDisconnectionRequiredInScanlist'
p50853
S'(-200639)'
p50854
sS'DAQmxErrorMultiChanTypesInTask'
p50855
S'(-200559)'
p50856
sS'DAQmx_Val_Hz'
p50857
S'10373'
p50858
sS'DAQmx_Read_OvertemperatureChans'
p50859
S'0x3082'
p50860
sS'DAQmxErrorCannotCalculateNumSampsTaskNotStarted'
p50861
S'(-200343)'
p50862
sS'DAQmxErrorMemMapAndHWTimedSinglePoint'
p50863
S'(-200995)'
p50864
sS'DAQmxErrorSetupCalNeededBeforeAdjustCal'
p50865
S'(-201005)'
p50866
sS'DAQmxWarningPALResourceNotAvailable'
p50867
S'(50101)'
p50868
sS'DAQmxErrorDrivePhaseShiftDCMBecameUnlocked'
p50869
S'(-200390)'
p50870
sS'DAQmxErrorCAPIReservedParamNotNULL'
p50871
S'(-200492)'
p50872
sS'DAQmx_Val_PXI'
p50873
S'12583'
p50874
sS'DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction'
p50875
S'(-200046)'
p50876
sS'DAQmxErrorExternalTimebaseRateNotKnownForDelay'
p50877
S'(-200149)'
p50878
sS'DAQmx_CO_CtrTimebase_DigSync_Enable'
p50879
S'0x227A'
p50880
sS'DAQmx_Val_SoundPressure_Microphone'
p50881
S'10354'
p50882
sS'DAQmxErrorFirmwareIsUpdating'
p50883
S'(-201377)'
p50884
sS'DAQmx_CI_SemiPeriod_DigFltr_Enable'
p50885
S'0x2219'
p50886
sS'DAQmx_CI_CountEdges_InitialCnt'
p50887
S'0x0698'
p50888
sS'DAQmxErrorProgIODataXferForBufferedAO'
p50889
S'(-200767)'
p50890
sS'DAQmxErrorPALBadLibrarySpecifier'
p50891
S'(-50018)'
p50892
sS'DAQmx_Val_NetworkDAQ'
p50893
S'14829'
p50894
sS'DAQmxErrorCalChanForwardPolyCoefNotSpecd'
p50895
S'(-200940)'
p50896
sS'DAQmxErrorFREQOUTCannotProduceDesiredFrequency3'
p50897
S'(-201443)'
p50898
sS'DAQmxErrorFREQOUTCannotProduceDesiredFrequency2'
p50899
S'(-200736)'
p50900
sS'DAQmxErrorReferenceClockNotPresent'
p50901
S'(-201461)'
p50902
sS'DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked'
p50903
S'(-200389)'
p50904
sS'DAQmx_Val_PatternMatches'
p50905
S'10254'
p50906
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_8x32_Matrix'
p50907
S'"2532/1-Wire Dual 8x32 Matrix"'
p50908
sS'DAQmxErrorDriverDeviceGUIDNotFound_Routing'
p50909
S'(-88705)'
p50910
sS'DAQmxErrorTriggerChannelMustBeEnabled'
p50911
S'(-201148)'
p50912
sS'DAQmxErrorTooManyPostTrigSampsPerChan'
p50913
S'(-200575)'
p50914
sS'DAQmx_AI_DigFltr_Type'
p50915
S'0x30BE'
p50916
sS'DAQmxErrorReferenceFrequencyInvalid'
p50917
S'(-200156)'
p50918
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Octal_32x1_Mux'
p50919
S'"1130/1-Wire Octal 32x1 Mux"'
p50920
sS'DAQmxErrorAIConvRateTooHigh'
p50921
S'(-200335)'
p50922
sS'DAQmxErrorCalibrationFailedAIOutOfRange'
p50923
S'(-201294)'
p50924
sS'DAQmxErrorChannelExpansionWithDifferentTriggerDevices'
p50925
S'(-201349)'
p50926
sS'DAQmxErrorSpecifiedAccessoryChannelsNotPresentOnDevice'
p50927
S'(-201412)'
p50928
sS'DAQmx_AI_Bridge_ShuntCal_Select'
p50929
S'0x21D5'
p50930
sS'DAQmx_WatchdogExpirTrig_TrigOnNetworkConnLoss'
p50931
S'0x305D'
p50932
sS'DAQmxErrorRepeatUntilTriggerLoopNotAllowedInBreakBlock'
p50933
S'(-201217)'
p50934
sS'DAQmx_AI_AutoZeroMode'
p50935
S'0x1760'
p50936
sS'DAQmxWarningIOError'
p50937
S'(26652)'
p50938
sS'DAQmx_AI_ChanCal_EnableCal'
p50939
S'0x2298'
p50940
sS'DAQmx_AO_DAC_Rng_Low'
p50941
S'0x182D'
p50942
sS'DAQmxErrorLinesAlreadyReservedForOutput'
p50943
S'(-200597)'
p50944
sS'DAQmxErrorDigPrptyCannotBeSetPerLine'
p50945
S'(-200641)'
p50946
sS'DAQmx_CI_TwoEdgeSep_FirstLogicLvlBehavior'
p50947
S'0x30AC'
p50948
sS'DAQmx_AnlgLvl_PauseTrig_Src'
p50949
S'0x1370'
p50950
sS'DAQmxErrorStartTrigTypeNotSupportedGivenTimingType'
p50951
S'(-200904)'
p50952
sS'DAQmxErrorFiveVoltDetectFailed'
p50953
S'(-201406)'
p50954
sS'DAQmxErrorPALLogicalBufferEmpty'
p50955
S'(-50406)'
p50956
sS'DAQmx_Sys_NIDAQMajorVersion'
p50957
S'0x1272'
p50958
sS'DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript'
p50959
S'(-201007)'
p50960
sS'DAQmx_CI_SemiPeriod_TermCfg'
p50961
S'0x30AF'
p50962
sS'DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall'
p50963
S'(-200873)'
p50964
sS'DAQmx_Dev_SerialNum'
p50965
S'0x0632'
p50966
sS'DAQmxErrorFileWriteProtected'
p50967
S'(-201302)'
p50968
sS'DAQmx_CI_CtrTimebaseRate'
p50969
S'0x18B2'
p50970
sS'DAQmx_CI_CountEdges_CountReset_LogicLvlBehavior'
p50971
S'0x30A0'
p50972
sS'DAQmx_Exported_AdvCmpltEvent_Pulse_Width'
p50973
S'0x1654'
p50974
sS'DAQmxErrorTrigmanConflictingRouteNoUnreserve'
p50975
S'(-26007)'
p50976
sS'DAQmx_Exported_AdvTrig_Pulse_Polarity'
p50977
S'0x1646'
p50978
sS'DAQmxWarningPALBadOffset'
p50979
S'(50007)'
p50980
sS'DAQmx_Read_ExcitFaultChans'
p50981
S'0x3089'
p50982
sS'DAQmxErrorPXIStarAndClock10Sync'
p50983
S'(-200885)'
p50984
sS'DAQmxErrorGenerationDisabled'
p50985
S'(-26851)'
p50986
sS'DAQmx_CI_Pulse_Time_Term'
p50987
S'0x2F0C'
p50988
sS'DAQmx_Val_SameAsMasterTimebase'
p50989
S'10282'
p50990
sS'DAQmxErrorPropertyNotSupportedForBusType'
p50991
S'(-201262)'
p50992
sS'DAQmxErrorInternalTimebaseSourceRateCombo'
p50993
S'(-200134)'
p50994
sS'DAQmxErrorCAPIChanIndexInvalid'
p50995
S'(-200570)'
p50996
sS'DAQmx_DI_DigFltr_MinPulseWidth'
p50997
S'0x21D7'
p50998
sS'DAQmx_Read_DigitalLines_BytesPerChan'
p50999
S'0x217C'
p51000
sS'DAQmx_CO_Pulse_Ticks_InitialDelay'
p51001
S'0x0298'
p51002
sS'DAQmxErrorDevMustHaveAtLeastOneCard'
p51003
S'(-201357)'
p51004
sS'DAQmxErrorNoPathAvailableBetween2SwitchChans'
p51005
S'(-200180)'
p51006
sS'DAQmxErrorCounterMaxMinRangeTime'
p51007
S'(-200138)'
p51008
sS'DAQmxErrorAOBufferSizeZeroForSampClkTimingType'
p51009
S'(-200859)'
p51010
sS'DAQmx_Dev_AO_MaxRate'
p51011
S'0x2997'
p51012
sS'DAQmxErrorPALSocketListenerInvalid'
p51013
S'(-50502)'
p51014
sS'DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseRate'
p51015
S'0x2EF3'
p51016
sS'DAQmx_Val_SCXI1124RangeNeg10to10V'
p51017
S'14634'
p51018
sS'DAQmx_AI_ADCCustomTimingMode'
p51019
S'0x2F6B'
p51020
sS'DAQmx_PhysicalChan_DI_ChangeDetectSupported'
p51021
S'0x29A6'
p51022
sS'DAQmxErrorPALCommunicationsFault'
p51023
S'(-50401)'
p51024
sS'DAQmxWarningTrigmanConflictingRoute'
p51025
S'(26008)'
p51026
sS'DAQmx_AI_ChanCal_Poly_ReverseCoeff'
p51027
S'0x22A0'
p51028
sS'DAQmxErrorMeasCalAdjustMainPathOutputImpedance'
p51029
S'(-200506)'
p51030
sS'DAQmx_CI_DataXferMech'
p51031
S'0x0200'
p51032
sS'DAQmxErrorExtCalTemperatureNotDAQmx'
p51033
S'(-200544)'
p51034
sS'DAQmxErrorVirtualTEDSFileNotFound'
p51035
S'(-200784)'
p51036
sS'DAQmxErrorInvalidCalConstOscillatorPhaseDACValue'
p51037
S'(-200518)'
p51038
sS'DAQmx_AI_Thrmcpl_Type'
p51039
S'0x1050'
p51040
sS'DAQmx_Sys_Tasks'
p51041
S'0x1267'
p51042
sS'DAQmxErrorInvalidEnumValueSpecd'
p51043
S'(-201054)'
p51044
sS'DAQmxErrorStopTriggerHasNotOccurred'
p51045
S'(-200008)'
p51046
sS'DAQmx_Val_mVoltsPerVolt'
p51047
S'15897'
p51048
sS'DAQmxErrorNonBufferedAOAndDataXferNotProgIO'
p51049
S'(-200768)'
p51050
sS'DAQmx_AI_CurrentShunt_Resistance'
p51051
S'0x17F3'
p51052
sS'DAQmxErrorCorruptedTEDSMemory'
p51053
S'(-200742)'
p51054
sS'DAQmx_Val_Interlocked'
p51055
S'12549'
p51056
sS'DAQmxErrorDuplicateCalibrationAdjustmentInput'
p51057
S'(-201387)'
p51058
sS'DAQmx_Val_CSeriesModule'
p51059
S'14659'
p51060
sS'DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType'
p51061
S'(-200910)'
p51062
sS'DAQmx_Val_Current'
p51063
S'10134'
p51064
sS'DAQmxErrorNetworkStatusTimedOut'
p51065
S'(-201250)'
p51066
sS'DAQmx_Val_Ground'
p51067
g48232
sS'DAQmxErrorCascadeDigitizationModeNotSupported'
p51068
S'(-201034)'
p51069
sS'DAQmxErrorMeasCalAdjustOscillatorPhaseDAC'
p51070
S'(-200521)'
p51071
sS'DAQmx_Read_ChangeDetect_HasOverflowed'
p51072
S'0x2194'
p51073
sS'DAQmx_Val_Switch_Topology_2527_1_Wire_64x1_Mux'
p51074
S'"2527/1-Wire 64x1 Mux"'
p51075
sS'DAQmx_Cal_RecommendedAccConnectionCountLimit'
p51076
S'0x2FEC'
p51077
sS'DAQmxErrorDeviceNameNotFound_Routing'
p51078
S'(-88717)'
p51079
sS'DAQmxErrorDataXferCustomThresholdNotSpecified'
p51080
S'(-200943)'
p51081
sS'DAQmx_CI_TwoEdgeSep_First_DigSync_Enable'
p51082
S'0x2213'
p51083
sS'DAQmxErrorHWTimedNonBufferedAONotSupported'
p51084
S'(-201116)'
p51085
sS'DAQmx_CI_Encoder_AInputTermCfg'
p51086
S'0x30A3'
p51087
sS'DAQmx_Val_Switch_Topology_2722_Independent'
p51088
S'"2722/Independent"'
p51089
sS'DAQmx_Val_Lowpass'
p51090
S'16071'
p51091
sS'DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal'
p51092
S'(-200545)'
p51093
sS'DAQmxWarningTrigmanLineNotReservedUnroutable'
p51094
S'(26004)'
p51095
sS'DAQmxErrorCouldNotReserveRequestedTrigLine'
p51096
S'(-200225)'
p51097
sS'DAQmx_Cal_UserDefinedInfo_MaxSize'
p51098
S'0x191C'
p51099
sS'DAQmx_Val_Off'
p51100
S'10231'
p51101
sS'DAQmxWarningFileDeleteFault'
p51102
S'(26107)'
p51103
sS'DAQmxErrorActiveDevNotSupportedWithChanExpansion'
p51104
S'(-201094)'
p51105
sS'DAQmx_Val_Switch_Topology_1127_4_Wire_16x1_Mux'
p51106
S'"1127/4-Wire 16x1 Mux"'
p51107
sS'DAQmxErrorNoDevicesSupportCDAQSyncConnections'
p51108
S'(-201459)'
p51109
sS'DAQmxErrorTrailingSpaceInString'
p51110
S'(-200554)'
p51111
sS'DAQmxErrorPathNotFound'
p51112
S'(-26110)'
p51113
sS'DAQmxErrorRoutingDestTermPXIDStarInNonDStarTriggerSlot_Routing'
p51114
S'(-89164)'
p51115
sS'DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce'
p51116
S'(-200014)'
p51117
sS'DAQmx_CI_Encoder_ZIndexEnable'
p51118
S'0x0890'
p51119
sS'DAQmxErrorInsufficientBuffer'
p51120
S'(-26113)'
p51121
sS'DAQmxErrorWaitModeValueNotSupportedNonBuffered'
p51122
S'(-200924)'
p51123
sS'DAQmx_AI_DataXferCustomThreshold'
p51124
S'0x230C'
p51125
sS'DAQmxWarningTimeout'
p51126
S'(26802)'
p51127
sS'DAQmx_DigPattern_PauseTrig_Pattern'
p51128
S'0x2188'
p51129
sS'DAQmxErrorNetworkDeviceConfigurationLocked'
p51130
S'(-201248)'
p51131
sS'DAQmxWarningPLLUnlocked'
p51132
S'(200007)'
p51133
sS'DAQmxErrorEveryNSampsTransferredFromBufferNotForInput'
p51134
S'(-200965)'
p51135
sS'DAQmx_Buf_Output_BufSize'
p51136
S'0x186D'
p51137
sS'DAQmxErrorRefTrigDigPatternChanNotInTask'
p51138
S'(-200889)'
p51139
sS'DAQmx_Val_mVoltsPerVoltPerMilliInch'
p51140
S'12505'
p51141
sS'DAQmx_AI_ChanCal_Poly_ForwardCoeff'
p51142
S'0x229F'
p51143
sS'DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseSrc'
p51144
S'0x2FB5'
p51145
sS'DAQmxWarningPxiResmanChassisSegmentParseError'
p51146
S'(26203)'
p51147
sS'DAQmxErrorSamplesNoLongerWriteable'
p51148
S'(-200289)'
p51149
sS'DAQmx_AI_UsbXferReqSize'
p51150
S'0x2A8E'
p51151
sS'DAQmxErrorFiniteSTCCounterNotSupportedForLogging'
p51152
S'(-201308)'
p51153
sS'DAQmx_Val_Switch_Topology_1194_Quad_4x1_Mux'
p51154
S'"1194/Quad 4x1 Mux"'
p51155
sS'DAQmxErrorSampClkTimebaseRateNotSpecd'
p51156
S'(-201096)'
p51157
sS'DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions'
p51158
S'(200039)'
p51159
sS'DAQmxErrorClearIsLastInstructionOfLoopInScript'
p51160
S'(-200037)'
p51161
sS'DAQmx_CO_CtrTimebaseSrc'
p51162
S'0x0339'
p51163
sS'DAQmxErrorOperationNotSupportedOnSimulatedDevice'
p51164
S'(-201492)'
p51165
sS'DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals'
p51166
S'(-200659)'
p51167
sS'DAQmx_Dev_CompactDAQ_SlotNum'
p51168
S'0x29B8'
p51169
sS'DAQmx_AO_FuncGen_Freq'
p51170
S'0x2A19'
p51171
sS'DAQmxWarningNetworkDeviceAlreadyAdded'
p51172
S'(200057)'
p51173
sS'DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset'
p51174
S'(-200510)'
p51175
sS'DAQmxErrorDACOffsetValNotSet'
p51176
S'(-201502)'
p51177
sS'DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseRate'
p51178
S'0x2F19'
p51179
sS'DAQmxErrorWriteChanTypeMismatch'
p51180
S'(-200526)'
p51181
sS'DAQmx_AnlgWin_RefTrig_DigSync_Enable'
p51182
S'0x2EEF'
p51183
sS'DAQmxErrorPALFileCloseFault'
p51184
S'(-50205)'
p51185
sS'DAQmx_Val_Switch_Topology_2544_8x1_Terminated_Mux'
p51186
S'"2544/8x1 Terminated Mux"'
p51187
sS'DAQmx_CI_CountEdges_DirTerm'
p51188
S'0x21E1'
p51189
sS'DAQmxWarningPXI5600_NotConfigured'
p51190
S'(200061)'
p51191
sS'DAQmx_Carrier_SerialNum'
p51192
S'0x2A8A'
p51193
sS'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc'
p51194
S'0x222A'
p51195
sS'DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseRate'
p51196
S'0x2EEE'
p51197
sS'DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqRangeVals'
p51198
S'0x30C9'
p51199
sS'DAQmx_CI_CtrTimebaseActiveEdge'
p51200
S'0x0142'
p51201
sS'DAQmxWarningSampClkRateViolatesSettlingTimeForGen'
p51202
S'(200040)'
p51203
sS'DAQmx_Val_Bit_TriggerUsageTypes_ArmStart'
p51204
S'(1<<5)'
p51205
sS'DAQmxErrorMeasCalAdjustMainPathPreAmpOffset'
p51206
S'(-200502)'
p51207
sS'DAQmx_Dev_CI_MaxTimebase'
p51208
S'0x29A0'
p51209
sS'DAQmx_Val_Bit_CouplingTypes_LFReject'
p51210
S'(1<<4)'
p51211
sS'DAQmx_AO_DAC_Rng_High'
p51212
S'0x182E'
p51213
sS'DAQmx_Val_Bit_TriggerUsageTypes_Start'
p51214
S'(1<<3)'
p51215
sS'DAQmxErrorOnlyUsePauseTrigSrcPrptyWithDevDataLines'
p51216
S'(-201136)'
p51217
sS'DAQmxErrorExtRefClkRateNotSpecified'
p51218
S'(-200735)'
p51219
sS'DAQmx_DO_UseOnlyOnBrdMem'
p51220
S'0x2265'
p51221
sS'DAQmx_Val_Switch_Topology_2503_4_Wire_12x1_Mux'
p51222
S'"2503/4-Wire 12x1 Mux"'
p51223
sS'DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen'
p51224
S'(-200795)'
p51225
sS'DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse'
p51226
S'(-200733)'
p51227
sS'DAQmx_Dev_ProductCategory'
p51228
S'0x29A9'
p51229
sS'DAQmxWarningPALResourceNotReserved'
p51230
S'(50102)'
p51231
sS'DAQmx_PersistedTask_AllowInteractiveEditing'
p51232
S'0x22CD'
p51233
sS'DAQmxErrorPALBadWriteOffset'
p51234
S'(-50013)'
p51235
sS'DAQmxErrorClearTEDSNotSupportedOnRT'
p51236
S'(-200809)'
p51237
sS'DAQmx_SyncClk_Interval'
p51238
S'0x2F7E'
p51239
sS'DAQmx_AO_FuncGen_Amplitude'
p51240
S'0x2A1A'
p51241
sS'DAQmxErrorKeywordExpectedInScript'
p51242
S'(-200027)'
p51243
sS'DAQmx_DO_Tristate'
p51244
S'0x18F3'
p51245
sS'DAQmxErrorCannotSelfCalDuringExtCal'
p51246
S'(-200522)'
p51247
sS'DAQmx_CO_Pulse_HighTime'
p51248
S'0x18BA'
p51249
sS'DAQmx_Val_Switch_Topology_2567_Independent'
p51250
S'"2567/Independent"'
p51251
sS'DAQmx_SwitchChan_MaxACSwitchPwr'
p51252
S'0x0644'
p51253
sS'DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseSrc'
p51254
S'0x2EE8'
p51255
sS'DAQmx_SelfCal_LastTemp'
p51256
S'0x1864'
p51257
sS'DAQmxErrorRefTrigWhenContinuous'
p51258
S'(-200358)'
p51259
sS'DAQmx_AI_EddyCurrentProxProbe_SensitivityUnits'
p51260
S'0x2ABF'
p51261
sS'DAQmx_Exported_WatchdogExpiredEvent_OutputTerm'
p51262
S'0x21AA'
p51263
sS'DAQmx_Val_SCXI'
p51264
S'12584'
p51265
sS'DAQmxErrorTableScaleScaledValsNotSpecd'
p51266
S'(-200348)'
p51267
sS'DAQmxWarningPxiResmanSystemDescriptionSpecLimitation'
p51268
S'(26403)'
p51269
sS'DAQmxErrorDevCannotProduceMinPulseWidth'
p51270
S'(-200777)'
p51271
sS'DAQmx_ChanType'
p51272
S'0x187F'
p51273
sS'DAQmxErrorZeroSlopeLinearScale'
p51274
S'(-200409)'
p51275
sS'DAQmx_Val_ESeriesDAQ'
p51276
S'14642'
p51277
sS'DAQmx_CI_CtrTimebase_DigSync_Enable'
p51278
S'0x2275'
p51279
sS'DAQmxWarningSampValCoercedToMax'
p51280
S'(200021)'
p51281
sS'DAQmx_AI_Voltage_dBRef'
p51282
S'0x29B0'
p51283
sS'DAQmx_Dev_AO_SupportedOutputTypes'
p51284
S'0x2FD3'
p51285
sS'DAQmx_DigEdge_StartTrig_Edge'
p51286
S'0x1404'
p51287
sS'DAQmxErrorMarkerOutsideWaveformInScript'
p51288
S'(-200029)'
p51289
sS'DAQmxErrorPALMemoryPageLockFailed'
p51290
S'(-50353)'
p51291
sS'DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall'
p51292
S'(-200868)'
p51293
sS'DAQmx_HshkTrig_Type'
p51294
S'0x22B7'
p51295
sS'DAQmxErrorNoChangeDetectionOnSelectedLineForDevice'
p51296
S'(-201020)'
p51297
sS'DAQmx_AI_RVDT_Sensitivity'
p51298
S'0x0903'
p51299
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_8x16_Matrix'
p51300
S'"2529/2-Wire 8x16 Matrix"'
p51301
sS'DAQmxErrorPALThreadControllerIsNotThreadCreator'
p51302
S'(-50602)'
p51303
sS'DAQmx_AO_DataXferMech'
p51304
S'0x0134'
p51305
sS'DAQmxWarningRateViolatesSettlingTime'
p51306
S'(200011)'
p51307
sS'DAQmxErrorDotNetAPINotUnsigned32BitNumber'
p51308
S'(-200499)'
p51309
sS'DAQmx_DO_OutputDriveType'
p51310
S'0x1137'
p51311
sS'DAQmxErrorACCouplingNotAllowedWith50OhmImpedance'
p51312
S'(-200411)'
p51313
sS'DAQmxErrorInvalidSignalModifier_Routing'
p51314
S'(-89150)'
p51315
sS'DAQmxErrorLinesReservedForSCXIControl'
p51316
S'(-200159)'
p51317
sS'DAQmx_Dev_TCPIP_WirelessIP'
p51318
S'0x2A8D'
p51319
sS'DAQmxErrorAnalogWaveformExpected'
p51320
S'(-200095)'
p51321
sS'DAQmxError3OutputPortCombinationGivenSampTimingType653x'
p51322
S'(-200932)'
p51323
sS'DAQmxErrorPALSharingViolation'
p51324
S'(-50805)'
p51325
sS'DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed'
p51326
S'(-200922)'
p51327
sS'DAQmx_AI_Thrmcpl_CJCSrc'
p51328
S'0x1035'
p51329
sS'DAQmxErrorSampleRateNumChansConvertPeriodCombo'
p51330
S'(-200081)'
p51331
sS'DAQmx_AI_ResolutionUnits'
p51332
S'0x1764'
p51333
sS'DAQmx_Val_SentinelValue'
p51334
S'16063'
p51335
sS'DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues'
p51336
S'(-200708)'
p51337
sS'DAQmxErrorInconsistentPullUpCfgAcrossTerminals'
p51338
S'(-201509)'
p51339
sS'DAQmx_Val_ZeroVolts'
p51340
S'12526'
p51341
sS'DAQmxErrorPropertyNotSupportedNotInputTask'
p51342
S'(-200457)'
p51343
sS'DAQmxErrorReversePolyOrderNotPositive'
p51344
S'(-200402)'
p51345
sS'_NI_uInt32_DEFINED_'
p51346
g48682
sS'DAQmxWarningPALFunctionNotFound'
p51347
S'(50255)'
p51348
sS'DAQmx_AnlgWin_RefTrig_Top'
p51349
S'0x1429'
p51350
sS'DAQmx_AI_Bridge_Poly_ReverseCoeff'
p51351
S'0x2F91'
p51352
sS'DAQmxErrorBothRefInAndRefOutEnabled'
p51353
S'(-201109)'
p51354
sS'DAQmxErrorPropertyValNotValidTermName'
p51355
S'(-200354)'
p51356
sS'DAQmxErrorAveragingWhenNotInternalHWTSP'
p51357
S'(-201408)'
p51358
sS'DAQmx_CI_GPS_SyncMethod'
p51359
S'0x1092'
p51360
sS'DAQmx_AI_Is_TEDS'
p51361
S'0x2983'
p51362
sS'DAQmx_Val_Lvl'
p51363
S'10210'
p51364
sS'DAQmx_AnlgEdge_RefTrig_DigFltr_MinPulseWidth'
p51365
S'0x2EE7'
p51366
sS'DAQmxErrorCppCantRemoveOtherObjectsEventHandler'
p51367
S'(-200588)'
p51368
sS'DAQmxErrorInvalidSampModeForPositionMeas'
p51369
S'(-200813)'
p51370
sS'DAQmxWarningDirCreateFault'
p51371
S'(26112)'
p51372
sS'DAQmx_Exported_SampClk_Pulse_Polarity'
p51373
S'0x1664'
p51374
sS'DAQmx_Val_SCXI1124RangeNeg1to1V'
p51375
S'14632'
p51376
sS'DAQmx_AI_DigFltr_Response'
p51377
S'0x30BF'
p51378
sS'DAQmx_Val_AboveLvl'
p51379
S'10093'
p51380
sS'DAQmxErrorOneTimestampChannelRequiredForCombinedNavigationRead'
p51381
S'(-201472)'
p51382
sS'DAQmx_Val_OnBrdMemNotFull'
p51383
S'10242'
p51384
sS'DAQmxErrorAuxPowerSourceRequired'
p51385
S'(-201475)'
p51386
sS'DAQmx_Val_OpenOrCreate'
p51387
S'15846'
p51388
sS'DAQmxErrorStorageAlteredPriorToSave'
p51389
S'(-201232)'
p51390
sS'DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples'
p51391
S'(-200291)'
p51392
sS'DAQmxErrorBlankStringExpansionFoundNoSupportedCDAQSyncConnectionDevices'
p51393
S'(-201460)'
p51394
sS'DAQmxErrorPxiResmanMxsPxiSystemNotFound'
p51395
S'(-26600)'
p51396
sS'DAQmxErrorElvisPrototypingBoardRemoved'
p51397
S'(-201200)'
p51398
sS'DAQmxErrorMinTempForThermocoupleTypeOutsideAccuracyForPolyScaling'
p51399
S'(-201171)'
p51400
sS'DAQmxWarningConnectionCountHasExceededRecommendedLimit'
p51401
S'(200056)'
p51402
sS'DAQmx_AI_StrainGage_Cfg'
p51403
S'0x0982'
p51404
sS'DAQmxError20MhzTimebaseNotSupportedGivenTimingType'
p51405
S'(-200909)'
p51406
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInStarTriggerSlot_Routing'
p51407
S'(-89158)'
p51408
sS'DAQmx_Exported_CtrOutEvent_Pulse_Polarity'
p51409
S'0x1718'
p51410
sS'DAQmxWarningRISAcqCompletedSomeBinsNotFilled'
p51411
S'(200029)'
p51412
sS'DAQmxErrorResourceNotInPool_Routing'
p51413
S'(-88708)'
p51414
sS'DAQmx_Val_AccelUnit_g'
p51415
S'10186'
p51416
sS'DAQmxErrorFileExists'
p51417
S'(-26109)'
p51418
sS'DAQmx_CO_DataXferMech'
p51419
S'0x2ECC'
p51420
sS'DAQmx_Val_CountEdges'
p51421
S'10125'
p51422
sS'DAQmx_CI_DutyCycle_StartingEdge'
p51423
S'0x3092'
p51424
sS'DAQmxErrorSyncPulseSrcInvalid'
p51425
S'(-201090)'
p51426
sS'DAQmx_Val_Switch_Topology_2531_1_Wire_Dual_4x64_Matrix'
p51427
S'"2531/1-Wire Dual 4x64 Matrix"'
p51428
sS'DAQmx_Val_Switch_Topology_1161_8_SPDT'
p51429
S'"1161/8-SPDT"'
p51430
sS'DAQmxErrorSwitchChanInUse'
p51431
S'(-200200)'
p51432
sS'DAQmxErrorPALDispatcherAlreadyExported'
p51433
S'(-50500)'
p51434
sS'DAQmxErrorCannotQueryTerminalForSWArmStart'
p51435
S'(-201479)'
p51436
sS'DAQmx_Val_Switch_Topology_2799_2_SPDT'
p51437
S'"2799/2-SPDT"'
p51438
sS'DAQmx_CI_AngEncoder_InitialAngle'
p51439
S'0x0881'
p51440
sS'DAQmxErrorChanSizeTooBigForU32PortWrite'
p51441
S'(-200566)'
p51442
sS'DAQmx_Val_Switch_Topology_1163R_Octal_4x1_Mux'
p51443
S'"1163R/Octal 4x1 Mux"'
p51444
sS'DAQmxErrorBridgeOffsetNullingCalNotSupported'
p51445
S'(-200696)'
p51446
sS'DAQmx_Val_Create'
p51447
S'15848'
p51448
sS'DAQmx_CI_Encoder_AInput_DigFltr_Enable'
p51449
S'0x21FB'
p51450
sS'DAQmxErrorBuiltInCJCSrcNotSupported'
p51451
S'(-200576)'
p51452
sS'DAQmxErrorOffsetTooLarge'
p51453
S'(-200269)'
p51454
sS'DAQmxErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc'
p51455
S'(-201091)'
p51456
sS'DAQmxErrorInvalidInstallation'
p51457
S'(-200683)'
p51458
sS'DAQmx_CI_Pulse_Time_DigFltr_Enable'
p51459
S'0x2F0E'
p51460
sS'DAQmxErrorSignalEventAlreadyRegistered'
p51461
S'(-200949)'
p51462
sS'DAQmxWarningCounter1DMADuringAOConflict'
p51463
S'(200009)'
p51464
sS'DAQmxErrorPALBadDataSize'
p51465
S'(-50005)'
p51466
sS'DAQmx_AnlgEdge_RefTrig_Src'
p51467
S'0x1424'
p51468
sS'DAQmxWarningReadOffsetCoercion'
p51469
S'(200019)'
p51470
sS'DAQmxErrorSelfTestFailed'
p51471
S'(-200020)'
p51472
sS'DAQmxErrorChanSizeTooBigForU16PortRead'
p51473
S'(-200878)'
p51474
sS'DAQmx_AI_LVDT_SensitivityUnits'
p51475
S'0x219A'
p51476
sS'DAQmx_Val_TwoPulseCounting'
p51477
S'10313'
p51478
sS'DAQmxErrorUnableToLocateErrorResources'
p51479
S'(-200500)'
p51480
sS'DAQmxErrorPALBadWriteCount'
p51481
S'(-50014)'
p51482
sS'DAQmx_AO_FuncGen_Offset'
p51483
S'0x2A1B'
p51484
sS'DAQmxErrorPasswordRequired'
p51485
S'(-200111)'
p51486
sS'DAQmxErrorSensorValTooLow'
p51487
S'(-200536)'
p51488
sS'DAQmx_Val_Freq_Voltage'
p51489
S'10181'
p51490
sS'DAQmxWarningTrigmanConflictingRouteNoUnreserve'
p51491
S'(26007)'
p51492
sS'DAQmxErrorBridgeScalesUnsupported'
p51493
S'(-201336)'
p51494
sS'DAQmxErrorScaledMinEqualMax'
p51495
S'(-200603)'
p51496
sS'DAQmx_Val_InsideWin'
p51497
S'10199'
p51498
sS'DAQmxErrorDACUnderflow'
p51499
S'(-200018)'
p51500
sS'DAQmxErrorCannotDetectChangesWhenTristateIsFalse'
p51501
S'(-200730)'
p51502
sS'DAQmx_Val_Switch_Topology_1127_2_Wire_4x8_Matrix'
p51503
S'"1127/2-Wire 4x8 Matrix"'
p51504
sS'DAQmx_Val_LeavingWin'
p51505
S'10208'
p51506
sS'DAQmxErrorTooManyChansGivenTimingType'
p51507
S'(-201101)'
p51508
sS'DAQmx_Val_LeftJustified'
p51509
S'10209'
p51510
sS'DAQmx_Val_AnlgEdge'
p51511
S'10099'
p51512
sS'DAQmxErrorCalibrationSessionAlreadyOpen'
p51513
S'(-200108)'
p51514
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_4x64_Matrix'
p51515
S'"1129/2-Wire 4x64 Matrix"'
p51516
sS'DAQmx_DelayFromSampClk_DelayUnits'
p51517
S'0x1304'
p51518
sS'DAQmxErrorPALFunctionObsolete'
p51519
S'(-50254)'
p51520
sS'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Amplified_Mux'
p51521
S'"2501/1-Wire 48x1 Amplified Mux"'
p51522
sS'DAQmxWarningBufferSizeNotMultipleOfSectorSize'
p51523
S'(200052)'
p51524
sS'DAQmxErrorDifftInternalAIInputSrcs'
p51525
S'(-200677)'
p51526
sS'DAQmx_AI_Accel_Units'
p51527
S'0x0673'
p51528
sS'DAQmxErrorPALMemoryBlockCheckFailed'
p51529
S'(-50354)'
p51530
sS'DAQmxErrorDeviceIDNotSpecifiedInList'
p51531
S'(-200055)'
p51532
sS'DAQmxErrorNetworkDAQInvalidWEPKeyLength'
p51533
S'(-201290)'
p51534
sS'DAQmx_Val_SCC'
p51535
S'14707'
p51536
sS'DAQmxErrorDeviceDoesNotSupportSimulation'
p51537
S'(-201160)'
p51538
sS'DAQmxWarningPALSyncAbandoned'
p51539
S'(50551)'
p51540
sS'DAQmxErrorUnknownCardPowerProfileInCarrier'
p51541
S'(-201422)'
p51542
sS'DAQmx_Val_GroupByChannel'
p51543
g48831
sS'DAQmxErrorUnexpectedIDFollowingSwitchOpInList'
p51544
S'(-200529)'
p51545
sS'DAQmxErrorCAPISyncCallbackNotSupportedOnThisPlatform'
p51546
S'(-200942)'
p51547
sS'DAQmx_Exported_RdyForXferEvent_OutputTerm'
p51548
S'0x22B5'
p51549
sS'DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt'
p51550
S'(-200974)'
p51551
sS'DAQmxErrorDifferentPrptyValsNotSupportedOnDev'
p51552
S'(-200629)'
p51553
sS'DAQmxErrorTooManyInstructionsInLoopInScript'
p51554
S'(-201016)'
p51555
sS'DAQmx_Val_GroupByScanNumber'
p51556
g48971
sS'DAQmxErrorAnalogMultiSampWriteNotSupported'
p51557
S'(-200539)'
p51558
sS'DAQmx_AnlgWin_RefTrig_DigFltr_Enable'
p51559
S'0x2EEB'
p51560
sS'DAQmxErrorOffsetTooSmall'
p51561
S'(-200268)'
p51562
sS'DAQmx_Val_AdvCmpltEvent'
p51563
S'12492'
p51564
sS'DAQmxErrorNoDevMemForWaveform'
p51565
S'(-200315)'
p51566
sS'DAQmx_Val_10MHzRefClock'
p51567
S'12536'
p51568
sS'DAQmxErrorCalMeasuredDataSizeVsActualDataSizeMismatch'
p51569
S'(-201485)'
p51570
sS'DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType'
p51571
S'(-200914)'
p51572
sS'DAQmxErrorInvalidSubsetLengthWithinLoopInScript'
p51573
S'(-200249)'
p51574
sS'DAQmxWarningServiceNotRunning'
p51575
S'(26804)'
p51576
sS'DAQmxErrorSwitchOperationNotSupported'
p51577
S'(-200193)'
p51578
sS'DAQmxWarningPALResourceNotInitialized'
p51579
S'(50104)'
p51580
sS'DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty'
p51581
S'(-200624)'
p51582
sS'DAQmx_PhysicalChan_AO_ManualControlAmplitude'
p51583
S'0x2A1F'
p51584
sS'DAQmxWarningInsufficientBuffer'
p51585
S'(26113)'
p51586
sS'DAQmx_CI_Pulse_Ticks_TermCfg'
p51587
S'0x30B5'
p51588
sS'DAQmxErrorRegisterNotWritable'
p51589
S'(-200393)'
p51590
sS'DAQmx_AIConv_DigFltr_TimebaseSrc'
p51591
S'0x2EDE'
p51592
sS'DAQmx_AO_Gain'
p51593
S'0x0118'
p51594
sS'DAQmxErrorDataVoltageLowAndHighIncompatible'
p51595
S'(-200902)'
p51596
sS'DAQmxErrorPauseTrigDigPatternSizeDoesNotMatchSrcSize'
p51597
S'(-201134)'
p51598
sS'DAQmx_AIConv_DigFltr_MinPulseWidth'
p51599
S'0x2EDD'
p51600
sS'DAQmxErrorCJCChanNotSpecd'
p51601
S'(-200360)'
p51602
sS'DAQmxErrorTooManyEventsGenerated'
p51603
S'(-200992)'
p51604
sS'DAQmxError2OutputPortCombinationGivenSampTimingType653x'
p51605
S'(-200930)'
p51606
sS'DAQmx_Val_Newtons'
p51607
S'15875'
p51608
sS'DAQmxErrorSyncPulseSrcInvalidForTask'
p51609
S'(-201361)'
p51610
sS'DAQmxErrorSCCInvalidSecondStage'
p51611
S'(-201326)'
p51612
sS'DAQmx_Dev_CO_SupportedOutputTypes'
p51613
S'0x2FD5'
p51614
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_8x32_Matrix'
p51615
S'"1130/1-Wire 8x32 Matrix"'
p51616
sS'DAQmx_AI_DigFltr_Bandpass_CenterFreq'
p51617
S'0x30C3'
p51618
sS'DAQmx_Val_Switch_Topology_2569_50_DPST'
p51619
S'"2569/50-DPST"'
p51620
sS'DAQmxErrorVirtualChanDoesNotExist'
p51621
S'(-200488)'
p51622
sS'DAQmx_Val_SampleClock'
p51623
S'12487'
p51624
sS'DAQmxErrorProcedureNameExpectedInScript'
p51625
S'(-200025)'
p51626
sS'DAQmx_Val_Period'
p51627
S'10256'
p51628
sS'DAQmxErrorTrigBusLineNotAvail'
p51629
S'(-200226)'
p51630
sS'DAQmx_AI_Accel_Sensitivity'
p51631
S'0x0692'
p51632
sS'DAQmx_Dev_AI_VoltageIntExcitDiscreteVals'
p51633
S'0x29C9'
p51634
sS'DAQmx_Dev_AI_ResistanceRngs'
p51635
S'0x2A15'
p51636
sS'DAQmxErrorPrescalerNot1ForInputTerminal'
p51637
S'(-200841)'
p51638
sS'DAQmx_Val_ConstantGroupDelay'
p51639
S'16075'
p51640
sS'DAQmxErrorDuplicateHiddenChanNamesInCfgFile'
p51641
S'(-201082)'
p51642
sS'DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty'
p51643
S'(-200625)'
p51644
sS'DAQmx_Dev_CO_TrigUsage'
p51645
S'0x298B'
p51646
sS'DAQmxErrorMoreThanOneMatchForSpecdDevice'
p51647
S'(-201043)'
p51648
sS'DAQmxErrorLocalChannelSpecdWithNoParentTask'
p51649
S'(-201073)'
p51650
sS'DAQmxErrorRepeatedNumberInPreScaledValues'
p51651
S'(-200598)'
p51652
sS'DAQmxErrorReversePowerProtectionActivated'
p51653
S'(-200617)'
p51654
sS'DAQmx_Val_Switch_Topology_2593_Independent'
p51655
S'"2593/Independent"'
p51656
sS'DAQmx_AI_RemoveFilterDelay'
p51657
S'0x2FBD'
p51658
sS'DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO'
p51659
S'(-200996)'
p51660
sS'DAQmx_DI_LogicFamily'
p51661
S'0x296D'
p51662
sS'DAQmxErrorTrigmanLineNotReservedUnroutable'
p51663
S'(-26004)'
p51664
sS'DAQmxErrorMultScanOpsInOneChassis'
p51665
S'(-200619)'
p51666
sS'DAQmxErrorReferencedDevSimMustMatchTarget'
p51667
S'(-201230)'
p51668
sS'DAQmx_Val_FootPounds'
p51669
S'15884'
p51670
sS'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev'
p51671
S'(-200806)'
p51672
sS'DAQmx_Scale_Map_ScaledMax'
p51673
S'0x1229'
p51674
sS'DAQmxErrorMemMappingIncompatibleWithPhysChansInTask'
p51675
S'(-201130)'
p51676
sS'DAQmxErrorPreScaledMinEqualMax'
p51677
S'(-200602)'
p51678
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_4x64_Matrix'
p51679
S'"1130/1-Wire 4x64 Matrix"'
p51680
sS'DAQmx_PauseTrig_Type'
p51681
S'0x1366'
p51682
sS'DAQmx_Val_USBDAQ'
p51683
S'14646'
p51684
sS'DAQmx_AnlgWin_PauseTrig_Top'
p51685
S'0x1376'
p51686
sS'DAQmx_Val_FiniteSamps'
p51687
S'10178'
p51688
sS'DAQmxErrorAttrCannotBeReset'
p51689
S'(-200236)'
p51690
sS'DAQmxErrorBreakBlockNotAllowedInLoop'
p51691
S'(-201221)'
p51692
sS'DAQmxErrorPXISystemDescriptionParseError'
p51693
S'(-26809)'
p51694
sS'DAQmxErrorPALFeatureDisabled'
p51695
S'(-50265)'
p51696
sS'DAQmx_SyncPulse_MinDelayToStart'
p51697
S'0x223F'
p51698
sS'DAQmxErrorWaitUntilDoneDoesNotIndicateDone'
p51699
S'(-200560)'
p51700
sS'DAQmx_DelayFromSampClk_Delay'
p51701
S'0x1317'
p51702
sS'DAQmxErrorZeroForwardPolyScaleCoeffs'
p51703
S'(-200407)'
p51704
sS'DAQmx_Val_LossyLSBRemoval'
p51705
S'12556'
p51706
sS'DAQmxErrorInvalidAIGainCalConst'
p51707
S'(-200718)'
p51708
sS'DAQmx_CI_AngEncoder_PulsesPerRev'
p51709
S'0x0875'
p51710
sS'DAQmx_AI_FilterDelay'
p51711
S'0x2FED'
p51712
sS'DAQmx_Val_Switch_Topology_2598_Dual_Transfer'
p51713
S'"2598/Dual Transfer"'
p51714
sS'DAQmxWarningChildNotFound'
p51715
S'(26654)'
p51716
sS'DAQmx_Val_Switch_Topology_2533_1_Wire_4x64_Matrix'
p51717
S'"2533/1-Wire 4x64 Matrix"'
p51718
sS'DAQmx_Val_AOSeries'
p51719
S'14647'
p51720
sS'DAQmxErrorChanCalTableScaledValsNotSpecd'
p51721
S'(-200937)'
p51722
sS'DAQmx_RefClk_Src'
p51723
S'0x1316'
p51724
sS'DAQmx_Val_Temp_BuiltInSensor'
p51725
S'10311'
p51726
sS'DAQmx_Val_Diff'
p51727
S'10106'
p51728
sS'DAQmx_ArmStartTrig_Type'
p51729
S'0x1414'
p51730
sS'DAQmxErrorSCXIModuleIncorrect'
p51731
S'(-200107)'
p51732
sS'DAQmxErrorCannotWriteToFiniteCOTask'
p51733
S'(-201291)'
p51734
sS'DAQmx_Val_AnlgLvl'
p51735
S'10101'
p51736
sS'DAQmx_Val_OnDemand'
p51737
S'10390'
p51738
sS'DAQmx_AI_SampAndHold_Enable'
p51739
S'0x181A'
p51740
sS'DAQmx_PersistedChan_Author'
p51741
S'0x22D0'
p51742
sS'DAQmxErrorUnsupportedUnicodeByteOrderMarker'
p51743
S'(-201017)'
p51744
sS'DAQmxWarningRateViolatesMinADCRate'
p51745
S'(200035)'
p51746
sS'DAQmx_Exported_StartTrig_OutputTerm'
p51747
S'0x0584'
p51748
sS'DAQmxErrorInvalidRelayName'
p51749
S'(-200202)'
p51750
sS'DAQmx_CI_Pulse_Time_DigFltr_TimebaseRate'
p51751
S'0x2F11'
p51752
sS'DAQmxErrorInvalidDigDataWrite'
p51753
S'(-200562)'
p51754
sS'DAQmx_AI_Bridge_ShuntCal_ShuntCalASrc'
p51755
S'0x30CA'
p51756
sS'DAQmxErrorCannotPerformOpWhenTaskNotRunning'
p51757
S'(-200475)'
p51758
sS'DAQmx_SyncPulse_ResetTime'
p51759
S'0x2F7C'
p51760
sS'DAQmx_Read_CommonModeRangeErrorChans'
p51761
S'0x2A99'
p51762
sS'DAQmxErrorChangeDetectionChanNotTristated'
p51763
S'(-200925)'
p51764
sS'DAQmxErrorVirtualChanNameUsed'
p51765
S'(-200171)'
p51766
sS'DAQmx_Val_Switch_Topology_1195_Quad_4x1_Mux'
p51767
S'"1195/Quad 4x1 Mux"'
p51768
sS'DAQmxErrorFailedToEnableHighSpeedInputClock'
p51769
S'(-200627)'
p51770
sS'DAQmx_AO_IdleOutputBehavior'
p51771
S'0x2240'
p51772
sS'DAQmx_Val_Volts'
p51773
S'10348'
p51774
sS'DAQmx_Dev_PCI_BusNum'
p51775
S'0x2327'
p51776
sS'DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit'
p51777
S'(-200977)'
p51778
sS'DAQmx_WatchdogExpirTrig_Type'
p51779
S'0x21A3'
p51780
sS'DAQmxErrorMDNSServiceInstanceAlreadyInUse'
p51781
S'(-201371)'
p51782
sS'DAQmxErrorRoutingDestTermPXIStarInSlot2'
p51783
S'(-200701)'
p51784
sS'DAQmxErrorDevsWithoutCommonSyncStrategy'
p51785
S'(-201425)'
p51786
sS'DAQmxErrorPALBadReadMode'
p51787
S'(-50009)'
p51788
sS'DAQmxErrorNonbufferedOrNoChannels'
p51789
S'(-201395)'
p51790
sS'DAQmx_Read_OvercurrentChans'
p51791
S'0x29E7'
p51792
sS'DAQmxErrorRouteSrcAndDestSame'
p51793
S'(-200326)'
p51794
sS'DAQmxErrorInvalidCalVoltageForGivenGain'
p51795
S'(-200750)'
p51796
sS'DAQmxErrorExtCalAdjustExtRefVoltageFailed'
p51797
S'(-200546)'
p51798
sS'DAQmx_AI_EnhancedAliasRejectionEnable'
p51799
S'0x2294'
p51800
sS'DAQmx_Scale_Map_PreScaledMin'
p51801
S'0x1232'
p51802
sS'DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2'
p51803
S'(-200852)'
p51804
sS'DAQmxErrorDeviceNameContainsNonprintableCharacters_Routing'
p51805
S'(-88719)'
p51806
sS'DAQmx_Val_Switch_Topology_1128_2_Wire_32x1_Mux'
p51807
S'"1128/2-Wire 32x1 Mux"'
p51808
sS'DAQmx_Val_5Wire'
p51809
g49815
sS'DAQmx_AI_DigFltr_Lowpass_CutoffFreq'
p51810
S'0x30C1'
p51811
sS'DAQmx_AI_RTD_R0'
p51812
S'0x1030'
p51813
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Quad_64x1_Mux'
p51814
S'"1130/1-Wire Quad 64x1 Mux"'
p51815
sS'DAQmxErrorInternalTimebaseSourceDivisorCombo'
p51816
S'(-200135)'
p51817
sS'DAQmxErrorPALMessageUnderflow'
p51818
S'(-50651)'
p51819
sS'DAQmxErrorPALBusError'
p51820
S'(-50413)'
p51821
sS'DAQmx_Val_AandB'
p51822
S'12515'
p51823
sS'DAQmxErrorServiceLocatorNotAvailable_Routing'
p51824
S'(-88907)'
p51825
sS'DAQmxErrorInvalidCharInPattern'
p51826
S'(-200496)'
p51827
sS'DAQmxErrorWaveformInScriptNotInMem'
p51828
S'(-200028)'
p51829
sS'DAQmx_Val_8MHzTimebase'
p51830
S'16023'
p51831
sS'DAQmxErrorDigitalLineUpdateTooFastForDevice'
p51832
S'(-201278)'
p51833
sS'DAQmx_AO_DAC_Ref_Val'
p51834
S'0x1832'
p51835
sS'DAQmxErrorSCCCabledDevMustNotBeSimWhenSCCCarrierIsNotSim'
p51836
S'(-201157)'
p51837
sS'DAQmx_CI_CountEdges_CountDir_TermCfg'
p51838
S'0x309D'
p51839
sS'DAQmxErrorInvalidCharInDigPatternString'
p51840
S'(-200901)'
p51841
sS'DAQmx_AI_RosetteStrainGage_StrainChans'
p51842
S'0x2FFB'
p51843
sS'DAQmxErrorUnsupportedSimulatedModuleForSimulatedChassis'
p51844
S'(-201384)'
p51845
sS'DAQmx_Val_UserProvided'
p51846
S'10167'
p51847
sS'DAQmxErrorExpectedTerminatorInList'
p51848
S'(-200063)'
p51849
sS'DAQmxErrorInvalidNumberOfCalAdjustmentPoints'
p51850
S'(-201368)'
p51851
sS'DAQmxErrorAlreadyInitialized'
p51852
S'(-26850)'
p51853
sS'DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc'
p51854
S'0x2278'
p51855
sS'DAQmx_Watchdog_HasExpired'
p51856
S'0x21A8'
p51857
sS'DAQmxErrorBracketPairingMismatchInList'
p51858
S'(-200104)'
p51859
sS'DAQmx_DO_LineStates_PausedState'
p51860
S'0x2967'
p51861
sS'DAQmx_CI_TwoEdgeSep_SecondLogicLvlBehavior'
p51862
S'0x30AE'
p51863
sS'DAQmx_Val_CountDown'
p51864
S'10124'
p51865
sS'DAQmx_Val_Falling'
p51866
S'10171'
p51867
sS'DAQmxErrorChangeDetectionChanNotInTask'
p51868
S'(-200926)'
p51869
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing'
p51870
S'(-89147)'
p51871
sS'DAQmxErrorLabVIEWInvalidTaskOrChans'
p51872
S'(-200428)'
p51873
sS'DAQmx_Hshk_DelayAfterXfer'
p51874
S'0x22C2'
p51875
sS'DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort'
p51876
S'(-200665)'
p51877
sS'DAQmx_PersistedChan_AllowInteractiveEditing'
p51878
S'0x22D1'
p51879
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_8x64_Matrix'
p51880
S'"2532/1-Wire 8x64 Matrix"'
p51881
sS'DAQmxErrorReferenceResistanceInvalid'
p51882
S'(-200155)'
p51883
sS'DAQmx_Val_Save_AllowInteractiveDeletion'
p51884
S'(1<<2)'
p51885
sS'DAQmx_DigEdge_StartTrig_DigFltr_Enable'
p51886
S'0x2223'
p51887
sS'DAQmxErrorInvalidCalExcitFrequency'
p51888
S'(-201183)'
p51889
sS'DAQmx_Val_Switch_Topology_2510_Independent'
p51890
S'"2510/Independent"'
p51891
sS'DAQmx_CO_Pulse_LowTicks'
p51892
S'0x1171'
p51893
sS'DAQmxErrorSimDevConflictWithRealDev'
p51894
S'(-201150)'
p51895
sS'DAQmx_RefTrig_Type'
p51896
S'0x1419'
p51897
sS'DAQmx_AI_RosetteStrainGage_RosetteType'
p51898
S'0x2FFE'
p51899
sS'DAQmxErrorMustSpecifyExpirationStateForAllLinesInRange'
p51900
S'(-201481)'
p51901
sS'DAQmx_Val_PullDown'
p51902
S'15951'
p51903
sS'DAQmx_Val_OnbrdMemMoreThanHalfFull'
p51904
S'10237'
p51905
sS'DAQmxWarningPowerUpInfoCRCNotCorrect'
p51906
S'(200055)'
p51907
sS'DAQmxErrorSCCCarrierSpecdIsMissing'
p51908
S'(-201050)'
p51909
sS'DAQmx_AO_OutputImpedance'
p51910
S'0x1490'
p51911
sS'DAQmx_AO_FilterDelay'
p51912
S'0x3075'
p51913
sS'DAQmx_CI_LinEncoder_DistPerPulse'
p51914
S'0x0911'
p51915
sS'DAQmx_Val_Switch_Topology_2565_16_SPST'
p51916
S'"2565/16-SPST"'
p51917
sS'DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate'
p51918
S'0x2279'
p51919
sS'DAQmx_Val_PrincipalStrain1'
p51920
S'15971'
p51921
sS'DAQmxErrorNoTEDSTerminalBlock'
p51922
S'(-200743)'
p51923
sS'DAQmx_Val_PrincipalStrain2'
p51924
S'15972'
p51925
sS'DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList'
p51926
S'(-200204)'
p51927
sS'DAQmx_Val_WaitForHandshakeTriggerDeassert'
p51928
S'12551'
p51929
sS'DAQmx_PersistedChan_AllowInteractiveDeletion'
p51930
S'0x22D2'
p51931
sS'DAQmxErrorFirmwareIsCorrupt'
p51932
S'(-201166)'
p51933
sS'DAQmxErrorResourceAlreadyReserved'
p51934
S'(-200022)'
p51935
sS'DAQmx_Scale_Poly_ForwardCoeff'
p51936
S'0x1234'
p51937
sS'DAQmx_AI_Bridge_InitialRatio'
p51938
S'0x2F86'
p51939
sS'DAQmx_StartTrig_Delay'
p51940
S'0x1856'
p51941
sS'DAQmx_AnlgWin_RefTrig_DigFltr_MinPulseWidth'
p51942
S'0x2EEC'
p51943
sS'DAQmxErrorMissingRangeForCalibration'
p51944
S'(-201495)'
p51945
sS'DAQmx_AO_Resolution'
p51946
S'0x182C'
p51947
sS'DAQmx_Val_Amps'
p51948
S'10342'
p51949
sS'DAQmx_Write_OverloadedChans'
p51950
S'0x3085'
p51951
sS'DAQmx_Val_DoNotWrite'
p51952
S'12540'
p51953
sS'DAQmxErrorOddTotalBufferSizeToWrite'
p51954
S'(-200693)'
p51955
sS'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate'
p51956
S'0x222B'
p51957
sS'DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist'
p51958
S'(-200637)'
p51959
sS'DAQmx_Val_B'
p51960
S'12514'
p51961
sS'DAQmx_Val_A'
p51962
S'12513'
p51963
sS'DAQmx_AI_Bridge_ShuntCal_GainAdjust'
p51964
S'0x193F'
p51965
sS'DAQmx_Val_MillivoltsPerMillimeterPerSecond'
p51966
S'15963'
p51967
sS'DAQmxErrorInvalidAOGainCalConst'
p51968
S'(-200720)'
p51969
sS'DAQmxErrorNoCDAQSyncBetweenPhysAndSimulatedDevs'
p51970
S'(-201455)'
p51971
sS'DAQmx_Val_High'
p51972
S'10192'
p51973
sS'DAQmxErrorWriteWhenTaskNotRunningCOTicks'
p51974
S'(-200876)'
p51975
sS'DAQmx_CI_DutyCycle_DigFltr_TimebaseSrc'
p51976
S'0x3090'
p51977
sS'DAQmxErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint'
p51978
S'(-201021)'
p51979
sS'DAQmx_AO_Voltage_CurrentLimit'
p51980
S'0x2A1D'
p51981
sS'DAQmx_AI_Excit_UseMultiplexed'
p51982
S'0x2180'
p51983
sS'DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType'
p51984
S'(-200858)'
p51985
sS'DAQmx_Val_g'
p51986
S'10186'
p51987
sS'DAQmxWarningPXIDevTempExceedsMaxOpTemp'
p51988
S'(200030)'
p51989
sS'DAQmxErrorInvalidSubsetLengthInBreakBlock'
p51990
S'(-201213)'
p51991
sS'DAQmx_AI_Force_IEPESensor_SensitivityUnits'
p51992
S'0x2F82'
p51993
sS'DAQmx_Val_StopTaskAndError'
p51994
S'15862'
p51995
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_4x128_Matrix'
p51996
S'"2532/1-Wire 4x128 Matrix"'
p51997
sS'DAQmxErrorLeadingSpaceInString'
p51998
S'(-200553)'
p51999
sS'DAQmxErrorInvalidRecordNum'
p52000
S'(-200410)'
p52001
sS'DAQmx_Interlocked_HshkTrig_AssertedLvl'
p52002
S'0x22B9'
p52003
sS'DAQmx_AI_ChanCal_OperatorName'
p52004
S'0x22A3'
p52005
sS'DAQmxErrorUnitsNotFromCustomScale'
p52006
S'(-200447)'
p52007
sS'DAQmx_Val_Task_Stop'
p52008
g48971
sS'DAQmx_Val_DigPattern'
p52009
S'10398'
p52010
sS'DAQmxErrorIncompleteGainAndCouplingCalAdjustment'
p52011
S'(-201391)'
p52012
sS'DAQmxErrorTEDSLinearMappingSlopeZero'
p52013
S'(-200764)'
p52014
sS'DAQmxErrorCtrExportSignalNotPossible'
p52015
S'(-200359)'
p52016
sS'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo'
p52017
S'(-200136)'
p52018
sS'DAQmxErrorTdmsNotFound'
p52019
S'(-201310)'
p52020
sS'DAQmxErrorAttrCannotBeSet'
p52021
S'(-200231)'
p52022
sS'DAQmx_Val_InchesPerSecondSquared'
p52023
S'12471'
p52024
sS'DAQmx_SampClk_DigFltr_Enable'
p52025
S'0x221E'
p52026
sS'DAQmxErrorSubsetOutsideWaveformInScript'
p52027
S'(-200030)'
p52028
sS'DAQmx_Val_BreakBeforeMake'
p52029
S'10110'
p52030
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc'
p52031
S'0x222F'
p52032
sS'DAQmx_Val_SCXIModule'
p52033
S'14660'
p52034
sS'DAQmx_Val_NRSE'
p52035
S'10078'
p52036
sS'DAQmx_DI_DigFltr_TimebaseSrc'
p52037
S'0x2ED4'
p52038
sS'DAQmx_CI_Encoder_BInputTermCfg'
p52039
S'0x30A5'
p52040
sS'DAQmxErrorNoPolyScaleCoeffs'
p52041
S'(-200404)'
p52042
sS'DAQmx_ExtCal_RecommendedInterval'
p52043
S'0x1868'
p52044
sS'DAQmx_AI_DigFltr_Notch_Width'
p52045
S'0x30C6'
p52046
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_Dual_4x16_Matrix'
p52047
S'"2529/2-Wire Dual 4x16 Matrix"'
p52048
sS'DAQmx_DI_NumLines'
p52049
S'0x2178'
p52050
sS'DAQmxErrorChansAlreadyConnected'
p52051
S'(-200184)'
p52052
sS'DAQmxErrorAutoConfigBetweenMultipleDeviceStatesInvalid'
p52053
S'(-201466)'
p52054
sS'DAQmxErrorOutputBoardClkDCMBecameUnlocked'
p52055
S'(-200388)'
p52056
sS'DAQmxErrorDelayFromStartTrigTooLong'
p52057
S'(-200334)'
p52058
sS'DAQmx_CI_GPS_SyncSrc'
p52059
S'0x1093'
p52060
sS'DAQmxErrorTrigAIMinAIMax'
p52061
S'(-200422)'
p52062
sS'DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc'
p52063
S'0x2273'
p52064
sS'DAQmx_PhysicalChan_TEDS_MfgID'
p52065
S'0x21DA'
p52066
sS'DAQmx_Buf_Input_BufSize'
p52067
S'0x186C'
p52068
sS'DAQmx_Val_ContSamps'
p52069
S'10123'
p52070
sS'DAQmx_Val_AHighBLow'
p52071
S'10041'
p52072
sS'DAQmx_Val_VoltsPerMillimeter'
p52073
S'14839'
p52074
sS'DAQmxErrorNonBufferedAndDataXferInterrupts'
p52075
S'(-200845)'
p52076
sS'DAQmx_CI_Freq_Term'
p52077
S'0x18A2'
p52078
sS'DAQmx_CI_Pulse_Freq_TermCfg'
p52079
S'0x30B1'
p52080
sS'DAQmx_CI_CountEdges_Dir'
p52081
S'0x0696'
p52082
sS'DAQmx_AI_DigFltr_Enable'
p52083
S'0x30BD'
p52084
sS'DAQmx_Dev_DO_Lines'
p52085
S'0x2322'
p52086
sS'DAQmxErrorTooManyChans'
p52087
S'(-200168)'
p52088
sS'DAQmxErrorMultiRecWithRIS'
p52089
S'(-200416)'
p52090
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInSystemTimingSlot_Routing'
p52091
S'(-89157)'
p52092
sS'DAQmxWarningFileExists'
p52093
S'(26109)'
p52094
sS'DAQmx_Val_Handshake'
p52095
S'10389'
p52096
sS'DAQmxErrorPowerupTristateNotSpecdForEntirePort'
p52097
S'(-200653)'
p52098
sS'DAQmx_AI_Bridge_TwoPointLin_Second_ElectricalVal'
p52099
S'0x2F8C'
p52100
sS'DAQmx_SampClkTimebase_Term'
p52101
S'0x2F1C'
p52102
sS'DAQmxErrorIncorrectChannelForOffsetAdjustment'
p52103
S'(-201431)'
p52104
sS'DAQmx_Val_Switch_Topology_2591_4x1_Mux'
p52105
S'"2591/4x1 Mux"'
p52106
sS'DAQmxErrorFirmwareUpdateInvalidID'
p52107
S'(-201488)'
p52108
sS'DAQmx_Val_FullBridge'
p52109
S'10182'
p52110
sS'DAQmxErrorMoreThanOneActiveChannelSpecified'
p52111
S'(-200097)'
p52112
sS'DAQmx_Val_Switch_Topology_2559_Terminated_2_SPDT'
p52113
S'"2559/Terminated 2-SPDT"'
p52114
sS'DAQmx_PhysicalChan_AI_TermCfgs'
p52115
S'0x2342'
p52116
sS'DAQmxErrorInvalidWirelessCountryCode'
p52117
S'(-201257)'
p52118
sS'DAQmx_Val_Low'
p52119
S'10214'
p52120
sS'DAQmxErrorChanDuplicatedInPath'
p52121
S'(-200183)'
p52122
sS'DAQmxErrorInvalidCharInString'
p52123
S'(-200552)'
p52124
sS'DAQmxErrorGenerateOrFiniteWaitExpectedBeforeBreakBlock'
p52125
S'(-201222)'
p52126
sS'DAQmxErrorChannelNameNotSpecifiedInList'
p52127
S'(-200056)'
p52128
sS'DAQmx_CO_Pulse_Time_InitialDelay'
p52129
S'0x18BC'
p52130
sS'DAQmx_DI_MemMapEnable'
p52131
S'0x296A'
p52132
sS'DAQmx_AI_DigFltr_Highpass_CutoffFreq'
p52133
S'0x30C2'
p52134
sS'DAQmxErrorInvalidWaitDurationInBreakBlock'
p52135
S'(-201214)'
p52136
sS'DAQmx_Val_Switch_Topology_2594_4x1_Mux'
p52137
S'"2594/4x1 Mux"'
p52138
sS'DAQmx_AO_FuncGen_Square_DutyCycle'
p52139
S'0x2A1C'
p52140
sS'DAQmx_Val_Switch_Topology_2570_40_SPDT'
p52141
S'"2570/40-SPDT"'
p52142
sS'DAQmx_Write_DevsWithInsertedOrRemovedAccessories'
p52143
S'0x3054'
p52144
sS'DAQmx_AI_LVDT_Sensitivity'
p52145
S'0x0939'
p52146
sS'DAQmxErrorSensorValTooHigh'
p52147
S'(-200535)'
p52148
sS'DAQmxWarningPALBadWindowType'
p52149
S'(50016)'
p52150
sS'DAQmx_DigPattern_StartTrig_Src'
p52151
S'0x1410'
p52152
sS'DAQmxWarningPxiResmanSystemDescriptionParseError'
p52153
S'(26401)'
p52154
sS'DAQmxErrorAttrNotSupportedOnAccessory'
p52155
S'(-201421)'
p52156
sS'DAQmxErrorInvalidObject'
p52157
S'(-201233)'
p52158
sS'DAQmxErrorPALComponentImageCorrupt'
p52159
S'(-50257)'
p52160
sS'DAQmxErrorTooManyPhysicalChansInList'
p52161
S'(-200071)'
p52162
sS'DAQmxErrorPALTransferAborted'
p52163
S'(-50405)'
p52164
sS'DAQmx_CI_PulseWidth_StartingEdge'
p52165
S'0x0825'
p52166
sS'DAQmx_AnlgWin_StartTrig_DigSync_Enable'
p52167
S'0x2F03'
p52168
sS'DAQmx_Val_Loopback0'
p52169
g48831
sS'DAQmxErrorTooManyPretrigPlusMinPostTrigSamps'
p52170
S'(-200213)'
p52171
sS'DAQmx_CI_Pulse_Ticks_DigFltr_MinPulseWidth'
p52172
S'0x2F17'
p52173
sS'DAQmxErrorSampClkRateTooLowForDivDown'
p52174
S'(-200272)'
p52175
sS'DAQmx_Val_Sleep'
p52176
S'12547'
p52177
sS'DAQmxErrorFailedToAcquireCalData'
p52178
S'(-200697)'
p52179
sS'DAQmxErrorSelfCalFailedContactTechSupport'
p52180
S'(-201386)'
p52181
sS'DAQmx_Dev_BusType'
p52182
S'0x2326'
p52183
sS'DAQmxErrorDigInputOverrun'
p52184
S'(-200715)'
p52185
sS'DAQmxErrorHystTrigLevelAIMin'
p52186
S'(-200421)'
p52187
sS'DAQmx_AIConv_DigFltr_TimebaseRate'
p52188
S'0x2EDF'
p52189
sS'_NI_int32_DEFINED_'
p52190
g48682
sS'DAQmxErrorInconsistentUnitsSpecified'
p52191
S'(-200212)'
p52192
sS'DAQmxErrorSampClkRateDoesntMatchSampClkSrc'
p52193
S'(-201002)'
p52194
sS'DAQmx_Val_Inches'
p52195
S'10379'
p52196
sS'DAQmxErrorSoftwareTooNewForExtCalibrationData'
p52197
S'(-201145)'
p52198
sS'DAQmxErrorCannotUpdatePulseTrainWithAutoIncrementEnabled'
p52199
S'(-201330)'
p52200
sS'DAQmxSuccess'
p52201
S'(0)'
p52202
sS'DAQmxErrorInvalidRoutingSourceTerminalName'
p52203
S'(-200040)'
p52204
sS'DAQmx_Exported_20MHzTimebase_OutputTerm'
p52205
S'0x1657'
p52206
sS'DAQmx_Val_GPS_Timestamp'
p52207
S'10362'
p52208
sS'DAQmx_AI_ForceReadFromChan'
p52209
S'0x18F8'
p52210
sS'DAQmxErrorGenStoppedToPreventRegenOfOldSamples'
p52211
S'(-200290)'
p52212
sS'DAQmxWarningRecursiveCall'
p52213
S'(26803)'
p52214
sS'DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning'
p52215
S'(-200832)'
p52216
sS'DAQmx_Val_mVoltsPerMicron'
p52217
S'14840'
p52218
sS'DAQmxErrorExtMasterTimebaseRateNotSpecified'
p52219
S'(-200304)'
p52220
sS'DAQmxErrorAccessorySettingNotApplicable'
p52221
S'(-201048)'
p52222
sS'DAQmxErrorCardTopologyError'
p52223
S'(-201356)'
p52224
sS'DAQmx_Val_FixedLowFreq'
p52225
S'14710'
p52226
sS'DAQmx_CI_Min'
p52227
S'0x189D'
p52228
sS'DAQmx_AnlgEdge_RefTrig_Coupling'
p52229
S'0x2235'
p52230
sS'DAQmxErrorPxiResmanSystemDescriptionSpecLimitation'
p52231
S'(-26403)'
p52232
sS'DAQmxErrorInvalidCalExcitVoltage'
p52233
S'(-201182)'
p52234
sS'DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode'
p52235
S'(-200737)'
p52236
sS'DAQmx_AnlgEdge_RefTrig_Hyst'
p52237
S'0x1421'
p52238
sS'DAQmxErrorInvalidCDAQSyncTimeoutValue'
p52239
S'(-201458)'
p52240
sS'DAQmxErrorEventOutputTermIncludesTrigSrc'
p52241
S'(-200952)'
p52242
sS'DAQmxErrorInvalidSubsetLengthInScript'
p52243
S'(-200032)'
p52244
sS'DAQmxErrorDeviceRebootedFromWDTTimeout'
p52245
S'(-201438)'
p52246
sS'DAQmxErrorNoDMAChansAvailable'
p52247
S'(-200251)'
p52248
sS'DAQmxErrorExcitationNotSupportedWhenTermCfgDiff'
p52249
S'(-200817)'
p52250
sS'DAQmxWarningUnspecifiedError'
p52251
S'(26801)'
p52252
sS'DAQmx_AI_RosetteStrainGage_RosetteMeasType'
p52253
S'0x2FFD'
p52254
sS'DAQmx_CI_CountEdges_CountReset_ActiveEdge'
p52255
S'0x2FB2'
p52256
sS'DAQmxErrorAttrNotSupported'
p52257
S'(-200197)'
p52258
sS'DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold'
p52259
S'(-200944)'
p52260
sS'DAQmx_Val_FallingSlope'
p52261
S'10171'
p52262
sS'DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset'
p52263
S'(-200512)'
p52264
sS'DAQmxErrorCouldNotReserveRequestedTrigLine_Routing'
p52265
S'(-89126)'
p52266
sS'DAQmxErrorTristateConflict'
p52267
S'(-201223)'
p52268
sS'DAQmxErrorDeviceNameContainsSpacesOrPunctuation_Routing'
p52269
S'(-88720)'
p52270
sS'DAQmx_Write_OvertemperatureChans'
p52271
S'0x3083'
p52272
sS'DAQmxErrorPxiResmanChassisBridgeNotFound'
p52273
S'(-26201)'
p52274
sS'DAQmx_Val_ResetTimer'
p52275
g48831
sS'DAQmxErrorExtSampClkRateTooHighForBackplane'
p52276
S'(-200274)'
p52277
sS'DAQmx_Val_Switch_Topology_2593_16x1_Mux'
p52278
S'"2593/16x1 Mux"'
p52279
sS'DAQmxErrorNoChangeDetectOnNonInputDigLineForDev'
p52280
S'(-200798)'
p52281
sS'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA'
p52282
S'(-200877)'
p52283
sS'DAQmx_DI_Tristate'
p52284
S'0x1890'
p52285
sS'DAQmxErrorPALDiskFull'
p52286
S'(-50203)'
p52287
sS'DAQmx_DI_UsbXferReqSize'
p52288
S'0x2A90'
p52289
sS'DAQmxWarningGenerationDisabled'
p52290
S'(26851)'
p52291
sS'DAQmxErrorTaskReferencesMissingLocalChannel'
p52292
S'(-201072)'
p52293
sS'DAQmxErrorClearTriggerNotAllowedInBreakBlock'
p52294
S'(-201220)'
p52295
sS'DAQmx_Exported_StartTrig_Pulse_Polarity'
p52296
S'0x0585'
p52297
sS'DAQmx_AO_ResolutionUnits'
p52298
S'0x182B'
p52299
sS'DAQmxErrorInvalidNumberSamplesToRead'
p52300
S'(-200096)'
p52301
sS'DAQmxErrorOutputBufferEmpty'
p52302
S'(-200462)'
p52303
sS'DAQmxWarningPxiResmanMxsPxiSystemNotFound'
p52304
S'(26600)'
p52305
sS'DAQmxErrorInvalidHWProductNumber'
p52306
S'(-201058)'
p52307
sS'DAQmx_Val_Butterworth'
p52308
S'16076'
p52309
sS'DAQmx_SampClk_UnderflowBehavior'
p52310
S'0x2961'
p52311
sS'DAQmxErrorSampClkTimebaseSrcInvalid'
p52312
S'(-201088)'
p52313
sS'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask'
p52314
S'(-200775)'
p52315
sS'DAQmxErrorOutputCantStartChangedBufferSize'
p52316
S'(-200567)'
p52317
sS'DAQmxErrorPropertyConflictsWithScale'
p52318
S'(-201061)'
p52319
sS'DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain'
p52320
S'(-200511)'
p52321
sS'DAQmxErrorRosetteMeasurementsNotSpecified'
p52322
S'(-201448)'
p52323
sS'DAQmxErrorOnlyPEMOrDERCertiticatesAccepted'
p52324
S'(-201276)'
p52325
sS'DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning'
p52326
S'(-200986)'
p52327
sS'DAQmxWarningPALComponentInitializationFault'
p52328
S'(50258)'
p52329
sS'DAQmxErrorNonbufferedReadMoreThanSampsPerChan'
p52330
S'(-200655)'
p52331
sS'DAQmx_Val_Action_Commit'
p52332
g48831
sS'DAQmxErrorInvalidExtTrigImpedance'
p52333
S'(-200426)'
p52334
sS'DAQmxErrorResourcesInUseForRoute_Routing'
p52335
S'(-89137)'
p52336
sS'DAQmxErrorDifferentDITristateValsForChansInTask'
p52337
S'(-200724)'
p52338
sS'DAQmx_Val_Pascals'
p52339
S'10081'
p52340
sS'DAQmxWarningTrigmanInvalidClient'
p52341
S'(26009)'
p52342
sS'DAQmxErrorStartFailedDueToWriteFailure'
p52343
S'(-200946)'
p52344
sS'DAQmxErrorTooManyChansForAnalogRefTrig'
p52345
S'(-200264)'
p52346
sS'DAQmx_CI_DupCountPrevent'
p52347
S'0x21AC'
p52348
sS'DAQmxErrorInvalidWaveformLengthInBreakBlock'
p52349
S'(-201212)'
p52350
sS'DAQmxWarningAISampRateTooLow'
p52351
S'(200017)'
p52352
sS'DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable'
p52353
S'0x2218'
p52354
sS'DAQmx_Read_SleepTime'
p52355
S'0x22B0'
p52356
sS'DAQmxErrorDigOutputOverrun'
p52357
S'(-200716)'
p52358
sS'DAQmx_RealTime_ConvLateErrorsToWarnings'
p52359
S'0x22EE'
p52360
sS'DAQmxErrorCantSaveTaskWithoutReplace'
p52361
S'(-200484)'
p52362
sS'DAQmxWarningPXIe5665_5606_IncorrectlyConfigured'
p52363
S'(200073)'
p52364
sS'DAQmx_Val_DutyCycle'
p52365
S'16070'
p52366
sS'DAQmx_Val_RSE'
p52367
S'10083'
p52368
sS'DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback'
p52369
S'(-200968)'
p52370
sS'DAQmx_DigPattern_PauseTrig_When'
p52371
S'0x2170'
p52372
sS'DAQmxErrorCannotHandshakeWhenTristateIsFalse'
p52373
S'(-200729)'
p52374
sS'DAQmx_Dev_ProductNum'
p52375
S'0x231D'
p52376
sS'DAQmxErrorFunctionNotSupportedForDeviceTasks'
p52377
S'(-200092)'
p52378
sS'DAQmxErrorTrigWhenOnDemandSampTiming'
p52379
S'(-200262)'
p52380
sS'DAQmxWarningTrigmanUnknownError'
p52381
S'(26000)'
p52382
sS'DAQmxErrorRatiometricDevicesMustUseExcitationForScaling'
p52383
S'(-201127)'
p52384
sS'DAQmxErrorPALBadAddressSpace'
p52385
S'(-50017)'
p52386
sS'DAQmx_Exported_AIConvClk_OutputTerm'
p52387
S'0x1687'
p52388
sS'DAQmx_Val_PCCard'
p52389
S'12585'
p52390
sS'DAQmxErrorDACRngHighNotEqualRefVal'
p52391
S'(-200448)'
p52392
sS'DAQmxErrorCounterSyncAndRetriggered'
p52393
S'(-201348)'
p52394
sS'DAQmx_DigEdge_ArmStartTrig_DigSync_Enable'
p52395
S'0x2231'
p52396
sS'DAQmx_Val_Switch_Topology_1130_Independent'
p52397
S'"1130/Independent"'
p52398
sS'DAQmx_Val_ALowBLow'
p52399
S'10043'
p52400
sS'__CFUNC'
p52401
S'__stdcall'
p52402
sS'DAQmxErrorPLLNotLocked'
p52403
S'(-201015)'
p52404
sS'DAQmxErrorFirmwareRequiresUpgrade'
p52405
S'(-201340)'
p52406
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_4x16_Matrix'
p52407
S'"2530/2-Wire 4x16 Matrix"'
p52408
sS'DAQmx_CO_UsbXferReqSize'
p52409
S'0x2A93'
p52410
sS'DAQmx_CI_OutputState'
p52411
S'0x0149'
p52412
sS'DAQmx_Val_Bit_TermCfg_RSE'
p52413
S'(1<<0)'
p52414
sS'DAQmxErrorRoutingHardwareBusy'
p52415
S'(-200043)'
p52416
sS'DAQmx_Val_ChangeDetectionEvent'
p52417
S'12511'
p52418
sS'DAQmxErrorInvalidTimingSrcDueToSampTimingType'
p52419
S'(-200785)'
p52420
sS'DAQmx_Val_Switch_Topology_2727_Independent'
p52421
S'"2727/Independent"'
p52422
sS'DAQmx_AO_Current_Units'
p52423
S'0x1109'
p52424
sS'DAQmxErrorInvalidDigitalModulationUserDefinedWaveform'
p52425
S'(-201110)'
p52426
sS'DAQmxErrorAccessoryEEPROMIsCorrupt'
p52427
S'(-201376)'
p52428
sS'DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize'
p52429
S'(-200895)'
p52430
sS'DAQmxErrorDuplicateChanNameInCfgFile'
p52431
S'(-201081)'
p52432
sS'DAQmx_CI_DutyCycle_DigFltr_Enable'
p52433
S'0x308E'
p52434
sS'DAQmx_Val_Switch_Topology_2796_Dual_6x1_Mux'
p52435
S'"2796/Dual 6x1 Mux"'
p52436
sS'DAQmx_AI_ProbeAtten'
p52437
S'0x2A88'
p52438
sS'DAQmx_AO_UsbXferReqSize'
p52439
S'0x2A8F'
p52440
sS'DAQmx_Val_mVoltsPerVoltPerDegree'
p52441
S'12507'
p52442
sS'DAQmxErrorMeasCalAdjustMainPathPreAmpGain'
p52443
S'(-200503)'
p52444
sS'DAQmx_AI_Excit_Src'
p52445
S'0x17F4'
p52446
sS'DAQmx_Read_ChannelsToRead'
p52447
S'0x1823'
p52448
sS'DAQmx_AI_StrainGage_GageFactor'
p52449
S'0x0994'
p52450
sS'DAQmx_Val_WriteToEEPROM'
p52451
S'12538'
p52452
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate'
p52453
S'0x21F4'
p52454
sS'DAQmxErrorCOOverrun'
p52455
S'(-201318)'
p52456
sS'DAQmxErrorCDAQMasterNotFoundForChanExpansion'
p52457
S'(-201483)'
p52458
sS'DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges'
p52459
S'(-200357)'
p52460
sS'DAQmxErrorRoutingSrcTermPXIStarInSystemTimingSlot_Routing'
p52461
S'(-89151)'
p52462
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate'
p52463
S'0x2230'
p52464
sS'DAQmxErrorInvalidTerm_Routing'
p52465
S'(-89129)'
p52466
sS'DAQmxErrorCalAdjustRefValOutOfRange'
p52467
S'(-201501)'
p52468
sS'DAQmx_AI_AveragingWinSize'
p52469
S'0x2FEE'
p52470
sS'DAQmxErrorCantSetPowerupStateOnDigInChan'
p52471
S'(-200650)'
p52472
sS'DAQmxErrorAnalogTrigNotFirstInScanListCDAQ'
p52473
S'(-201102)'
p52474
sS'DAQmx_CI_TwoEdgeSep_FirstTerm'
p52475
S'0x18AD'
p52476
sS'DAQmx_Dev_AI_MaxSingleChanRate'
p52477
S'0x298C'
p52478
sS'DAQmx_CO_MemMapEnable'
p52479
S'0x2ED3'
p52480
sS'DAQmxErrorMinNotLessThanMax'
p52481
S'(-200082)'
p52482
sS'DAQmx_Val_Switch_Topology_2512_Independent'
p52483
S'"2512/Independent"'
p52484
sS'DAQmxErrorNoChansSpecdForPatternSource'
p52485
S'(-200927)'
p52486
sS'DAQmx_DigLvl_PauseTrig_DigSync_Enable'
p52487
S'0x222C'
p52488
sS'DAQmxErrorInvalidTopology'
p52489
S'(-200198)'
p52490
sS'DAQmxErrorLoggingModeNotSupportedNonBuffered'
p52491
S'(-201299)'
p52492
sS'DAQmxErrorCAPINoExtendedErrorInfoAvailable'
p52493
S'(-200399)'
p52494
sS'DAQmx_CI_DutyCycle_TermCfg'
p52495
S'0x30A1'
p52496
sS'DAQmxErrorTermWithoutDevInMultiDevTask'
p52497
S'(-200853)'
p52498
sS'DAQmxErrorInvalidOutputVoltageAtSampClkRate'
p52499
S'(-200392)'
p52500
sS'DAQmx_Val_DigitalIO'
p52501
S'14648'
p52502
sS'DAQmxWarningAccessDenied'
p52503
S'(26111)'
p52504
sS'DAQmx_CI_Pulse_Time_DigFltr_MinPulseWidth'
p52505
S'0x2F0F'
p52506
sS'DAQmx_Exported_AdvCmpltEvent_OutputTerm'
p52507
S'0x1651'
p52508
sS'DAQmx_AI_ACExcit_Freq'
p52509
S'0x0101'
p52510
sS'DAQmxWarningSampClkRateAboveDevSpecs'
p52511
S'(200036)'
p52512
sS'DAQmxErrorMoreThanOneTerminal'
p52513
S'(-200098)'
p52514
sS'DAQmxErrorInvalidTimebaseForCOHWTSP'
p52515
S'(-201316)'
p52516
sS'DAQmx_Val_Switch_Topology_2586_5_DPST'
p52517
S'"2586/5-DPST"'
p52518
sS'DAQmxErrorConnectOperatorInvalidAtPointInList'
p52519
S'(-200066)'
p52520
sS'DAQmx_AI_Bridge_Table_ElectricalVals'
p52521
S'0x2F8E'
p52522
sS'DAQmx_AnlgEdge_StartTrig_Lvl'
p52523
S'0x1396'
p52524
sS'DAQmxErrorTrigmanLineAlreadyReserved'
p52525
S'(-26005)'
p52526
sS'DAQmxWarningPALResourceInitialized'
p52527
S'(50105)'
p52528
sS'DAQmxErrorPhysicalChanNotOnThisConnector'
p52529
S'(-200851)'
p52530
sS'DAQmxErrorWriteBeforeEvent'
p52531
S'(-201315)'
p52532
sS'DAQmxErrorExtCalDateTimeNotDAQmx'
p52533
S'(-200543)'
p52534
sS'DAQmxErrorInvalidHandle'
p52535
S'(-26805)'
p52536
sS'DAQmxErrorOperationOnlyPermittedWhileScanning'
p52537
S'(-200177)'
p52538
sS'DAQmxErrorChanSizeTooBigForU8PortWrite'
p52539
S'(-200565)'
p52540
sS'DAQmx_CI_CtrTimebaseMasterTimebaseDiv'
p52541
S'0x18B3'
p52542
sS'DAQmx_Val_20MHzTimebaseClock'
p52543
S'12486'
p52544
sS'DAQmx_Val_Switch_Topology_2521_40_DPST'
p52545
S'"2521/40-DPST"'
p52546
sS'DAQmxErrorBufferAndDataXferMode'
p52547
S'(-200216)'
p52548
sS'_NI_float64_DEFINED_'
p52549
g48682
sS'DAQmx_AO_DAC_Ref_ExtSrc'
p52550
S'0x2252'
p52551
sS'DAQmx_Val_3Wire'
p52552
g49610
sS'DAQmxErrorResourcesInUseForInversion'
p52553
S'(-200365)'
p52554
sS'DAQmx_Val_ActiveDrive'
p52555
S'12573'
p52556
sS'DAQmx_Val_Ticks'
p52557
S'10304'
p52558
sS'_NI_int64_DEFINED_'
p52559
g48682
sS'DAQmx_AI_DigFltr_Order'
p52560
S'0x30C0'
p52561
sS'DAQmxErrorCOWritePulseLowTimeOutOfRange'
p52562
S'(-200687)'
p52563
sS'DAQmx_SampClk_Timebase_MasterTimebaseDiv'
p52564
S'0x1305'
p52565
sS'DAQmxErrorSuitableTimebaseNotFoundTimeCombo'
p52566
S'(-200137)'
p52567
sS'DAQmx_CI_Encoder_BInputLogicLvlBehavior'
p52568
S'0x30A6'
p52569
sS'DAQmxErrorCJCChanAlreadyUsed'
p52570
S'(-200352)'
p52571
sS'DAQmxErrorChanAlreadyInTask'
p52572
S'(-200489)'
p52573
sS'DAQmx_Dev_AI_BridgeRngs'
p52574
S'0x2FD0'
p52575
sS'DAQmx_CI_Freq_LogicLvlBehavior'
p52576
S'0x3098'
p52577
sS'DAQmxErrorLinearRequiresUniquePoints'
p52578
S'(-201334)'
p52579
sS'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev'
p52580
S'(-200807)'
p52581
sS'DAQmxErrorPropertyNotSupportedForScaleType'
p52582
S'(-200601)'
p52583
sS'DAQmxErrorPxiResmanChassisSlotParseError'
p52584
S'(-26204)'
p52585
sS'DAQmxErrorParallelSSHOnConnector1'
p52586
S'(-201297)'
p52587
sS'DAQmx_AIConv_DigFltr_Enable'
p52588
S'0x2EDC'
p52589
sS'DAQmx_AI_DigFltr_Coeff'
p52590
S'0x30C7'
p52591
sS'DAQmxWarningPALBadMode'
p52592
S'(50006)'
p52593
sS'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc'
p52594
S'0x2225'
p52595
sS'DAQmxErrorNetworkDeviceNotReservedByHost'
p52596
S'(-201388)'
p52597
sS'DAQmx_AnlgEdge_StartTrig_DigSync_Enable'
p52598
S'0x2EE5'
p52599
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_Quad_6x1_Mux'
p52600
S'"2503/2-Wire Quad 6x1 Mux"'
p52601
sS'DAQmxErrorElvis2PhysicalChansThermalEvent'
p52602
S'(-201197)'
p52603
sS'DAQmxErrorMemMapAndSimultaneousAO'
p52604
S'(-200830)'
p52605
sS'DAQmx_Val_Switch_Topology_2523_26_DPDT'
p52606
S'"2523/26-DPDT"'
p52607
sS'DAQmx_AI_Bridge_TwoPointLin_Second_PhysicalVal'
p52608
S'0x2F8D'
p52609
sS'DAQmxErrorWriteToTEDSFailed'
p52610
S'(-200836)'
p52611
sS'DAQmx_CO_Pulse_LowTime'
p52612
S'0x18BB'
p52613
sS'DAQmxErrorActiveChannelNotSpecified'
p52614
S'(-200093)'
p52615
sS'DAQmx_StartTrig_Term'
p52616
S'0x2F1E'
p52617
sS'DAQmxErrorHystTrigLevelAIMax'
p52618
S'(-200425)'
p52619
sS'DAQmx_RefTrig_PretrigSamples'
p52620
S'0x1445'
p52621
sS'DAQmxWarningAlreadyInitialized'
p52622
S'(26850)'
p52623
sS'DAQmxErrorPropertyNotSupportedForTimingSrc'
p52624
S'(-200739)'
p52625
sS'CVICDECL'
p52626
S'__cdecl'
p52627
sS'DAQmxErrorCounterMaxMinRangeFreq'
p52628
S'(-200139)'
p52629
sS'DAQmx_Val_NoAction'
p52630
S'10227'
p52631
sS'DAQmxWarningPALBadSelector'
p52632
S'(50003)'
p52633
sS'DAQmxErrorTooManyChansForAnalogRefTrigCDAQ'
p52634
S'(-201123)'
p52635
sS'DAQmxErrorNULLPtrForC_Api'
p52636
S'(-200230)'
p52637
sS'DAQmx_AnlgLvl_PauseTrig_Lvl'
p52638
S'0x1369'
p52639
sS'DAQmxErrorCounterMultipleBufferedChannels'
p52640
S'(-201317)'
p52641
sS'DAQmx_Val_Closed'
p52642
S'10438'
p52643
sS'DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x'
p52644
S'(-200892)'
p52645
sS'DAQmxErrorDLLBecameUnlocked'
p52646
S'(-200551)'
p52647
sS'DAQmxErrorPowerupStateNotSpecdForEntirePort'
p52648
S'(-200652)'
p52649
sS'DAQmxErrorDirCreateFault'
p52650
S'(-26112)'
p52651
sS'DAQmxErrorReadNotCompleteBeforeSampClk'
p52652
S'(-209800)'
p52653
sS'DAQmx_Val_Switch_Topology_1193_16x1_Terminated_Mux'
p52654
S'"1193/16x1 Terminated Mux"'
p52655
sS'DAQmx_Exported_CtrOutEvent_Toggle_IdleState'
p52656
S'0x186A'
p52657
sS'DAQmx_AO_FuncGen_FMDeviation'
p52658
S'0x2A23'
p52659
sS'DAQmx_Read_OpenCurrentLoopChansExist'
p52660
S'0x2A09'
p52661
sS'DAQmxErrorModuleUnsupportedFor9163'
p52662
S'(-201415)'
p52663
sS'DAQmxWarningUserDefInfoStringTooLong'
p52664
S'(200013)'
p52665
sS'DAQmxErrorCardDevCarrierSimMustMatch'
p52666
S'(-201358)'
p52667
sS'DAQmx_Val_PCI'
p52668
S'12582'
p52669
sS'DAQmxErrorOnlyPEMCertificatesAccepted'
p52670
S'(-201270)'
p52671
sS'DAQmx_CI_CountEdges_CountReset_Enable'
p52672
S'0x2FAF'
p52673
sS'DAQmxErrorIllegalAccessoryTypeForDeviceSpecd'
p52674
S'(-201046)'
p52675
sS'DAQmxErrorHardwareNotResponding'
p52676
S'(-200175)'
p52677
sS'DAQmxErrorInvalidAIOffsetCalConst'
p52678
S'(-200717)'
p52679
sS'DAQmxErrorInvalidTerm'
p52680
S'(-200254)'
p52681
sS'DAQmx_AnlgEdge_RefTrig_DigSync_Enable'
p52682
S'0x2EEA'
p52683
sS'DAQmxErrorOnlyUseRefTrigSrcPrptyWithDevDataLines'
p52684
S'(-201135)'
p52685
sS'DAQmxErrorSampClkDCMLock'
p52686
S'(-200239)'
p52687
sS'DAQmxErrorFirmwareVersionSameAsInstalledVersion'
p52688
S'(-201491)'
p52689
sS'DAQmxErrorLostRefClk'
p52690
S'(-201504)'
p52691
sS'DAQmxErrorDevOrDevPhysChanDoesNotSupportSCXIDigitization'
p52692
S'(-201238)'
p52693
sS'DAQmx_CI_TwoEdgeSep_SecondTermCfg'
p52694
S'0x30AD'
p52695
sS'DAQmxErrorAnalogBusNotValid'
p52696
S'(-201353)'
p52697
sS'DAQmxErrorExcitationStateRequiredForAttributes'
p52698
S'(-201191)'
p52699
sS'DAQmx_Exported_AdvTrig_Pulse_Width'
p52700
S'0x1648'
p52701
sS'DAQmx_AI_Bridge_ShuntCal_Enable'
p52702
S'0x0094'
p52703
sS'DAQmxErrorDoneEventAlreadyRegistered'
p52704
S'(-200950)'
p52705
sS'DAQmx_Val_Master'
p52706
S'15888'
p52707
sS'DAQmxErrorInvalidOptionForDigitalPortChannel'
p52708
S'(-200376)'
p52709
sS'DAQmx_StartTrig_Retriggerable'
p52710
S'0x190F'
p52711
sS'DAQmxErrorFileCloseFault'
p52712
S'(-26105)'
p52713
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Sixteen_2x16_Matrix'
p52714
S'"2532/1-Wire Sixteen 2x16 Matrix"'
p52715
sS'DAQmx_Watchdog_Timeout'
p52716
S'0x21A9'
p52717
sS'DAQmxErrorInvalidNumCalADCReadsToAverage'
p52718
S'(-200515)'
p52719
sS'DAQmxWarningPALTransferAborted'
p52720
S'(50405)'
p52721
sS'DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal'
p52722
S'(-200668)'
p52723
sS'DAQmxErrorTaskReferencesLocalChannelFromOtherTask'
p52724
S'(-201071)'
p52725
sS'DAQmxErrorCounterOverflow'
p52726
S'(-200141)'
p52727
sS'DAQmxErrorSwitchDifferentSettlingTimeWhenScanning'
p52728
S'(-200178)'
p52729
sS'DAQmxErrorPowerSupplyConfigurationFailed'
p52730
S'(-201173)'
p52731
sS'DAQmxErrorTimeout'
p52732
S'(-26802)'
p52733
sS'DAQmx_Val_SCXI1124Range0to1V'
p52734
S'14629'
p52735
sS'DAQmx_Val_CompactDAQChassis'
p52736
S'14658'
p52737
sS'DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks'
p52738
S'(-200848)'
p52739
sS'DAQmxErrorClearIsLastInstructionInIfElseBlockInScript'
p52740
S'(-201012)'
p52741
sS'DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType'
p52742
S'(-200905)'
p52743
sS'DAQmxErrorTEDSMinElecValGEMaxElecVal'
p52744
S'(-200816)'
p52745
sS'DAQmx_DO_UsbXferReqSize'
p52746
S'0x2A91'
p52747
sS'DAQmx_Val_SampleClkPeriods'
p52748
S'10286'
p52749
sS'DAQmxErrorWaitModePropertyNotSupportedNonBuffered'
p52750
S'(-200923)'
p52751
sS'DAQmxErrorCannotSetPropertyWhenTaskRunning'
p52752
S'(-200557)'
p52753
sS'DAQmxWarningTrigmanConflictingRouteGeneric'
p52754
S'(26006)'
p52755
sS'DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseSrc'
p52756
S'0x2EF7'
p52757
sS'DAQmxErrorExtSyncPulseSrcCannotBeExported'
p52758
S'(-201092)'
p52759
sS'DAQmxErrorRoutingDestTermPXIChassisNotIdentified'
p52760
S'(-200699)'
p52761
sS'DAQmx_CI_PulseWidth_DigFltr_Enable'
p52762
S'0x220A'
p52763
sS'DAQmx_Val_Save_AllowInteractiveEditing'
p52764
S'(1<<1)'
p52765
sS'DAQmx_AO_UsbXferReqCount'
p52766
S'0x3001'
p52767
sS'DAQmx_Val_WhenAcqComplete'
p52768
S'12546'
p52769
sS'DAQmxErrorHWObjectsFoundInFile'
p52770
S'(-201074)'
p52771
sS'DAQmx_Val_mVoltsPerVoltPerMillimeter'
p52772
S'12506'
p52773
sS'DAQmx_Val_InchOunces'
p52774
S'15882'
p52775
sS'DAQmxError2CounterMeasurementModeAndSampleClocked'
p52776
S'(-201323)'
p52777
sS'DAQmx_Val_Bit_TriggerUsageTypes_Advance'
p52778
S'(1<<0)'
p52779
sS'DAQmxErrorPALDeviceInitializationFault'
p52780
S'(-50303)'
p52781
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_256x1_Mux'
p52782
S'"1130/1-Wire 256x1 Mux"'
p52783
sS'DAQmx_Dev_AO_MinRate'
p52784
S'0x2998'
p52785
sS'DAQmxErrorResourcesInUseForInversion_Routing'
p52786
S'(-89134)'
p52787
sS'DAQmxErrorPALOSFault'
p52788
S'(-50202)'
p52789
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth'
p52790
S'0x21F2'
p52791
sS'DAQmxErrorBufferWithWaitMode'
p52792
S'(-200691)'
p52793
sS'DAQmxErrorPALOSUnsupported'
p52794
S'(-50200)'
p52795
sS'DAQmx_DigEdge_ArmStartTrig_Edge'
p52796
S'0x1415'
p52797
sS'DAQmxErrorGainTooLargeForGainCalConst'
p52798
S'(-201202)'
p52799
sS'DAQmxErrorResourcesInUseForProperty'
p52800
S'(-200353)'
p52801
sS'DAQmxErrorTriggerPolarityConflict'
p52802
S'(-200206)'
p52803
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_Dual_12x1_Mux'
p52804
S'"2501/2-Wire Dual 12x1 Mux"'
p52805
sS'DAQmxErrorIEPEWithDCNotAllowed'
p52806
S'(-201172)'
p52807
sS'DAQmx_Val_2point5V'
p52808
S'14620'
p52809
sS'DAQmxErrorDigFilterEnableSetWhenTristateIsFalse'
p52810
S'(-200732)'
p52811
sS'DAQmx_CI_Pulse_Time_DigFltr_TimebaseSrc'
p52812
S'0x2F10'
p52813
sS'DAQmxErrorProductOfAOMaxAndGainTooLarge'
p52814
S'(-200267)'
p52815
sS'DAQmxErrorEveryNSampsEventIntervalZeroNotSupported'
p52816
S'(-200880)'
p52817
sS'DAQmxWarningPALOSUnsupported'
p52818
S'(50200)'
p52819
sS'DAQmx_Val_Switch_Topology_2590_4x1_Mux'
p52820
S'"2590/4x1 Mux"'
p52821
sS'DAQmx_AI_Excit_ActualVal'
p52822
S'0x1883'
p52823
sS'DAQmxErrorDeviceRemoved'
p52824
S'(-200045)'
p52825
sS'DAQmx_Val_Multicycle'
p52826
S'14614'
p52827
sS'DAQmx_DigPattern_StartTrig_Pattern'
p52828
S'0x2186'
p52829
sS'DAQmxErrorDSFReadyForStartClock'
p52830
S'(-200631)'
p52831
sS'DAQmxErrorInvalidNumericFormatSpecd'
p52832
S'(-201056)'
p52833
sS'DAQmx_Logging_SampsPerFile'
p52834
S'0x2FE4'
p52835
sS'DAQmxErrorPALIsocStreamBufferError'
p52836
S'(-50807)'
p52837
sS'DAQmx_AI_ChanCal_Table_PreScaledVals'
p52838
S'0x229D'
p52839
sS'DAQmx_DigEdge_RefTrig_DigFltr_MinPulseWidth'
p52840
S'0x2ED8'
p52841
sS'DAQmxErrorAccessoryPowerTripped'
p52842
S'(-201343)'
p52843
sS'DAQmx_Logging_Mode'
p52844
S'0x2EC5'
p52845
sS'DAQmxWarningPALTransferInProgress'
p52846
S'(50403)'
p52847
sS'DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice'
p52848
S'(-200980)'
p52849
sS'DAQmxErrorInvalidWaitDurationBeforeBreakBlock'
p52850
S'(-201211)'
p52851
sS'DAQmx_Val_BelowLvl'
p52852
S'10107'
p52853
sS'DAQmx_Val_FromCustomScale'
p52854
S'10065'
p52855
sS'DAQmxErrorSubsetStartOffsetNotAlignedInScript'
p52856
S'(-200033)'
p52857
sS'DAQmxWarningPALComponentAlreadyLoaded'
p52858
S'(50260)'
p52859
sS'DAQmx_Exported_DataActiveEvent_Lvl_ActiveLvl'
p52860
S'0x1634'
p52861
sS'DAQmxErrorWaveformLengthNotMultOfQuantum'
p52862
S'(-201115)'
p52863
sS'DAQmx_SampClk_DigFltr_TimebaseSrc'
p52864
S'0x2220'
p52865
sS'DAQmx_Val_OnBrdMemMoreThanHalfFull'
p52866
S'10237'
p52867
sS'DAQmx_Watchdog_DO_ExpirState'
p52868
S'0x21A7'
p52869
sS'DAQmxErrorFailedToEnableHighSpeedOutput'
p52870
S'(-200615)'
p52871
sS'DAQmx_Val_Custom'
p52872
S'10137'
p52873
sS'DAQmx_Dev_TCPIP_Hostname'
p52874
S'0x2A8B'
p52875
sS'DAQmxWarningHandlerNotFound'
p52876
S'(26657)'
p52877
sS'DAQmxErrorDeviceDoesNotSupportCDAQSyncConnections'
p52878
S'(-201450)'
p52879
sS'DAQmxErrorInvalidJumperedAttr'
p52880
S'(-200259)'
p52881
sS'DAQmxErrorSwitchActionInListSpansMultipleDevices'
p52882
S'(-200053)'
p52883
sS'DAQmxErrorMarkerPosInvalidForLoopInScript'
p52884
S'(-200248)'
p52885
sS'DAQmxErrorDataOverwrittenInDeviceMemory'
p52886
S'(-200004)'
p52887
sS'DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh'
p52888
S'(-200381)'
p52889
sS'DAQmx_Dev_NumDMAChans'
p52890
S'0x233C'
p52891
sS'DAQmx_Trigger_SyncType'
p52892
S'0x2F80'
p52893
sS'DAQmx_Val_Switch_Topology_2557_8x1_Mux'
p52894
S'"2557/8x1 Mux"'
p52895
sS'DAQmxErrorRequiredPropertyMissing'
p52896
S'(-201039)'
p52897
sS'DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch'
p52898
S'(-200786)'
p52899
sS'DAQmx_AnlgEdge_StartTrig_Coupling'
p52900
S'0x2233'
p52901
sS'DAQmxErrorCAPIReservedParamNotZero'
p52902
S'(-200491)'
p52903
sS'DAQmxErrorInvalidCalConstOscillatorFreqDACValue'
p52904
S'(-200519)'
p52905
sS'DAQmxErrorOutputBufferSizeNotMultOfXferSize'
p52906
S'(-200838)'
p52907
sS'DAQmxErrorRecordNotAvailable'
p52908
S'(-200007)'
p52909
sS'DAQmxErrorDifftAIInputSrcInOneChanGroup'
p52910
S'(-200676)'
p52911
sS'DAQmx_Val_OnBrdMemNotEmpty'
p52912
S'10241'
p52913
sS'DAQmx_Val_Degrees'
p52914
S'10146'
p52915
sS'DAQmxErrorSpecifiedCDAQSlotNotEmpty'
p52916
S'(-201161)'
p52917
sS'DAQmx_Val_80MHzTimebase'
p52918
S'14636'
p52919
sS'DAQmx_Val_ConstVal'
p52920
S'10116'
p52921
sS'DAQmxErrorRealDevAndSimDevNotSupportedInSameTask'
p52922
S'(-201206)'
p52923
sS'DAQmx_Val_Switch_Topology_2548_4_SPDT'
p52924
S'"2548/4-SPDT"'
p52925
sS'DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode'
p52926
S'(-200799)'
p52927
sS'DAQmx_Cal_UserDefinedInfo'
p52928
S'0x1861'
p52929
sS'DAQmx_Dev_Accessory_ProductTypes'
p52930
S'0x2F6D'
p52931
sS'DAQmxErrorLoggingStartNewFileNotCalled'
p52932
S'(-201403)'
p52933
sS'DAQmxErrorWroteMultiSampsUsingSingleSampWrite'
p52934
S'(-200673)'
p52935
sS'DAQmx_AnlgWin_RefTrig_Btm'
p52936
S'0x1428'
p52937
sS'DAQmxWarningUserAreaCRCNotCorrect'
p52938
S'(200054)'
p52939
sS'DAQmxErrorRefAndPauseTrigConfigured'
p52940
S'(-200628)'
p52941
sS'DAQmx_Val_Torque_Bridge'
p52942
S'15905'
p52943
sS'DAQmxErrorOutputFIFOUnderflow2'
p52944
S'(-200621)'
p52945
sS'DAQmxErrorModuleChangeDuringConnectionLoss'
p52946
S'(-201389)'
p52947
sS'DAQmx_Val_Bit_TermCfg_Diff'
p52948
S'(1<<2)'
p52949
sS'DAQmxErrorFirmwareCouldntUpdate'
p52950
S'(-201167)'
p52951
sS'DAQmxErrorPxiResmanChassisParseError'
p52952
S'(-26202)'
p52953
sS'DAQmxErrorForwardPolynomialCoefNotSpecd'
p52954
S'(-200351)'
p52955
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Dual_64x1_Mux'
p52956
S'"2530/1-Wire Dual 64x1 Mux"'
p52957
sS'DAQmx_Val_Finite'
p52958
S'10172'
p52959
sS'DAQmxErrorControlLineConflictOnPortC'
p52960
S'(-200126)'
p52961
sS'DAQmxErrorInputFIFOOverflowDuringCalibrationOnFullSpeedUSB'
p52962
S'(-201189)'
p52963
sS'DAQmx_Val_Switch_Topology_2597_6x1_Terminated_Mux'
p52964
S'"2597/6x1 Terminated Mux"'
p52965
sS'DAQmxErrorExtCalNotComplete'
p52966
S'(-200443)'
p52967
sS'DAQmx_Val_Switch_Topology_1190_Quad_4x1_Mux'
p52968
S'"1190/Quad 4x1 Mux"'
p52969
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_16x32_Matrix'
p52970
S'"2532/1-Wire 16x32 Matrix"'
p52971
sS'DAQmxErrorEventPulseWidthOutOfRange'
p52972
S'(-200346)'
p52973
sS'DAQmxErrorTimeoutValueExceedsMaximum'
p52974
S'(-201437)'
p52975
sS'DAQmxErrorNoDevMemForScript'
p52976
S'(-200317)'
p52977
sS'DAQmxErrorRTSISimMustMatchDevSim'
p52978
S'(-201205)'
p52979
sS'DAQmxErrorAttributeNotSettableWhenTaskIsRunning'
p52980
S'(-200450)'
p52981
sS'DAQmxErrorInvalidWaveformLengthWithinLoopInScript'
p52982
S'(-200250)'
p52983
sS'DAQmxErrorCalPWMLinearityFailed'
p52984
S'(-201293)'
p52985
sS'DAQmx_Sys_DevNames'
p52986
S'0x193B'
p52987
sS'DAQmxErrorDisconnectPathNotSameAsExistingPath'
p52988
S'(-200190)'
p52989
sS'DAQmxErrorHiddenChanMissingInChansPropertyInCfgFile'
p52990
S'(-201084)'
p52991
sS'DAQmxWarningStoppedBeforeDone'
p52992
S'(200010)'
p52993
sS'DAQmx_Val_Fixed50PercentDutyCycle'
p52994
S'14711'
p52995
sS'DAQmxErrorMismatchedInputArraySizes'
p52996
S'(-200672)'
p52997
sS'DAQmx_AI_Excit_UseForScaling'
p52998
S'0x17FC'
p52999
sS'DAQmx_Val_WDTExpiredEvent'
p53000
S'12512'
p53001
sS'DAQmxErrorOutputP2PNotSupportedWithMultithreadedScripts'
p53002
S'(-201373)'
p53003
sS'DAQmx_AnlgEdge_StartTrig_DigFltr_Enable'
p53004
S'0x2EE1'
p53005
sS'DAQmx_Logging_TDMS_GroupName'
p53006
S'0x2EC6'
p53007
sS'DAQmx_Dev_Accessory_SerialNums'
p53008
S'0x2F6F'
p53009
sS'DAQmx_SampClk_TimebaseDiv'
p53010
S'0x18EB'
p53011
sS'DAQmx_Dev_CO_SampClkSupported'
p53012
S'0x2F5B'
p53013
sS'DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled'
p53014
S'(-200497)'
p53015
sS'DAQmxErrorSlaveWithNoStartTriggerConfigured'
p53016
S'(-201350)'
p53017
sS'DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions'
p53018
S'(200038)'
p53019
sS'DAQmx_Val_Triangle'
p53020
S'14752'
p53021
sS'DAQmx_CI_MemMapEnable'
p53022
S'0x2ED2'
p53023
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_24x1_Mux'
p53024
S'"2503/2-Wire 24x1 Mux"'
p53025
sS'DAQmxErrorPALVersionMismatch'
p53026
S'(-50250)'
p53027
sS'DAQmxErrorFilePreallocationFailed'
p53028
S'(-201400)'
p53029
sS'DAQmxErrorPxiResmanControllerFileNotFound'
p53030
S'(-26300)'
p53031
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Quad_4x32_Matrix'
p53032
S'"2532/1-Wire Quad 4x32 Matrix"'
p53033
sS'DAQmx_Val_ExtControlled'
p53034
S'10326'
p53035
sS'DAQmx_Val_TwoEdgeSep'
p53036
S'10267'
p53037
sS'DAQmxErrorSampClkDCMBecameUnlocked'
p53038
S'(-200240)'
p53039
sS'DAQmxErrorChannelSizeTooBigForPortWriteType'
p53040
S'(-200465)'
p53041
sS'DAQmx_Val_HalfBridgeI'
p53042
S'10188'
p53043
sS'DAQmx_PhysicalChan_CI_SupportedMeasTypes'
p53044
S'0x2FDA'
p53045
sS'DAQmxErrorMStudioNoReversePolyScaleCoeffs'
p53046
S'(-200782)'
p53047
sS'DAQmxErrorScanListCannotBeTimed'
p53048
S'(-200067)'
p53049
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_Dual_4x32_Matrix'
p53050
S'"2532/2-Wire Dual 4x32 Matrix"'
p53051
sS'DAQmx_RefTrig_AutoTrigEnable'
p53052
S'0x2EC1'
p53053
sS'DAQmx_Val_Switch_Topology_1175_1_Wire_196x1_Mux'
p53054
S'"1175/1-Wire 196x1 Mux"'
p53055
sS'DAQmxErrorSoftwareTooNewForEEPROM'
p53056
S'(-201142)'
p53057
sS'DAQmx_Val_ReservedForRouting'
p53058
S'10441'
p53059
sS'DAQmxErrorCppDotNetAPINegativeBufferSize'
p53060
S'(-200591)'
p53061
sS'DAQmx_Val_PulseTicks'
p53062
S'15866'
p53063
sS'DAQmx_PersistedTask_Author'
p53064
S'0x22CC'
p53065
sS'DAQmxWarningOutputGainTooHighForRFFreq'
p53066
S'(200032)'
p53067
sS'DAQmx_CO_CtrTimebaseActiveEdge'
p53068
S'0x0341'
p53069
sS'DAQmx_Val_Switch_Topology_2531_1_Wire_Dual_8x32_Matrix'
p53070
S'"2531/1-Wire Dual 8x32 Matrix"'
p53071
sS'DAQmx_Val_MetersPerSecondSquared'
p53072
S'12470'
p53073
sS'DAQmxErrorPALWaitInterrupted'
p53074
S'(-50700)'
p53075
sS'DAQmxErrorPALFileReadFault'
p53076
S'(-50207)'
p53077
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_8x16_Matrix'
p53078
S'"1129/2-Wire Dual 8x16 Matrix"'
p53079
sS'DAQmxErrorDevOnlySupportsSampClkTimingAI'
p53080
S'(-200757)'
p53081
sS'DAQmx_Read_ExcitFaultChansExist'
p53082
S'0x3088'
p53083
sS'DAQmx_CI_TCReached'
p53084
S'0x0150'
p53085
sS'DAQmxErrorInTimerTimeoutOnArm'
p53086
S'(-201417)'
p53087
sS'DAQmxErrorRefAndStartTriggerSrcCantBeSame'
p53088
S'(-201131)'
p53089
sS'DAQmx_Val_Switch_Topology_2586_10_SPST'
p53090
S'"2586/10-SPST"'
p53091
sS'DAQmx_Val_Tristate'
p53092
S'10310'
p53093
sS'DAQmx_CI_Pulse_Ticks_DigFltr_Enable'
p53094
S'0x2F16'
p53095
sS'DAQmxErrorDifferentDigitizerFromCommunicator'
p53096
S'(-201469)'
p53097
sS'DAQmx_Val_HighImpedance'
p53098
S'12527'
p53099
sS'DAQmx_Val_BuiltIn'
p53100
S'10200'
p53101
sS'DAQmx_Sys_GlobalChans'
p53102
S'0x1265'
p53103
sS'DAQmx_AI_Lowpass_SwitchCap_ClkSrc'
p53104
S'0x1884'
p53105
sS'DAQmxErrorRouteFailedBecauseWatchdogExpired'
p53106
S'(-200681)'
p53107
sS'DAQmx_Dev_AI_SupportedMeasTypes'
p53108
S'0x2FD2'
p53109
sS'DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents'
p53110
S'(-201000)'
p53111
sS'DAQmx_CI_Encoder_ZInputTermCfg'
p53112
S'0x30A7'
p53113
sS'DAQmxErrorDeviceIDDoesNotMatch'
p53114
S'(-201063)'
p53115
sS'DAQmxWarningPALBadReadCount'
p53116
S'(50011)'
p53117
sS'DAQmx_CI_Freq_DigSync_Enable'
p53118
S'0x21EB'
p53119
sS'DAQmx_Task_NumDevices'
p53120
S'0x29BA'
p53121
sS'DAQmx_Val_CurrentRMS'
p53122
S'10351'
p53123
sS'DAQmx_Val_LowFreq1Ctr'
p53124
S'10105'
p53125
sS'DAQmxErrorInconsistentAnalogTrigSettings'
p53126
S'(-200261)'
p53127
sS'DAQmx_AI_CurrentShunt_Loc'
p53128
S'0x17F2'
p53129
sS'DAQmx_Write_ExternalOvervoltageChansExist'
p53130
S'0x30BB'
p53131
sS'DAQmxErrorRefClkRateRefClkSrcMismatch'
p53132
S'(-200744)'
p53133
sS'DAQmxErrorPasswordTooLong'
p53134
S'(-200109)'
p53135
sS'DAQmx_Val_DoNotAllowRegen'
p53136
S'10158'
p53137
sS'DAQmxErrorInvalidDeviceConnectorNumberSpecd'
p53138
S'(-201045)'
p53139
sS'DAQmx_CI_Period_DigFltr_TimebaseRate'
p53140
S'0x21EF'
p53141
sS'DAQmx_CI_MeasType'
p53142
S'0x18A0'
p53143
sS'DAQmxErrorIPAddressAlreadyInUse'
p53144
S'(-201370)'
p53145
sS'DAQmxErrorImmedTrigDuringRISMode'
p53146
S'(-200418)'
p53147
sS'DAQmxErrorPropertyNotSupportedNotOutputTask'
p53148
S'(-200456)'
p53149
sS'DAQmxErrorTristateNotEnoughLines'
p53150
S'(-201224)'
p53151
sS'DAQmx_DigEdge_AdvTrig_Src'
p53152
S'0x1362'
p53153
sS'DAQmxErrorInvalidAIInputSrc'
p53154
S'(-201181)'
p53155
sS'DAQmx_Read_RawDataWidth'
p53156
S'0x217A'
p53157
sS'DAQmx_SyncPulse_Src'
p53158
S'0x223D'
p53159
sS'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty'
p53160
S'(-200774)'
p53161
sS'DAQmxErrorInvalidNumSampsToWrite'
p53162
S'(-200622)'
p53163
sS'DAQmxErrorServiceNotRunning'
p53164
S'(-26804)'
p53165
sS'DAQmxErrorInvalidDTInsideWfmDataType'
p53166
S'(-200327)'
p53167
sS'DAQmxErrorDelayFromSampClkTooLong'
p53168
S'(-200337)'
p53169
sS'DAQmx_AI_Voltage_Units'
p53170
S'0x1094'
p53171
sS'DAQmxErrorCalCouplingNotSupported'
p53172
S'(-201275)'
p53173
sS'DAQmxErrorPortReservedForHandshaking'
p53174
S'(-200118)'
p53175
sS'DAQmxWarningPXIe5663_IncorrectlyConfigured'
p53176
S'(200064)'
p53177
sS'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified'
p53178
S'(-200698)'
p53179
sS'DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning'
p53180
S'(-200833)'
p53181
sS'DAQmxErrorVCXODCMBecameUnlocked'
p53182
S'(-201507)'
p53183
sS'DAQmxErrorRetrievingNetworkDeviceProperties'
p53184
S'(-201401)'
p53185
sS'DAQmx_Hshk_SampleInputDataWhen'
p53186
S'0x22C4'
p53187
sS'DAQmxWarningDeviceSpecExceeded'
p53188
S'(200048)'
p53189
sS'DAQmx_CI_DataXferReqCond'
p53190
S'0x2EFB'
p53191
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Dual_128x1_Mux'
p53192
S'"1130/1-Wire Dual 128x1 Mux"'
p53193
sS'DAQmx_AI_UsbXferReqCount'
p53194
S'0x3000'
p53195
sS'DAQmxErrorEEPROMTooNewForSoftware'
p53196
S'(-201141)'
p53197
sS'DAQmx_PhysicalChan_TEDS_ModelNum'
p53198
S'0x21DB'
p53199
sS'DAQmxErrorCannotPerformOpWhenTaskNotReserved'
p53200
S'(-200664)'
p53201
sS'DAQmx_AO_FuncGen_Type'
p53202
S'0x2A18'
p53203
sS'DAQmx_CI_UsbXferReqCount'
p53204
S'0x3004'
p53205
sS'DAQmxWarningMultipleWritesBetweenSampClks'
p53206
S'(200033)'
p53207
sS'DAQmxErrorCVIFunctionNotFoundInDAQmxDLL'
p53208
S'(-200398)'
p53209
sS'DAQmx_Val_EverySample'
p53210
S'10164'
p53211
sS'DAQmxWarningPXIe5605_NotConfigured'
p53212
S'(200069)'
p53213
sS'DAQmx_CI_Freq_MeasMeth'
p53214
S'0x0144'
p53215
sS'DAQmxErrorPALTransferOverread'
p53216
S'(-50411)'
p53217
sS'DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingResponseMode'
p53218
S'(-201120)'
p53219
sS'DAQmxErrorUnexpectedSwitchActionInList'
p53220
S'(-200065)'
p53221
sS'DAQmx_Val_Switch_Topology_2527_1_Wire_Dual_32x1_Mux'
p53222
S'"2527/1-Wire Dual 32x1 Mux"'
p53223
sS'DAQmxErrorNoCommonTrigLineForRoute_Routing'
p53224
S'(-89139)'
p53225
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_Quad_6x1_Mux'
p53226
S'"2501/2-Wire Quad 6x1 Mux"'
p53227
sS'DAQmxErrorCalibrationHandleInvalid'
p53228
S'(-200112)'
p53229
sS'DAQmx_CO_EnableInitialDelayOnRetrigger'
p53230
S'0x2EC9'
p53231
sS'DAQmx_SelfCal_Supported'
p53232
S'0x1860'
p53233
sS'DAQmxErrorRateTooFastForHWTSP'
p53234
S'(-201410)'
p53235
sS'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing'
p53236
S'(-89148)'
p53237
sS'DAQmx_Val_HardwareDefined'
p53238
S'10191'
p53239
sS'DAQmxErrorFastExternalTimebaseNotSupportedForDevice'
p53240
S'(-201339)'
p53241
sS'DAQmx_SwitchScan_WaitingForAdv'
p53242
S'0x17D9'
p53243
sS'DAQmxErrorCustomTimingModeNotSet'
p53244
S'(-201344)'
p53245
sS'DAQmxWarningPALBadThreadMultitask'
p53246
S'(50019)'
p53247
sS'DAQmxErrorInputSignalSlowerThanMeasTime'
p53248
S'(-200302)'
p53249
sS'DAQmxErrorTrigmanUnsupportedOper'
p53250
S'(-26001)'
p53251
sS'DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed'
p53252
S'(-200883)'
p53253
sS'DAQmx_AO_Min'
p53254
S'0x1187'
p53255
sS'DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered'
p53256
S'(-200966)'
p53257
sS'DAQmx_AI_Bridge_Units'
p53258
S'0x2F92'
p53259
sS'DAQmxErrorAllCurrentLimitingResourcesAlreadyTaken'
p53260
S'(-201268)'
p53261
sS'DAQmxErrorSWObjectsFoundInFile'
p53262
S'(-201075)'
p53263
sS'DAQmx_Val_Switch_Topology_2530_Independent'
p53264
S'"2530/Independent"'
p53265
sS'DAQmx_AO_CustomScaleName'
p53266
S'0x1188'
p53267
sS'DAQmx_Val_mVoltsPerG'
p53268
S'12509'
p53269
sS'DAQmxWarningPxiResmanChassisParseError'
p53270
S'(26202)'
p53271
sS'DAQmx_CI_Period_DigFltr_TimebaseSrc'
p53272
S'0x21EE'
p53273
sS'DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps'
p53274
S'(-200413)'
p53275
sS'DAQmxErrorPALFeatureNotSupported'
p53276
S'(-50256)'
p53277
sS'DAQmx_PersistedTask_AllowInteractiveDeletion'
p53278
S'0x22CE'
p53279
sS'DAQmxWarningPxiResmanSystemDescriptionFileNotFound'
p53280
S'(26400)'
p53281
sS'DAQmxErrorMeasCalAdjustOscillatorFrequency'
p53282
S'(-200508)'
p53283
sS'DAQmx_CO_AutoIncrCnt'
p53284
S'0x0295'
p53285
sS'DAQmxErrorInvalidNumOfPhysChansForTeeRosette'
p53286
S'(-201446)'
p53287
sS'DAQmx_DigEdge_StartTrig_DigSync_Enable'
p53288
S'0x2227'
p53289
sS'DAQmxErrorTrigmanUnknownError'
p53290
S'(-26000)'
p53291
sS'DAQmx_Val_Resistance'
p53292
S'10278'
p53293
sS'DAQmxErrorDelayFromStartTrigTooShort'
p53294
S'(-200333)'
p53295
sS'DAQmx_Dev_AI_SampModes'
p53296
S'0x2FDC'
p53297
sS'DAQmx_AO_DAC_Ref_AllowConnToGnd'
p53298
S'0x1830'
p53299
sS'DAQmx_Write_OvercurrentChansExist'
p53300
S'0x29E8'
p53301
sS'DAQmxErrorBufferedOpsNotSupportedInSpecdSlotForCDAQ'
p53302
S'(-201107)'
p53303
sS'DAQmx_CI_TwoEdgeSep_SecondTerm'
p53304
S'0x18AE'
p53305
sS'DAQmxErrorInternalTimebaseRateDivisorSourceCombo'
p53306
S'(-200133)'
p53307
sS'DAQmxErrorSCXIDevNotUsablePowerTurnedOff'
p53308
S'(-200835)'
p53309
sS'DAQmx_Val_Auto'
p53310
S'-1'
p53311
sS'DAQmxErrorCustomTimingRequiredForAttribute'
p53312
S'(-201345)'
p53313
sS'DAQmxErrorF64PrptyValNotUnsignedInt'
p53314
S'(-200394)'
p53315
sS'DAQmxWarningPALBadWriteOffset'
p53316
S'(50013)'
p53317
sS'DAQmxErrorInconsistentTermCfgAcrossTerminals'
p53318
S'(-201508)'
p53319
sS'DAQmxErrorOutputBufSizeTooSmallToStartGen'
p53320
S'(-200609)'
p53321
sS'DAQmx_Val_DeltaRosette'
p53322
S'15969'
p53323
sS'DAQmxErrorLines0To3ConfiguredForOutput'
p53324
S'(-200123)'
p53325
sS'DAQmx_AI_ChanCal_Verif_RefVals'
p53326
S'0x22A1'
p53327
sS'DAQmxErrorIdentifierTooLongInScript'
p53328
S'(-200533)'
p53329
sS'DAQmxErrorChassisCommunicationInterrupted'
p53330
S'(-201423)'
p53331
sS'DAQmx_Scale_PreScaledUnits'
p53332
S'0x18F7'
p53333
sS'DAQmxErrorRouteNotSupportedByHW'
p53334
S'(-200368)'
p53335
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_8x32_Matrix'
p53336
S'"2532/2-Wire 8x32 Matrix"'
p53337
sS'DAQmxErrorAIInputBufferSizeNotMultOfXferSize'
p53338
S'(-200763)'
p53339
sS'DAQmx_Val_Source'
p53340
S'10439'
p53341
sS'DAQmxErrorCantReserveTaskWhileWatchdogTaskReserving'
p53342
S'(-201476)'
p53343
sS'DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO'
p53344
S'(-200819)'
p53345
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_8x32_Matrix'
p53346
S'"1129/2-Wire 8x32 Matrix"'
p53347
sS'DAQmxErrorDAQmxVersionNotSupported'
p53348
S'(-201076)'
p53349
sS'DAQmx_AI_ADCTimingMode'
p53350
S'0x29F9'
p53351
sS'DAQmxErrorFilterOrDigitalSyncInternalSignal'
p53352
S'(-201367)'
p53353
sS'DAQmx_DigEdge_WatchdogExpirTrig_Src'
p53354
S'0x21A4'
p53355
sS'DAQmx_Val_Switch_Topology_2540_1_Wire_8x9_Matrix'
p53356
S'"2540/1-Wire 8x9 Matrix"'
p53357
sS'DAQmx_CI_SemiPeriod_DigSync_Enable'
p53358
S'0x221D'
p53359
sS'DAQmxErrorIntermediateBufferFull'
p53360
S'(-200495)'
p53361
sS'DAQmxErrorCantExceedRelayDriveLimit'
p53362
S'(-200671)'
p53363
sS'DAQmxErrorChassisWatchdogTimerExpired'
p53364
S'(-201478)'
p53365
sS'DAQmxWarningPALBadDevice'
p53366
S'(50002)'
p53367
sS'DAQmx_SwitchDev_Temperature'
p53368
S'0x301A'
p53369
sS'DAQmxErrorSwitchOperationChansSpanMultipleDevsInList'
p53370
S'(-200596)'
p53371
sS'DAQmx_AI_DataXferReqCond'
p53372
S'0x188B'
p53373
sS'DAQmx_Val_Strain'
p53374
S'10299'
p53375
sS'DAQmxErrorDigitalOutputNotSupported'
p53376
S'(-200012)'
p53377
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Quad_16x1_Mux'
p53378
S'"2576/2-Wire Quad 16x1 Mux"'
p53379
sS'DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents'
p53380
S'(-200947)'
p53381
sS'DAQmx_Val_SampClkInactiveEdge'
p53382
S'14618'
p53383
sS'DAQmxErrorSampClkTimebaseDCMLock'
p53384
S'(-200237)'
p53385
sS'DAQmxErrorPxiResmanChassisSegmentParseError'
p53386
S'(-26203)'
p53387
sS'DAQmx_Scale_Table_PreScaledVals'
p53388
S'0x1237'
p53389
sS'DAQmxErrorInconsistentExcit'
p53390
S'(-200257)'
p53391
sS'DAQmxErrorConnectionSeparatorAtEndOfList'
p53392
S'(-200059)'
p53393
sS'DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc'
p53394
S'(-200309)'
p53395
sS'DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint'
p53396
S'(-209805)'
p53397
sS'DAQmxErrorMinus12VFuseBlown'
p53398
S'(-201287)'
p53399
sS'DAQmx_Val_CompactDAQ'
p53400
S'14637'
p53401
sS'DAQmx_Val_ChannelCurrent'
p53402
g48971
sS'DAQmx_AO_DAC_Offset_Src'
p53403
S'0x2253'
p53404
sS'DAQmxErrorMStudioOperationDoesNotSupportDeviceContext'
p53405
S'(-201118)'
p53406
sS'DAQmx_Val_HighFreq2Ctr'
p53407
S'10157'
p53408
sS'DAQmx_Exported_SampClk_OutputTerm'
p53409
S'0x1663'
p53410
sS'DAQmxErrorFunctionNotInLibrary'
p53411
S'(-200091)'
p53412
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_64x1_Mux'
p53413
S'"2530/2-Wire 64x1 Mux"'
p53414
sS'DAQmx_Val_ChangeDetection'
p53415
S'12504'
p53416
sS'DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript'
p53417
S'(-200849)'
p53418
sS'DAQmxErrorSpecdDeviceDoesNotSupportRTSI'
p53419
S'(-201030)'
p53420
sS'DAQmxWarningIncorrectDataType'
p53421
S'(26656)'
p53422
sS'DAQmxErrorResourcesInUseForRouteInTask'
p53423
S'(-200370)'
p53424
sS'DAQmxErrorPALFileOpenFault'
p53425
S'(-50204)'
p53426
sS'DAQmxErrorPALResourceNotReserved'
p53427
S'(-50102)'
p53428
sS'DAQmxErrorUnableToDetectExtStimulusFreqDuringCal'
p53429
S'(-200441)'
p53430
sS'DAQmx_AI_ChanCal_Table_ScaledVals'
p53431
S'0x229E'
p53432
sS'DAQmx_CO_CtrTimebase_DigFltr_Enable'
p53433
S'0x2276'
p53434
sS'DAQmxErrorSCCModSimMustMatchSCCCarrierSim'
p53435
S'(-201156)'
p53436
sS'DAQmx_SwitchDev_NumSwitchChans'
p53437
S'0x18E8'
p53438
sS'DAQmxErrorCOOnlyImplicitSampleTimingTypeSupported'
p53439
S'(-201296)'
p53440
sS'DAQmx_DO_MemMapEnable'
p53441
S'0x296B'
p53442
sS'DAQmxErrorPALComponentNotUnloadable'
p53443
S'(-50262)'
p53444
sS'DAQmxErrorInvalidChanName'
p53445
S'(-200461)'
p53446
sS'DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues'
p53447
S'(-200776)'
p53448
sS'DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript'
p53449
S'(-200850)'
p53450
sS'DAQmxErrorInvalidTrigTypeSendsSWTrig'
p53451
S'(-200372)'
p53452
sS'DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x'
p53453
S'(-200900)'
p53454
sS'DAQmx_CI_Encoder_ZIndexVal'
p53455
S'0x0888'
p53456
sS'DAQmxErrorNoMemMapWhenHWTimedSinglePoint'
p53457
S'(-200679)'
p53458
sS'DAQmxErrorDeviceNameIsEmpty_Routing'
p53459
S'(-88718)'
p53460
sS'DAQmxWarningSelfCalCRCNotCorrect'
p53461
S'(200047)'
p53462
sS'DAQmxErrorFileMissingRequiredDAQmxHeader'
p53463
S'(-201064)'
p53464
sS'DAQmxErrorInvalidSCXISlotNumberSpecd'
p53465
S'(-201032)'
p53466
sS'DAQmxWarningADCOverloaded'
p53467
S'(200005)'
p53468
sS'DAQmxErrorMultideviceWithOnDemandTiming'
p53469
S'(-201444)'
p53470
sS'DAQmxErrorChanSizeTooBigForU8PortRead'
p53471
S'(-200563)'
p53472
sS'DAQmxWarningPretrigCoercion'
p53473
S'(200020)'
p53474
sS'DAQmxErrorOutputBufferUnderwrite'
p53475
S'(-200166)'
p53476
sS'DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing'
p53477
S'(-89142)'
p53478
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing'
p53479
S'(-89146)'
p53480
sS'DAQmxErrorInvalidAODataWrite'
p53481
S'(-200561)'
p53482
sS'DAQmxErrorInternalAIInputSrcInMultChanGroups'
p53483
S'(-200675)'
p53484
sS'DAQmxWarningPxiResmanChassisTriggerParseError'
p53485
S'(26206)'
p53486
sS'DAQmxWarningWaitForNextSampClkDetectedMissedSampClk'
p53487
S'(209802)'
p53488
sS'DAQmxErrorCannotSetPropertyWhenTaskIsReserved'
p53489
S'(-201288)'
p53490
sS'DAQmx_Val_PseudoDiff'
p53491
S'12529'
p53492
sS'DAQmx_Val_PullUp'
p53493
S'15950'
p53494
sS'DAQmxErrorNumLinesMismatchInReadOrWrite'
p53495
S'(-200463)'
p53496
sS'DAQmxErrorWaitForNextSampClkDetectedMissedSampClk'
p53497
S'(-209802)'
p53498
sS'DAQmx_Timing_SyncPulseForce'
p53499
S'0x30BA'
p53500
sS'DAQmxErrorCSeriesModSimMustMatchCDAQChassisSim'
p53501
S'(-201158)'
p53502
sS'DAQmxErrorSimultaneousAOWhenNotOnDemandTiming'
p53503
S'(-200831)'
p53504
sS'DAQmxErrorCanExportOnlyDigEdgeTrigs'
p53505
S'(-200896)'
p53506
sS'DAQmx_Val_VoltsPerG'
p53507
S'12510'
p53508
sS'DAQmx_Val_SemiPeriod'
p53509
S'10289'
p53510
sS'DAQmx_Write_TotalSampPerChanGenerated'
p53511
S'0x192B'
p53512
sS'DAQmx_Val_PathStatus_ChannelInUse'
p53513
S'10434'
p53514
sS'DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted'
p53515
S'(-200451)'
p53516
sS'DAQmx_AI_OpenThrmcplDetectEnable'
p53517
S'0x2F72'
p53518
sS'DAQmx_Val_Switch_Topology_2584_1_Wire_Dual_6x1_Mux'
p53519
S'"2584/1-Wire Dual 6x1 Mux"'
p53520
sS'DAQmx_DigEdge_RefTrig_DigFltr_TimebaseSrc'
p53521
S'0x2ED9'
p53522
sS'DAQmx_Dev_DO_Ports'
p53523
S'0x2323'
p53524
sS'DAQmxErrorMemoryMappedHardwareTimedNonBufferedUnsupported'
p53525
S'(-201331)'
p53526
sS'DAQmxErrorNetworkDeviceInUse'
p53527
S'(-201273)'
p53528
sS'DAQmx_AI_Torque_Units'
p53529
S'0x2F77'
p53530
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal'
p53531
S'(-200871)'
p53532
sS'DAQmx_Val_PathStatus_Available'
p53533
S'10431'
p53534
sS'DAQmxErrorVoltageExcitIncompatibleWith2WireCfg'
p53535
S'(-200162)'
p53536
sS'DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart'
p53537
S'0x22BE'
p53538
sS'DAQmx_RefTrig_Delay'
p53539
S'0x1483'
p53540
sS'DAQmxErrorFileCopyFault'
p53541
S'(-26106)'
p53542
sS'DAQmxErrorCanNotPerformOpWhenNoDevInTask'
p53543
S'(-200477)'
p53544
sS'DAQmx_AI_RawSampJustification'
p53545
S'0x0050'
p53546
sS'DAQmxErrorLeadingUnderscoreInString'
p53547
S'(-200555)'
p53548
sS'DAQmxErrorMoreThanOneSyncPulseDetected'
p53549
S'(-201428)'
p53550
sS'DAQmx_Val_mVoltsPerVoltPerRadian'
p53551
S'12508'
p53552
sS'DAQmxErrorNegativeWriteSampleNumber'
p53553
S'(-200287)'
p53554
sS'DAQmxErrorNetworkStatusConnectionLost'
p53555
S'(-201390)'
p53556
sS'DAQmx_Val_Square'
p53557
S'14753'
p53558
sS'DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev'
p53559
S'(-200945)'
p53560
sS'DAQmxErrorSampClockSourceNotSupportedGivenTimingType'
p53561
S'(-200908)'
p53562
sS'DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch'
p53563
S'(-200893)'
p53564
sS'DAQmx_SampClk_MaxRate'
p53565
S'0x22C8'
p53566
sS'DAQmxErrorInvalidNetworkConfiguration'
p53567
S'(-201259)'
p53568
sS'DAQmxErrorTEDSSensorPhysicalChannelConflict'
p53569
S'(-201053)'
p53570
sS'DAQmxErrorInvalidPhysChanType'
p53571
S'(-200430)'
p53572
sS'DAQmxErrorInvalidSubsetLengthBeforeBreakBlock'
p53573
S'(-201210)'
p53574
sS'DAQmx_AO_EnhancedImageRejectionEnable'
p53575
S'0x2241'
p53576
sS'DAQmx_Val_Bit_CouplingTypes_DC'
p53577
S'(1<<1)'
p53578
sS'DAQmx_Val_4Wire'
p53579
S'4'
p53580
sS'DAQmx_CI_DutyCycle_Term'
p53581
S'0x308D'
p53582
sS'DAQmx_Val_mVoltsPerMil'
p53583
S'14836'
p53584
sS'DAQmxWarningPALMemoryAlignmentFault'
p53585
S'(50351)'
p53586
sS'DAQmxErrorPALMemoryHeapNotEmpty'
p53587
S'(-50355)'
p53588
sS'DAQmxWarningRetryCall'
p53589
S'(26853)'
p53590
sS'DAQmxErrorOnlyOneTaskCanPerformDOMemoryMappingAtATime'
p53591
S'(-201124)'
p53592
sS'DAQmx_Val_ChanPerLine'
p53593
g48831
sS'DAQmx_PhysicalChan_AI_SupportedMeasTypes'
p53594
S'0x2FD7'
p53595
sS'DAQmxErrorInvalidGainBasedOnMinMax'
p53596
S'(-200258)'
p53597
sS'DAQmxErrorRoutingDestTermPXIDStarXNotInSystemTimingSlot_Routing'
p53598
S'(-89167)'
p53599
sS'DAQmxErrorUserDefInfoStringBadLength'
p53600
S'(-201267)'
p53601
sS'DAQmxErrorAICouplingAndAIInputSourceConflict'
p53602
S'(-201125)'
p53603
sS'DAQmx_PersistedScale_AllowInteractiveDeletion'
p53604
S'0x22D6'
p53605
sS'DAQmx_CI_CustomScaleName'
p53606
S'0x189E'
p53607
sS'DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask'
p53608
S'(-200854)'
p53609
sS'DAQmxErrorTooManyChansForInternalAIInputSrc'
p53610
S'(-200710)'
p53611
sS'DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth'
p53612
S'0x2272'
p53613
sS'DAQmxWarningUnrecognizedEnumValueEncounteredInStorage'
p53614
S'(200044)'
p53615
sS'DAQmxErrorCantReserveWatchdogTaskWhileOtherTasksReserved'
p53616
S'(-201477)'
p53617
sS'DAQmx_CI_Encoder_ZIndexPhase'
p53618
S'0x0889'
p53619
sS'DAQmxErrorShuntCalFailedOutOfRange'
p53620
S'(-201493)'
p53621
sS'DAQmx_AI_LeadWireResistance'
p53622
S'0x17EE'
p53623
sS'DAQmx_Val_FirstPretrigSamp'
p53624
S'10427'
p53625
sS'DAQmxErrorInternalClkDCMBecameUnlocked'
p53626
S'(-200386)'
p53627
sS'DAQmxErrorPHYBitErrorRateLimitExceeded'
p53628
S'(-201195)'
p53629
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_4x32_Matrix'
p53630
S'"2529/2-Wire 4x32 Matrix"'
p53631
sS'DAQmxErrorStartTrigSrcEqualToSampClkSrc'
p53632
S'(-200953)'
p53633
sS'DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint'
p53634
S'(-200975)'
p53635
sS'DAQmx_RefClk_Rate'
p53636
S'0x1315'
p53637
sS'DAQmxErrorPolyCoeffsInconsistent'
p53638
S'(-200537)'
p53639
sS'DAQmxWarningPALLogicalBufferEmpty'
p53640
S'(50406)'
p53641
sS'DAQmxErrorScriptDataUnderflow'
p53642
S'(-200316)'
p53643
sS'DAQmx_Exported_AIConvClk_Pulse_Polarity'
p53644
S'0x1688'
p53645
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_Enable'
p53646
S'0x21F1'
p53647
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Sixteen_4x1_Mux'
p53648
S'"2576/2-Wire Sixteen 4x1 Mux"'
p53649
sS'DAQmx_Val_Pulse_Freq'
p53650
S'10119'
p53651
sS'DAQmx_AO_PowerAmp_Offset'
p53652
S'0x3066'
p53653
sS'DAQmxErrorInvalidTask'
p53654
S'(-200088)'
p53655
sS'DAQmx_PhysicalChan_AO_TermCfgs'
p53656
S'0x29A3'
p53657
sS'DAQmxWarningPXIe5611_NotConfigured'
p53658
S'(200076)'
p53659
sS'DAQmx_CI_Pulse_Freq_DigFltr_TimebaseRate'
p53660
S'0x2F09'
p53661
sS'DAQmxErrorTEDSMappingMethodInvalidOrUnsupported'
p53662
S'(-200765)'
p53663
sS'DAQmxErrorDeviceNotSupportedIn64Bit'
p53664
S'(-201274)'
p53665
sS'DAQmxErrorSCXISerialCommunication'
p53666
S'(-200015)'
p53667
sS'DAQmx_DigEdge_RefTrig_DigFltr_TimebaseRate'
p53668
S'0x2EDA'
p53669
sS'DAQmxErrorRelayNameNotSpecifiedInList'
p53670
S'(-200531)'
p53671
sS'DAQmx_AI_Atten'
p53672
S'0x1801'
p53673
sS'DAQmxErrorCOWritePulseHighTicksNotSupported'
p53674
S'(-200688)'
p53675
sS'_NI_int16_DEFINED_'
p53676
g48682
sS'DAQmx_CI_SampClkOverrunSentinelVal'
p53677
S'0x3094'
p53678
sS'DAQmx_Val_Meters'
p53679
S'10219'
p53680
sS'DAQmx_Exported_AIHoldCmpltEvent_OutputTerm'
p53681
S'0x18ED'
p53682
sS'DAQmxErrorAIMaxTooSmall'
p53683
S'(-200580)'
p53684
sS'DAQmxErrorLibraryNotPresent'
p53685
S'(-200090)'
p53686
sS'DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc'
p53687
S'0x221B'
p53688
sS'DAQmxErrorInconsistentNumSamplesToWrite'
p53689
S'(-200103)'
p53690
sS'DAQmxErrorRuntimeAborting_Routing'
p53691
S'(-88710)'
p53692
sS'DAQmx_Exported_ChangeDetectEvent_Pulse_Polarity'
p53693
S'0x2303'
p53694
sS'DAQmx_Val_Bridge'
p53695
S'15908'
p53696
sS'DAQmx_Dev_PXI_ChassisNum'
p53697
S'0x2329'
p53698
sS'DAQmxErrorSCXICableDevMustNotBeSimWhenModIsNotSim'
p53699
S'(-201154)'
p53700
sS'DAQmx_Dev_AI_MaxMultiChanRate'
p53701
S'0x298D'
p53702
sS'DAQmx_AI_Max'
p53703
S'0x17DD'
p53704
sS'DAQmx_Val_Switch_Topology_2568_31_SPST'
p53705
S'"2568/31-SPST"'
p53706
sS'DAQmxErrorReadNoInputChansInTask'
p53707
S'(-200460)'
p53708
sS'DAQmx_Read_CommonModeRangeErrorChansExist'
p53709
S'0x2A98'
p53710
sS'DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate'
p53711
S'(-200870)'
p53712
sS'DAQmx_CO_ConstrainedGenMode'
p53713
S'0x29F2'
p53714
sS'DAQmx_Write_ExternalOvervoltageChans'
p53715
S'0x30BC'
p53716
sS'DAQmxErrorCustomScaleDoesNotExist'
p53717
S'(-200378)'
p53718
sS'DAQmxErrorAOPropertiesCauseVoltageOverMax'
p53719
S'(-200582)'
p53720
sS'DAQmx_Write_RelativeTo'
p53721
S'0x190C'
p53722
sS'DAQmxErrorThrmcplCalibrationChannelsOpen'
p53723
S'(-201372)'
p53724
sS'DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev'
p53725
S'(-200860)'
p53726
sS'DAQmxErrorDeviceAndConnectorSpecdAlreadyOccupied'
p53727
S'(-201047)'
p53728
sS'DAQmx_AO_OutputType'
p53729
S'0x1108'
p53730
sS'DAQmx_AI_DCOffset'
p53731
S'0x2A89'
p53732
sS'DAQmxWarningPxiResmanControllerParseError'
p53733
S'(26302)'
p53734
sS'DAQmxWarningPALFirmwareFault'
p53735
S'(50151)'
p53736
sS'DAQmxErrorDelayFromSampClkWithExtConv'
p53737
S'(-200435)'
p53738
sS'DAQmx_AI_SoundPressure_dBRef'
p53739
S'0x29B1'
p53740
sS'DAQmx_CI_PulseWidth_DigSync_Enable'
p53741
S'0x220E'
p53742
sS'DAQmxErrorWaveformLengthNotMultipleOfIncr'
p53743
S'(-200400)'
p53744
sS'DAQmx_Val_Temp_Thrmstr'
p53745
S'10302'
p53746
sS'DAQmxWarningPALFeatureNotSupported'
p53747
S'(50256)'
p53748
sS'DAQmx_Val_HaltOutputAndError'
p53749
S'14615'
p53750
sS'DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode'
p53751
S'(-200812)'
p53752
sS'DAQmxErrorInvalidPhysChanName'
p53753
S'(-201237)'
p53754
sS'DAQmx_CI_Pulse_Time_DigSync_Enable'
p53755
S'0x2F12'
p53756
sS'DAQmxErrorInvalidDeviceID'
p53757
S'(-200220)'
p53758
sS'DAQmxErrorChanSizeTooBigForU16PortWrite'
p53759
S'(-200879)'
p53760
sS'DAQmxErrorDuplicatePhysicalChansNotSupported'
p53761
S'(-200072)'
p53762
sS'DAQmxWarningInconsistentFileFault'
p53763
S'(26655)'
p53764
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_4x32_Matrix'
p53765
S'"1129/2-Wire Dual 4x32 Matrix"'
p53766
sS'DAQmx_AI_StrainGage_PoissonRatio'
p53767
S'0x0998'
p53768
sS'DAQmxErrorDigLinesReservedOrUnavailable'
p53769
S'(-200587)'
p53770
sS'DAQmxErrorTaskCannotRestartFirstSampNotAvailToGenerate'
p53771
S'(-201138)'
p53772
sS'DAQmxWarningUnableToDisconnectPorts'
p53773
S'(200059)'
p53774
sS'DAQmxErrorSampleTimingTypeAndDataXferMode'
p53775
S'(-200218)'
p53776
sS'DAQmxErrorChansCantAppearInSameTask'
p53777
S'(-200713)'
p53778
sS'DAQmxWarningReadNotCompleteBeforeSampClk'
p53779
S'(209800)'
p53780
sS'DAQmxErrorCAPIReservedParamNotNULLNorEmpty'
p53781
S'(-200493)'
p53782
sS'DAQmx_Val_ChannelVoltage'
p53783
g48831
sS'DAQmxErrorPALComponentNotFound'
p53784
S'(-50251)'
p53785
sS'DAQmxErrorMarkerPosInvalidInBreakBlock'
p53786
S'(-201215)'
p53787
sS'DAQmxErrorSampClkTimingTypeWhenTristateIsFalse'
p53788
S'(-200839)'
p53789
sS'DAQmxWarningPropertyVersionNew'
p53790
S'(200024)'
p53791
sS'DAQmxErrorPxiResmanPciDescriptionStringParseError'
p53792
S'(-26550)'
p53793
sS'DAQmxErrorSamplesWillNeverBeGenerated'
p53794
S'(-200288)'
p53795
sS'DAQmxErrorPALResourceOwnedBySystem'
p53796
S'(-50100)'
p53797
sS'DAQmx_Val_Best50HzRejection'
p53798
S'14713'
p53799
sS'DAQmxErrorCannotHandshakeWithPort0'
p53800
S'(-200127)'
p53801
sS'DAQmxWarningUSBHotfixForDAQ'
p53802
S'(200078)'
p53803
sS'DAQmx_CI_MaxMeasPeriod'
p53804
S'0x3095'
p53805
sS'DAQmx_Val_PPS'
p53806
S'10080'
p53807
sS'DAQmxErrorNoWatchdogOutputOnPortReservedForInput'
p53808
S'(-200667)'
p53809
sS'DAQmx_Val_B_Type_TC'
p53810
S'10047'
p53811
sS'DAQmx_RealTime_ReportMissedSamp'
p53812
S'0x2319'
p53813
sS'DAQmx_CI_Encoder_ZInputLogicLvlBehavior'
p53814
S'0x30A8'
p53815
sS'DAQmx_CI_CountEdges_DigFltr_TimebaseRate'
p53816
S'0x21F9'
p53817
sS'DAQmxErrorPALFunctionNotFound'
p53818
S'(-50255)'
p53819
sS'DAQmx_AnlgEdge_RefTrig_DigFltr_Enable'
p53820
S'0x2EE6'
p53821
sS'DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals'
p53822
S'(-200658)'
p53823
sS'DAQmx_Read_OpenCurrentLoopChans'
p53824
S'0x2A0A'
p53825
sS'DAQmx_DI_DigFltr_EnableBusMode'
p53826
S'0x2EFE'
p53827
sS'DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance'
p53828
S'(-200513)'
p53829
sS'DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted'
p53830
S'(-200473)'
p53831
sS'DAQmxErrorChangeDetectionIncompatibleWithProgrammedIO'
p53832
S'(-201225)'
p53833
sS'DAQmx_AI_Force_Units'
p53834
S'0x2F75'
p53835
sS'DAQmxErrorResourcesInUseForInversionInTask'
p53836
S'(-200366)'
p53837
sS'DAQmx_Dev_AI_CurrentRngs'
p53838
S'0x2991'
p53839
sS'DAQmx_AnlgWin_StartTrig_Coupling'
p53840
S'0x2234'
p53841
sS'DAQmxWarningPALFunctionObsolete'
p53842
S'(50254)'
p53843
sS'DAQmx_ArmStart_Term'
p53844
S'0x2F7F'
p53845
sS'DAQmxErrorCantConfigureTEDSForChan'
p53846
S'(-200791)'
p53847
sS'DAQmx_CI_Pulse_Ticks_DigSync_Enable'
p53848
S'0x2F1A'
p53849
sS'DAQmx_SwitchDev_NumColumns'
p53850
S'0x18EA'
p53851
sS'DAQmxErrorModuleMismatchInSameTimedTask'
p53852
S'(-201399)'
p53853
sS'DAQmx_SwitchScan_RepeatMode'
p53854
S'0x1248'
p53855
sS'DAQmx_AO_DAC_Ref_ConnToGnd'
p53856
S'0x0130'
p53857
sS'DAQmx_AI_FilterDelayAdjustment'
p53858
S'0x3074'
p53859
sS'DAQmxErrorSampleRateTooHighForADCTimingMode'
p53860
S'(-201208)'
p53861
sS'DAQmxErrorMultipleRelaysForSingleRelayOp'
p53862
S'(-200211)'
p53863
sS'DAQmxErrorBufferTooSmallForString'
p53864
S'(-200228)'
p53865
sS'DAQmxErrorSwitchOpFailedDueToPrevError'
p53866
S'(-200674)'
p53867
sS'DAQmx_AnlgWin_StartTrig_Src'
p53868
S'0x1400'
p53869
sS'DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc'
p53870
S'(-200780)'
p53871
sS'DAQmxErrorPALComponentTooNew'
p53872
S'(-50253)'
p53873
sS'DAQmxErrorAODuringCounter1DMAConflict'
p53874
S'(-200079)'
p53875
sS'DAQmx_Val_Bit_TermCfg_NRSE'
p53876
S'(1<<1)'
p53877
sS'DAQmx_Val_SampClkPeriods'
p53878
S'10286'
p53879
sS'DAQmx_DigEdge_ArmStartTrig_Src'
p53880
S'0x1417'
p53881
sS'DAQmxErrorCalPasswordNotSupported'
p53882
S'(-201006)'
p53883
sS'DAQmx_Buf_Output_OnbrdBufSize'
p53884
S'0x230B'
p53885
sS'DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript'
p53886
S'(-201013)'
p53887
sS'DAQmxWarningInvalidAttribute'
p53888
S'(26806)'
p53889
sS'DAQmx_Logging_TDMS_Operation'
p53890
S'0x2EC7'
p53891
sS'DAQmx_AnlgWin_PauseTrig_DigFltr_MinPulseWidth'
p53892
S'0x2EF6'
p53893
sS'DAQmx_Write_PowerSupplyFaultChans'
p53894
S'0x29ED'
p53895
sS'DAQmxErrorOutputFIFOUnderflow'
p53896
S'(-200016)'
p53897
sS'DAQmx_DigEdge_RefTrig_DigSync_Enable'
p53898
S'0x2EDB'
p53899
sS'DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript'
p53900
S'(-201010)'
p53901
sS'DAQmx_AI_EddyCurrentProxProbe_Units'
p53902
S'0x2AC0'
p53903
sS'DAQmxErrorActionNotSupportedTaskNotWatchdog'
p53904
S'(-200635)'
p53905
sS'DAQmxErrorMismatchedElecPhysValues'
p53906
S'(-201335)'
p53907
sS'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning'
p53908
S'(-200846)'
p53909
sS'DAQmxErrorChanCalRepeatedNumberInPreScaledVals'
p53910
S'(-200939)'
p53911
sS'DAQmx_Val_QuarterBridgeI'
p53912
S'10271'
p53913
sS'DAQmxErrorPALResourceNotAvailable'
p53914
S'(-50101)'
p53915
sS'DAQmx_CO_PulseDone'
p53916
S'0x190E'
p53917
sS'DAQmx_AI_Bridge_Balance_CoarsePot'
p53918
S'0x17F1'
p53919
sS'DAQmx_Val_5V'
p53920
S'14619'
p53921
sS'DAQmx_Val_WaitForInterrupt'
p53922
S'12523'
p53923
sS'DAQmxErrorCannotOpenTopologyCfgFile'
p53924
S'(-200328)'
p53925
sS'DAQmxErrorOutputDriveTypeMemMappingConflict'
p53926
S'(-201129)'
p53927
sS'DAQmxWarningPxiResmanChassisBridgeNotFound'
p53928
S'(26201)'
p53929
sS'DAQmx_AI_Freq_Hyst'
p53930
S'0x0814'
p53931
sS'DAQmxErrorInvalidTableIdentifier'
p53932
S'(-201067)'
p53933
sS'DAQmx_DigPattern_RefTrig_Src'
p53934
S'0x1437'
p53935
sS'DAQmxErrorInvalidRangeStatementCharInList'
p53936
S'(-200208)'
p53937
sS'DAQmxWarningTrigmanLineAlreadyReserved'
p53938
S'(26005)'
p53939
sS'DAQmxErrorPALBadAddressClass'
p53940
S'(-50015)'
p53941
sS'DAQmxErrorNoCommonTrigLineForTaskRoute'
p53942
S'(-200395)'
p53943
sS'DAQmxErrorWriteFailsBufferSizeAutoConfigured'
p53944
S'(-200547)'
p53945
sS'DAQmx_AI_Thrmcpl_LeadOffsetVoltage'
p53946
S'0x2FB8'
p53947
sS'DAQmxWarningAIConvRateTooLow'
p53948
S'(200018)'
p53949
sS'DAQmx_ChangeDetect_DI_Tristate'
p53950
S'0x2EFA'
p53951
sS'DAQmxWarningFileCloseFault'
p53952
S'(26105)'
p53953
sS'DAQmx_AI_Bridge_ShuntCal_ShuntCalBResistance'
p53954
S'0x2F7A'
p53955
sS'DAQmxErrorLines4To7ConfiguredForInput'
p53956
S'(-200124)'
p53957
sS'DAQmxErrorCommDeviceForPXIBackplaneNotInRightmostSlot'
p53958
S'(-201186)'
p53959
sS'DAQmxErrorCanNotPerformOpWhenNoChansInTask'
p53960
S'(-200478)'
p53961
sS'DAQmx_Val_PXIe'
p53962
S'14706'
p53963
sS'DAQmx_CI_TwoEdgeSep_FirstEdge'
p53964
S'0x0833'
p53965
sS'DAQmxErrorDSFReadyForOutputNotAsserted'
p53966
S'(-200585)'
p53967
sS'DAQmxErrorHardwareTooNewForSoftware'
p53968
S'(-201139)'
p53969
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Mux'
p53970
S'"2501/2-Wire 24x1 Mux"'
p53971
sS'DAQmxErrorInvalidAcqTypeForFREQOUT'
p53972
S'(-200747)'
p53973
sS'DAQmx_CO_Count'
p53974
S'0x0293'
p53975
sS'DAQmxErrorExpectedSeparatorInList'
p53976
S'(-200061)'
p53977
sS'DAQmx_Dev_AI_FreqRngs'
p53978
S'0x2992'
p53979
sS'DAQmxErrordBReferenceValueNotGreaterThanZero'
p53980
S'(-201179)'
p53981
sS'DAQmxErrorWriteWhenTaskNotRunningCOFreq'
p53982
S'(-200875)'
p53983
sS'DAQmx_Val_Notch'
p53984
S'16074'
p53985
sS'DAQmxErrorSCXIModuleNotFound'
p53986
S'(-200073)'
p53987
sS'DAQmxErrorPxiResmanChassisBridgeParseError'
p53988
S'(-26205)'
p53989
sS'DAQmx_CI_Encoder_ZInput_DigFltr_Enable'
p53990
S'0x2205'
p53991
sS'DAQmxErrorCommDeviceForPXIBackplaneNotPXI'
p53992
S'(-201184)'
p53993
sS'DAQmx_AI_Gain'
p53994
S'0x1818'
p53995
sS'DAQmxErrorFewerThan2PreScaledVals'
p53996
S'(-200434)'
p53997
sS'DAQmx_CO_Pulse_HighTicks'
p53998
S'0x1169'
p53999
sS'DAQmxErrorOnlyContinuousScanSupported'
p54000
S'(-200192)'
p54001
sS'DAQmx_CI_Pulse_Time_StartEdge'
p54002
S'0x2F0D'
p54003
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing'
p54004
S'(-89143)'
p54005
sS'DAQmxErrorMStudioInvalidPolyDirection'
p54006
S'(-200594)'
p54007
sS'DAQmx_Val_TeeRosette'
p54008
S'15970'
p54009
sS'DAQmxErrorReadWaitNextSampClkWaitMismatchOne'
p54010
S'(-200988)'
p54011
sS'DAQmxErrorSampClkRateInvalid'
p54012
S'(-201093)'
p54013
sS'DAQmxErrorInvalidCalConstGainDACValue'
p54014
S'(-200516)'
p54015
sS'DAQmx_Val_KilogramForce'
p54016
S'15877'
p54017
sS'DAQmx_AO_FuncGen_ModulationType'
p54018
S'0x2A22'
p54019
sS'DAQmx_CI_PulseWidth_Term'
p54020
S'0x18AA'
p54021
sS'DAQmxWarningCAPIStringTruncatedToFitBuffer'
p54022
S'(200026)'
p54023
sS'DAQmxErrorAttrCannotBeRead'
p54024
S'(-200232)'
p54025
sS'DAQmx_Val_R2'
p54026
S'12466'
p54027
sS'DAQmx_Val_R3'
p54028
S'12467'
p54029
sS'DAQmx_Val_R1'
p54030
S'12465'
p54031
sS'DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed'
p54032
S'(-200884)'
p54033
sS'DAQmx_Val_R4'
p54034
S'14813'
p54035
sS'DAQmxErrorTEDSSensorNotDetected'
p54036
S'(-200709)'
p54037
sS'DAQmx_AnlgEdge_RefTrig_Slope'
p54038
S'0x1423'
p54039
sS'DAQmx_DI_DigFltr_Enable'
p54040
S'0x21D6'
p54041
sS'DAQmxWarningCounter0DMADuringAIConflict'
p54042
S'(200008)'
p54043
sS'DAQmx_Val_Best60HzRejection'
p54044
S'14714'
p54045
sS'DAQmxErrorCODAQmxWriteMultipleChans'
p54046
S'(-200794)'
p54047
sS'DAQmxErrorSampleClockRateIsTooFastForSampleClockTiming'
p54048
S'(-201178)'
p54049
sS'DAQmxErrorCJCChanConflictsWithNonThermocoupleChan'
p54050
S'(-201187)'
p54051
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2'
p54052
S'(-201023)'
p54053
sS'DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr'
p54054
S'(-200347)'
p54055
sS'DAQmx_Write_PowerSupplyFaultChansExist'
p54056
S'0x29EC'
p54057
sS'DAQmx_DigPattern_RefTrig_Pattern'
p54058
S'0x2187'
p54059
sS'DAQmx_Dev_AI_Gains'
p54060
S'0x2993'
p54061
sS'DAQmxErrorWaveformNameTooLong'
p54062
S'(-200534)'
p54063
sS'DAQmxErrorSelfCalibrationDataTooNewForSoftware'
p54064
S'(-201144)'
p54065
sS'DAQmx_Val_Switch_Topology_2725_Independent'
p54066
S'"2725/Independent"'
p54067
sS'DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2'
p54068
S'(-200917)'
p54069
sS'DAQmx_CI_SemiPeriod_LogicLvlBehavior'
p54070
S'0x30B0'
p54071
sS'DAQmxErrorReservationConflict'
p54072
S'(-201352)'
p54073
sS'DAQmxWarningPALPhysicalBufferEmpty'
p54074
S'(50408)'
p54075
sS'DAQmx_Sys_NIDAQMinorVersion'
p54076
S'0x1923'
p54077
sS'DAQmx_AIConv_ActiveEdge'
p54078
S'0x1853'
p54079
sS'DAQmxErrorCantSaveTaskWithPerDeviceTimingProperties'
p54080
S'(-201099)'
p54081
sS'DAQmx_SampClk_DigSync_Enable'
p54082
S'0x2222'
p54083
sS'DAQmx_AnlgLvl_PauseTrig_DigSync_Enable'
p54084
S'0x2EF4'
p54085
sS'DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling'
p54086
S'0x22DB'
p54087
sS'DAQmxErrorScaledIQWaveformTooLarge'
p54088
S'(-201264)'
p54089
sS'DAQmxErrorStartTrigDigPatternChanNotInTask'
p54090
S'(-200887)'
p54091
sS'DAQmxErrorOnlyUseStartTrigSrcPrptyWithDevDataLines'
p54092
S'(-201137)'
p54093
sS'DAQmxErrorStartTrigDelayWithExtSampClk'
p54094
S'(-200436)'
p54095
sS'DAQmxErrorSCXIModSimMustMatchSCXIChassisSim'
p54096
S'(-201152)'
p54097
sS'DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar'
p54098
S'(-200810)'
p54099
sS'DAQmx_CI_Pulse_Freq_Start_Edge'
p54100
S'0x2F05'
p54101
sS'DAQmx_CO_RdyForNewVal'
p54102
S'0x22FF'
p54103
sS'DAQmxErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan'
p54104
S'(-201085)'
p54105
sS'DAQmxWarningTableCRCNotCorrect'
p54106
S'(200045)'
p54107
sS'DAQmxErrorRecordOverwritten'
p54108
S'(-200006)'
p54109
sS'DAQmxErrorDigFilterNotAvailableOnTerm'
p54110
S'(-200772)'
p54111
sS'DAQmx_Exported_HshkEvent_Pulse_Polarity'
p54112
S'0x22C0'
p54113
sS'DAQmxErrorCannotConnectChannelToItself'
p54114
S'(-200187)'
p54115
sS'DAQmx_Val_HighSpeed'
p54116
S'14712'
p54117
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_4x32_Matrix'
p54118
S'"1130/2-Wire 4x32 Matrix"'
p54119
sS'DAQmxErrorPXISAConfigurationLocked'
p54120
S'(-26808)'
p54121
sS'DAQmxWarningPALMemoryHeapNotEmpty'
p54122
S'(50355)'
p54123
sS'DAQmx_Scale_ScaledUnits'
p54124
S'0x191B'
p54125
sS'DAQmxErrorIfElseBlockNotAllowedInBreakBlock'
p54126
S'(-201218)'
p54127
sS'DAQmx_Write_WaitMode'
p54128
S'0x22B1'
p54129
sS'DAQmx_CI_Period_MeasMeth'
p54130
S'0x192C'
p54131
sS'DAQmxErrorAssociatedChansHaveConflictingProps'
p54132
S'(-201467)'
p54133
sS'DAQmxErrorZeroReversePolyScaleCoeffs'
p54134
S'(-200408)'
p54135
sS'DAQmx_CI_Timestamp_InitialSeconds'
p54136
S'0x22B4'
p54137
sS'DAQmxWarningPxiResmanChassisFileNotFound'
p54138
S'(26200)'
p54139
sS'DAQmxErrorDifferentInternalAIInputSources'
p54140
S'(-200573)'
p54141
sS'DAQmx_AO_LoadImpedance'
p54142
S'0x0121'
p54143
sS'DAQmxErrorCompressedSampSizeExceedsResolution'
p54144
S'(-200957)'
p54145
sS'DAQmxWarningTooManyInterruptsPerSecond'
p54146
S'(200014)'
p54147
sS'DAQmx_Val_HandshakeTriggerDeasserts'
p54148
S'12553'
p54149
sS'DAQmx_AnlgWin_StartTrig_DigFltr_MinPulseWidth'
p54150
S'0x2F00'
p54151
sS'DAQmxErrorRequiredDependencyNotFound'
p54152
S'(-201235)'
p54153
sS'DAQmxErrorIntExcitSrcNotAvailable'
p54154
S'(-200161)'
p54155
sS'DAQmxWarningPXIe5665_5603_IncorrectlyConfigured'
p54156
S'(200067)'
p54157
sS'DAQmx_CO_UseOnlyOnBrdMem'
p54158
S'0x2ECB'
p54159
sS'DAQmx_Val_PathStatus_SourceChannelConflict'
p54160
S'10435'
p54161
sS'DAQmx_Val_FuncGen'
p54162
S'14750'
p54163
sS'DAQmx_CI_SampClkOverrunBehavior'
p54164
S'0x3093'
p54165
sS'DAQmxErrorReadBufferTooSmall'
p54166
S'(-200229)'
p54167
sS'DAQmx_Val_Cfg_Default'
p54168
S'-1'
p54169
sS'DAQmxErrorSamplesCanNotYetBeWritten'
p54170
S'(-200292)'
p54171
sS'DAQmx_Val_Bit_TriggerUsageTypes_Pause'
p54172
S'(1<<1)'
p54173
sS'DAQmxErrorWriteFailedBecauseWatchdogExpired'
p54174
S'(-200678)'
p54175
sS'DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput'
p54176
S'(-200726)'
p54177
sS'DAQmx_Val_Switch_Topology_1175_2_Wire_95x1_Mux'
p54178
S'"1175/2-Wire 95x1 Mux"'
p54179
sS'DAQmxErrorAnalogBusStateInconsistent'
p54180
S'(-201405)'
p54181
sS'DAQmx_CI_Encoder_ZInput_DigSync_Enable'
p54182
S'0x2209'
p54183
sS'DAQmx_Val_Switch_Topology_2515_Independent'
p54184
S'"2515/Independent"'
p54185
sS'DAQmx_Val_Switch_Topology_2596_Dual_6x1_Mux'
p54186
S'"2596/Dual 6x1 Mux"'
p54187
sS'DAQmx_Dev_Accessory_ProductNums'
p54188
S'0x2F6E'
p54189
sS'DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType'
p54190
S'(-200911)'
p54191
sS'DAQmxErrorCannotTristate8255OutputLines'
p54192
S'(-200116)'
p54193
sS'DAQmxErrorWriteFailedBecauseWatchdogChangedLineDirection'
p54194
S'(-201433)'
p54195
sS'DAQmxWarningPXISystemDescriptionParseError'
p54196
S'(26809)'
p54197
sS'DAQmxErrorPhysChanDevNotInTask'
p54198
S'(-200648)'
p54199
sS'DAQmx_SwitchChan_Bandwidth'
p54200
S'0x0640'
p54201
sS'DAQmxWarningTrigmanLineNotReserved'
p54202
S'(26003)'
p54203
sS'DAQmxErrorIdentifierInListTooLong'
p54204
S'(-200058)'
p54205
sS'DAQmx_AI_RawSampSize'
p54206
S'0x22DA'
p54207
sS'DAQmx_Val_EnteringWin'
p54208
S'10163'
p54209
sS'DAQmxErrorSCCInvalidFirstStage'
p54210
S'(-201325)'
p54211
sS'DAQmxWarningTrigmanUnsupportedOper'
p54212
S'(26001)'
p54213
sS'DAQmx_Val_SCXI1124Range0to20mA'
p54214
S'14635'
p54215
sS'DAQmxErrorRouteSrcAndDestSame_Routing'
p54216
S'(-89131)'
p54217
sS'DAQmxErrorCardDetectedDoesNotMatchExpectedCard'
p54218
S'(-201404)'
p54219
sS'DAQmxErrorInvalidINIFileSyntax'
p54220
S'(-201060)'
p54221
sS'DAQmxErrorInvalidCalArea'
p54222
S'(-200438)'
p54223
sS'DAQmxErrorNoInputOnPortCfgdForWatchdogOutput'
p54224
S'(-200666)'
p54225
sS'DAQmx_Dev_TCPIP_EthernetIP'
p54226
S'0x2A8C'
p54227
sS'DAQmxErrorCannotScanWithCurrentTopology'
p54228
S'(-200205)'
p54229
sS'DAQmxErrorCantSyncToExtStimulusFreqDuringCal'
p54230
S'(-200442)'
p54231
sS'DAQmxErrorCounterNonResponsiveAndReset'
p54232
S'(-201313)'
p54233
sS'DAQmx_Dev_CI_PhysicalChans'
p54234
S'0x2324'
p54235
sS'DAQmxErrorCVIFailedToLoadDAQmxDLL'
p54236
S'(-200397)'
p54237
sS'DAQmxErrorDevImportFailedDeviceNotSupportedOnDestination'
p54238
S'(-201169)'
p54239
sS'DAQmxErrorAOMinMaxNotInDACRange'
p54240
S'(-200759)'
p54241
sS'DAQmxErrorPhysChanReservedForInputWhenDesiredForOutput'
p54242
S'(-201163)'
p54243
sS'DAQmxErrorNoIEPEWithACNotAllowed'
p54244
S'(-201498)'
p54245
sS'DAQmxErrorInputFIFOOverflow2'
p54246
S'(-200361)'
p54247
sS'DAQmxWarningPxiResmanSystemDescriptionWriteError'
p54248
S'(26402)'
p54249
sS'DAQmx_AO_TermCfg'
p54250
S'0x188E'
p54251
sS'DAQmx_SampClk_Term'
p54252
S'0x2F1B'
p54253
sS'DAQmx_Val_Action_Cancel'
p54254
g48971
sS'DAQmxErrorPALBadPointer'
p54255
S'(-50004)'
p54256
sS'DAQmx_Val_DynAvg'
p54257
S'16065'
p54258
sS'DAQmx_CO_DataXferReqCond'
p54259
S'0x2ECD'
p54260
sS'DAQmxErrorSampClkSrcInvalidForOutputValidForInput'
p54261
S'(-200610)'
p54262
sS'DAQmx_Val_Bit_TermCfg_PseudoDIFF'
p54263
S'(1<<3)'
p54264
sS'DAQmxErrorNumPtsToComputeNotPositive'
p54265
S'(-200401)'
p54266
sS'DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg'
p54267
S'(-200771)'
p54268
sS'DAQmx_AI_RVDT_SensitivityUnits'
p54269
S'0x219B'
p54270
sS'DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize'
p54271
S'(-200894)'
p54272
sS'DAQmxErrorAIMinNotSpecified'
p54273
S'(-200694)'
p54274
sS'DAQmxErrorInvalidCarrierSlotNumberSpecd'
p54275
S'(-201360)'
p54276
sS'DAQmx_CI_CountEdges_DigFltr_MinPulseWidth'
p54277
S'0x21F7'
p54278
sS'DAQmx_Dev_AO_SampModes'
p54279
S'0x2FDD'
p54280
sS'DAQmxErrorPALDMALinkEventMissed'
p54281
S'(-50450)'
p54282
sS'DAQmx_MasterTimebase_Src'
p54283
S'0x1343'
p54284
sS'DAQmx_DigPattern_PauseTrig_Src'
p54285
S'0x216F'
p54286
sS'DAQmx_Write_DigitalLines_BytesPerChan'
p54287
S'0x217F'
p54288
sS'DAQmxWarningOutputGainTooLowForRFFreq'
p54289
S'(200031)'
p54290
sS'DAQmx_Task_Complete'
p54291
S'0x1274'
p54292
sS'DAQmxErrorResourceReservedWithConflictingSettings'
p54293
S'(-201105)'
p54294
sS'DAQmxErrorHandlerNotFound'
p54295
S'(-26657)'
p54296
sS'DAQmx_AO_MemMapEnable'
p54297
S'0x188F'
p54298
sS'DAQmx_CI_PulseWidth_DigFltr_TimebaseRate'
p54299
S'0x220D'
p54300
sS'DAQmx_SwitchChan_MaxACCarryCurrent'
p54301
S'0x0648'
p54302
sS'DAQmxErrorChannelNotAvailableInParallelMode'
p54303
S'(-200150)'
p54304
sS'DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning'
p54305
S'(-200983)'
p54306
sS'DAQmx_AIConv_Rate'
p54307
S'0x1848'
p54308
sS'DAQmxErrorSCXICommDevConnector0MustBeCabledToModule'
p54309
S'(-201241)'
p54310
sS'DAQmxErrorTrigmanInvalidParameter'
p54311
S'(-26002)'
p54312
sS'DAQmxErrorInvalidWirelessChannel'
p54313
S'(-201256)'
p54314
sS'DAQmxErrorIOError'
p54315
S'(-26652)'
p54316
sS'DAQmx_Val_AdvanceTrigger'
p54317
S'12488'
p54318
sS'DAQmx_Val_Switch_Topology_1127_2_Wire_32x1_Mux'
p54319
S'"1127/2-Wire 32x1 Mux"'
p54320
sS'DAQmx_CI_ThreshVoltage'
p54321
S'0x30B7'
p54322
sS'DAQmx_Exported_RefTrig_Pulse_Polarity'
p54323
S'0x0591'
p54324
sS'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing'
p54325
S'(-89141)'
p54326
sS'DAQmx_Val_FixedHighFreq'
p54327
S'14709'
p54328
sS'DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseRate'
p54329
S'0x2F02'
p54330
sS'DAQmx_Dev_Chassis_ModuleDevNames'
p54331
S'0x29B6'
p54332
sS'DAQmx_AI_Bridge_NomResistance'
p54333
S'0x17EC'
p54334
sS'DAQmxErrorMultipleWritesBetweenSampClks'
p54335
S'(-200748)'
p54336
sS'DAQmxErrorPALMessageOverflow'
p54337
S'(-50650)'
p54338
sS'DAQmxErrorTrigLineNotFound_Routing'
p54339
S'(-89125)'
p54340
sS'DAQmx_Val_AO'
p54341
S'10102'
p54342
sS'DAQmx_Logging_FilePreallocationSize'
p54343
S'0x2FC6'
p54344
sS'DAQmx_Val_AM'
p54345
S'14756'
p54346
sS'DAQmxErrorBuiltInTempSensorNotSupported'
p54347
S'(-200255)'
p54348
sS'DAQmx_Val_AI'
p54349
S'10100'
p54350
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Sixteen_16x1_Mux'
p54351
S'"1130/1-Wire Sixteen 16x1 Mux"'
p54352
sS'DAQmx_Read_Offset'
p54353
S'0x190B'
p54354
sS'DAQmx_Val_AC'
p54355
S'10045'
p54356
sS'DAQmxErrorReadWaitNextSampClkWaitMismatchTwo'
p54357
S'(-200989)'
p54358
sS'DAQmxErrorOverloadedChansExistNotRead'
p54359
S'(-200362)'
p54360
sS'DAQmx_Dev_AI_LowpassCutoffFreqDiscreteVals'
p54361
S'0x2995'
p54362
sS'DAQmxErrorInvalidCalAdjustmentPointValues'
p54363
S'(-201470)'
p54364
sS'DAQmxErrorPALIrrelevantAttribute'
p54365
S'(-50001)'
p54366
sS'DAQmx_Exported_AdvCmpltEvent_Pulse_Polarity'
p54367
S'0x1652'
p54368
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate'
p54369
S'0x2217'
p54370
sS'DAQmxErrorMemMapAndBuffer'
p54371
S'(-200215)'
p54372
sS'DAQmxWarningPxiResmanChassisBridgeParseError'
p54373
S'(26205)'
p54374
sS'DAQmx_Val_Switch_Topology_2566_8_DPDT'
p54375
S'"2566/8-DPDT"'
p54376
sS'DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan'
p54377
S'(-200548)'
p54378
sS'DAQmxWarningPALBadAddressClass'
p54379
S'(50015)'
p54380
sS'DAQmxErrorCDAQSyncMasterClockNotPresent'
p54381
S'(-201468)'
p54382
sS'DAQmx_Val_OutsideWin'
p54383
S'10251'
p54384
sS'DAQmx_Val_Load'
p54385
S'10440'
p54386
sS'DAQmxErrorRoutingDestTermPXIStarInStarTriggerSlot_Routing'
p54387
S'(-89154)'
p54388
sS'DAQmxErrorPXIDevTempCausedShutDown'
p54389
S'(-200623)'
p54390
sS'DAQmx_AI_Bridge_TwoPointLin_First_PhysicalVal'
p54391
S'0x2F8B'
p54392
sS'DAQmxErrorPALBadSelector'
p54393
S'(-50003)'
p54394
sS'DAQmx_AI_Current_Units'
p54395
S'0x0701'
p54396
sS'DAQmxErrorActiveDevNotSupportedWithMultiDevTask'
p54397
S'(-201207)'
p54398
sS'DAQmx_AI_Freq_ThreshVoltage'
p54399
S'0x0815'
p54400
sS'DAQmxErrorAOSampTimingTypeDifferentIn2Tasks'
p54401
S'(-200963)'
p54402
sS'DAQmxErrorPALBadOffset'
p54403
S'(-50007)'
p54404
sS'DAQmx_AO_PowerAmp_Overcurrent'
p54405
S'0x3064'
p54406
sS'DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseRate'
p54407
S'0x2EE9'
p54408
sS'DAQmxErrorDelayFromSampleClockOutOfRangeForHWTSP'
p54409
S'(-201409)'
p54410
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_16x16_Matrix'
p54411
S'"2532/1-Wire Dual 16x16 Matrix"'
p54412
sS'DAQmxWarningPxiResmanSystemNotInitialized'
p54413
S'(26102)'
p54414
sS'DAQmx_Val_HalfBridgeII'
p54415
S'10189'
p54416
sS'DAQmx_Dev_CO_MaxTimebase'
p54417
S'0x29A2'
p54418
sS'DAQmxErrorWatchdogTimerNotSupported'
p54419
S'(-200662)'
p54420
sS'DAQmxErrorSamplesNotYetAvailable'
p54421
S'(-200284)'
p54422
sS'DAQmxErrorCalibrationDataConflictCouldNotBeResolved'
p54423
S'(-201147)'
p54424
sS'DAQmxWarningAccessoryConnectionCountIsInvalid'
p54425
S'(200058)'
p54426
sS'DAQmxErrorMultipleChansNotSupportedDuringCalSetup'
p54427
S'(-201004)'
p54428
sS'DAQmx_Val_Unknown'
p54429
S'12588'
p54430
sS'DAQmxErrorSetupCalibrationNotCalled'
p54431
S'(-201486)'
p54432
sS'DAQmxErrorBadDDSSource'
p54433
S'(-201366)'
p54434
sS'DAQmx_Exported_AdvCmpltEvent_Delay'
p54435
S'0x1757'
p54436
sS'DAQmx_CI_SemiPeriod_StartingEdge'
p54437
S'0x22FE'
p54438
sS'DAQmx_Val_Kelvins'
p54439
S'10325'
p54440
sS'DAQmx_Val_SampClk'
p54441
S'10388'
p54442
sS'DAQmx_Val_Switch_Topology_1128_2_Wire_4x8_Matrix'
p54443
S'"1128/2-Wire 4x8 Matrix"'
p54444
sS'DAQmx_CI_Freq_MeasTime'
p54445
S'0x0145'
p54446
sS'DAQmxErrorNonBufferedAndHWTimed'
p54447
S'(-201025)'
p54448
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth'
p54449
S'0x2215'
p54450
sS'DAQmx_AI_Lowpass_Enable'
p54451
S'0x1802'
p54452
sS'DAQmx_Val_SCSeriesDAQ'
p54453
S'14645'
p54454
sS'DAQmxErrorCounterStartPauseTriggerConflict'
p54455
S'(-200146)'
p54456
sS'DAQmxErrorLineConflictCDAQ'
p54457
S'(-201133)'
p54458
sS'DAQmxErrorPALFileWriteFault'
p54459
S'(-50208)'
p54460
sS'DAQmxErrorRetryCall'
p54461
S'(-26853)'
p54462
sS'DAQmx_RefTrig_AutoTriggered'
p54463
S'0x2EC2'
p54464
sS'DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc'
p54465
S'(-200779)'
p54466
sS'DAQmxErrorPALFirmwareFault'
p54467
S'(-50151)'
p54468
sS'DAQmx_Val_Switch_Topology_2571_66_SPDT'
p54469
S'"2571/66-SPDT"'
p54470
sS'DAQmxErrorMultDevsMultPhysChans'
p54471
S'(-201471)'
p54472
sS'DAQmx_Val_HalfBridge'
p54473
S'10187'
p54474
sS'DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt'
p54475
S'(-200787)'
p54476
sS'DAQmx_Exported_PauseTrig_OutputTerm'
p54477
S'0x1615'
p54478
sS'DAQmxErrorSampClkTimebaseDCMBecameUnlocked'
p54479
S'(-200238)'
p54480
sS'DAQmxErrorSemicolonDoesNotFollowRangeInList'
p54481
S'(-200054)'
p54482
sS'DAQmx_Val_Sawtooth'
p54483
S'14754'
p54484
sS'DAQmx_Val_Position_AngEncoder'
p54485
S'10360'
p54486
sS'DAQmx_Val_Switch_Topology_2549_Terminated_2_SPDT'
p54487
S'"2549/Terminated 2-SPDT"'
p54488
sS'DAQmxErrorCannotAddNewDevsAfterTaskConfiguration'
p54489
S'(-200855)'
p54490
sS'DAQmxErrorMeasuredBridgeOffsetTooHigh'
p54491
S'(-200788)'
p54492
sS'DAQmxErrorReversePolyOrderLessThanNumPtsToCompute'
p54493
S'(-200403)'
p54494
sS'DAQmx_Val_SynchronousEventCallbacks'
p54495
S'(1<<0)'
p54496
sS'DAQmxErrorDataLineReservedForDynamicOutput'
p54497
S'(-200384)'
p54498
sS'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc'
p54499
S'0x2207'
p54500
sS'DAQmx_DO_Overcurrent_AutoReenable'
p54501
S'0x2A86'
p54502
sS'DAQmxErrorPALThreadHasNoThreadObject'
p54503
S'(-50601)'
p54504
sS'DAQmx_Val_DoNotOverwriteUnreadSamps'
p54505
S'10159'
p54506
sS'DAQmxErrorDuplicateDeviceName_Routing'
p54507
S'(-88715)'
p54508
sS'DAQmxErrorInvalidPhysicalChanForCal'
p54509
S'(-200444)'
p54510
sS'DAQmx_AO_DAC_Ref_Src'
p54511
S'0x0132'
p54512
sS'DAQmxErrorAttributeNotSupportedUnlessHWTSP'
p54513
S'(-201407)'
p54514
sS'DAQmxErrorUnexpectedEndOfActionsInList'
p54515
S'(-200196)'
p54516
sS'DAQmxWarningPxiResmanControllerFileNotFound'
p54517
S'(26300)'
p54518
sS'DAQmxWarningPALBadWriteCount'
p54519
S'(50014)'
p54520
sS'DAQmx_Read_OvercurrentChansExist'
p54521
S'0x29E6'
p54522
sS'DAQmxErrorCouldNotConnectToRemoteMXS'
p54523
S'(-201192)'
p54524
sS'DAQmxWarningPALBadReadOffset'
p54525
S'(50010)'
p54526
sS'DAQmxErrorSwitchDevShutDownDueToHighTemp'
p54527
S'(-200818)'
p54528
sS'DAQmx_Val_Task_Reserve'
p54529
g53580
sS'DAQmx_AnlgWin_StartTrig_When'
p54530
S'0x1401'
p54531
sS'DAQmx_AI_Accel_SensitivityUnits'
p54532
S'0x219C'
p54533
sS'DAQmxErrorPowerLevelTooLowForOOK'
p54534
S'(-201113)'
p54535
sS'_NI_float32_DEFINED_'
p54536
g48682
sS'DAQmxErrorChanCalScaleTypeNotSet'
p54537
S'(-200935)'
p54538
sS'DAQmx_CI_Freq_DigFltr_Enable'
p54539
S'0x21E7'
p54540
sS'DAQmxErrorExplicitConnectionExists'
p54541
S'(-200179)'
p54542
sS'DAQmxErrorCannotReadPastEndOfRecord'
p54543
S'(-200614)'
p54544
sS'DAQmx_CI_Pulse_Ticks_Term'
p54545
S'0x2F14'
p54546
sS'DAQmx_DO_LogicFamily'
p54547
S'0x296E'
p54548
sS'DAQmx_Scale_Poly_ReverseCoeff'
p54549
S'0x1235'
p54550
sS'DAQmxErrorTooManyTriggersSpecifiedInTask'
p54551
S'(-201281)'
p54552
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal'
p54553
S'(-200867)'
p54554
sS'DAQmxErrorInvalidAnalogTrigSrc'
p54555
S'(-200265)'
p54556
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable'
p54557
S'0x220F'
p54558
sS'DAQmxErrorInvalidRefClkSrcGivenSampClkSrc'
p54559
S'(-200383)'
p54560
sS'DAQmx_AI_Lowpass_SwitchCap_OutClkDiv'
p54561
S'0x1887'
p54562
sS'DAQmxErrorInsufficientDataForCalibration'
p54563
S'(-201149)'
p54564
sS'_NI_uInt64_DEFINED_'
p54565
g48682
sS'DAQmxErrorRoutingSrcTermPXIDStarXNotInSystemTimingSlot_Routing'
p54566
S'(-89166)'
p54567
sS'DAQmx_Dev_AI_PhysicalChans'
p54568
S'0x231E'
p54569
sS'DAQmxErrorExtraPropertyDetectedInSpecdObject'
p54570
S'(-201040)'
p54571
sS'DAQmx_CI_Pulse_Ticks_LogicLvlBehavior'
p54572
S'0x30B6'
p54573
sS'DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc'
p54574
S'(-200781)'
p54575
sS'DAQmxErrorStreamDCMLock'
p54576
S'(-200313)'
p54577
sS'DAQmx_CI_Pulse_Time_Units'
p54578
S'0x2F13'
p54579
sS'DAQmx_CO_Pulse_Freq_InitialDelay'
p54580
S'0x0299'
p54581
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal'
p54582
S'(-200866)'
p54583
sS'DAQmxErrorHWTimedSinglePointNotSupportedAI'
p54584
S'(-200821)'
p54585
sS'DAQmx_SwitchChan_MaxACCarryPwr'
p54586
S'0x0642'
p54587
sS'DAQmxErrorSampsPerChanTooBig'
p54588
S'(-200306)'
p54589
sS'DAQmx_CO_CtrTimebaseMasterTimebaseDiv'
p54590
S'0x18C3'
p54591
sS'DAQmxErrorUnspecifiedError'
p54592
S'(-26801)'
p54593
sS'DAQmxErrorSyncStrategiesCannotSync'
p54594
S'(-201424)'
p54595
sS'DAQmxErrorSwitchCannotDriveMultipleTrigLines'
p54596
S'(-200203)'
p54597
sS'DAQmx_Exported_CtrOutEvent_OutputBehavior'
p54598
S'0x174F'
p54599
sS'DAQmx_CI_Period_LogicLvlBehavior'
p54600
S'0x309A'
p54601
sS'DAQmx_CI_CountEdges_CountReset_DigFltr_MinPulseWidth'
p54602
S'0x2FB4'
p54603
sS'DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO'
p54604
S'(-200842)'
p54605
sS'DAQmxWarningInvalidCalConstValueForAO'
p54606
S'(200042)'
p54607
sS'DAQmxErrorDevNotSupportedWithinDAQmxAPI'
p54608
S'(-201427)'
p54609
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal'
p54610
S'(-200869)'
p54611
sS'DAQmxErrorTaskDoesNotReferenceLocalChannel'
p54612
S'(-201231)'
p54613
sS'DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered'
p54614
S'(-200967)'
p54615
sS'DAQmxErrorAcqStoppedDriverCantXferDataFastEnough'
p54616
S'(-200714)'
p54617
sS'DAQmxErrorInvalidVoltageReadingDuringExtCal'
p54618
S'(-200446)'
p54619
sS'DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice'
p54620
S'(-200106)'
p54621
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Amplified_Mux'
p54622
S'"2501/2-Wire 24x1 Amplified Mux"'
p54623
sS'DAQmx_AI_Bridge_Balance_FinePot'
p54624
S'0x18F4'
p54625
sS'DAQmxErrorDevOnlySupportsSampClkTimingAO'
p54626
S'(-200758)'
p54627
sS'DAQmxErrorRosetteStrainChanNamesNeeded'
p54628
S'(-201445)'
p54629
sS'DAQmx_CI_Period_DigSync_Enable'
p54630
S'0x21F0'
p54631
sS'DAQmxWarningPxiResmanInvalidConfiguration'
p54632
S'(26101)'
p54633
sS'DAQmxErrorAOPropertiesCauseVoltageBelowMin'
p54634
S'(-200583)'
p54635
sS'DAQmx_CI_NumPossiblyInvalidSamps'
p54636
S'0x193C'
p54637
sS'DAQmx_AI_ChanCal_ApplyCalIfExp'
p54638
S'0x2299'
p54639
sS'DAQmxErrorPulseActiveAtStart'
p54640
S'(-200339)'
p54641
sS'DAQmx_Exported_DividedSampClkTimebase_OutputTerm'
p54642
S'0x21A1'
p54643
sS'DAQmxWarningInvalidCalConstValueForAI'
p54644
S'(200041)'
p54645
sS'DAQmxErrorPALMemoryConfigurationFault'
p54646
S'(-50350)'
p54647
sS'DAQmx_Val_100MHzTimebase'
p54648
S'15857'
p54649
sS'DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual'
p54650
S'(-200350)'
p54651
sS'DAQmx_Write_RawDataWidth'
p54652
S'0x217D'
p54653
sS'DAQmxErrorScriptNameSameAsWfmName'
p54654
S'(-200633)'
p54655
sS'DAQmx_Val_Switch_Topology_2530_4_Wire_Dual_16x1_Mux'
p54656
S'"2530/4-Wire Dual 16x1 Mux"'
p54657
sS'DAQmx_Write_Offset'
p54658
S'0x190D'
p54659
sS'DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation'
p54660
S'(-200595)'
p54661
sS'DAQmxErrorCOMultipleWritesBetweenSampClks'
p54662
S'(-200951)'
p54663
sS'DAQmx_AnlgWin_RefTrig_Src'
p54664
S'0x1426'
p54665
sS'DAQmx_Write_OpenCurrentLoopChans'
p54666
S'0x29EB'
p54667
sS'DAQmxWarningFileCopyFault'
p54668
S'(26106)'
p54669
sS'DAQmx_PhysicalChan_DO_PortWidth'
p54670
S'0x29A7'
p54671
sS'DAQmxErrorReadNotSupportedForLoggingMode'
p54672
S'(-201301)'
p54673
sS'DAQmx_DI_DigFltr_TimebaseRate'
p54674
S'0x2ED5'
p54675
sS'DAQmxErrorPortDoesNotSupportHandshakingDataIO'
p54676
S'(-200117)'
p54677
sS'DAQmxErrorDACRefValNotSet'
p54678
S'(-200540)'
p54679
sS'DAQmx_RefTrig_Term'
p54680
S'0x2F1F'
p54681
sS'DAQmx_CI_TwoEdgeSep_FirstTermCfg'
p54682
S'0x30AB'
p54683
sS'DAQmx_AI_CustomScaleName'
p54684
S'0x17E0'
p54685
sS'DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels'
p54686
S'(-200128)'
p54687
sS'DAQmxErrorTDCNotEnabledDuringRISMode'
p54688
S'(-200417)'
p54689
sS'DAQmx_AO_UseOnlyOnBrdMem'
p54690
S'0x183A'
p54691
sS'DAQmx_Val_Immediate'
p54692
S'10198'
p54693
sS'DAQmx_StartTrig_Type'
p54694
S'0x1393'
p54695
sS'DAQmxErrorInvalidSCXIChassisAddress'
p54696
S'(-201193)'
p54697
sS'DAQmxErrorCannotConnectChansDirectly'
p54698
S'(-200185)'
p54699
sS'DAQmx_OnDemand_SimultaneousAOEnable'
p54700
S'0x21A0'
p54701
sS'DAQmx_Val_SCCConnectorBlock'
p54702
S'14704'
p54703
sS'DAQmxErrorSCXI1600ImportNotSupported'
p54704
S'(-201174)'
p54705
sS'DAQmx_Val_Loopback180'
p54706
g48971
sS'DAQmx_Val_Switch_Topology_2575_1_Wire_196x1_Mux'
p54707
S'"2575/1-Wire 196x1 Mux"'
p54708
sS'DAQmx_CI_Pulse_Freq_DigSync_Enable'
p54709
S'0x2F0A'
p54710
sS'DAQmxErrorCannotStoreCalConst'
p54711
S'(-200074)'
p54712
sS'DAQmx_SwitchChan_MaxDCSwitchPwr'
p54713
S'0x0649'
p54714
sS'DAQmxErrorSampClkRateNotSupportedWithEARDisabled'
p54715
S'(-201001)'
p54716
sS'DAQmxErrorCabledModuleCannotRouteConvClk'
p54717
S'(-200319)'
p54718
sS'DAQmx_Val_Freq'
p54719
S'10179'
p54720
sS'DAQmx_PhysicalChan_CO_SupportedOutputTypes'
p54721
S'0x2FDB'
p54722
sS'DAQmxErrorNoMoreSpace'
p54723
S'(-200293)'
p54724
sS'DAQmxErrorDDCClkOutDCMLock'
p54725
S'(-200243)'
p54726
sS'DAQmxErrorPowerUpStateMachineNotDone'
p54727
S'(-201282)'
p54728
sS'DAQmxWarningPALComponentNotUnloadable'
p54729
S'(50262)'
p54730
sS'DAQmx_AI_Freq_Units'
p54731
S'0x0806'
p54732
sS'DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseSrc'
p54733
S'0x2F18'
p54734
sS'DAQmx_ChanDescr'
p54735
S'0x1926'
p54736
sS'DAQmx_Val_VoltsPerMil'
p54737
S'14837'
p54738
sS'__CFUNC_C'
p54739
S'__cdecl'
p54740
sS'DAQmx_CI_CountEdges_CountDir_LogicLvlBehavior'
p54741
S'0x309E'
p54742
sS'DAQmx_CI_Freq_DigFltr_MinPulseWidth'
p54743
S'0x21E8'
p54744
sS'DAQmx_Val_Poll'
p54745
S'12524'
p54746
sS'DAQmxErrorSignalEventsNotSupportedByDevice'
p54747
S'(-200982)'
p54748
sS'DAQmxErrorNeitherRefClkNorSampClkTimebaseConfiguredForDSASync'
p54749
S'(-201440)'
p54750
sS'DAQmx_Val_Interrupts'
p54751
S'10204'
p54752
sS'DAQmx_CI_CountEdges_CountReset_ResetCount'
p54753
S'0x2FB0'
p54754
sS'DAQmx_Dev_CO_SampModes'
p54755
S'0x2FDF'
p54756
sS'DAQmxErrorDuplicateDevIDInList'
p54757
S'(-200209)'
p54758
sS'DAQmx_Exported_RefTrig_OutputTerm'
p54759
S'0x0590'
p54760
sS'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate'
p54761
S'0x2203'
p54762
sS'NULL'
p54763
S'(0L)'
p54764
sS'DAQmx_Interlocked_HshkTrig_Src'
p54765
S'0x22B8'
p54766
sS'DAQmxErrorPALComponentAlreadyInstalled'
p54767
S'(-50263)'
p54768
sS'DAQmxErrorPALTransferNotInProgress'
p54769
S'(-50402)'
p54770
sS'DAQmxWarningPxiResmanControllerTypeInvalid'
p54771
S'(26301)'
p54772
sS'DAQmxErrorSCXIChassisCommModeInvalid'
p54773
S'(-201236)'
p54774
sS'DAQmxErrorPALOSInitializationFault'
p54775
S'(-50201)'
p54776
sS'DAQmx_AI_Bridge_Poly_ForwardCoeff'
p54777
S'0x2F90'
p54778
sS'DAQmx_AnlgLvl_PauseTrig_Coupling'
p54779
S'0x2236'
p54780
sS'DAQmx_Exported_10MHzRefClk_OutputTerm'
p54781
S'0x226E'
p54782
sS'DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange'
p54783
S'(-200075)'
p54784
sS'DAQmxErrorMultipleCounterInputTask'
p54785
S'(-200147)'
p54786
sS'DAQmxErrorAutoStartWriteNotAllowedEventRegistered'
p54787
S'(-200985)'
p54788
sS'DAQmx_Val_Pt3851'
p54789
S'10071'
p54790
sS'DAQmx_Val_DigEdge'
p54791
S'10150'
p54792
sS'DAQmxErrorDACRngLowNotEqualToMinusRefVal'
p54793
S'(-200670)'
p54794
sS'DAQmxErrorPALResourceNotInitialized'
p54795
S'(-50104)'
p54796
sS'DAQmxErrorCalibrationRequiresPrototypingBoardEnabled'
p54797
S'(-201269)'
p54798
sS'DAQmxErrorCIOnboardClockNotSupportedAsInputTerm'
p54799
S'(-200814)'
p54800
sS'DAQmxErrorCAPIDeviceIndexInvalid'
p54801
S'(-201128)'
p54802
sS'DAQmx_CI_Freq_TermCfg'
p54803
S'0x3097'
p54804
sS'DAQmx_Val_RefTrig'
p54805
S'10426'
p54806
sS'DAQmxErrorWaitIsLastInstructionOfLoopInScript'
p54807
S'(-200038)'
p54808
sS'DAQmxErrorInvalidChannel'
p54809
S'(-200087)'
p54810
sS'DAQmxWarningPXIe5603_NotConfigured'
p54811
S'(200066)'
p54812
sS'DAQmxErrorCanExportOnlyOnboardSampClk'
p54813
S'(-200891)'
p54814
sS'DAQmxErrorDifferentRawDataFormats'
p54815
S'(-200955)'
p54816
sS'DAQmxErrorInvalidCDAQSlotNumberSpecd'
p54817
S'(-201159)'
p54818
sS'DAQmx_CI_CountEdges_CountReset_Term'
p54819
S'0x2FB1'
p54820
sS'DAQmx_CO_OutputState'
p54821
S'0x0294'
p54822
sS'DAQmx_Val_FullBridgeII'
p54823
S'10184'
p54824
sS'DAQmx_Val_3point3V'
p54825
S'14621'
p54826
sS'DAQmxErrorTrigmanConflictingRoute'
p54827
S'(-26008)'
p54828
sS'DAQmx_Dev_DI_MaxRate'
p54829
S'0x2999'
p54830
sS'DAQmxErrorSCXIModuleDoesNotSupportSimulation'
p54831
S'(-201155)'
p54832
sS'DAQmxErrorWatchdogTimerFailsBecauseOfProgrammedIO'
p54833
S'(-201228)'
p54834
sS'DAQmxErrorCOWriteDutyCycleOutOfRange'
p54835
S'(-200684)'
p54836
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_8x16_Matrix'
p54837
S'"2530/1-Wire 8x16 Matrix"'
p54838
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Octal_16x1_Mux'
p54839
S'"2530/1-Wire Octal 16x1 Mux"'
p54840
sS'DAQmxErrorPowerupStateNotSupported'
p54841
S'(-200663)'
p54842
sS'DAQmxErrorCalFunctionNotSupported'
p54843
S'(-200445)'
p54844
sS'DAQmxErrorIntegerExpectedInScript'
p54845
S'(-200247)'
p54846
sS'DAQmxErrorCantSetPropertyTaskNotRunning'
p54847
S'(-200972)'
p54848
sS'DAQmx_CO_Pulse_IdleState'
p54849
S'0x1170'
p54850
sS'DAQmxErrorIncorrectReadFunction'
p54851
S'(-200100)'
p54852
ssg16
(dp54853
sg18
(dp54854
g47829
I8993
sg47831
I12248
sg47833
I26807
sg47835
I-200186
sg47837
I12458
sg47839
I4113
sg47841
I4115
sg47843
I4112
sg47845
I14617
sg47847
I8905
sg47849
I-200584
sg47851
I200050
sg47853
I6377
sg47855
I50411
sg47857
I-200823
sg47859
I-209801
sg47861
I-201305
sg47863
I-200233
sg47865
I14613
sg47867
I14828
sg47869
S'2575/2-Wire 95x1 Mux'
p54855
sg47871
I-200329
sg47873
I-201402
sg47875
I-200143
sg47877
I-200194
sg47879
I6133
sg47881
I10185
sg47883
I-200094
sg47885
I15879
sg47887
I4960
sg47889
I-200979
sg47891
I-200721
sg47893
S'2531/1-Wire 8x64 Matrix'
p54856
sg47895
I-200270
sg47897
I10730
sg47899
I-200042
sg47901
I10109
sg47903
I-200051
sg47905
I-200223
sg47907
I-89162
sg47909
I-201165
sg47911
I-201246
sg47913
I-89120
sg47915
I-200542
sg47917
I-200651
sg47919
I8732
sg47921
I-201279
sg47923
I4676
sg47925
I-200616
sg47927
I8730
sg47929
I6204
sg47931
I6284
sg47933
I-200722
sg47935
I6108
sg47937
I-50551
sg47939
I-200745
sg47941
I-200882
sg47943
I-200437
sg47945
I-200191
sg47947
I-201295
sg47949
I-201216
sg47951
I10205
sg47953
I-200507
sg47955
I-200669
sg47957
I12064
sg47959
I-50408
sg47961
I-201341
sg47963
I-89135
sg47965
I-200837
sg47967
I-200915
sg47969
I-201434
sg47971
I-50400
sg47973
I-200163
sg47975
I-26401
sg47977
I10097
sg47979
I-201452
sg47981
I15973
sg47983
I209801
sg47985
I-201383
sg47987
I-200405
sg47989
I-201482
sg47991
I-200466
sg47993
I-201379
sg47995
I-200412
sg47997
I10699
sg47999
I200060
sg48001
I-200217
sg48003
I8726
sg48005
I-200564
sg48007
I8868
sg48009
I-200971
sg48011
I4472
sg48013
I-89153
sg48015
I-200005
sg48017
I6373
sg48019
I8943
sg48021
I-200153
sg48023
I50152
sg48025
I10279
sg48027
I10604
sg48029
I-200961
sg48031
I-200686
sg48033
I-201381
sg48035
I-200485
sg48037
I8883
sg48039
S'2554/4x1 Mux'
p54857
sg48041
I-200581
sg48043
I-201362
sg48045
I15895
sg48047
I-89124
sg48049
I-201365
sg48051
I12522
sg48053
I10816
sg48055
I6345
sg48057
I6347
sg48059
I6346
sg48061
I10610
sg48063
I-200110
sg48065
I8577
sg48067
I-200131
sg48069
I11985
sg48071
I8897
sg48073
I10270
sg48075
I-200528
sg48077
I6226
sg48079
I-200928
sg48081
I-200881
sg48083
I-200324
sg48085
I50004
sg48087
I15975
sg48089
I15974
sg48091
I-201219
sg48093
I14633
sg48095
I-200277
sg48097
I-200834
sg48099
I10352
sg48101
I-200936
sg48103
I14661
sg48105
I12157
sg48107
I-201354
sg48109
I8722
sg48111
I50100
sg48113
I-200577
sg48115
I-26301
sg48117
I-200342
sg48119
I-50152
sg48121
I-200431
sg48123
I50000
sg48125
I-200034
sg48127
I10359
sg48129
I-201112
sg48131
I-201439
sg48133
I12550
sg48135
I26010
sg48137
I5123
sg48139
S'2576/2-Wire 64x1 Mux'
p54858
sg48141
I10600
sg48143
I-200415
sg48145
I14649
sg48147
I8807
sg48149
I8682
sg48151
I10655
sg48153
I-200863
sg48155
I26653
sg48157
I200016
sg48159
I12401
sg48161
I-200214
sg48163
I10633
sg48165
I10195
sg48167
I10646
sg48169
I6277
sg48171
I2389
sg48173
I12488
sg48175
I15892
sg48177
I-200630
sg48179
I-200918
sg48181
I-201018
sg48183
I8916
sg48185
I8906
sg48187
I12402
sg48189
I8892
sg48191
I12526
sg48193
I8759
sg48195
I4981
sg48197
S'2585/1-Wire 10x1 Mux'
p54859
sg48199
I-200432
sg48201
I200022
sg48203
I-200406
sg48205
I-50260
sg48207
I-200649
sg48209
S'1193/Dual 8x1 Terminated Mux'
p54860
sg48211
I-201252
sg48213
I12386
sg48215
I-50258
sg48217
I8891
sg48219
I10070
sg48221
I10361
sg48223
I8708
sg48225
I12555
sg48227
I-200369
sg48229
S'1166/32-SPDT'
p54861
sg48231
I2
sg48233
I-50403
sg48235
I6300
sg48237
I12016
sg48239
I14668
sg48241
I-201442
sg48243
I-200424
sg48245
I8886
sg48247
I-200429
sg48249
I-50300
sg48251
I-200899
sg48253
I-200792
sg48255
I-200019
sg48257
I-200142
sg48259
I-50407
sg48261
I12161
sg48263
I6338
sg48265
I-200760
sg48267
I10448
sg48269
I15886
sg48271
S'2593/Dual 8x1 Mux'
p54862
sg48273
I8605
sg48275
L1L
sg48277
S'1169/50-DPST'
p54863
sg48279
I15891
sg48281
I-200464
sg48283
I-201510
sg48285
I-89155
sg48287
I-201079
sg48289
I-201111
sg48291
I-200224
sg48293
I6106
sg48295
I-200132
sg48297
I10132
sg48299
I-200525
sg48301
I10131
sg48303
S'2532/1-Wire Dual 4x64 Matrix'
p54864
sg48305
I4470
sg48307
I-201465
sg48309
I-201227
sg48311
I15864
sg48313
I-201031
sg48315
I-201209
sg48317
I11984
sg48319
I10273
sg48321
I15980
sg48323
I-201153
sg48325
I50407
sg48327
I8750
sg48329
I-200826
sg48331
I-26656
sg48333
I-200916
sg48335
I-200433
sg48337
I12276
sg48339
I4864
sg48341
S'2546/Dual 4x1 Mux'
p54865
sg48343
I-200367
sg48345
I6343
sg48347
I-201041
sg48349
I-200711
sg48351
I15959
sg48353
I-201265
sg48355
S'1193/Independent'
p54866
sg48357
I-200738
sg48359
I8866
sg48361
I8820
sg48363
I15876
sg48365
S'2595/4x1 Mux'
p54867
sg48367
I-201364
sg48369
S'1193/32x1 Mux'
p54868
sg48371
I-200151
sg48373
I-200640
sg48375
I12152
sg48377
I-200048
sg48379
I6310
sg48381
I-88716
sg48383
I10264
sg48385
I-200474
sg48387
I-89156
sg48389
I1939
sg48391
I12254
sg48393
I6251
sg48395
I6441
sg48397
Nsg48399
I-200991
sg48401
I50404
sg48403
S'2576/2-Wire Octal 8x1 Mux'
p54869
sg48405
I6325
sg48407
I8705
sg48409
I-200822
sg48411
I-200024
sg48413
I-200808
sg48415
I-50301
sg48417
I-200571
sg48419
I-89159
sg48421
I12033
sg48423
I-200222
sg48425
I10679
sg48427
I-201033
sg48429
I-200719
sg48431
I-200311
sg48433
I8698
sg48435
I-89121
sg48437
I200025
sg48439
I-200003
sg48441
I12444
sg48443
I10265
sg48445
I8706
sg48447
I-201430
sg48449
I-200494
sg48451
I-26806
sg48453
I8803
sg48455
I4629
sg48457
I-200811
sg48459
I-200692
sg48461
I-200308
sg48463
I-89136
sg48465
I200072
sg48467
I-201474
sg48469
I-200998
sg48471
I-200824
sg48473
I12028
sg48475
I-201392
sg48477
I8569
sg48479
I-26111
sg48481
I12531
sg48483
I-200589
sg48485
I-200152
sg48487
I-50206
sg48489
I10042
sg48491
S'2542/Quad 2x1 Terminated Mux'
p54870
sg48493
I-201234
sg48495
S'2543/Dual 4x1 Terminated Mux'
p54871
sg48497
I12452
sg48499
I4726
sg48501
S'2556/Dual 4x1 Mux'
p54872
sg48503
I10729
sg48505
I-200829
sg48507
I6445
sg48509
I8893
sg48511
I-200349
sg48513
I-26103
sg48515
I10782
sg48517
I-200636
sg48519
I-50105
sg48521
I-89165
sg48523
I-201263
sg48525
I-50020
sg48527
I12406
sg48529
I12246
sg48531
I-89127
sg48533
I8749
sg48535
I-200862
sg48537
I-200244
sg48539
I6374
sg48541
I-200321
sg48543
I-200017
sg48545
S'2531/1-Wire 4x128 Matrix'
p54873
sg48547
I-201324
sg48549
S'2520/80-SPST'
p54874
sg48551
I-50603
sg48553
I-200253
sg48555
I50103
sg48557
I-201104
sg48559
I-200898
sg48561
I10902
sg48563
I-201083
sg48565
I8724
sg48567
S'2564/8-DPST'
p54875
sg48569
I4656
sg48571
I-200273
sg48573
I-200472
sg48575
I-89160
sg48577
I-200469
sg48579
I50106
sg48581
L0L
sg48583
I-200145
sg48585
I15842
sg48587
I12043
sg48589
I-201086
sg48591
I12025
sg48593
I-200948
sg48595
I12169
sg48597
I5269
sg48599
I4641
sg48601
I-201069
sg48603
I135
sg48605
I-201309
sg48607
I12383
sg48609
I-201190
sg48611
I-200242
sg48613
I-1
sg48615
I-200929
sg48617
I-200069
sg48619
I-201078
sg48621
I4625
sg48623
I-200886
sg48625
I-201497
sg48627
I-200740
sg48629
I-201122
sg48631
I6389
sg48633
S'2532/2-Wire 16x16 Matrix'
p54876
sg48635
I-200314
sg48637
I-200959
sg48639
I12491
sg48641
I-201398
sg48643
I10085
sg48645
I8684
sg48647
I-50803
sg48649
I12227
sg48651
I-200505
sg48653
I-200271
sg48655
I-200933
sg48657
I-200276
sg48659
I-200119
sg48661
I26204
sg48663
I10082
sg48665
I8564
sg48667
I-200035
sg48669
I200049
sg48671
I-200550
sg48673
I-200568
sg48675
I-200753
sg48677
I-201346
sg48679
I26110
sg48681
Nsg48683
I4657
sg48685
I-200483
sg48687
S'2584/2-Wire 6x1 Mux'
p54877
sg48689
I-50011
sg48691
I8685
sg48693
S'1127/Independent'
p54878
sg48695
I-201245
sg48697
I-200387
sg48699
S'2514/Independent'
p54879
sg48701
I8917
sg48703
I-201028
sg48705
I-200188
sg48707
I10152
sg48709
S'2568/15-DPST'
p54880
sg48711
I-50006
sg48713
I10430
sg48715
F-1.0
sg48717
I-201312
sg48719
I-201077
sg48721
I26550
sg48723
I-200606
sg48725
I10095
sg48727
I-200654
sg48729
I6349
sg48731
I-200509
sg48733
I-201380
sg48735
I-200391
sg48737
I4992
sg48739
I-201272
sg48741
I10629
sg48743
I8704
sg48745
I12484
sg48747
I-26400
sg48749
I8565
sg48751
I-201429
sg48753
I-200569
sg48755
I10630
sg48757
I200034
sg48759
I-201351
sg48761
I8766
sg48763
I-200643
sg48765
I10651
sg48767
I8964
sg48769
I-200009
sg48771
I12002
sg48773
I12279
sg48775
I4647
sg48777
I10252
sg48779
I-200338
sg48781
I-200373
sg48783
I-200036
sg48785
I-200549
sg48787
I-201239
sg48789
I200003
sg48791
I12431
sg48793
I-200363
sg48795
I-201283
sg48797
I4
sg48799
I12525
sg48801
I-200320
sg48803
Nsg48804
I-26302
sg48806
S'2530/1-Wire Quad 32x1 Mux'
p54881
sg48808
I-200976
sg48810
I6344
sg48812
I-200374
sg48814
I-200523
sg48816
I-200427
sg48818
I12284
sg48820
I-200286
sg48822
I-201055
sg48824
I-201355
sg48826
I-200064
sg48828
I10436
sg48830
I0
sg48832
I-200181
sg48834
I-200490
sg48836
S'2530/1-Wire 128x1 Mux'
p54882
sg48838
I10384
sg48840
I-200382
sg48842
I10598
sg48844
I-200642
sg48846
I-200645
sg48848
I-200727
sg48850
S'1128/Independent'
p54883
sg48852
I-26807
sg48854
I15880
sg48856
I-200210
sg48858
I12029
sg48860
I-200459
sg48862
I-200532
sg48864
I14644
sg48866
I-201095
sg48868
I-200847
sg48870
I12366
sg48872
I10269
sg48874
I1585
sg48876
I-201332
sg48878
I10447
sg48880
I-200755
sg48882
I12170
sg48884
I12484
sg48886
I8737
sg48888
I12244
sg48890
I12537
sg48892
I6177
sg48894
I50409
sg48896
I8574
sg48898
I10050
sg48900
I-200301
sg48902
I10151
sg48904
I12516
sg48906
I15899
sg48908
I8600
sg48910
I10153
sg48912
I-200331
sg48914
I-200330
sg48916
I15847
sg48918
I12447
sg48920
I-201062
sg48922
I8678
sg48924
I-200453
sg48926
I-201164
sg48928
I-200049
sg48930
I-200783
sg48932
S'2564/16-SPST'
p54884
sg48934
I-201375
sg48936
I16062
sg48938
I-201420
sg48940
I8986
sg48942
I-50409
sg48944
I-201188
sg48946
I-201255
sg48948
I10631
sg48950
I12031
sg48952
I-200355
sg48954
I5989
sg48956
I-201306
sg48958
I-201038
sg48960
I5654
sg48962
I-201080
sg48964
I-200050
sg48966
S'2558/4-SPDT'
p54885
sg48968
I-201320
sg48970
I1
sg48972
I-201337
sg48974
I26808
sg48976
I12468
sg48978
I-201042
sg48980
I6305
sg48982
I-26010
sg48984
I10898
sg48986
I-200207
sg48988
I-201347
sg48990
I12420
sg48992
I15898
sg48994
I10887
sg48996
I-201286
sg48998
I-50604
sg49000
I200028
sg49002
I-201499
sg49004
I14835
sg49006
I12168
sg49008
I4146
sg49010
I-200634
sg49012
I-201229
sg49014
I10353
sg49016
I8599
sg49018
I10103
sg49020
I10253
sg49022
I-200969
sg49024
I6372
sg49026
I15865
sg49028
I-200176
sg49030
I-200170
sg49032
I12493
sg49034
I12024
sg49036
I12144
sg49038
I-201087
sg49040
S'2530/2-Wire Quad 16x1 Mux'
p54886
sg49042
I-89123
sg49044
I-26009
sg49046
I-200312
sg49048
I-201449
sg49050
I200027
sg49052
I4484
sg49054
S'2530/4-Wire 32x1 Mux'
p54887
sg49056
I12467
sg49058
I1
sg49059
I-200796
sg49061
I-200607
sg49063
I-201284
sg49065
I4872
sg49067
S'2527/4-Wire 16x1 Mux'
p54888
sg49069
I11972
sg49071
I-26803
sg49073
I14751
sg49075
I10601
sg49077
I4865
sg49079
I26852
sg49081
I-200700
sg49083
I-201244
sg49085
I-200861
sg49087
I-200804
sg49089
I8668
sg49091
S'1130/2-Wire 128x1 Mux'
p54889
sg49093
I-200201
sg49095
I8970
sg49097
I10167
sg49099
I2130
sg49101
I-89138
sg49103
I-200099
sg49105
I-200790
sg49107
I-201457
sg49109
S'2576/2-Wire Dual 32x1 Mux'
p54890
sg49111
I-200023
sg49113
I4979
sg49115
I-200797
sg49117
I-201014
sg49119
I-200874
sg49121
I-201413
sg49123
I4710
sg49125
I-50404
sg49127
S'2527/2-Wire Dual 16x1 Mux'
p54891
sg49129
I4977
sg49131
I-201506
sg49133
I12277
sg49135
I12548
sg49137
Nsg49138
I8700
sg49140
I-200632
sg49142
I-26100
sg49144
I-89130
sg49146
I-201261
sg49148
I-201100
sg49150
I8571
sg49152
S'1192/8-SPDT'
p54892
sg49154
I10292
sg49156
I8742
sg49158
I-201327
sg49160
I-201068
sg49162
I-200685
sg49164
I-200828
sg49166
I-200984
sg49168
I10653
sg49170
I6307
sg49172
I-50261
sg49174
I-201394
sg49176
I8997
sg49178
I12021
sg49180
I12017
sg49182
I6147
sg49184
I10425
sg49186
I200062
sg49188
I6308
sg49190
I6449
sg49192
I-201049
sg49194
I-89145
sg49196
I8716
sg49198
I-201484
sg49200
I100
sg49202
I-201162
sg49204
I5137
sg49206
S'2541/1-Wire 8x12 Matrix'
p54893
sg49208
I-26101
sg49210
S'1128/1-Wire 64x1 Mux'
p54894
sg49212
I10652
sg49214
I-200695
sg49216
I-200761
sg49218
I-200840
sg49220
I1603
sg49222
I-89122
sg49224
I8754
sg49226
I5969
sg49228
I12384
sg49230
I-50501
sg49232
I-201117
sg49234
I15870
sg49236
I6166
sg49238
S'1129/2-Wire 16x16 Matrix'
p54895
sg49240
I12457
sg49242
I328
sg49244
I-200680
sg49246
I-201247
sg49248
I10228
sg49250
I14616
sg49252
I8
sg49254
I12249
sg49256
I8721
sg49258
I12040
sg49260
I-200295
sg49262
I1
sg49264
I12590
sg49266
I5015
sg49268
I-200964
sg49270
S'1193/Quad 4x1 Terminated Mux'
p54896
sg49272
I-200454
sg49274
I-200158
sg49276
I5911
sg49278
I10236
sg49280
I8764
sg49282
I-200605
sg49284
I6134
sg49286
I12586
sg49288
I5172
sg49290
I-200973
sg49292
I8899
sg49294
I12293
sg49296
I-200047
sg49298
I-50410
sg49300
I4486
sg49302
I8744
sg49304
I-200157
sg49306
I-26200
sg49308
I-201451
sg49310
I-26654
sg49312
I-201480
sg49314
I-200219
sg49316
I-200857
sg49318
I-201304
sg49320
I-201196
sg49322
I-200618
sg49324
S'2501/2-Wire 4x6 Matrix'
p54897
sg49326
I10280
sg49328
S'2576/Independent'
p54898
sg49330
S'2720/Independent'
p54899
sg49332
I-201456
sg49334
I-201175
sg49336
I-50259
sg49338
I-200646
sg49340
I8702
sg49342
I4917
sg49344
I-200498
sg49346
I-201194
sg49348
S'Configured Topology'
p54900
sg49350
I16072
sg49352
I10784
sg49354
I-200182
sg49356
I-201121
sg49358
I10650
sg49360
S'1191/Quad 4x1 Mux'
p54901
sg49362
I-89161
sg49364
I16073
sg49366
I9002
sg49368
S'2555/4x1 Terminated Mux'
p54902
sg49370
I8788
sg49372
I10301
sg49374
I4980
sg49376
I-200278
sg49378
I-200578
sg49380
I4921
sg49382
I-201008
sg49384
I-201098
sg49386
I-88709
sg49388
I12175
sg49390
I-201500
sg49392
I4193
sg49394
I10096
sg49396
I12389
sg49398
I4880
sg49400
I6
sg49402
I1685
sg49404
I-200379
sg49406
I-200148
sg49408
I-200656
sg49410
S'2547/8x1 Mux'
p54903
sg49412
S'1130/4-Wire 64x1 Mux'
p54904
sg49414
I12190
sg49416
I-200756
sg49418
S'2545/4x1 Terminated Mux'
p54905
sg49420
S'2599/2-SPDT'
p54906
sg49422
I8941
sg49424
I11971
sg49426
I-201108
sg49428
I8920
sg49430
I5416
sg49432
Nsg49433
I200004
sg49435
I10143
sg49437
I15902
sg49439
I-200626
sg49441
I10144
sg49443
I-201226
sg49445
I-200332
sg49447
I10145
sg49449
I10200
sg49451
I12165
sg49453
I6316
sg49455
I50008
sg49457
I4679
sg49459
I-200769
sg49461
I-50412
sg49463
I-200449
sg49465
I10183
sg49467
I16
sg49469
I10704
sg49471
S'1166/16-DPDT'
p54907
sg49473
I12417
sg49475
S'2534/1-Wire 8x32 Matrix'
p54908
sg49477
I5216
sg49479
I1606
sg49481
I10300
sg49483
I-201419
sg49485
I-200160
sg49487
I10055
sg49489
S'2530/1-Wire 4x32 Matrix'
p54909
sg49491
S'2522/53-SPDT'
p54910
sg49493
I10086
sg49495
I-26006
sg49497
I98
sg49499
I6375
sg49501
I10428
sg49503
I-200173
sg49505
I-200305
sg49507
I10634
sg49509
I-201242
sg49511
I-200062
sg49513
I26002
sg49515
I6115
sg49517
I-201490
sg49519
I-26655
sg49521
I4643
sg49523
I-200520
sg49525
I-200913
sg49527
I-201254
sg49529
I-200420
sg49531
S'2566/16-SPDT'
p54911
sg49533
I-201051
sg49535
S'1130/4-Wire Quad 16x1 Mux'
p54912
sg49537
I-201240
sg49539
I14631
sg49541
I8597
sg49543
I1
sg49545
I12000
sg49547
S'2535/1-Wire 4x136 Matrix'
p54913
sg49549
I5013
sg49551
I10040
sg49553
I-201378
sg49555
I-200919
sg49557
I10664
sg49559
I12443
sg49561
I-50010
sg49563
I-200612
sg49565
I-201307
sg49567
I258
sg49569
I-201503
sg49571
I-200611
sg49573
I-200754
sg49575
I-200486
sg49577
I-200057
sg49579
I12574
sg49581
I-200541
sg49583
Nsg49585
S'2530/2-Wire Dual 32x1 Mux'
p54914
sg49587
I8681
sg49589
I-200762
sg49591
I-200734
sg49593
I50402
sg49595
I12018
sg49597
I-200690
sg49599
I15858
sg49601
I-200310
sg49603
I-26206
sg49605
I-201114
sg49607
I4985
sg49609
I3
sg49611
I5016
sg49613
I10674
sg49615
I-200702
sg49617
I-201177
sg49619
I-200470
sg49621
I6165
sg49623
S'1127/1-Wire 64x1 Mux'
p54915
sg49625
I-26653
sg49627
I12387
sg49629
I12450
sg49631
I-50550
sg49633
I-200574
sg49635
I8991
sg49637
I12039
sg49639
I-200060
sg49641
I10632
sg49643
S'2575/2-Wire 98x1 Mux'
p54916
sg49645
I1945
sg49647
I-201022
sg49649
I-50352
sg49651
I-201494
sg49653
I-200586
sg49655
I-200538
sg49657
I10595
sg49659
I-200031
sg49661
I10230
sg49663
I-200987
sg49665
I50012
sg49667
I-200245
sg49669
I-200844
sg49671
I-200121
sg49673
I-201280
sg49675
I50202
sg49677
I12490
sg49679
I-201303
sg49681
I-201426
sg49683
I5203
sg49685
I-201249
sg49687
S'2527/2-Wire 32x1 Mux'
p54917
sg49689
I-200300
sg49691
I-200377
sg49693
I-200958
sg49695
I307
sg49697
I6461
sg49699
I200070
sg49701
I2433
sg49703
I-201070
sg49705
I10885
sg49707
I-201176
sg49709
I10284
sg49711
I-200751
sg49713
I-201328
sg49715
I-200872
sg49717
I200063
sg49719
I1601
sg49721
I-200345
sg49723
I-50106
sg49725
I-200956
sg49727
I12066
sg49729
I8613
sg49731
I-201203
sg49733
I-201369
sg49735
I-201464
sg49737
I12472
sg49739
I-201432
sg49741
I-200600
sg49743
I10424
sg49745
I-200303
sg49747
I-200120
sg49749
I15844
sg49751
I5168
sg49753
I8890
sg49755
I6182
sg49757
I6247
sg49759
I-50150
sg49761
I-201260
sg49763
I1
sg49764
I12552
sg49766
I-201251
sg49768
I6319
sg49770
I-201026
sg49772
I6410
sg49774
I-201119
sg49776
S'2593/8x1 Terminated Mux'
p54918
sg49778
I15889
sg49780
I10433
sg49782
I-200294
sg49784
I-200078
sg49786
I6369
sg49788
I200015
sg49790
I-201089
sg49792
I8715
sg49794
I6110
sg49796
S'2569/100-SPST'
p54919
sg49798
I2167
sg49800
I16064
sg49802
I4675
sg49804
I26805
sg49806
I10077
sg49808
S'2593/Dual 4x1 Terminated Mux'
p54920
sg49810
I-200731
sg49812
I4932
sg49814
I5
sg49816
I-201285
sg49818
I-200912
sg49820
I-201441
sg49822
I-200275
sg49824
I-200419
sg49826
I-201454
sg49828
I-26107
sg49830
I-200283
sg49832
I-200530
sg49834
I-200741
sg49836
I-201103
sg49838
I-200234
sg49840
I-200993
sg49842
S'2584/Independent'
p54921
sg49844
I8710
sg49846
I-200931
sg49848
I-200843
sg49850
I-200682
sg49852
I-88900
sg49854
I8701
sg49856
I-50806
sg49858
I200074
sg49860
I14757
sg49862
I10244
sg49864
I12291
sg49866
I-200888
sg49868
I5159
sg49870
I-200479
sg49872
I-200592
sg49874
I-201009
sg49876
I-201036
sg49878
I-201292
sg49880
I-201059
sg49882
I-200481
sg49884
I12577
sg49886
I-200322
sg49888
I4150
sg49890
I-201363
sg49892
I-201126
sg49894
I12494
sg49896
I4646
sg49898
I-201319
sg49900
I12466
sg49902
I-201289
sg49904
I4403
sg49906
I-201342
sg49908
I12257
sg49910
I-200752
sg49912
I-201019
sg49914
I-201374
sg49916
I-201416
sg49918
I-200169
sg49920
S'2503/2-Wire 4x6 Matrix'
p54922
sg49922
S'1193/Quad 8x1 Mux'
p54923
sg49924
I-200864
sg49926
I-200423
sg49928
I-200906
sg49930
I14650
sg49932
I4148
sg49934
I200037
sg49936
I-200340
sg49938
I200071
sg49940
I8694
sg49942
I-201311
sg49944
S'2503/1-Wire 48x1 Mux'
p54924
sg49946
I-200101
sg49948
S'2798/Dual Transfer'
p54925
sg49950
I5208
sg49952
I-200705
sg49954
I8712
sg49956
I10280
sg49958
I2
sg49959
I-200770
sg49961
I-200800
sg49963
I200065
sg49965
I-50012
sg49967
I-200266
sg49969
I2
sg49970
I-200803
sg49972
I12036
sg49974
I-200938
sg49976
I2083
sg49978
I-50209
sg49980
S'1169/100-SPST'
p54926
sg49982
I-201462
sg49984
I-200455
sg49986
I8789
sg49988
I-200749
sg49990
S'2532/2-Wire 4x64 Matrix'
p54927
sg49992
S'2570/20-DPDT'
p54928
sg49994
I10092
sg49996
I-201201
sg49998
I12441
sg50000
I-201487
sg50002
I10090
sg50004
I10091
sg50006
I-200263
sg50008
I12282
sg50010
I-201382
sg50012
S'1130/2-Wire Quad 32x1 Mux'
p54929
sg50014
I-50019
sg50016
I-209803
sg50018
I-26102
sg50020
I12004
sg50022
I-50264
sg50024
I-201266
sg50026
I200043
sg50028
I-200725
sg50030
I10268
sg50032
I-200467
sg50034
I-200661
sg50036
I-200920
sg50038
I12371
sg50040
I-200010
sg50042
I2325
sg50044
I10644
sg50046
I8644
sg50048
I-201024
sg50050
I-200279
sg50052
I10072
sg50054
S'1160/16-SPDT'
p54930
sg50056
I8691
sg50058
I-201035
sg50060
I-200934
sg50062
I-200070
sg50064
I5430
sg50066
I-50802
sg50068
I-200746
sg50070
I2100
sg50072
I10303
sg50074
I-201393
sg50076
I-200439
sg50078
S'1129/2-Wire Quad 4x16 Matrix'
p54931
sg50080
I-200960
sg50082
I-200978
sg50084
I-200044
sg50086
I-200793
sg50088
I16077
sg50090
I8860
sg50092
I12003
sg50094
I8823
sg50096
I6380
sg50098
I-200558
sg50100
I200077
sg50102
I10596
sg50104
I-200514
sg50106
I-200501
sg50108
I12215
sg50110
S'2527/Independent'
p54932
sg50112
I-200604
sg50114
I-89152
sg50116
I-201199
sg50118
I12153
sg50120
I14643
sg50122
I-200994
sg50124
I-26402
sg50126
I10307
sg50128
I-200364
sg50130
I-200704
sg50132
I-201321
sg50134
I-26003
sg50136
I12382
sg50138
I104
sg50140
I-50801
sg50142
I-201151
sg50144
I-200440
sg50146
I5122
sg50148
I12145
sg50150
S'2536/1-Wire 8x68 Matrix'
p54933
sg50152
I-201359
sg50154
I-50000
sg50156
I-200903
sg50158
I8598
sg50160
S'2790/Independent'
p54934
sg50162
I15968
sg50164
I10117
sg50166
I12259
sg50168
I4662
sg50170
I10703
sg50172
I-50800
sg50174
I327
sg50176
I-200297
sg50178
I-201140
sg50180
I-200590
sg50182
I6273
sg50184
I8763
sg50186
I-200712
sg50188
I10322
sg50190
I-201314
sg50192
I8760
sg50194
I-50008
sg50196
S'2503/2-Wire Dual 12x1 Mux'
p54935
sg50198
I10450
sg50200
I-200703
sg50202
I-200227
sg50204
I5154
sg50206
I-201003
sg50208
I-200241
sg50210
I13612
sg50212
I-200260
sg50214
I12481
sg50216
I5641
sg50218
I-200660
sg50220
I6382
sg50222
I-200089
sg50224
I-200789
sg50226
I-200613
sg50228
I200051
sg50230
I10437
sg50232
I8740
sg50234
I4723
sg50236
I-89132
sg50238
I15976
sg50240
I10069
sg50242
I-200105
sg50244
I6393
sg50246
I-200077
sg50248
I12482
sg50250
I10364
sg50252
I-89133
sg50254
I-201180
sg50256
I-200167
sg50258
I-201065
sg50260
I11991
sg50262
I-201143
sg50264
I6448
sg50266
I8754
sg50268
I12013
sg50270
I6139
sg50272
I-200773
sg50274
I-200026
sg50276
I-200706
sg50278
I10350
sg50280
I5378
sg50282
I4935
sg50284
I50500
sg50286
I-201505
sg50288
I5701
sg50290
I12053
sg50292
I50005
sg50294
I-50016
sg50296
I-201057
sg50298
I-200375
sg50300
I-200802
sg50302
I-200221
sg50304
I12278
sg50306
I-200341
sg50308
S'1167/Independent'
p54936
sg50310
I-201066
sg50312
I10790
sg50314
I-200593
sg50316
I-200140
sg50318
I-201436
sg50320
I-200820
sg50322
I12214
sg50324
I-200052
sg50326
I-50108
sg50328
I8606
sg50330
I4968
sg50332
I-200801
sg50334
I-201277
sg50336
I4147
sg50338
I12211
sg50340
I-201185
sg50342
I-50002
sg50344
I4247
sg50346
I-201463
sg50348
I200068
sg50350
S'2797/6x1 Terminated Mux'
p54937
sg50352
I15966
sg50354
I-89140
sg50356
I8671
sg50358
S'2584/1-Wire 12x1 Mux'
p54938
sg50360
I-201097
sg50362
I10323
sg50364
I15863
sg50366
I-50351
sg50368
I12485
sg50370
I-200452
sg50372
I-201453
sg50374
I200053
sg50376
I10638
sg50378
I14705
sg50380
I-200068
sg50382
I5683
sg50384
I-201385
sg50386
I-201132
sg50388
I200012
sg50390
I-200865
sg50392
I10128
sg50394
I-201397
sg50396
I-50107
sg50398
I-201414
sg50400
I-200102
sg50402
I15964
sg50404
I12256
sg50406
I-200385
sg50408
I-200113
sg50410
I-26852
sg50412
I-200638
sg50414
I12539
sg50416
I8703
sg50418
I-200504
sg50420
S'1193/Dual 16x1 Mux'
p54939
sg50422
I10640
sg50424
I8693
sg50426
I1616
sg50428
I-200414
sg50430
I-201322
sg50432
I4867
sg50434
I-200527
sg50436
I10235
sg50438
I8974
sg50440
I-201198
sg50442
I-200556
sg50444
I-200921
sg50446
I-200144
sg50448
I-200728
sg50450
S'1128/4-Wire 16x1 Mux'
p54940
sg50452
I8817
sg50454
I-201496
sg50456
I-200827
sg50458
I-26500
sg50460
I-200890
sg50462
I1607
sg50464
I-200189
sg50466
I8720
sg50468
I-201243
sg50470
I10903
sg50472
I15896
sg50474
I10698
sg50476
I-200011
sg50478
I-200235
sg50480
I-201106
sg50482
I12528
sg50484
I6442
sg50486
I8735
sg50488
I-201396
sg50490
I9000
sg50492
I-201300
sg50494
I200046
sg50496
I8992
sg50498
I50107
sg50500
I11990
sg50502
I-50503
sg50504
I-200396
sg50506
I1617
sg50508
I50009
sg50510
I-50103
sg50512
I6125
sg50514
I-201333
sg50516
I-200281
sg50518
I8855
sg50520
I-200907
sg50522
I2
sg50523
I6357
sg50525
I-200041
sg50527
I1
sg50528
I10660
sg50530
I0
sg50531
I-200962
sg50533
I-201027
sg50535
I-200524
sg50537
I-200323
sg50539
I12433
sg50541
I10639
sg50543
I8672
sg50545
I-201170
sg50547
I14662
sg50549
I15977
sg50551
I6358
sg50553
S'1175/2-Wire 98x1 Mux'
p54941
sg50555
I-201298
sg50557
I-201052
sg50559
I-200195
sg50561
I10654
sg50563
I14630
sg50565
I-89128
sg50567
I-50302
sg50569
I10066
sg50571
I-200199
sg50573
I-200130
sg50575
I12038
sg50577
I1605
sg50579
I4
sg50581
I-200620
sg50583
I8607
sg50585
I-201489
sg50587
I-201037
sg50589
I6231
sg50591
I-200647
sg50593
I-200517
sg50595
I-200572
sg50597
I12167
sg50599
I-200954
sg50601
I8762
sg50603
I-200689
sg50605
I-200644
sg50607
I-200086
sg50609
I-200172
sg50611
I-200815
sg50613
I10272
sg50615
I-200608
sg50617
I4965
sg50619
I8670
sg50621
I-200825
sg50623
I14708
sg50625
I10073
sg50627
I-200766
sg50629
I-201029
sg50631
I1687
sg50633
I-200599
sg50635
I5703
sg50637
I-201011
sg50639
I26100
sg50641
I12290
sg50643
I6320
sg50645
I200075
sg50647
I8921
sg50649
I-200076
sg50651
I-200344
sg50653
I-201258
sg50655
I10113
sg50657
I-200039
sg50659
I-200778
sg50661
I-201447
sg50663
I6313
sg50665
S'1130/2-Wire Octal 16x1 Mux'
p54942
sg50667
I-201253
sg50669
I8895
sg50671
I8696
sg50673
I-200125
sg50675
I12530
sg50677
I-200380
sg50679
I-201146
sg50681
I50001
sg50683
I12155
sg50685
I-201435
sg50687
I50410
sg50689
I8761
sg50691
I-200371
sg50693
I-201044
sg50695
I-200325
sg50697
I10239
sg50699
I10661
sg50701
I-200997
sg50703
I-200856
sg50705
I6278
sg50707
I8669
sg50709
I4648
sg50711
I-200252
sg50713
I-201418
sg50715
I-89144
sg50717
I10628
sg50719
I-201168
sg50721
I12483
sg50723
I14838
sg50725
I-200981
sg50727
I10432
sg50729
I15883
sg50731
I10053
sg50733
I10449
sg50735
I10451
sg50737
I-201204
sg50739
I-200246
sg50741
I12267
sg50743
I-200990
sg50745
I-200657
sg50747
I10942
sg50749
I-200723
sg50751
I8745
sg50753
I-200336
sg50755
I-200282
sg50757
S'2501/4-Wire 12x1 Mux'
p54943
sg50759
I26500
sg50761
I15978
sg50763
I26103
sg50765
I8813
sg50767
I-200970
sg50769
I10657
sg50771
I-200154
sg50773
I14755
sg50775
I2320
sg50777
I-200122
sg50779
I10054
sg50781
I5176
sg50783
I-200356
sg50785
I-200941
sg50787
I-200256
sg50789
I10356
sg50791
I6446
sg50793
I-50808
sg50795
I15881
sg50797
I8806
sg50799
I-50252
sg50801
I6114
sg50803
I8882
sg50805
I-200999
sg50807
I-89149
sg50809
I-200482
sg50811
S'2501/1-Wire 48x1 Mux'
p54944
sg50813
I10160
sg50815
I-200579
sg50817
I-50804
sg50819
I-50175
sg50821
I5127
sg50823
I323
sg50825
I-201271
sg50827
I-200307
sg50829
I-201411
sg50831
I32
sg50833
I-201338
sg50835
I8804
sg50837
I-200897
sg50839
I-201329
sg50841
I-50600
sg50843
I15960
sg50845
I8847
sg50847
I-200318
sg50849
I12150
sg50851
I10884
sg50853
I-200639
sg50855
I-200559
sg50857
I10373
sg50859
I12418
sg50861
I-200343
sg50863
I-200995
sg50865
I-201005
sg50867
I50101
sg50869
I-200390
sg50871
I-200492
sg50873
I12583
sg50875
I-200046
sg50877
I-200149
sg50879
I8826
sg50881
I10354
sg50883
I-201377
sg50885
I8729
sg50887
I1688
sg50889
I-200767
sg50891
I-50018
sg50893
I14829
sg50895
I-200940
sg50897
I-201443
sg50899
I-200736
sg50901
I-201461
sg50903
I-200389
sg50905
I10254
sg50907
S'2532/1-Wire Dual 8x32 Matrix'
p54945
sg50909
I-88705
sg50911
I-201148
sg50913
I-200575
sg50915
I12478
sg50917
I-200156
sg50919
S'1130/1-Wire Octal 32x1 Mux'
p54946
sg50921
I-200335
sg50923
I-201294
sg50925
I-201349
sg50927
I-201412
sg50929
I8661
sg50931
I12381
sg50933
I-201217
sg50935
I5984
sg50937
I26652
sg50939
I8856
sg50941
I6189
sg50943
I-200597
sg50945
I-200641
sg50947
I12460
sg50949
I4976
sg50951
I-200904
sg50953
I-201406
sg50955
I-50406
sg50957
I4722
sg50959
I-201007
sg50961
I12463
sg50963
I-200873
sg50965
I1586
sg50967
I-201302
sg50969
I6322
sg50971
I12448
sg50973
I5716
sg50975
I-26007
sg50977
I5702
sg50979
I50007
sg50981
I12425
sg50983
I-200885
sg50985
I-26851
sg50987
I12044
sg50989
I10282
sg50991
I-201262
sg50993
I-200134
sg50995
I-200570
sg50997
I8663
sg50999
I8572
sg51001
I664
sg51003
I-201357
sg51005
I-200180
sg51007
I-200138
sg51009
I-200859
sg51011
I10647
sg51013
I-50502
sg51015
I12019
sg51017
I14634
sg51019
I12139
sg51021
I10662
sg51023
I-50401
sg51025
I26008
sg51027
I8864
sg51029
I-200506
sg51031
I512
sg51033
I-200544
sg51035
I-200784
sg51037
I-200518
sg51039
I4176
sg51041
I4711
sg51043
I-201054
sg51045
I-200008
sg51047
I15897
sg51049
I-200768
sg51051
I6131
sg51053
I-200742
sg51055
I12549
sg51057
I-201387
sg51059
I14659
sg51061
I-200910
sg51063
I10134
sg51065
I-201250
sg51067
I2
sg51068
I-201034
sg51070
I-200521
sg51072
I8596
sg51074
S'2527/1-Wire 64x1 Mux'
p54947
sg51076
I12268
sg51078
I-88717
sg51080
I-200943
sg51082
I8723
sg51084
I-201116
sg51086
I12451
sg51088
S'2722/Independent'
p54948
sg51090
I16071
sg51092
I-200545
sg51094
I26004
sg51096
I-200225
sg51098
I6428
sg51100
I10231
sg51102
I26107
sg51104
I-201094
sg51106
S'1127/4-Wire 16x1 Mux'
p54949
sg51108
I-201459
sg51110
I-200554
sg51112
I-26110
sg51114
I-89164
sg51116
I-200014
sg51118
I2192
sg51120
I-26113
sg51122
I-200924
sg51124
I8972
sg51126
I26802
sg51128
I8584
sg51130
I-201248
sg51132
I200007
sg51134
I-200965
sg51136
I6253
sg51138
I-200889
sg51140
I12505
sg51142
I8863
sg51144
I12213
sg51146
I26203
sg51148
I-200289
sg51150
I10894
sg51152
I-201308
sg51154
S'1194/Quad 4x1 Mux'
p54950
sg51156
I-201096
sg51158
I200039
sg51160
I-200037
sg51162
I825
sg51164
I-201492
sg51166
I-200659
sg51168
I10680
sg51170
I10777
sg51172
I200057
sg51174
I-200510
sg51176
I-201502
sg51178
I12057
sg51180
I-200526
sg51182
I12015
sg51184
I-50205
sg51186
S'2544/8x1 Terminated Mux'
p54951
sg51188
I8673
sg51190
I200061
sg51192
I10890
sg51194
I8746
sg51196
I12014
sg51198
I12489
sg51200
I322
sg51202
I200040
sg51204
I32
sg51206
I-200502
sg51208
I10656
sg51210
I16
sg51212
I6190
sg51214
I8
sg51216
I-201136
sg51218
I-200735
sg51220
I8805
sg51222
S'2503/4-Wire 12x1 Mux'
p54952
sg51224
I-200795
sg51226
I-200733
sg51228
I10665
sg51230
I50102
sg51232
I8909
sg51234
I-50013
sg51236
I-200809
sg51238
I12158
sg51240
I10778
sg51242
I-200027
sg51244
I6387
sg51246
I-200522
sg51248
I6330
sg51250
S'2567/Independent'
p54953
sg51252
I1604
sg51254
I12008
sg51256
I6244
sg51258
I-200358
sg51260
I10943
sg51262
I8618
sg51264
I12584
sg51266
I-200348
sg51268
I26403
sg51270
I-200777
sg51272
I6271
sg51274
I-200409
sg51276
I14642
sg51278
I8821
sg51280
I200021
sg51282
I10672
sg51284
I12243
sg51286
I5124
sg51288
I-200029
sg51290
I-50353
sg51292
I-200868
sg51294
I8887
sg51296
I-201020
sg51298
I2307
sg51300
S'2529/2-Wire 8x16 Matrix'
p54954
sg51302
I-50602
sg51304
I308
sg51306
I200011
sg51308
I-200499
sg51310
I4407
sg51312
I-200411
sg51314
I-89150
sg51316
I-200159
sg51318
I10893
sg51320
I-200095
sg51322
I-200932
sg51324
I-50805
sg51326
I-200922
sg51328
I4149
sg51330
I-200081
sg51332
I5988
sg51334
I16063
sg51336
I-200708
sg51338
I-201509
sg51340
I12526
sg51342
I-200457
sg51344
I-200402
sg51346
Nsg51347
I50255
sg51349
I5161
sg51351
I12177
sg51353
I-201109
sg51355
I-200354
sg51357
I-201408
sg51359
I4242
sg51361
I10627
sg51363
I10210
sg51365
I12007
sg51367
I-200588
sg51369
I-200813
sg51371
I26112
sg51373
I5732
sg51375
I14632
sg51377
I12479
sg51379
I10093
sg51381
I-201472
sg51383
I10242
sg51385
I-201475
sg51387
I15846
sg51389
I-201232
sg51391
I-200291
sg51393
I-201460
sg51395
I-26600
sg51397
I-201200
sg51399
I-201171
sg51401
I200056
sg51403
I2434
sg51405
I-200909
sg51407
I-89158
sg51409
I5912
sg51411
I200029
sg51413
I-88708
sg51415
I10186
sg51417
I-26109
sg51419
I11980
sg51421
I10125
sg51423
I12434
sg51425
I-201090
sg51427
S'2531/1-Wire Dual 4x64 Matrix'
p54955
sg51429
S'1161/8-SPDT'
p54956
sg51431
I-200200
sg51433
I-50500
sg51435
I-201479
sg51437
S'2799/2-SPDT'
p54957
sg51439
I2177
sg51441
I-200566
sg51443
S'1163R/Octal 4x1 Mux'
p54958
sg51445
I-200696
sg51447
I15848
sg51449
I8699
sg51451
I-200576
sg51453
I-200269
sg51455
I-201091
sg51457
I-200683
sg51459
I12046
sg51461
I-200949
sg51463
I200009
sg51465
I-50005
sg51467
I5156
sg51469
I200019
sg51471
I-200020
sg51473
I-200878
sg51475
I8602
sg51477
I10313
sg51479
I-200500
sg51481
I-50014
sg51483
I10779
sg51485
I-200111
sg51487
I-200536
sg51489
I10181
sg51491
I26007
sg51493
I-201336
sg51495
I-200603
sg51497
I10199
sg51499
I-200018
sg51501
I-200730
sg51503
S'1127/2-Wire 4x8 Matrix'
p54959
sg51505
I10208
sg51507
I-201101
sg51509
I10209
sg51511
I10099
sg51513
I-200108
sg51515
S'1129/2-Wire 4x64 Matrix'
p54960
sg51517
I4868
sg51519
I-50254
sg51521
S'2501/1-Wire 48x1 Amplified Mux'
p54961
sg51523
I200052
sg51525
I-200677
sg51527
I1651
sg51529
I-50354
sg51531
I-200055
sg51533
I-201290
sg51535
I14707
sg51537
I-201160
sg51539
I50551
sg51541
I-201422
sg51543
I0
sg51544
I-200529
sg51546
I-200942
sg51548
I8885
sg51550
I-200974
sg51552
I-200629
sg51554
I-201016
sg51556
I1
sg51557
I-200539
sg51559
I12011
sg51561
I-200268
sg51563
I12492
sg51565
I-200315
sg51567
I12536
sg51569
I-201485
sg51571
I-200914
sg51573
I-200249
sg51575
I26804
sg51577
I-200193
sg51579
I50104
sg51581
I-200624
sg51583
I10783
sg51585
I26113
sg51587
I12469
sg51589
I-200393
sg51591
I11998
sg51593
I280
sg51595
I-200902
sg51597
I-201134
sg51599
I11997
sg51601
I-200360
sg51603
I-200992
sg51605
I-200930
sg51607
I15875
sg51609
I-201361
sg51611
I-201326
sg51613
I12245
sg51615
S'1130/1-Wire 8x32 Matrix'
p54962
sg51617
I12483
sg51619
S'2569/50-DPST'
p54963
sg51621
I-200488
sg51623
I12487
sg51625
I-200025
sg51627
I10256
sg51629
I-200226
sg51631
I1682
sg51633
I10697
sg51635
I10773
sg51637
I-200841
sg51639
I16075
sg51641
I-201082
sg51643
I-200625
sg51645
I10635
sg51647
I-201043
sg51649
I-201073
sg51651
I-200598
sg51653
I-200617
sg51655
S'2593/Independent'
p54964
sg51657
I12221
sg51659
I-200996
sg51661
I10605
sg51663
I-26004
sg51665
I-200619
sg51667
I-201230
sg51669
I15884
sg51671
I-200806
sg51673
I4649
sg51675
I-201130
sg51677
I-200602
sg51679
S'1130/1-Wire 4x64 Matrix'
p54965
sg51681
I4966
sg51683
I14646
sg51685
I4982
sg51687
I10178
sg51689
I-200236
sg51691
I-201221
sg51693
I-26809
sg51695
I-50265
sg51697
I8767
sg51699
I-200560
sg51701
I4887
sg51703
I-200407
sg51705
I12556
sg51707
I-200718
sg51709
I2165
sg51711
I12269
sg51713
S'2598/Dual Transfer'
p54966
sg51715
I26654
sg51717
S'2533/1-Wire 4x64 Matrix'
p54967
sg51719
I14647
sg51721
I-200937
sg51723
I4886
sg51725
I10311
sg51727
I10106
sg51729
I5140
sg51731
I-200107
sg51733
I-201291
sg51735
I10101
sg51737
I10390
sg51739
I6170
sg51741
I8912
sg51743
I-201017
sg51745
I200035
sg51747
I1412
sg51749
I-200202
sg51751
I12049
sg51753
I-200562
sg51755
I12490
sg51757
I-200475
sg51759
I12156
sg51761
I10905
sg51763
I-200925
sg51765
I-200171
sg51767
S'1195/Quad 4x1 Mux'
p54968
sg51769
I-200627
sg51771
I8768
sg51773
I10348
sg51775
I8999
sg51777
I-200977
sg51779
I8611
sg51781
I-201371
sg51783
I-200701
sg51785
I-201425
sg51787
I-50009
sg51789
I-201395
sg51791
I10727
sg51793
I-200326
sg51795
I-200750
sg51797
I-200546
sg51799
I8852
sg51801
I4658
sg51803
I-200852
sg51805
I-88719
sg51807
S'1128/2-Wire 32x1 Mux'
p54969
sg51809
I5
sg51810
I12481
sg51812
I4144
sg51814
S'1130/1-Wire Quad 64x1 Mux'
p54970
sg51816
I-200135
sg51818
I-50651
sg51820
I-50413
sg51822
I12515
sg51824
I-88907
sg51826
I-200496
sg51828
I-200028
sg51830
I16023
sg51832
I-201278
sg51834
I6194
sg51836
I-201157
sg51838
I12445
sg51840
I-200901
sg51842
I12283
sg51844
I-201384
sg51846
I10167
sg51848
I-200063
sg51850
I-201368
sg51852
I-26850
sg51854
I8824
sg51856
I8616
sg51858
I-200104
sg51860
I10599
sg51862
I12462
sg51864
I10124
sg51866
I10171
sg51868
I-200926
sg51870
I-89147
sg51872
I-200428
sg51874
I8898
sg51876
I-200665
sg51878
I8913
sg51880
S'2532/1-Wire 8x64 Matrix'
p54971
sg51882
I-200155
sg51884
I4
sg51886
I8739
sg51888
I-201183
sg51890
S'2510/Independent'
p54972
sg51892
I4465
sg51894
I-201150
sg51896
I5145
sg51898
I12286
sg51900
I-201481
sg51902
I15951
sg51904
I10237
sg51906
I200055
sg51908
I-201050
sg51910
I5264
sg51912
I12405
sg51914
I2321
sg51916
S'2565/16-SPST'
p54973
sg51918
I8825
sg51920
I15971
sg51922
I-200743
sg51924
I15972
sg51926
I-200204
sg51928
I12551
sg51930
I8914
sg51932
I-201166
sg51934
I-200022
sg51936
I4660
sg51938
I12166
sg51940
I6230
sg51942
I12012
sg51944
I-201495
sg51946
I6188
sg51948
I10342
sg51950
I12421
sg51952
I12540
sg51954
I-200693
sg51956
I8747
sg51958
I-200637
sg51960
I12514
sg51962
I12513
sg51964
I6463
sg51966
I15963
sg51968
I-200720
sg51970
I-201455
sg51972
I10192
sg51974
I-200876
sg51976
I12432
sg51978
I-201021
sg51980
I10781
sg51982
I8576
sg51984
I-200858
sg51986
I10186
sg51988
I200030
sg51990
I-201213
sg51992
I12162
sg51994
I15862
sg51996
S'2532/1-Wire 4x128 Matrix'
p54974
sg51998
I-200553
sg52000
I-200410
sg52002
I8889
sg52004
I8867
sg52006
I-200447
sg52008
I1
sg52009
I10398
sg52011
I-201391
sg52013
I-200764
sg52015
I-200359
sg52017
I-200136
sg52019
I-201310
sg52021
I-200231
sg52023
I12471
sg52025
I8734
sg52027
I-200030
sg52029
I10110
sg52031
I8751
sg52033
I14660
sg52035
I10078
sg52037
I11988
sg52039
I12453
sg52041
I-200404
sg52043
I6248
sg52045
I12486
sg52047
S'2529/2-Wire Dual 4x16 Matrix'
p54975
sg52049
I8568
sg52051
I-200184
sg52053
I-201466
sg52055
I-200388
sg52057
I-200334
sg52059
I4243
sg52061
I-200422
sg52063
I8819
sg52065
I8666
sg52067
I6252
sg52069
I10123
sg52071
I10041
sg52073
I14839
sg52075
I-200845
sg52077
I6306
sg52079
I12465
sg52081
I1686
sg52083
I12477
sg52085
I8994
sg52087
I-200168
sg52089
I-200416
sg52091
I-89157
sg52093
I26109
sg52095
I10389
sg52097
I-200653
sg52099
I12172
sg52101
I12060
sg52103
I-201431
sg52105
S'2591/4x1 Mux'
p54976
sg52107
I-201488
sg52109
I10182
sg52111
I-200097
sg52113
S'2559/Terminated 2-SPDT'
p54977
sg52115
I9026
sg52117
I-201257
sg52119
I10214
sg52121
I-200183
sg52123
I-200552
sg52125
I-201222
sg52127
I-200056
sg52129
I6332
sg52131
I10602
sg52133
I12482
sg52135
I-201214
sg52137
S'2594/4x1 Mux'
p54978
sg52139
I10780
sg52141
S'2570/40-SPDT'
p54979
sg52143
I12372
sg52145
I2361
sg52147
I-200535
sg52149
I50016
sg52151
I5136
sg52153
I26401
sg52155
I-201421
sg52157
I-201233
sg52159
I-50257
sg52161
I-200071
sg52163
I-50405
sg52165
I2085
sg52167
I12035
sg52169
I0
sg52170
I-200213
sg52172
I12055
sg52174
I-200272
sg52176
I12547
sg52178
I-200697
sg52180
I-201386
sg52182
I8998
sg52184
I-200715
sg52186
I-200421
sg52188
I11999
sg52190
Nsg52191
I-200212
sg52193
I-201002
sg52195
I10379
sg52197
I-201145
sg52199
I-201330
sg52201
I0
sg52203
I-200040
sg52205
I5719
sg52207
I10362
sg52209
I6392
sg52211
I-200290
sg52213
I26803
sg52215
I-200832
sg52217
I14840
sg52219
I-200304
sg52221
I-201048
sg52223
I-201356
sg52225
I14710
sg52227
I6301
sg52229
I8757
sg52231
I-26403
sg52233
I-201182
sg52235
I-200737
sg52237
I5153
sg52239
I-201458
sg52241
I-200952
sg52243
I-200032
sg52245
I-201438
sg52247
I-200251
sg52249
I-200817
sg52251
I26801
sg52253
I12285
sg52255
I12210
sg52257
I-200197
sg52259
I-200944
sg52261
I10171
sg52263
I-200512
sg52265
I-89126
sg52267
I-201223
sg52269
I-88720
sg52271
I12419
sg52273
I-26201
sg52275
I0
sg52276
I-200274
sg52278
S'2593/16x1 Mux'
p54980
sg52280
I-200798
sg52282
I-200877
sg52284
I6288
sg52286
I-50203
sg52288
I10896
sg52290
I26851
sg52292
I-201072
sg52294
I-201220
sg52296
I1413
sg52298
I6187
sg52300
I-200096
sg52302
I-200462
sg52304
I26600
sg52306
I-201058
sg52308
I16076
sg52310
I10593
sg52312
I-201088
sg52314
I-200775
sg52316
I-200567
sg52318
I-201061
sg52320
I-200511
sg52322
I-201448
sg52324
I-201276
sg52326
I-200986
sg52328
I50258
sg52330
I-200655
sg52332
I0
sg52333
I-200426
sg52335
I-89137
sg52337
I-200724
sg52339
I10081
sg52341
I26009
sg52343
I-200946
sg52345
I-200264
sg52347
I8620
sg52349
I-201212
sg52351
I200017
sg52353
I8728
sg52355
I8880
sg52357
I-200716
sg52359
I8942
sg52361
I-200484
sg52363
I200073
sg52365
I16070
sg52367
I10083
sg52369
I-200968
sg52371
I8560
sg52373
I-200729
sg52375
I8989
sg52377
I-200092
sg52379
I-200262
sg52381
I26000
sg52383
I-201127
sg52385
I-50017
sg52387
I5767
sg52389
I12585
sg52391
I-200448
sg52393
I-201348
sg52395
I8753
sg52397
S'1130/Independent'
p54981
sg52399
I10043
sg52401
Nsg52403
I-201015
sg52405
I-201340
sg52407
S'2530/2-Wire 4x16 Matrix'
p54982
sg52409
I10899
sg52411
I329
sg52413
I1
sg52415
I-200043
sg52417
I12511
sg52419
I-200785
sg52421
S'2727/Independent'
p54983
sg52423
I4361
sg52425
I-201110
sg52427
I-201376
sg52429
I-200895
sg52431
I-201081
sg52433
I12430
sg52435
S'2796/Dual 6x1 Mux'
p54984
sg52437
I10888
sg52439
I10895
sg52441
I12507
sg52443
I-200503
sg52445
I6132
sg52447
I6179
sg52449
I2452
sg52451
I12538
sg52453
I8692
sg52455
I-201318
sg52457
I-201483
sg52459
I-200357
sg52461
I-89151
sg52463
I8752
sg52465
I-89129
sg52467
I-201501
sg52469
I12270
sg52471
I-200650
sg52473
I-201102
sg52475
I6317
sg52477
I10636
sg52479
I11987
sg52481
I-200082
sg52483
S'2512/Independent'
p54985
sg52485
I-200927
sg52487
I8748
sg52489
I-200198
sg52491
I-201299
sg52493
I-200399
sg52495
I12449
sg52497
I-200853
sg52499
I-200392
sg52501
I14648
sg52503
I26111
sg52505
I12047
sg52507
I5713
sg52509
I257
sg52511
I200036
sg52513
I-200098
sg52515
I-201316
sg52517
S'2586/5-DPST'
p54986
sg52519
I-200066
sg52521
I12174
sg52523
I5014
sg52525
I-26005
sg52527
I50105
sg52529
I-200851
sg52531
I-201315
sg52533
I-200543
sg52535
I-26805
sg52537
I-200177
sg52539
I-200565
sg52541
I6323
sg52543
I12486
sg52545
S'2521/40-DPST'
p54987
sg52547
I-200216
sg52549
Nsg52550
I8786
sg52552
I3
sg52553
I-200365
sg52555
I12573
sg52557
I10304
sg52559
Nsg52560
I12480
sg52562
I-200687
sg52564
I4869
sg52566
I-200137
sg52568
I12454
sg52570
I-200352
sg52572
I-200489
sg52574
I12240
sg52576
I12440
sg52578
I-201334
sg52580
I-200807
sg52582
I-200601
sg52584
I-26204
sg52586
I-201297
sg52588
I11996
sg52590
I12487
sg52592
I50006
sg52594
I8741
sg52596
I-201388
sg52598
I12005
sg52600
S'2503/2-Wire Quad 6x1 Mux'
p54988
sg52602
I-201197
sg52604
I-200830
sg52606
S'2523/26-DPDT'
p54989
sg52608
I12173
sg52610
I-200836
sg52612
I6331
sg52614
I-200093
sg52616
I12062
sg52618
I-200425
sg52620
I5189
sg52622
I26850
sg52624
I-200739
sg52626
Nsg52628
I-200139
sg52630
I10227
sg52632
I50003
sg52634
I-201123
sg52636
I-200230
sg52638
I4969
sg52640
I-201317
sg52642
I10438
sg52644
I-200892
sg52646
I-200551
sg52648
I-200652
sg52650
I-26112
sg52652
I-209800
sg52654
S'1193/16x1 Terminated Mux'
p54990
sg52656
I6250
sg52658
I10787
sg52660
I10761
sg52662
I-201415
sg52664
I200013
sg52666
I-201358
sg52668
I12582
sg52670
I-201270
sg52672
I12207
sg52674
I-201046
sg52676
I-200175
sg52678
I-200717
sg52680
I-200254
sg52682
I12010
sg52684
I-201135
sg52686
I-200239
sg52688
I-201491
sg52690
I-201504
sg52692
I-201238
sg52694
I12461
sg52696
I-201353
sg52698
I-201191
sg52700
I5704
sg52702
I148
sg52704
I-200950
sg52706
I15888
sg52708
I-200376
sg52710
I6415
sg52712
I-26105
sg52714
S'2532/1-Wire Sixteen 2x16 Matrix'
p54991
sg52716
I8617
sg52718
I-200515
sg52720
I50405
sg52722
I-200668
sg52724
I-201071
sg52726
I-200141
sg52728
I-200178
sg52730
I-201173
sg52732
I-26802
sg52734
I14629
sg52736
I14658
sg52738
I-200848
sg52740
I-201012
sg52742
I-200905
sg52744
I-200816
sg52746
I10897
sg52748
I10286
sg52750
I-200923
sg52752
I-200557
sg52754
I26006
sg52756
I12023
sg52758
I-201092
sg52760
I-200699
sg52762
I8714
sg52764
I2
sg52766
I12289
sg52768
I12546
sg52770
I-201074
sg52772
I12506
sg52774
I15882
sg52776
I-201323
sg52778
I1
sg52780
I-50303
sg52782
S'1130/1-Wire 256x1 Mux'
p54992
sg52784
I10648
sg52786
I-89134
sg52788
I-50202
sg52790
I8690
sg52792
I-200691
sg52794
I-50200
sg52796
I5141
sg52798
I-201202
sg52800
I-200353
sg52802
I-200206
sg52804
S'2501/2-Wire Dual 12x1 Mux'
p54993
sg52806
I-201172
sg52808
I14620
sg52810
I-200732
sg52812
I12048
sg52814
I-200267
sg52816
I-200880
sg52818
I50200
sg52820
S'2590/4x1 Mux'
p54994
sg52822
I6275
sg52824
I-200045
sg52826
I14614
sg52828
I8582
sg52830
I-200631
sg52832
I-201056
sg52834
I12260
sg52836
I-50807
sg52838
I8861
sg52840
I11992
sg52842
I-201343
sg52844
I11973
sg52846
I50403
sg52848
I-200980
sg52850
I-201211
sg52852
I10107
sg52854
I10065
sg52856
I-200033
sg52858
I50260
sg52860
I5684
sg52862
I-201115
sg52864
I8736
sg52866
I10237
sg52868
I8615
sg52870
I-200615
sg52872
I10137
sg52874
I10891
sg52876
I26657
sg52878
I-201450
sg52880
I-200259
sg52882
I-200053
sg52884
I-200248
sg52886
I-200004
sg52888
I-200381
sg52890
I9020
sg52892
I12160
sg52894
S'2557/8x1 Mux'
p54995
sg52896
I-201039
sg52898
I-200786
sg52900
I8755
sg52902
I-200491
sg52904
I-200519
sg52906
I-200838
sg52908
I-200007
sg52910
I-200676
sg52912
I10241
sg52914
I10146
sg52916
I-201161
sg52918
I14636
sg52920
I10116
sg52922
I-201206
sg52924
S'2548/4-SPDT'
p54996
sg52926
I-200799
sg52928
I6241
sg52930
I12141
sg52932
I-201403
sg52934
I-200673
sg52936
I5160
sg52938
I200054
sg52940
I-200628
sg52942
I15905
sg52944
I-200621
sg52946
I-201389
sg52948
I4
sg52950
I-201167
sg52952
I-26202
sg52954
I-200351
sg52956
S'2530/1-Wire Dual 64x1 Mux'
p54997
sg52958
I10172
sg52960
I-200126
sg52962
I-201189
sg52964
S'2597/6x1 Terminated Mux'
p54998
sg52966
I-200443
sg52968
S'1190/Quad 4x1 Mux'
p54999
sg52970
S'2532/1-Wire 16x32 Matrix'
p55000
sg52972
I-200346
sg52974
I-201437
sg52976
I-200317
sg52978
I-201205
sg52980
I-200450
sg52982
I-200250
sg52984
I-201293
sg52986
I6459
sg52988
I-200190
sg52990
I-201084
sg52992
I200010
sg52994
I14711
sg52996
I-200672
sg52998
I6140
sg53000
I12512
sg53002
I-201373
sg53004
I12001
sg53006
I11974
sg53008
I12143
sg53010
I6379
sg53012
I12123
sg53014
I-200497
sg53016
I-201350
sg53018
I200038
sg53020
I14752
sg53022
I11986
sg53024
S'2503/2-Wire 24x1 Mux'
p55001
sg53026
I-50250
sg53028
I-201400
sg53030
I-26300
sg53032
S'2532/1-Wire Quad 4x32 Matrix'
p55002
sg53034
I10326
sg53036
I10267
sg53038
I-200240
sg53040
I-200465
sg53042
I10188
sg53044
I12250
sg53046
I-200782
sg53048
I-200067
sg53050
S'2532/2-Wire Dual 4x32 Matrix'
p55003
sg53052
I11969
sg53054
S'1175/1-Wire 196x1 Mux'
p55004
sg53056
I-201142
sg53058
I10441
sg53060
I-200591
sg53062
I15866
sg53064
I8908
sg53066
I200032
sg53068
I833
sg53070
S'2531/1-Wire Dual 8x32 Matrix'
p55005
sg53072
I12470
sg53074
I-50700
sg53076
I-50207
sg53078
S'1129/2-Wire Dual 8x16 Matrix'
p55006
sg53080
I-200757
sg53082
I12424
sg53084
I336
sg53086
I-201417
sg53088
I-201131
sg53090
S'2586/10-SPST'
p55007
sg53092
I10310
sg53094
I12054
sg53096
I-201469
sg53098
I12527
sg53100
I10200
sg53102
I4709
sg53104
I6276
sg53106
I-200681
sg53108
I12242
sg53110
I-201000
sg53112
I12455
sg53114
I-201063
sg53116
I50011
sg53118
I8683
sg53120
I10682
sg53122
I10351
sg53124
I10105
sg53126
I-200261
sg53128
I6130
sg53130
I12475
sg53132
I-200744
sg53134
I-200109
sg53136
I10158
sg53138
I-201045
sg53140
I8687
sg53142
I6304
sg53144
I-201370
sg53146
I-200418
sg53148
I-200456
sg53150
I-201224
sg53152
I4962
sg53154
I-201181
sg53156
I8570
sg53158
I8765
sg53160
I-200774
sg53162
I-200622
sg53164
I-26804
sg53166
I-200327
sg53168
I-200337
sg53170
I4244
sg53172
I-201275
sg53174
I-200118
sg53176
I200064
sg53178
I-200698
sg53180
I-200833
sg53182
I-201507
sg53184
I-201401
sg53186
I8900
sg53188
I200048
sg53190
I12027
sg53192
S'1130/1-Wire Dual 128x1 Mux'
p55008
sg53194
I12288
sg53196
I-201141
sg53198
I8667
sg53200
I-200664
sg53202
I10776
sg53204
I12292
sg53206
I200033
sg53208
I-200398
sg53210
I10164
sg53212
I200069
sg53214
I324
sg53216
I-50411
sg53218
I-201120
sg53220
I-200065
sg53222
S'2527/1-Wire Dual 32x1 Mux'
p55009
sg53224
I-89139
sg53226
S'2501/2-Wire Quad 6x1 Mux'
p55010
sg53228
I-200112
sg53230
I11977
sg53232
I6240
sg53234
I-201410
sg53236
I-89148
sg53238
I10191
sg53240
I-201339
sg53242
I6105
sg53244
I-201344
sg53246
I50019
sg53248
I-200302
sg53250
I-26001
sg53252
I-200883
sg53254
I4487
sg53256
I-200966
sg53258
I12178
sg53260
I-201268
sg53262
I-201075
sg53264
S'2530/Independent'
p55011
sg53266
I4488
sg53268
I12509
sg53270
I26202
sg53272
I8686
sg53274
I-200413
sg53276
I-50256
sg53278
I8910
sg53280
I26400
sg53282
I-200508
sg53284
I661
sg53286
I-201446
sg53288
I8743
sg53290
I-26000
sg53292
I10278
sg53294
I-200333
sg53296
I12252
sg53298
I6192
sg53300
I10728
sg53302
I-201107
sg53304
I6318
sg53306
I-200133
sg53308
I-200835
sg53310
I-1
sg53312
I-201345
sg53314
I-200394
sg53316
I50013
sg53318
I-201508
sg53320
I-200609
sg53322
I15969
sg53324
I-200123
sg53326
I8865
sg53328
I-200533
sg53330
I-201423
sg53332
I6391
sg53334
I-200368
sg53336
S'2532/2-Wire 8x32 Matrix'
p55012
sg53338
I-200763
sg53340
I10439
sg53342
I-201476
sg53344
I-200819
sg53346
S'1129/2-Wire 8x32 Matrix'
p55013
sg53348
I-201076
sg53350
I10745
sg53352
I-201367
sg53354
I8612
sg53356
S'2540/1-Wire 8x9 Matrix'
p55014
sg53358
I8733
sg53360
I-200495
sg53362
I-200671
sg53364
I-201478
sg53366
I50002
sg53368
I12314
sg53370
I-200596
sg53372
I6283
sg53374
I10299
sg53376
I-200012
sg53378
S'2576/2-Wire Quad 16x1 Mux'
p55015
sg53380
I-200947
sg53382
I14618
sg53384
I-200237
sg53386
I-26203
sg53388
I4663
sg53390
I-200257
sg53392
I-200059
sg53394
I-200309
sg53396
I-209805
sg53398
I-201287
sg53400
I14637
sg53402
I1
sg53403
I8787
sg53405
I-201118
sg53407
I10157
sg53409
I5731
sg53411
I-200091
sg53413
S'2530/2-Wire 64x1 Mux'
p55016
sg53415
I12504
sg53417
I-200849
sg53419
I-201030
sg53421
I26656
sg53423
I-200370
sg53425
I-50204
sg53427
I-50102
sg53429
I-200441
sg53431
I8862
sg53433
I8822
sg53435
I-201156
sg53437
I6376
sg53439
I-201296
sg53441
I10603
sg53443
I-50262
sg53445
I-200461
sg53447
I-200776
sg53449
I-200850
sg53451
I-200372
sg53453
I-200900
sg53455
I2184
sg53457
I-200679
sg53459
I-88718
sg53461
I200047
sg53463
I-201064
sg53465
I-201032
sg53467
I200005
sg53469
I-201444
sg53471
I-200563
sg53473
I200020
sg53475
I-200166
sg53477
I-89142
sg53479
I-89146
sg53481
I-200561
sg53483
I-200675
sg53485
I26206
sg53487
I209802
sg53489
I-201288
sg53491
I12529
sg53493
I15950
sg53495
I-200463
sg53497
I-209802
sg53499
I12474
sg53501
I-201158
sg53503
I-200831
sg53505
I-200896
sg53507
I12510
sg53509
I10289
sg53511
I6443
sg53513
I10434
sg53515
I-200451
sg53517
I12146
sg53519
S'2584/1-Wire Dual 6x1 Mux'
p55017
sg53521
I11993
sg53523
I8995
sg53525
I-201331
sg53527
I-201273
sg53529
I12151
sg53531
I-200871
sg53533
I10431
sg53535
I-200162
sg53537
I8894
sg53539
I5251
sg53541
I-26106
sg53543
I-200477
sg53545
I80
sg53547
I-200555
sg53549
I-201428
sg53551
I12508
sg53553
I-200287
sg53555
I-201390
sg53557
I14753
sg53559
I-200945
sg53561
I-200908
sg53563
I-200893
sg53565
I8904
sg53567
I-201259
sg53569
I-201053
sg53571
I-200430
sg53573
I-201210
sg53575
I8769
sg53577
I2
sg53579
I4
sg53581
I12429
sg53583
I14836
sg53585
I50351
sg53587
I-50355
sg53589
I26853
sg53591
I-201124
sg53593
I0
sg53594
I12247
sg53596
I-200258
sg53598
I-89167
sg53600
I-201267
sg53602
I-201125
sg53604
I8918
sg53606
I6302
sg53608
I-200854
sg53610
I-200710
sg53612
I8818
sg53614
I200044
sg53616
I-201477
sg53618
I2185
sg53620
I-201493
sg53622
I6126
sg53624
I10427
sg53626
I-200386
sg53628
I-201195
sg53630
S'2529/2-Wire 4x32 Matrix'
p55018
sg53632
I-200953
sg53634
I-200975
sg53636
I4885
sg53638
I-200537
sg53640
I50406
sg53642
I-200316
sg53644
I5768
sg53646
I8689
sg53648
S'2576/2-Wire Sixteen 4x1 Mux'
p55019
sg53650
I10119
sg53652
I12390
sg53654
I-200088
sg53656
I10659
sg53658
I200076
sg53660
I12041
sg53662
I-200765
sg53664
I-201274
sg53666
I-200015
sg53668
I11994
sg53670
I-200531
sg53672
I6145
sg53674
I-200688
sg53676
Nsg53677
I12436
sg53679
I10219
sg53681
I6381
sg53683
I-200580
sg53685
I-200090
sg53687
I8731
sg53689
I-200103
sg53691
I-88710
sg53693
I8963
sg53695
I15908
sg53697
I9001
sg53699
I-201154
sg53701
I10637
sg53703
I6109
sg53705
S'2568/31-SPST'
p55020
sg53707
I-200460
sg53709
I10904
sg53711
I-200870
sg53713
I10738
sg53715
I12476
sg53717
I-200378
sg53719
I-200582
sg53721
I6412
sg53723
I-201372
sg53725
I-200860
sg53727
I-201047
sg53729
I4360
sg53731
I10889
sg53733
I26302
sg53735
I50151
sg53737
I-200435
sg53739
I10673
sg53741
I8718
sg53743
I-200400
sg53745
I10302
sg53747
I50256
sg53749
I14615
sg53751
I-200812
sg53753
I-201237
sg53755
I12050
sg53757
I-200220
sg53759
I-200879
sg53761
I-200072
sg53763
I26655
sg53765
S'1129/2-Wire Dual 4x32 Matrix'
p55021
sg53767
I2456
sg53769
I-200587
sg53771
I-201138
sg53773
I200059
sg53775
I-200218
sg53777
I-200713
sg53779
I209800
sg53781
I-200493
sg53783
I0
sg53784
I-50251
sg53786
I-201215
sg53788
I-200839
sg53790
I200024
sg53792
I-26550
sg53794
I-200288
sg53796
I-50100
sg53798
I14713
sg53800
I-200127
sg53802
I200078
sg53804
I12437
sg53806
I10080
sg53808
I-200667
sg53810
I10047
sg53812
I8985
sg53814
I12456
sg53816
I8697
sg53818
I-50255
sg53820
I12006
sg53822
I-200658
sg53824
I10762
sg53826
I12030
sg53828
I-200513
sg53830
I-200473
sg53832
I-201225
sg53834
I12149
sg53836
I-200366
sg53838
I10641
sg53840
I8756
sg53842
I50254
sg53844
I12159
sg53846
I-200791
sg53848
I12058
sg53850
I6378
sg53852
I-201399
sg53854
I4680
sg53856
I304
sg53858
I12404
sg53860
I-201208
sg53862
I-200211
sg53864
I-200228
sg53866
I-200674
sg53868
I5120
sg53870
I-200780
sg53872
I-50253
sg53874
I-200079
sg53876
I2
sg53878
I10286
sg53880
I5143
sg53882
I-201006
sg53884
I8971
sg53886
I-201013
sg53888
I26806
sg53890
I11975
sg53892
I12022
sg53894
I10733
sg53896
I-200016
sg53898
I11995
sg53900
I-201010
sg53902
I10944
sg53904
I-200635
sg53906
I-201335
sg53908
I-200846
sg53910
I-200939
sg53912
I10271
sg53914
I-50101
sg53916
I6414
sg53918
I6129
sg53920
I14619
sg53922
I12523
sg53924
I-200328
sg53926
I-201129
sg53928
I26201
sg53930
I2068
sg53932
I-201067
sg53934
I5175
sg53936
I-200208
sg53938
I26005
sg53940
I-50015
sg53942
I-200395
sg53944
I-200547
sg53946
I12216
sg53948
I200018
sg53950
I12026
sg53952
I26105
sg53954
I12154
sg53956
I-200124
sg53958
I-201186
sg53960
I-200478
sg53962
I14706
sg53964
I2099
sg53966
I-200585
sg53968
I-201139
sg53970
S'2501/2-Wire 24x1 Mux'
p55022
sg53972
I-200747
sg53974
I659
sg53976
I-200061
sg53978
I10642
sg53980
I-201179
sg53982
I-200875
sg53984
I16074
sg53986
I-200073
sg53988
I-26205
sg53990
I8709
sg53992
I-201184
sg53994
I6168
sg53996
I-200434
sg53998
I4457
sg54000
I-200192
sg54002
I12045
sg54004
I-89143
sg54006
I-200594
sg54008
I15970
sg54010
I-200988
sg54012
I-201093
sg54014
I-200516
sg54016
I15877
sg54018
I10786
sg54020
I6314
sg54022
I200026
sg54024
I-200232
sg54026
I12466
sg54028
I12467
sg54030
I12465
sg54032
I-200884
sg54034
I14813
sg54036
I-200709
sg54038
I5155
sg54040
I8662
sg54042
I200008
sg54044
I14714
sg54046
I-200794
sg54048
I-201178
sg54050
I-201187
sg54052
I-201023
sg54054
I-200347
sg54056
I10732
sg54058
I8583
sg54060
I10643
sg54062
I-200534
sg54064
I-201144
sg54066
S'2725/Independent'
p55023
sg54068
I-200917
sg54070
I12464
sg54072
I-201352
sg54074
I50408
sg54076
I6435
sg54078
I6227
sg54080
I-201099
sg54082
I8738
sg54084
I12020
sg54086
I8923
sg54088
I-201264
sg54090
I-200887
sg54092
I-201137
sg54094
I-200436
sg54096
I-201152
sg54098
I-200810
sg54100
I12037
sg54102
I8959
sg54104
I-201085
sg54106
I200045
sg54108
I-200006
sg54110
I-200772
sg54112
I8896
sg54114
I-200187
sg54116
I14712
sg54118
S'1130/2-Wire 4x32 Matrix'
p55024
sg54120
I-26808
sg54122
I50355
sg54124
I6427
sg54126
I-201218
sg54128
I8881
sg54130
I6444
sg54132
I-201467
sg54134
I-200408
sg54136
I8884
sg54138
I26200
sg54140
I-200573
sg54142
I289
sg54144
I-200957
sg54146
I200014
sg54148
I12553
sg54150
I12032
sg54152
I-201235
sg54154
I-200161
sg54156
I200067
sg54158
I11979
sg54160
I10435
sg54162
I14750
sg54164
I12435
sg54166
I-200229
sg54168
I-1
sg54170
I-200292
sg54172
I2
sg54174
I-200678
sg54176
I-200726
sg54178
S'1175/2-Wire 95x1 Mux'
p55025
sg54180
I-201405
sg54182
I8713
sg54184
S'2515/Independent'
p55026
sg54186
S'2596/Dual 6x1 Mux'
p55027
sg54188
I12142
sg54190
I-200911
sg54192
I-200116
sg54194
I-201433
sg54196
I26809
sg54198
I-200648
sg54200
I1600
sg54202
I26003
sg54204
I-200058
sg54206
I8922
sg54208
I10163
sg54210
I-201325
sg54212
I26001
sg54214
I14635
sg54216
I-89131
sg54218
I-201404
sg54220
I-201060
sg54222
I-200438
sg54224
I-200666
sg54226
I10892
sg54228
I-200205
sg54230
I-200442
sg54232
I-201313
sg54234
I8996
sg54236
I-200397
sg54238
I-201169
sg54240
I-200759
sg54242
I-201163
sg54244
I-201498
sg54246
I-200361
sg54248
I26402
sg54250
I6286
sg54252
I12059
sg54254
I1
sg54255
I-50004
sg54257
I16065
sg54259
I11981
sg54261
I-200610
sg54263
I8
sg54265
I-200401
sg54267
I-200771
sg54269
I8603
sg54271
I-200894
sg54273
I-200694
sg54275
I-201360
sg54277
I8695
sg54279
I12253
sg54281
I-50450
sg54283
I4931
sg54285
I8559
sg54287
I8575
sg54289
I200031
sg54291
I4724
sg54293
I-201105
sg54295
I-26657
sg54297
I6287
sg54299
I8717
sg54301
I1608
sg54303
I-200150
sg54305
I-200983
sg54307
I6216
sg54309
I-201241
sg54311
I-26002
sg54313
I-201256
sg54315
I-26652
sg54317
I12488
sg54319
S'1127/2-Wire 32x1 Mux'
p55028
sg54321
I12471
sg54323
I1425
sg54325
I-89141
sg54327
I14709
sg54329
I12034
sg54331
I10678
sg54333
I6124
sg54335
I-200748
sg54337
I-50650
sg54339
I-89125
sg54341
I10102
sg54343
I12230
sg54345
I14756
sg54347
I-200255
sg54349
I10100
sg54351
S'1130/1-Wire Sixteen 16x1 Mux'
p55029
sg54353
I6411
sg54355
I10045
sg54357
I-200989
sg54359
I-200362
sg54361
I10645
sg54363
I-201470
sg54365
I-50001
sg54367
I5714
sg54369
I8727
sg54371
I-200215
sg54373
I26205
sg54375
S'2566/8-DPDT'
p55030
sg54377
I-200548
sg54379
I50015
sg54381
I-201468
sg54383
I10251
sg54385
I10440
sg54387
I-89154
sg54389
I-200623
sg54391
I12171
sg54393
I-50003
sg54395
I1793
sg54397
I-201207
sg54399
I2069
sg54401
I-200963
sg54403
I-50007
sg54405
I12388
sg54407
I12009
sg54409
I-201409
sg54411
S'2532/1-Wire Dual 16x16 Matrix'
p55031
sg54413
I26102
sg54415
I10189
sg54417
I10658
sg54419
I-200662
sg54421
I-200284
sg54423
I-201147
sg54425
I200058
sg54427
I-201004
sg54429
I12588
sg54431
I-201486
sg54433
I-201366
sg54435
I5975
sg54437
I8958
sg54439
I10325
sg54441
I10388
sg54443
S'1128/2-Wire 4x8 Matrix'
p55032
sg54445
I325
sg54447
I-201025
sg54449
I8725
sg54451
I6146
sg54453
I14645
sg54455
I-200146
sg54457
I-201133
sg54459
I-50208
sg54461
I-26853
sg54463
I11970
sg54465
I-200779
sg54467
I-50151
sg54469
S'2571/66-SPDT'
p55033
sg54471
I-201471
sg54473
I10187
sg54475
I-200787
sg54477
I5653
sg54479
I-200238
sg54481
I-200054
sg54483
I14754
sg54485
I10360
sg54487
S'2549/Terminated 2-SPDT'
p55034
sg54489
I-200855
sg54491
I-200788
sg54493
I-200403
sg54495
I1
sg54497
I-200384
sg54499
I8711
sg54501
I10886
sg54503
I-50601
sg54505
I10159
sg54507
I-88715
sg54509
I-200444
sg54511
I306
sg54513
I-201407
sg54515
I-200196
sg54517
I26300
sg54519
I50014
sg54521
I10726
sg54523
I-201192
sg54525
I50010
sg54527
I-200818
sg54529
I4
sg54530
I5121
sg54532
I8604
sg54534
I-201113
sg54536
Nsg54537
I-200935
sg54539
I8679
sg54541
I-200179
sg54543
I-200614
sg54545
I12052
sg54547
I10606
sg54549
I4661
sg54551
I-201281
sg54553
I-200867
sg54555
I-200265
sg54557
I8719
sg54559
I-200383
sg54561
I6279
sg54563
I-201149
sg54565
Nsg54566
I-89166
sg54568
I8990
sg54570
I-201040
sg54572
I12470
sg54574
I-200781
sg54576
I-200313
sg54578
I12051
sg54580
I665
sg54582
I-200866
sg54584
I-200821
sg54586
I1602
sg54588
I-200306
sg54590
I6339
sg54592
I-26801
sg54594
I-201424
sg54596
I-200203
sg54598
I5967
sg54600
I12442
sg54602
I12212
sg54604
I-200842
sg54606
I200042
sg54608
I-201427
sg54610
I-200869
sg54612
I-201231
sg54614
I-200967
sg54616
I-200714
sg54618
I-200446
sg54620
I-200106
sg54622
S'2501/2-Wire 24x1 Amplified Mux'
p55035
sg54624
I6388
sg54626
I-200758
sg54628
I-201445
sg54630
I8688
sg54632
I26101
sg54634
I-200583
sg54636
I6460
sg54638
I8857
sg54640
I-200339
sg54642
I8609
sg54644
I200041
sg54646
I-50350
sg54648
I15857
sg54650
I-200350
sg54652
I8573
sg54654
I-200633
sg54656
S'2530/4-Wire Dual 16x1 Mux'
p55036
sg54658
I6413
sg54660
I-200595
sg54662
I-200951
sg54664
I5158
sg54666
I10731
sg54668
I26106
sg54670
I10663
sg54672
I-201301
sg54674
I11989
sg54676
I-200117
sg54678
I-200540
sg54680
I12063
sg54682
I12459
sg54684
I6112
sg54686
I-200128
sg54688
I-200417
sg54690
I6202
sg54692
I10198
sg54694
I5011
sg54696
I-201193
sg54698
I-200185
sg54700
I8608
sg54702
I14704
sg54704
I-201174
sg54706
I1
sg54707
S'2575/1-Wire 196x1 Mux'
p55037
sg54709
I12042
sg54711
I-200074
sg54713
I1609
sg54715
I-201001
sg54717
I-200319
sg54719
I10179
sg54721
I12251
sg54723
I-200293
sg54725
I-200243
sg54727
I-201282
sg54729
I50262
sg54731
I2054
sg54733
I12056
sg54735
I6438
sg54737
I14837
sg54739
Nsg54741
I12446
sg54743
I8680
sg54745
I12524
sg54747
I-200982
sg54749
I-201440
sg54751
I10204
sg54753
I12208
sg54755
I12255
sg54757
I-200209
sg54759
I1424
sg54761
I8707
sg54763
L0L
sg54765
I8888
sg54767
I-50263
sg54769
I-50402
sg54771
I26301
sg54773
I-201236
sg54775
I-50201
sg54777
I12176
sg54779
I8758
sg54781
I8814
sg54783
I-200075
sg54785
I-200147
sg54787
I-200985
sg54789
I10071
sg54791
I10150
sg54793
I-200670
sg54795
I-50104
sg54797
I-201269
sg54799
I-200814
sg54801
I-201128
sg54803
I12439
sg54805
I10426
sg54807
I-200038
sg54809
I-200087
sg54811
I200066
sg54813
I-200891
sg54815
I-200955
sg54817
I-201159
sg54819
I12209
sg54821
I660
sg54823
I10184
sg54825
I14621
sg54827
I-26008
sg54829
I10649
sg54831
I-201155
sg54833
I-201228
sg54835
I-200684
sg54837
S'2530/1-Wire 8x16 Matrix'
p55038
sg54839
S'2530/1-Wire Octal 16x1 Mux'
p55039
sg54841
I-200663
sg54843
I-200445
sg54845
I-200247
sg54847
I-200972
sg54849
I4464
sg54851
I-200100
ssg20
(dp55040
S'DAQmxFailed'
p55041
(S'((%s)<0)'
p55042
(lp55043
I0
atp55044
ssg22
(dp55045
sg24
(dp55046
S'uInt64'
p55047
(lp55048
S'unsigned __int64'
p55049
asS'int32'
p55050
(lp55051
S'signed long'
p55052
asS'int16'
p55053
(lp55054
S'signed short'
p55055
asS'DAQmxDoneEventCallbackPtr'
p55056
(lp55057
S'int32'
p55058
a((S'taskHandle'
p55059
(lp55060
S'TaskHandle'
p55061
aNtp55062
(S'status'
p55063
(lp55064
S'int32'
p55065
aNtp55066
(S'callbackData'
p55067
(lp55068
S'void'
p55069
ag42
aNtp55070
tp55071
ag3995
ag42
asS'float64'
p55072
(lp55073
S'double'
p55074
asS'TaskHandle'
p55075
(lp55076
S'void'
p55077
ag42
asS'bool32'
p55078
(lp55079
S'uInt32'
p55080
asS'uInt8'
p55081
(lp55082
S'unsigned char'
p55083
asS'int8'
p55084
(lp55085
S'signed char'
p55086
asS'DAQmxEveryNSamplesEventCallbackPtr'
p55087
(lp55088
S'int32'
p55089
a((S'taskHandle'
p55090
(lp55091
S'TaskHandle'
p55092
aNtp55093
(S'everyNsamplesEventType'
p55094
(lp55095
S'int32'
p55096
aNtp55097
(S'nSamples'
p55098
(lp55099
S'uInt32'
p55100
aNtp55101
(S'callbackData'
p55102
(lp55103
S'void'
p55104
ag42
aNtp55105
tp55106
ag3995
ag42
asS'uInt16'
p55107
(lp55108
S'unsigned short'
p55109
asS'int64'
p55110
(lp55111
S'__int64'
p55112
asS'CalHandle'
p55113
(lp55114
S'uInt32'
p55115
asS'uInt32'
p55116
(lp55117
S'unsigned long'
p55118
asS'float32'
p55119
(lp55120
S'float'
p55121
asS'DAQmxSignalEventCallbackPtr'
p55122
(lp55123
S'int32'
p55124
a((S'taskHandle'
p55125
(lp55126
S'TaskHandle'
p55127
aNtp55128
(S'signalID'
p55129
(lp55130
S'int32'
p55131
aNtp55132
(S'callbackData'
p55133
(lp55134
S'void'
p55135
ag42
aNtp55136
tp55137
ag3995
ag42
assssS'opts'
p55138
(dp55139
S'files'
p55140
(lp55141
S'NIDAQmx.h'
p55142
asg24
(dp55143
g26
g27
ssS'replace'
p55144
(dp55145
g55142
Nsss.